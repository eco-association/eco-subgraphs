
"entity for an ECO generation"
type Generation @entity {
    id: String! "generation number"
    policyProposal: PolicyProposal! @derivedFrom(field: "generation")
    policyVote: PolicyVote @derivedFrom(field: "generation")
    communityProposals: [CommunityProposal!]! @derivedFrom(field: "generation")
}

"Community Support entities"
type PolicyProposal @entity {
    id: Bytes! "address"
    generation: Generation
    proposalEnds: BigInt!
    blockNumber: BigInt!
}

type CommunityProposal @entity {
    id: Bytes! "address"
    proposer: Bytes!
    name: String!
    description: String!
    url: String!
    generation: Generation
    reachedSupportThreshold: Boolean!
    refunded: Boolean!
    support: [CommunityProposalSupport!]! @derivedFrom(field: "proposal")
}

type CommunityProposalSupport @entity {
    id: String! "supporter+proposal"
    supporter: Bytes!
    proposal: CommunityProposal
    amount: BigInt!
}

enum VoteResult {
    Accepted
    Rejected
    Failed
}

"Community Vote entities"
type PolicyVote @entity {
    id: Bytes! "address"
    generation: Generation
    voteEnds: BigInt!
    blockNumber: BigInt!
    ENACTION_DELAY: BigInt!
    proposal: CommunityProposal!
    result: VoteResult
    votes: [CommunityProposalVote!]! @derivedFrom(field: "policyVote")
}

type CommunityProposalVote @entity {
    id: Bytes! "voter"
    policyVote: PolicyVote
    vote: Boolean!
    amount: BigInt!
}