
"entity for an ECO generation"
type Generation @entity {
    id: String! "generation number"
    policyProposal: PolicyProposal! @derivedFrom(field: "generation")
    policyVote: PolicyVote @derivedFrom(field: "generation")
    communityProposals: [CommunityProposal!]! @derivedFrom(field: "generation")
}


"Community Support entities"
type PolicyProposal @entity {
    id: String! "address"
    generation: Generation!
    proposalEnds: BigInt!
    totalVotingPower: BigInt!
    blockNumber: BigInt!
}

type CommunityProposal @entity {
    id: String! "address"
    generation: Generation!
    proposer: Bytes!
    name: String!
    description: String!
    url: String!
    reachedSupportThreshold: Boolean!
    refunded: Boolean!
    totalSupportAmount: BigInt!
    support: [CommunityProposalSupport!]! @derivedFrom(field: "proposal")
}

type CommunityProposalSupport @entity {
    id: String! "supporter + - + proposal"
    supporter: Bytes!
    proposal: CommunityProposal!
    amount: BigInt!
}


"Community Vote entities"
type PolicyVote @entity {
    id: String! "address"
    generation: Generation!
    voteEnds: BigInt!
    ENACTION_DELAY: BigInt!
    totalVotingPower: BigInt!
    blockNumber: BigInt!
    proposal: CommunityProposal!
    result: VoteResult
    yesVoteAmount: BigInt!
    totalVoteAmount: BigInt!
    votes: [CommunityProposalVote!]! @derivedFrom(field: "policyVote")
}

enum VoteResult {
    Accepted
    Rejected
    Failed
}


type CommunityProposalVote @entity {
    id: String! "voter address"
    policyVote: PolicyVote!
    vote: Boolean!
    amount: BigInt!
}


"Account"
type Account @entity {
    id: String! "address"
    ECO: BigInt!
    ECOx: BigInt!
    approvedECO: [ECOAllowance!]! @derivedFrom(field: "owner")
    historicalECOBalances: [ECOBalance!]! @derivedFrom(field: "account")
}

type ECOAllowance @entity {
    id: String! "owner + - + spender"
    value: BigInt! "non-underlying value"
    owner: Account!
    spender: String!
}

"ECO balance"
type ECOBalance @entity {
    id: String!
    account: Account!
    value: BigInt! "underlying value"
    blockNumber: BigInt!
}

"historical linear inflation multipliers"
type InflationMultiplier @entity {
    id: Bytes!
    value: BigInt!
    blockNumber: BigInt!
}