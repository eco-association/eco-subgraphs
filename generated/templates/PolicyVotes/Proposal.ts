// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Proposal extends ethereum.SmartContract {
  static bind(address: Address): Proposal {
    return new Proposal("Proposal", address);
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  description(): string {
    let result = super.call("description", "description():(string)", []);

    return result[0].toString();
  }

  try_description(): ethereum.CallResult<string> {
    let result = super.tryCall("description", "description():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  url(): string {
    let result = super.call("url", "url():(string)", []);

    return result[0].toString();
  }

  try_url(): ethereum.CallResult<string> {
    let result = super.tryCall("url", "url():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class EnactedCall extends ethereum.Call {
  get inputs(): EnactedCall__Inputs {
    return new EnactedCall__Inputs(this);
  }

  get outputs(): EnactedCall__Outputs {
    return new EnactedCall__Outputs(this);
  }
}

export class EnactedCall__Inputs {
  _call: EnactedCall;

  constructor(call: EnactedCall) {
    this._call = call;
  }

  get _self(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class EnactedCall__Outputs {
  _call: EnactedCall;

  constructor(call: EnactedCall) {
    this._call = call;
  }
}
