// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Policy extends ethereum.SmartContract {
  static bind(address: Address): Policy {
    return new Policy("Policy", address);
  }

  implementation(): Address {
    let result = super.call("implementation", "implementation():(address)", []);

    return result[0].toAddress();
  }

  try_implementation(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "implementation",
      "implementation():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setters(param0: BigInt): Bytes {
    let result = super.call("setters", "setters(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBytes();
  }

  try_setters(param0: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall("setters", "setters(uint256):(bytes32)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  policyFor(_interfaceIdentifierHash: Bytes): Address {
    let result = super.call("policyFor", "policyFor(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_interfaceIdentifierHash)
    ]);

    return result[0].toAddress();
  }

  try_policyFor(_interfaceIdentifierHash: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall("policyFor", "policyFor(bytes32):(address)", [
      ethereum.Value.fromFixedBytes(_interfaceIdentifierHash)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class RemoveSelfCall extends ethereum.Call {
  get inputs(): RemoveSelfCall__Inputs {
    return new RemoveSelfCall__Inputs(this);
  }

  get outputs(): RemoveSelfCall__Outputs {
    return new RemoveSelfCall__Outputs(this);
  }
}

export class RemoveSelfCall__Inputs {
  _call: RemoveSelfCall;

  constructor(call: RemoveSelfCall) {
    this._call = call;
  }

  get _interfaceIdentifierHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RemoveSelfCall__Outputs {
  _call: RemoveSelfCall;

  constructor(call: RemoveSelfCall) {
    this._call = call;
  }
}

export class SetPolicyCall extends ethereum.Call {
  get inputs(): SetPolicyCall__Inputs {
    return new SetPolicyCall__Inputs(this);
  }

  get outputs(): SetPolicyCall__Outputs {
    return new SetPolicyCall__Outputs(this);
  }
}

export class SetPolicyCall__Inputs {
  _call: SetPolicyCall;

  constructor(call: SetPolicyCall) {
    this._call = call;
  }

  get _key(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _implementer(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetPolicyCall__Outputs {
  _call: SetPolicyCall;

  constructor(call: SetPolicyCall) {
    this._call = call;
  }
}

export class InternalCommandCall extends ethereum.Call {
  get inputs(): InternalCommandCall__Inputs {
    return new InternalCommandCall__Inputs(this);
  }

  get outputs(): InternalCommandCall__Outputs {
    return new InternalCommandCall__Outputs(this);
  }
}

export class InternalCommandCall__Inputs {
  _call: InternalCommandCall;

  constructor(call: InternalCommandCall) {
    this._call = call;
  }

  get _delegate(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InternalCommandCall__Outputs {
  _call: InternalCommandCall;

  constructor(call: InternalCommandCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _self(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}
