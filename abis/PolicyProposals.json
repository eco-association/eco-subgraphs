{
  "contractName": "PolicyProposals",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_policyvotes",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_simplepolicy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "ProposalAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "ProposalRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "ProposalSupported",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "unsupporter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "ProposalUnsupported",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "SupportThresholdReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "VotingStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COST_REGISTER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_CLEANUP",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_CURRENCY_GOVERNANCE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_CURRENCY_TIMER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_ECO",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_ECOX",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_ECOXLOCKUP",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_ECO_LABS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_FAUCET",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_POLICY_PROPOSALS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_POLICY_VOTES",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_TIMED_POLICIES",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_TRUSTED_NODES",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REFUND_IF_LOST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allProposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clone",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "policyCommand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policyVotesImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalEnds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalSelected",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalToConfigure",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "proposal",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalstake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setExpectedInterfaceSet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "simplePolicyImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "staked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalVotingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalproposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "votingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_self",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "proposal",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalstake",
              "type": "uint256"
            }
          ],
          "internalType": "struct PolicyProposals.Prop[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prop",
          "type": "address"
        }
      ],
      "name": "registerProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prop",
          "type": "address"
        }
      ],
      "name": "support",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prop",
          "type": "address"
        }
      ],
      "name": "unsupport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployProposalVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_prop",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destruct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_policyvotes\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_simplepolicy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"ProposalAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"ProposalRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"ProposalSupported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"unsupporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"ProposalUnsupported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"SupportThresholdReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"VotingStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COST_REGISTER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_CLEANUP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_CURRENCY_GOVERNANCE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_CURRENCY_TIMER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_ECO\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_ECOX\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_ECOXLOCKUP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_ECO_LABS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_FAUCET\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_POLICY_PROPOSALS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_POLICY_VOTES\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_TIMED_POLICIES\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_TRUSTED_NODES\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFUND_IF_LOST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalstake\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyProposals.Prop[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allProposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployProposalVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"policyCommand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyVotesImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalEnds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalSelected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalToConfigure\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalstake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prop\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prop\",\"type\":\"address\"}],\"name\":\"registerProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setExpectedInterfaceSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"simplePolicyImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prop\",\"type\":\"address\"}],\"name\":\"support\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalproposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_prop\",\"type\":\"address\"}],\"name\":\"unsupport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ProposalAdded(address,address)\":{\"params\":{\"proposalAddress\":\"The address of the PolicyVotes contract instance.\"}},\"ProposalRefunded(address,address)\":{\"params\":{\"proposer\":\"The address of the proposee which was refunded\"}},\"ProposalSupported(address,address)\":{\"params\":{\"proposalAddress\":\"The address of the PolicyVotes contract instance that was supported\"}},\"ProposalUnsupported(address,address)\":{\"params\":{\"proposalAddress\":\"The address of the PolicyVotes contract instance that was supported\"}},\"SupportThresholdReached(address)\":{\"params\":{\"proposalAddress\":\"The address of the PolicyVotes contract instance.\"}},\"VotingStarted(address)\":{\"params\":{\"contractAddress\":\"The address of the PolicyVotes contract instance.\"}}},\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"params\":{\"_addr\":\"The address of the contract we might act on behalf of.\"}},\"constructor\":{\"params\":{\"_policy\":\"The root policy contract.\",\"_policyvotes\":\"The address of the contract that will be cloned to                     oversee the voting phase.\",\"_simplepolicy\":\"The address of the `SimplePolicySetter` contract to                      be used in managing permissions.\"}},\"initialize(address)\":{\"params\":{\"_self\":\"The original contract address.\"}},\"policyCommand(address,bytes)\":{\"params\":{\"_data\":\"The call message/data to execute on.\",\"_delegate\":\"The address of the contract to delegate execution to.\"}},\"refund(address)\":{\"params\":{\"_prop\":\"The proposal to issue a refund for.\"}},\"registerProposal(address)\":{\"params\":{\"_prop\":\"The address of the proposal to submit.\"}},\"support(address)\":{\"params\":{\"_prop\":\"The proposal to support.\"}}},\"title\":\"PolicyProposals `PolicyProposals` oversees the proposals phase of the policy decision process. Proposals can be submitted by anyone willing to put forth funds, and submitted proposals can be supported by anyone First, during the proposals portion of the proposals phase, proposals can be submitted (for a fee). This is parallelized with a signal voting process where support can be distributed and redistributed to proposals after they are submitted. A proposal that makes it to support above 30% of the total possible support ends this phase and starts a vote.\",\"version\":1},\"userdoc\":{\"events\":{\"ProposalAdded(address,address)\":{\"notice\":\"An event indicating a proposal has been proposed\"},\"ProposalRefunded(address,address)\":{\"notice\":\"An event indicating that proposal fee was partially refunded.\"},\"ProposalSupported(address,address)\":{\"notice\":\"An event indicating that proposal have been supported by stake.\"},\"ProposalUnsupported(address,address)\":{\"notice\":\"An event indicating that support has been removed from a proposal.\"},\"SupportThresholdReached(address)\":{\"notice\":\"An event indicating a proposal has reached its support threshold\"},\"VotingStarted(address)\":{\"notice\":\"An event indicating that proposals have been accepted for voting\"}},\"kind\":\"user\",\"methods\":{\"COST_REGISTER()\":{\"notice\":\"The minimum cost to register a proposal.\"},\"PROPOSAL_TIME()\":{\"notice\":\"The duration of the proposal portion of the proposal phase.\"},\"REFUND_IF_LOST()\":{\"notice\":\"The amount refunded if a proposal does not get selected.\"},\"allProposalAddresses()\":{\"notice\":\"A list of addresses for all proposed policies\"},\"allProposalData()\":{\"notice\":\"A list of all proposed policies\"},\"allProposals(uint256)\":{\"notice\":\"A list of the addresses of all proposals made.\"},\"blockNumber()\":{\"notice\":\"The block number of the balance stores to use for staking in support of a proposal.\"},\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"ERC1820 permissioning interface\"},\"clone()\":{\"notice\":\"Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract.\"},\"constructor\":{\"notice\":\"Construct a new PolicyProposals instance using the provided supervising policy (root) and supporting contracts.\"},\"destruct()\":{\"notice\":\"Reclaim tokens after end time only callable if all proposals are refunded\"},\"implementation()\":{\"notice\":\"Get the address of the proxy target contract.\"},\"initialize(address)\":{\"notice\":\"Initialize the storage context using parameters copied from the original contract (provided as _self). Can only be called once, during proxy initialization.\"},\"policy()\":{\"notice\":\"The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy.\"},\"policyCommand(address,bytes)\":{\"notice\":\"Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space.\"},\"policyVotesImpl()\":{\"notice\":\"The address of the `PolicyVotes` contract, to be cloned for the voting phase.\"},\"proposalEnds()\":{\"notice\":\"The time at which the proposal portion of the proposals phase ends.\"},\"proposalSelected()\":{\"notice\":\"Whether or not a winning proposal has been selected\"},\"proposalToConfigure()\":{\"notice\":\"selected proposal awaiting configuration before voting\"},\"proposals(address)\":{\"notice\":\"The set of proposals under consideration. maps from addresses of proposals to structs containing with info and the staking data (struct defined above)\"},\"refund(address)\":{\"notice\":\"Refund the fee for a proposal that was not selected. Returns a partial refund only, does not work on proposals that are on the ballot for the voting phase, and can only be called after the period is over.\"},\"registerProposal(address)\":{\"notice\":\"Submit a proposal. You must approve the policy proposals contract to withdraw the required fee from your account before calling this. Can only be called during the proposals portion of the proposals phase. Each proposal may only be submitted once.\"},\"setExpectedInterfaceSet(address)\":{\"notice\":\"Set the expected interface set\"},\"simplePolicyImpl()\":{\"notice\":\"The address of a `SimplePolicySetter` contract used to grant permissions for the voting phase.\"},\"support(address)\":{\"notice\":\"Stake in support of an existing proposal. Can only be called during the staking portion of the proposals phase. Your voting strength is added to the supporting stake of the proposal.\"},\"totalproposals()\":{\"notice\":\"The total number of proposals made.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/PolicyProposals.sol\":\"PolicyProposals\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xc94f9b84096deaf9d2ba5681db62455e3f2d5f0a61341f68a6f576f32a6e60be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74465bbd80d2e8cfb900bf00c69940822d59bfee20d3a9725fbd74e26413319b\",\"dweb:/ipfs/QmYLEg43ZBYBsjx6qDiHK21P4YjVYLzQcUMhadrdqmA5ZL\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x1e34ab6382525e2c48a01d9edbcfeab024072e8fa80332d48fb7011ebdf59562\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d4c3a1cacb1b5ce5681edac3dc3034a9e6ea6b9e4ef338564ca70b9b6ea2fd7\",\"dweb:/ipfs/QmXwhPvgGK4envqERyjh5W7CtrH72geAE7fh1EFcVerviw\"]},\"project:/contracts/VDF/BigNumber.sol\":{\"keccak256\":\"0x5e88c0690fc697f8f1bd8ffa0b1d6ef4468edf1b265c9d84158d0c1f77596a91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://debd6a317c4174d1b6e99cad87868a2c6a0e09d87eaeb5d01f95271526b806a1\",\"dweb:/ipfs/QmV2sGNYUHLMpMbRJuGhytoxH33w136YNSayMUboZxEKDd\"]},\"project:/contracts/VDF/IsPrime.sol\":{\"keccak256\":\"0x46e04eec8e101ebb0f5a6ed2d3b53a24826e716ab0e2ce0e3fe34cd9f1af7491\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb4fd348697a8bfe54c3d379187d50641487df5b31cbe36e43bd1fb101df4f07\",\"dweb:/ipfs/QmWJ38Hh2Gun9LAFrrfNtuUECMcx5tEt3HrvmgeMgeiGmW\"]},\"project:/contracts/VDF/VDFVerifier.sol\":{\"keccak256\":\"0xf54b4f6ac87d85718771deff7941934bbdd297f107c69392c24d561a27aa9e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b9f4b13ef77326722cf3ea0072a4bed45f3070463409ac9d9b5bdf40c304c3\",\"dweb:/ipfs/Qma8hCvwgh5gs4KPZW64KjUnoPgJpSpiJ9QxTQPBFv33Gw\"]},\"project:/contracts/clone/CloneFactory.sol\":{\"keccak256\":\"0xa9cca376d475f738168c095ab801487d9f7be4c266fccb180e3b86d75a711266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc82435cda5a9995d406c80defad1824fcaecf26a2fe697233bdabfe174e7566\",\"dweb:/ipfs/QmNdQmbuWYybudzYmcTy2uis17rHoB3SChYCdUqMTzdU17\"]},\"project:/contracts/currency/ECOx.sol\":{\"keccak256\":\"0x608b39a0465df4ab92c816ff52626b2d0e938c74d42472b9f88f483db041461f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d75d58e89d535ba6eeec90466237dff2615d00bf04aa8ecfd8f36b1e85d15749\",\"dweb:/ipfs/QmcQwgCibTPDwsKKLLtgUTPdz39m7YkGCR7XxnZHjnsYyL\"]},\"project:/contracts/currency/ERC20.sol\":{\"keccak256\":\"0xd35befe59e60d57e1edf5862eaf951373093d645ffaabcdbe250bbbb8027eb06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1a2ef0b12382baafccf9bbc182ef19b66a6025cdb95a2ea516a35f06b6ae250\",\"dweb:/ipfs/QmcLczbCyJR82PWWAkpuEKNja96DsTUEMChVdq1s6qRU9d\"]},\"project:/contracts/currency/EcoBalanceStore.sol\":{\"keccak256\":\"0xb669dfdbd8cb88b7a53e2852907027af5a69b90e7930d52b872eab99a3a1b758\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ce29c879e3d07abfd1be6359391d309c557f1e64cc6be771f27de0b82cc63c4\",\"dweb:/ipfs/QmRZJnjsnyKnGXqGG3gYqtuBpUuopTX17ryWGdDrPLPw83\"]},\"project:/contracts/currency/IEcoBalanceStoreGenerationBalance.sol\":{\"keccak256\":\"0xe301e84792c16f34a17bdfb7b9e075b9b3daf623e6424f58848649ef413b1eda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2c098a45fc95625b329cc149aa48def710ce26cad2f54f85ab781e26ed3c4e6\",\"dweb:/ipfs/Qmd9F3TSJtDbnoPXMNScJuUEpr5NAMpXEkF3S85CmLKL2Z\"]},\"project:/contracts/currency/InflationRootHashProposal.sol\":{\"keccak256\":\"0x10b15df8d9e20f1cc5426ecd9a8c4a038653136236cbd22f1cd8bf1fb9ebe11c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbe37661f420bfad8a1031eec630a0f0eb1bd0ab6cb9cf0eedb081900753512\",\"dweb:/ipfs/QmVWqnLn7FeyQrpbaYuqNgEkp4QCtrfTywJ7E8QeppCskS\"]},\"project:/contracts/currency/VoteCheckpoints.sol\":{\"keccak256\":\"0x8f2badf8fd889ae17219e09a304ed84ee51ed046b9fc681185a12ec9cc680a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3a2e5ef542e4ff90348209ec88fa6998c939965372aa1928db2a2aa071306ec\",\"dweb:/ipfs/Qmez8HBsnBXuyTzvqLvWiHDkdtvW115WHQiiUZZh1erB4f\"]},\"project:/contracts/governance/CurrencyGovernance.sol\":{\"keccak256\":\"0x19e989ded999720bfd690efeaa6a8f41e2dc6631ce44755b0cae3f144e3f76a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://266fadecf03eea43bded1394ca8adbce4e9bf77c1700643d75a12d9ae26ccbb3\",\"dweb:/ipfs/QmZ4M5yVZcWfN3FkxLgbYg4y9QMDisXwDKa4MRHdkBuVF5\"]},\"project:/contracts/governance/CurrencyTimer.sol\":{\"keccak256\":\"0x2d533823758f8d2b5c1082777d011c4100006c90a2b81b0b6182b54c2df1ba9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70b9ecedac10da90392cc9407cc93603f5b536b840f7bc1d4605272fe26ab117\",\"dweb:/ipfs/QmdWB1d64HpvUDs26ozWuvo3CJrqpv6Hd4WAE79yauEPdW\"]},\"project:/contracts/governance/ECOxLockup.sol\":{\"keccak256\":\"0xefad53fc822620206f21e4cd1f69892032c912e8fe1230ce708f317ce3b89c09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28de98a9453d257d9f601d86176dead62f85150785b7a1bf53e76f208c4df386\",\"dweb:/ipfs/Qmb7Xy7qRhQujHvZRite9af5GCLvtx2MPFswmmPUqe1Vk3\"]},\"project:/contracts/governance/IGeneration.sol\":{\"keccak256\":\"0x3b431c3003108a46b0051f13334d540bb2beec851da88a735d27c84413360276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19c8f5f12e5a30e2abe12a4ec2fd3f6ea429d83cf154a4968af880436a9c9ff3\",\"dweb:/ipfs/QmWrNDLhEBfM4y4MWUeyp5y9QYUDG8R9YJo599n1hUkpxj\"]},\"project:/contracts/governance/ILockups.sol\":{\"keccak256\":\"0xcbb514bd42d5e9a47df66e59ddd960dfea4cf74a4c3cf177fbf9112cfdcfa636\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdfcec7e37862ce1c931908fc9e394103b9579fc1e1a376005cdf642aaf609c6\",\"dweb:/ipfs/QmXC2eqCyXRF2kRvSYyciH6e8Syty5zJ1HkVxKJREG1SzY\"]},\"project:/contracts/governance/ITimeNotifier.sol\":{\"keccak256\":\"0x2fb231168282d301332c2b9d2b7a785e9ead05dd1d684844a95e29eeb93d41bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29b14e0904264e2e5737187709ec8d51f0614afffa978463400749eb636490f2\",\"dweb:/ipfs/QmNaggfV5RPCNTLL7Nc9R8YxYg9uG8ZMypdvDAAgUtLdTa\"]},\"project:/contracts/governance/Inflation.sol\":{\"keccak256\":\"0xee0b184da02a638ffdbdc4761c879a192a2566b6e847579680bcd4308cebc64f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84365f0f782c926a52633343b89615008727f75b84a479da7a135a5a933a58a\",\"dweb:/ipfs/QmRjSaF5FUBHo1GLJm8mFWoMniKFD1zoEPbJQvfkQBmbe9\"]},\"project:/contracts/governance/Lockup.sol\":{\"keccak256\":\"0x07c04e216719f6789ac0a14b927832107f76fd5f64695a123872b1d0153e7543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23abcd4d43868a11ecbbae594896ab463844284d2d33c3f59e66ffe722089f02\",\"dweb:/ipfs/QmRACvobdftHht6X5t1ZNXm9EFYJbWp6DFLf1ntTUZSkhV\"]},\"project:/contracts/governance/PolicyProposals.sol\":{\"keccak256\":\"0x57044a36b8e6fae63697f00f364987a3d627dac1410f228a2bbf81754d7717ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://575204d65a14ebe65d208f69df2124d5485f4c1dc6f3dd84ef8062ca5b43465d\",\"dweb:/ipfs/QmeWBhYDPt7M28zv3PHV5xKwxiJ1AP9sgxeiCTvJpXzxrY\"]},\"project:/contracts/governance/PolicyVotes.sol\":{\"keccak256\":\"0x2ba76224e2105ca56a9b7c024e2f5f647a592833637d94b9ce588eb8c8aeb78f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ae9c543a86eb47043a490f3237e3da632e4b6b7ffdfaa86bd2ed38970989cbf\",\"dweb:/ipfs/QmQAMMa18QfY1qQHbutFMUE8WMuiFyygzFzY7rw3h9uVy9\"]},\"project:/contracts/governance/Proposal.sol\":{\"keccak256\":\"0xa5ab407d607a169e60f4de23c6c8ad96b788a25f213fc49ba3710e606224014b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81242d5dd6ec57f65663db1d628c0b36b6dbe01cee7a28106083be06cb64829\",\"dweb:/ipfs/QmfYyRxn8UCQ4xhW5CiFsRqAsXgcXkCoZHYkM7KA8isptj\"]},\"project:/contracts/governance/SimplePolicySetter.sol\":{\"keccak256\":\"0xf2c92c209af434e2951de4b38ac1f873c84f66ee21624951795299df564aee85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82da943b1ee0c3d53d81ced598e6a9dc25d95a2917b4594656fa795ec70f3739\",\"dweb:/ipfs/QmQojUwpGLUH5o1K9TXaGLAEWrToJbfYxCPq7PVQ5em127\"]},\"project:/contracts/governance/TrustedNodes.sol\":{\"keccak256\":\"0xea47974575ab6fc0318f9051a8c62ca8fa69cce05e6831c776b55d53e54d38d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9629154de32ec95668244c63a8d5c9a66662050580b92775354dd8867b8661c9\",\"dweb:/ipfs/Qma6Bn9i7mLH171wm3rrwiwjU8rrBRmH5bHRLA5ACNiaDb\"]},\"project:/contracts/governance/VotingPower.sol\":{\"keccak256\":\"0xd015db803629e17946c143334c04f675a8d1ec4cae1a663562c8463801baa46b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ba9700c971a203c136de8f4101a84048bca476a8e0116cb46deed97b3ab8d3\",\"dweb:/ipfs/QmbQpKXVjp7tZdvbjBmGvikTfNz5TbqyLvn56XLmVc4ExA\"]},\"project:/contracts/policy/ERC1820Client.sol\":{\"keccak256\":\"0x69dd5065d6e5a2eb2065820de408601e7e4e1723c22dc87e6abe3490e6a85653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2da45d19c5f61d6abd0265d3a63e4dfd99dd824450d9ee7975c5545ced57ec\",\"dweb:/ipfs/QmXszDmnjMGPJqqU6zSezCosoPRq53xaPpoZooHJRTK5sR\"]},\"project:/contracts/policy/Policed.sol\":{\"keccak256\":\"0x9b7453d53425ce5d07ca741691bcc93ddeb160f7f9093b6caab5d6a6e0e3c7dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d34065dd15c4bbab6a346f3c8c2ccd488d141d20f1e28c100a03abc3401e5b3\",\"dweb:/ipfs/QmTJruf6YSHUMBQXfe9itX6NYFZBUfzmTyUnbHdLmghZXg\"]},\"project:/contracts/policy/PolicedUtils.sol\":{\"keccak256\":\"0x5db2a1c0a18eea386af44be4060fdd648411bc2bf709ccabeda7ef3db6c6489f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1561acbf9877d763fa3e3766f5dfaeff84513f23e50a0ee6cbd281e22acd9a15\",\"dweb:/ipfs/Qme38mB6divPHqv5AEEfUacVx74fkyu8F9zXhSLxtYz5X4\"]},\"project:/contracts/policy/Policy.sol\":{\"keccak256\":\"0xe51f3826fba69174ad806032b3b05b95da1db5ff56ba9bceff3945300054230d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2df82a7c256fd93de7d71371c4820461eae7be89ebd2410427483925da0bf6\",\"dweb:/ipfs/QmPWyBhtUQHaksmAtFKiwvqjvtBjDsCiVwyhgPbuquX7b4\"]},\"project:/contracts/proxy/ForwardTarget.sol\":{\"keccak256\":\"0x4d9205a1bf8021ea57860327d73bb98c8e1b997cd0c05a6320605fd4261ed60e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17d1dbddfc0c3d49c07dd5a31d87075806c94be6c5bec81ea67b0311497aa46b\",\"dweb:/ipfs/QmTSb5uD6dWeZzC9Tk4FMjuV9Do3rHJ8Hq77rjTFPdnttQ\"]},\"project:/contracts/utils/TimeUtils.sol\":{\"keccak256\":\"0xb0536971a5c79c8a95049bc14723bb1a385b7c7f6c92557daae34fb5e6f59401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79612e991eff017a6ddaffab4dbb70d8c6d0b30df865b29f16689fbba1c568c2\",\"dweb:/ipfs/QmSC6GBcXE3K8nawdRqXPRYD4QdQswXG9HKhSSLMaBhPMM\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002f5f38038062002f5f83398101604081905262000034916200026b565b8280806040516020016200006b907f636f6d2e65636f2e466f727761726450726f78792e74617267657400000000008152601b0190565b6040516020818303038152906040528051906020012060001c60008051602062002f3f83398151915214620000f15760405162461bcd60e51b815260206004820152602160248201527f494d504c454d454e544154494f4e5f534c4f542068617368206d69736d6174636044820152600d60fb1b60648201526084015b60405180910390fd5b620000fc30620001c0565b600080546001600160a01b0319166001600160a01b03928316179055604051635df8122f60e01b81523060048201529082166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b1580156200016d57600080fd5b505af115801562000182573d6000803e3d6000fd5b5050600980546001600160a01b039788166001600160a01b031991821617909155600a80549690971695169490941790945550620002b59350505050565b6001600160a01b038116620001e260008051602062002f3f8339815191525490565b6001600160a01b031614156200023b5760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e67006044820152606401620000e8565b60008051602062002f3f83398151915255565b80516001600160a01b03811681146200026657600080fd5b919050565b6000806000606084860312156200028157600080fd5b6200028c846200024e565b92506200029c602085016200024e565b9150620002ac604085016200024e565b90509250925092565b612c7a80620002c56000396000f3fe608060405234801561001057600080fd5b506004361061027e5760003560e01c80637361d1e611610156578063c4d66de8116100d3578063dea6453511610097578063f67a3a4811610071578063f67a3a481461068d578063fa89401a146106b4578063fe31df0d146106c757600080fd5b8063dea6453514610640578063e660cc0814610653578063f53d3d1f1461066657600080fd5b8063c4d66de81461059e578063c6d3afc9146105b1578063c9140665146105df578063cebd2c0914610606578063d5252e451461061957600080fd5b8063af12645a1161011a578063af12645a14610538578063b87341b814610541578063b88ad48b14610556578063ba38df6c1461055f578063c3d2a0bc1461058657600080fd5b80637361d1e6146104cb578063762ec1e9146104f25780638881a87414610502578063938351b814610512578063984db2421461052557600080fd5b806334f1020e116101ff578063480276ac116101c357806357e871e71161019d57806357e871e7146104865780635c60da1b1461048f57806368273a57146104a457600080fd5b8063480276ac14610439578063536f9f42146104605780635423b94d1461047357600080fd5b806334f1020e146103e5578063376cf9bf146103ed57806339634e0c146103f65780633dc716f3146104095780633fc9d6211461042657600080fd5b80631673bc41116102465780631673bc411461032c578063249cb3fa1461035357806325f4627f146103665780632b68b9c61461037b5780633341b4451461038357600080fd5b80630505c8c91461028357806309d7f23b146102b357806309ed4607146102c8578063138d8009146102d0578063154cfece14610305575b600080fd5b600054610296906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102c66102c13660046128d8565b6106ee565b005b61029661078e565b6102f77fe10ab6c94f1da69921a0ca1c1b96b4fc339699153931c9bfd565e91f44c19b0b81565b6040519081526020016102aa565b6102f77fe4ee44a5d338a8b2452cc9552ec014656668eaacb55683101b7e1c2b167e522581565b6102f77fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b1981565b6102f761036136600461299c565b6107fc565b61036e6108e2565b6040516102aa91906129cc565b6102c66109fa565b6103bf610391366004612a31565b6003602052600090815260409020805460018201546002909201546001600160a01b03918216929091169083565b604080516001600160a01b039485168152939092166020840152908201526060016102aa565b6102c6610ca0565b6102f760075481565b6102c6610404366004612a31565b610fee565b6006546104169060ff1681565b60405190151581526020016102aa565b6102c6610434366004612a31565b611081565b6102f77f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a81565b6102f761046e366004612a55565b611332565b6102f7610481366004612a6e565b6114e8565b6102f760085481565b600080516020612c2583398151915254610296565b6102f77f1b74fc1bde1302df3d2e3f68112fbbf0ccbb287053160042e61d82481bb6e17881565b6102f77f93824b3fb91a9a455e79c6bb5ad7a2acaedbf7fea80464761d7d892aa7853d5e81565b6102f7682b5e3af16b1880000081565b6102f7683635c9adc5dea0000081565b610296610520366004612a55565b6116a9565b600954610296906001600160a01b031681565b6102f761025881565b6105496116d3565b6040516102aa9190612a9a565b6102f760045481565b6102f77f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f81565b6006546102969061010090046001600160a01b031681565b6102c66105ac366004612a31565b611735565b6104166105bf366004612ae7565b600260209081526000928352604080842090915290825290205460ff1681565b6102f77f0e3d3f2b74f96e5fd24f23acf8b4b352d4e1d0d0ed45271f4e44aa64f98b228481565b600a54610296906001600160a01b031681565b6102f77fe01e721169f17f30d0c130781195719ceba11f26f44578668ffd8462c7c1ebe981565b6102c661064e366004612a31565b6118fd565b6102c6610661366004612a31565b611c61565b6102f77fe0391e627a5766ef56109c7c98e0542c6e96a116720d7c626119be5b67e1813d81565b6102f77fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa1881565b6102c66106c2366004612a31565b6120ca565b6102f77f5f9af78bb9888a64eda8686df832be8039fe2a08c41dd13a3e0a34cadf71426581565b6000546001600160a01b031633146107645760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e81801561078257816000f35b816000fd5b5050505050565b60008061079a30612355565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b5092949350505050565b600080546001600160a01b038381169116148061082657506001546001600160a01b038381169116145b6108985760405162461bcd60e51b815260206004820152603d60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f7472616374206d61792063616c6c20746869732066756e6374696f6e2e000000606482015260840161075b565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b6060600060045467ffffffffffffffff811115610901576109016128c2565b60405190808252806020026020018201604052801561094c57816020015b604080516060810182526000808252602080830182905292820152825260001990920191018161091f5790505b50905060005b6004548110156109f457600360006005838154811061097357610973612b15565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251606081018452815485168152600182015490941691840191909152600201549082015282518390839081106109d6576109d6612b15565b602002602001018190525080806109ec90612b41565b915050610952565b50919050565b60065460ff1680610a0c575060075442115b610a8c5760405162461bcd60e51b8152602060048201526044602482018190527f546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920908201527f626520706572666f726d6564207768656e2074686520706572696f642069732060648201526337bb32b960e11b608482015260a40161075b565b60045415610aeb5760405162461bcd60e51b815260206004820152602660248201527f4d75737420726566756e6420616c6c206d69737365642070726f706f73616c7360448201526508199a5c9cdd60d21b606482015260840161075b565b6000546040516319bb6e0160e11b81527f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a60048201526001600160a01b0390911690633376dc0290602401600060405180830381600087803b158015610b5057600080fd5b505af1158015610b64573d6000803e3d6000fd5b50505050610b706123be565b6000546001600160a01b039182169163a9059cbb9116610b8e6123be565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610bcf57600080fd5b505afa158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c079190612b5c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610c6557600080fd5b505af1158015610c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9d9190612b75565b50565b60065460ff16610cf25760405162461bcd60e51b815260206004820152601d60248201527f6e6f2070726f706f73616c20686173206265656e2073656c6563746564000000604482015260640161075b565b60065461010090046001600160a01b0316610d4f5760405162461bcd60e51b815260206004820181905260248201527f766f74696e672068617320616c7265616479206265656e206465706c6f796564604482015260640161075b565b6006805474ffffffffffffffffffffffffffffffffffffffff00198116909155600954604080516309ed460760e01b815290516001600160a01b0361010090940484169360009316916309ed460791600480830192602092919082900301818787803b158015610dbe57600080fd5b505af1158015610dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df69190612b97565b604051633ae5933960e11b81526001600160a01b038481166004830152919250908216906375cb267290602401600060405180830381600087803b158015610e3d57600080fd5b505af1158015610e51573d6000803e3d6000fd5b5050600a5460405163c86564b160e01b81527f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f60048201526001600160a01b03858116602483015260009450909116915063c86564b190604401602060405180830381600087803b158015610ec557600080fd5b505af1158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd9190612b97565b6000546040516330f056e560e11b81526001600160a01b0380841660048301529293509116906361e0adca90602401600060405180830381600087803b158015610f4657600080fd5b505af1158015610f5a573d6000803e3d6000fd5b50506040516001600160a01b03851681527ff8ed2b6117507e8f7ba16240930bbd8696ca6f7a957e092ff4d288ee7c27340d9250602001905060405180910390a16001600160a01b038316600090815260036020526040812080546001600160a01b0319908116825560018083018054909216909155600290910191909155600454610fe69190612bb4565b600455505050565b6000546001600160a01b0316331461105f5760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b606482015260840161075b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b306110ab7f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a6123ee565b6001600160a01b03161461110c5760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469604482015261766560f01b606482015260840161075b565b60065460ff161561116b5760405162461bcd60e51b8152602060048201526024808201527f412070726f706f73616c2068617320616c7265616479206265656e2073656c6560448201526318dd195960e21b606482015260840161075b565b60075442106111f95760405162461bcd60e51b815260206004820152604e60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f60448201527f7274656420626563617573652074686520726567697374726174696f6e20706560648201526d1c9a5bd9081a185cc8195b99195960921b608482015260a40161075b565b6000611207336008546114e8565b6001600160a01b03808416600090815260036020908152604080832060018101549094168352600282528083203384529091529020549192509060ff1661129a5760405162461bcd60e51b815260206004820152602160248201527f596f752068617665206e6f74207374616b656420746869732070726f706f73616044820152601b60fa1b606482015260840161075b565b8181600201546112aa9190612bb4565b60028083019190915560018201546001600160a01b031660009081526020918252604080822033808452935290819020805460ff19169055517fb76750150566b8990d9c704bbfafe701e25c7f738e6fab8cd40390abdee79193916113259186906001600160a01b0392831681529116602082015260400190565b60405180910390a1505050565b60008061133d6123be565b6001600160a01b031663981b24d0846040518263ffffffff1660e01b815260040161136a91815260200190565b60206040518083038186803b15801561138257600080fd5b505afa158015611396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ba9190612b5c565b905060006113c661248b565b6001600160a01b0316635bb748ad856040518263ffffffff1660e01b81526004016113f391815260200190565b60206040518083038186803b15801561140b57600080fd5b505afa15801561141f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114439190612b5c565b905080156114e1576114536124b6565b60405163329c53f760e01b815260048101839052602481018690526001600160a01b03919091169063329c53f79060440160206040518083038186803b15801561149c57600080fd5b505afa1580156114b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d49190612b5c565b6114de9083612bcb565b91505b5092915050565b6000806114f36123be565b604051631dc7379760e11b81526001600160a01b038681166004830152602482018690529190911690633b8e6f2e9060440160206040518083038186803b15801561153d57600080fd5b505afa158015611551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115759190612b5c565b9050600061158161248b565b60405163334ff4e160e21b81526001600160a01b03878116600483015260248201879052919091169063cd3fd3849060440160206040518083038186803b1580156115cb57600080fd5b505afa1580156115df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116039190612b5c565b905080156116a1576116136124b6565b60405163329c53f760e01b815260048101839052602481018690526001600160a01b03919091169063329c53f79060440160206040518083038186803b15801561165c57600080fd5b505afa158015611670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116949190612b5c565b61169e9083612bcb565b91505b509392505050565b600581815481106116b957600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600580548060200260200160405190810160405280929190818152602001828054801561172b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161170d575b5050505050905090565b600061174d600080516020612c258339815191525490565b6001600160a01b0316146117b45760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161075b565b6117bd816124e1565b806001600160a01b031663984db2426040518163ffffffff1660e01b815260040160206040518083038186803b1580156117f657600080fd5b505afa15801561180a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182e9190612b97565b600960006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b031663cebd2c096040518163ffffffff1660e01b815260040160206040518083038186803b15801561188d57600080fd5b505afa1580156118a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c59190612b97565b600a80546001600160a01b0319166001600160a01b0392909216919091179055610258426118f39190612bcb565b6007555043600855565b6001600160a01b0381166000818152600360205260409020906119625760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c20616464726573732063616e2774206265203000604482015260640161075b565b60075442108015611976575060065460ff16155b611a0e5760405162461bcd60e51b815260206004820152604f60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520726567697360448201527f746572656420626563617573652074686520726567697374726174696f6e207060648201527f6572696f642068617320656e6465640000000000000000000000000000000000608482015260a40161075b565b60018101546001600160a01b031615611a785760405162461bcd60e51b815260206004820152602660248201527f412070726f706f73616c206d6179206f6e6c792062652072656769737465726560448201526564206f6e636560d01b606482015260840161075b565b611a806123be565b6040516323b872dd60e01b8152336004820152306024820152683635c9adc5dea0000060448201526001600160a01b0391909116906323b872dd90606401602060405180830381600087803b158015611ad857600080fd5b505af1158015611aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b109190612b75565b611ba85760405162461bcd60e51b815260206004820152605d60248201527f54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d60448201527f75737420626520617070726f76656420746f207472616e73666572207072696f60648201527f7220746f2063616c6c696e6720726567697374657250726f706f73616c000000608482015260a40161075b565b600180820180546001600160a01b0385166001600160a01b0319918216811790925583548116331784556005805480850182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180549091169091179055600454611c1991612bcb565b600455604080513381526001600160a01b03841660208201527f3fcbb80957eda973db8d46e93fd04cf31f9d8370afd86fff2f3c826ee7403d20910160405180910390a15050565b30611c8b7f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a6123ee565b6001600160a01b031614611cec5760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469604482015261766560f01b606482015260840161075b565b60065460ff1615611d4b5760405162461bcd60e51b8152602060048201526024808201527f412070726f706f73616c2068617320616c7265616479206265656e2073656c6560448201526318dd195960e21b606482015260840161075b565b6007544210611dd95760405162461bcd60e51b815260206004820152604e60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f60448201527f7274656420626563617573652074686520726567697374726174696f6e20706560648201526d1c9a5bd9081a185cc8195b99195960921b608482015260a40161075b565b6000611de7336008546114e8565b90506000611df6600854611332565b6001600160a01b038416600090815260036020526040902090915082611e965760405162461bcd60e51b815260206004820152604960248201527f496e206f7264657220746f20737570706f727420612070726f706f73616c207960448201527f6f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e74206064820152686f6620746f6b656e7360b81b608482015260a40161075b565b60018101546001600160a01b0316611f015760405162461bcd60e51b815260206004820152602860248201527f54686520737570706f727465642070726f706f73616c206973206e6f7420726560448201526719da5cdd195c995960c21b606482015260840161075b565b60018101546001600160a01b0316600090815260026020908152604080832033845290915290205460ff1615611f9f5760405162461bcd60e51b815260206004820152603060248201527f596f75206d6179206e6f74207374616b6520696e20737570706f7274206f662060448201527f612070726f706f73616c20747769636500000000000000000000000000000000606482015260840161075b565b828160020154611faf9190612bcb565b6002808301919091556001808301546001600160a01b03166000908152602092835260408082203380845294529020805460ff19169091179055611ff2906125dd565b604080513381526001600160a01b03861660208201527f044032bdad012ab1001337af550128e75e446f1f8d8c32eb9c6193a13d56fc70910160405180910390a1606461204083601e612be3565b61204a9190612c02565b816002015411156120c4576040516001600160a01b03851681527f2579eab5d400c5cc266359842639b59e8c3629d634c5e6d274fe8ad69128844a9060200160405180910390a1600680546001600160a01b0386166101000274ffffffffffffffffffffffffffffffffffffffffff199091161760011790555b50505050565b60065460ff16806120dc575060075442115b61214e5760405162461bcd60e51b815260206004820152603760248201527f526566756e6473206d6179206e6f74206265206469737472696275746564207560448201527f6e74696c2074686520706572696f64206973206f766572000000000000000000606482015260840161075b565b6001600160a01b0381166121a45760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c20616464726573732063616e2774206265203000604482015260640161075b565b6001600160a01b0380821660008181526003602052604090206001810154909216146122255760405162461bcd60e51b815260206004820152602a60248201527f5468652070726f76696465642070726f706f73616c2061646472657373206973604482015269081b9bdd081d985b1a5960b21b606482015260840161075b565b80546001600160a01b03838116600090815260036020526040812080546001600160a01b0319908116825560018281018054909216909155600290910191909155600454919092169161227791612bb4565b6004556122826123be565b60405163a9059cbb60e01b81526001600160a01b038381166004830152682b5e3af16b188000006024830152919091169063a9059cbb90604401602060405180830381600087803b1580156122d657600080fd5b505af11580156122ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230e9190612b75565b506001820154604080516001600160a01b03808516825290921660208301527fa4b5ba93242889336ac4acfa759ee8ad38969fd974e00cc01dee8fb2e4463aa89101611325565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b60006123e97fe0391e627a5766ef56109c7c98e0542c6e96a116720d7c626119be5b67e1813d6123ee565b905090565b6000805460405163555ddc6560e11b81526001600160a01b03909116600482015260248101839052731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b15801561244d57600080fd5b505afa158015612461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124859190612b97565b92915050565b60006123e97fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa186123ee565b60006123e97fe10ab6c94f1da69921a0ca1c1b96b4fc339699153931c9bfd565e91f44c19b0b6123ee565b60006124f9600080516020612c258339815191525490565b6001600160a01b0316146125605760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161075b565b61256981612615565b600054604051635df8122f60e01b81523060048201526001600160a01b039091166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f906044015b600060405180830381600087803b1580156125c957600080fd5b505af1158015610787573d6000803e3d6000fd5b6125e561248b565b6040516324b07fd160e21b81526001600160a01b03838116600483015291909116906392c1ff44906024016125af565b600061262d600080516020612c258339815191525490565b6001600160a01b0316146126945760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161075b565b61269d81612731565b806001600160a01b0316630505c8c96040518163ffffffff1660e01b815260040160206040518083038186803b1580156126d657600080fd5b505afa1580156126ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270e9190612b97565b600080546001600160a01b0319166001600160a01b039290921691909117905550565b6000612749600080516020612c258339815191525490565b6001600160a01b0316146127b05760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161075b565b610c9d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127ec57600080fd5b505afa158015612800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128249190612b97565b806001600160a01b0316612844600080516020612c258339815191525490565b6001600160a01b0316141561289b5760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e6700604482015260640161075b565b600080516020612c2583398151915255565b6001600160a01b0381168114610c9d57600080fd5b634e487b7160e01b600052604160045260246000fd5b600080604083850312156128eb57600080fd5b82356128f6816128ad565b9150602083013567ffffffffffffffff8082111561291357600080fd5b818501915085601f83011261292757600080fd5b813581811115612939576129396128c2565b604051601f8201601f19908116603f01168101908382118183101715612961576129616128c2565b8160405282815288602084870101111561297a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156129af57600080fd5b8235915060208301356129c1816128ad565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b82811015612a2457815180516001600160a01b03908116865287820151168786015285015185850152606090930192908501906001016129e9565b5091979650505050505050565b600060208284031215612a4357600080fd5b8135612a4e816128ad565b9392505050565b600060208284031215612a6757600080fd5b5035919050565b60008060408385031215612a8157600080fd5b8235612a8c816128ad565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b81811015612adb5783516001600160a01b031683529284019291840191600101612ab6565b50909695505050505050565b60008060408385031215612afa57600080fd5b8235612b05816128ad565b915060208301356129c1816128ad565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612b5557612b55612b2b565b5060010190565b600060208284031215612b6e57600080fd5b5051919050565b600060208284031215612b8757600080fd5b81518015158114612a4e57600080fd5b600060208284031215612ba957600080fd5b8151612a4e816128ad565b600082821015612bc657612bc6612b2b565b500390565b60008219821115612bde57612bde612b2b565b500190565b6000816000190483118215151615612bfd57612bfd612b2b565b500290565b600082612c1f57634e487b7160e01b600052601260045260246000fd5b50049056fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220b6099eceff276f187c0a40ac3057c96c6757d2ba744a065ff46042f3959d748e64736f6c63430008090033f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061027e5760003560e01c80637361d1e611610156578063c4d66de8116100d3578063dea6453511610097578063f67a3a4811610071578063f67a3a481461068d578063fa89401a146106b4578063fe31df0d146106c757600080fd5b8063dea6453514610640578063e660cc0814610653578063f53d3d1f1461066657600080fd5b8063c4d66de81461059e578063c6d3afc9146105b1578063c9140665146105df578063cebd2c0914610606578063d5252e451461061957600080fd5b8063af12645a1161011a578063af12645a14610538578063b87341b814610541578063b88ad48b14610556578063ba38df6c1461055f578063c3d2a0bc1461058657600080fd5b80637361d1e6146104cb578063762ec1e9146104f25780638881a87414610502578063938351b814610512578063984db2421461052557600080fd5b806334f1020e116101ff578063480276ac116101c357806357e871e71161019d57806357e871e7146104865780635c60da1b1461048f57806368273a57146104a457600080fd5b8063480276ac14610439578063536f9f42146104605780635423b94d1461047357600080fd5b806334f1020e146103e5578063376cf9bf146103ed57806339634e0c146103f65780633dc716f3146104095780633fc9d6211461042657600080fd5b80631673bc41116102465780631673bc411461032c578063249cb3fa1461035357806325f4627f146103665780632b68b9c61461037b5780633341b4451461038357600080fd5b80630505c8c91461028357806309d7f23b146102b357806309ed4607146102c8578063138d8009146102d0578063154cfece14610305575b600080fd5b600054610296906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6102c66102c13660046128d8565b6106ee565b005b61029661078e565b6102f77fe10ab6c94f1da69921a0ca1c1b96b4fc339699153931c9bfd565e91f44c19b0b81565b6040519081526020016102aa565b6102f77fe4ee44a5d338a8b2452cc9552ec014656668eaacb55683101b7e1c2b167e522581565b6102f77fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b1981565b6102f761036136600461299c565b6107fc565b61036e6108e2565b6040516102aa91906129cc565b6102c66109fa565b6103bf610391366004612a31565b6003602052600090815260409020805460018201546002909201546001600160a01b03918216929091169083565b604080516001600160a01b039485168152939092166020840152908201526060016102aa565b6102c6610ca0565b6102f760075481565b6102c6610404366004612a31565b610fee565b6006546104169060ff1681565b60405190151581526020016102aa565b6102c6610434366004612a31565b611081565b6102f77f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a81565b6102f761046e366004612a55565b611332565b6102f7610481366004612a6e565b6114e8565b6102f760085481565b600080516020612c2583398151915254610296565b6102f77f1b74fc1bde1302df3d2e3f68112fbbf0ccbb287053160042e61d82481bb6e17881565b6102f77f93824b3fb91a9a455e79c6bb5ad7a2acaedbf7fea80464761d7d892aa7853d5e81565b6102f7682b5e3af16b1880000081565b6102f7683635c9adc5dea0000081565b610296610520366004612a55565b6116a9565b600954610296906001600160a01b031681565b6102f761025881565b6105496116d3565b6040516102aa9190612a9a565b6102f760045481565b6102f77f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f81565b6006546102969061010090046001600160a01b031681565b6102c66105ac366004612a31565b611735565b6104166105bf366004612ae7565b600260209081526000928352604080842090915290825290205460ff1681565b6102f77f0e3d3f2b74f96e5fd24f23acf8b4b352d4e1d0d0ed45271f4e44aa64f98b228481565b600a54610296906001600160a01b031681565b6102f77fe01e721169f17f30d0c130781195719ceba11f26f44578668ffd8462c7c1ebe981565b6102c661064e366004612a31565b6118fd565b6102c6610661366004612a31565b611c61565b6102f77fe0391e627a5766ef56109c7c98e0542c6e96a116720d7c626119be5b67e1813d81565b6102f77fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa1881565b6102c66106c2366004612a31565b6120ca565b6102f77f5f9af78bb9888a64eda8686df832be8039fe2a08c41dd13a3e0a34cadf71426581565b6000546001600160a01b031633146107645760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e81801561078257816000f35b816000fd5b5050505050565b60008061079a30612355565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b1580156107de57600080fd5b505af11580156107f2573d6000803e3d6000fd5b5092949350505050565b600080546001600160a01b038381169116148061082657506001546001600160a01b038381169116145b6108985760405162461bcd60e51b815260206004820152603d60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f7472616374206d61792063616c6c20746869732066756e6374696f6e2e000000606482015260840161075b565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b6060600060045467ffffffffffffffff811115610901576109016128c2565b60405190808252806020026020018201604052801561094c57816020015b604080516060810182526000808252602080830182905292820152825260001990920191018161091f5790505b50905060005b6004548110156109f457600360006005838154811061097357610973612b15565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251606081018452815485168152600182015490941691840191909152600201549082015282518390839081106109d6576109d6612b15565b602002602001018190525080806109ec90612b41565b915050610952565b50919050565b60065460ff1680610a0c575060075442115b610a8c5760405162461bcd60e51b8152602060048201526044602482018190527f546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920908201527f626520706572666f726d6564207768656e2074686520706572696f642069732060648201526337bb32b960e11b608482015260a40161075b565b60045415610aeb5760405162461bcd60e51b815260206004820152602660248201527f4d75737420726566756e6420616c6c206d69737365642070726f706f73616c7360448201526508199a5c9cdd60d21b606482015260840161075b565b6000546040516319bb6e0160e11b81527f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a60048201526001600160a01b0390911690633376dc0290602401600060405180830381600087803b158015610b5057600080fd5b505af1158015610b64573d6000803e3d6000fd5b50505050610b706123be565b6000546001600160a01b039182169163a9059cbb9116610b8e6123be565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b158015610bcf57600080fd5b505afa158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c079190612b5c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610c6557600080fd5b505af1158015610c79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9d9190612b75565b50565b60065460ff16610cf25760405162461bcd60e51b815260206004820152601d60248201527f6e6f2070726f706f73616c20686173206265656e2073656c6563746564000000604482015260640161075b565b60065461010090046001600160a01b0316610d4f5760405162461bcd60e51b815260206004820181905260248201527f766f74696e672068617320616c7265616479206265656e206465706c6f796564604482015260640161075b565b6006805474ffffffffffffffffffffffffffffffffffffffff00198116909155600954604080516309ed460760e01b815290516001600160a01b0361010090940484169360009316916309ed460791600480830192602092919082900301818787803b158015610dbe57600080fd5b505af1158015610dd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df69190612b97565b604051633ae5933960e11b81526001600160a01b038481166004830152919250908216906375cb267290602401600060405180830381600087803b158015610e3d57600080fd5b505af1158015610e51573d6000803e3d6000fd5b5050600a5460405163c86564b160e01b81527f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f60048201526001600160a01b03858116602483015260009450909116915063c86564b190604401602060405180830381600087803b158015610ec557600080fd5b505af1158015610ed9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610efd9190612b97565b6000546040516330f056e560e11b81526001600160a01b0380841660048301529293509116906361e0adca90602401600060405180830381600087803b158015610f4657600080fd5b505af1158015610f5a573d6000803e3d6000fd5b50506040516001600160a01b03851681527ff8ed2b6117507e8f7ba16240930bbd8696ca6f7a957e092ff4d288ee7c27340d9250602001905060405180910390a16001600160a01b038316600090815260036020526040812080546001600160a01b0319908116825560018083018054909216909155600290910191909155600454610fe69190612bb4565b600455505050565b6000546001600160a01b0316331461105f5760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b606482015260840161075b565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b306110ab7f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a6123ee565b6001600160a01b03161461110c5760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469604482015261766560f01b606482015260840161075b565b60065460ff161561116b5760405162461bcd60e51b8152602060048201526024808201527f412070726f706f73616c2068617320616c7265616479206265656e2073656c6560448201526318dd195960e21b606482015260840161075b565b60075442106111f95760405162461bcd60e51b815260206004820152604e60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f60448201527f7274656420626563617573652074686520726567697374726174696f6e20706560648201526d1c9a5bd9081a185cc8195b99195960921b608482015260a40161075b565b6000611207336008546114e8565b6001600160a01b03808416600090815260036020908152604080832060018101549094168352600282528083203384529091529020549192509060ff1661129a5760405162461bcd60e51b815260206004820152602160248201527f596f752068617665206e6f74207374616b656420746869732070726f706f73616044820152601b60fa1b606482015260840161075b565b8181600201546112aa9190612bb4565b60028083019190915560018201546001600160a01b031660009081526020918252604080822033808452935290819020805460ff19169055517fb76750150566b8990d9c704bbfafe701e25c7f738e6fab8cd40390abdee79193916113259186906001600160a01b0392831681529116602082015260400190565b60405180910390a1505050565b60008061133d6123be565b6001600160a01b031663981b24d0846040518263ffffffff1660e01b815260040161136a91815260200190565b60206040518083038186803b15801561138257600080fd5b505afa158015611396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ba9190612b5c565b905060006113c661248b565b6001600160a01b0316635bb748ad856040518263ffffffff1660e01b81526004016113f391815260200190565b60206040518083038186803b15801561140b57600080fd5b505afa15801561141f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114439190612b5c565b905080156114e1576114536124b6565b60405163329c53f760e01b815260048101839052602481018690526001600160a01b03919091169063329c53f79060440160206040518083038186803b15801561149c57600080fd5b505afa1580156114b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d49190612b5c565b6114de9083612bcb565b91505b5092915050565b6000806114f36123be565b604051631dc7379760e11b81526001600160a01b038681166004830152602482018690529190911690633b8e6f2e9060440160206040518083038186803b15801561153d57600080fd5b505afa158015611551573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115759190612b5c565b9050600061158161248b565b60405163334ff4e160e21b81526001600160a01b03878116600483015260248201879052919091169063cd3fd3849060440160206040518083038186803b1580156115cb57600080fd5b505afa1580156115df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116039190612b5c565b905080156116a1576116136124b6565b60405163329c53f760e01b815260048101839052602481018690526001600160a01b03919091169063329c53f79060440160206040518083038186803b15801561165c57600080fd5b505afa158015611670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116949190612b5c565b61169e9083612bcb565b91505b509392505050565b600581815481106116b957600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600580548060200260200160405190810160405280929190818152602001828054801561172b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161170d575b5050505050905090565b600061174d600080516020612c258339815191525490565b6001600160a01b0316146117b45760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161075b565b6117bd816124e1565b806001600160a01b031663984db2426040518163ffffffff1660e01b815260040160206040518083038186803b1580156117f657600080fd5b505afa15801561180a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061182e9190612b97565b600960006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b031663cebd2c096040518163ffffffff1660e01b815260040160206040518083038186803b15801561188d57600080fd5b505afa1580156118a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c59190612b97565b600a80546001600160a01b0319166001600160a01b0392909216919091179055610258426118f39190612bcb565b6007555043600855565b6001600160a01b0381166000818152600360205260409020906119625760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c20616464726573732063616e2774206265203000604482015260640161075b565b60075442108015611976575060065460ff16155b611a0e5760405162461bcd60e51b815260206004820152604f60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520726567697360448201527f746572656420626563617573652074686520726567697374726174696f6e207060648201527f6572696f642068617320656e6465640000000000000000000000000000000000608482015260a40161075b565b60018101546001600160a01b031615611a785760405162461bcd60e51b815260206004820152602660248201527f412070726f706f73616c206d6179206f6e6c792062652072656769737465726560448201526564206f6e636560d01b606482015260840161075b565b611a806123be565b6040516323b872dd60e01b8152336004820152306024820152683635c9adc5dea0000060448201526001600160a01b0391909116906323b872dd90606401602060405180830381600087803b158015611ad857600080fd5b505af1158015611aec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b109190612b75565b611ba85760405162461bcd60e51b815260206004820152605d60248201527f54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d60448201527f75737420626520617070726f76656420746f207472616e73666572207072696f60648201527f7220746f2063616c6c696e6720726567697374657250726f706f73616c000000608482015260a40161075b565b600180820180546001600160a01b0385166001600160a01b0319918216811790925583548116331784556005805480850182556000919091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180549091169091179055600454611c1991612bcb565b600455604080513381526001600160a01b03841660208201527f3fcbb80957eda973db8d46e93fd04cf31f9d8370afd86fff2f3c826ee7403d20910160405180910390a15050565b30611c8b7f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a6123ee565b6001600160a01b031614611cec5760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469604482015261766560f01b606482015260840161075b565b60065460ff1615611d4b5760405162461bcd60e51b8152602060048201526024808201527f412070726f706f73616c2068617320616c7265616479206265656e2073656c6560448201526318dd195960e21b606482015260840161075b565b6007544210611dd95760405162461bcd60e51b815260206004820152604e60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f60448201527f7274656420626563617573652074686520726567697374726174696f6e20706560648201526d1c9a5bd9081a185cc8195b99195960921b608482015260a40161075b565b6000611de7336008546114e8565b90506000611df6600854611332565b6001600160a01b038416600090815260036020526040902090915082611e965760405162461bcd60e51b815260206004820152604960248201527f496e206f7264657220746f20737570706f727420612070726f706f73616c207960448201527f6f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e74206064820152686f6620746f6b656e7360b81b608482015260a40161075b565b60018101546001600160a01b0316611f015760405162461bcd60e51b815260206004820152602860248201527f54686520737570706f727465642070726f706f73616c206973206e6f7420726560448201526719da5cdd195c995960c21b606482015260840161075b565b60018101546001600160a01b0316600090815260026020908152604080832033845290915290205460ff1615611f9f5760405162461bcd60e51b815260206004820152603060248201527f596f75206d6179206e6f74207374616b6520696e20737570706f7274206f662060448201527f612070726f706f73616c20747769636500000000000000000000000000000000606482015260840161075b565b828160020154611faf9190612bcb565b6002808301919091556001808301546001600160a01b03166000908152602092835260408082203380845294529020805460ff19169091179055611ff2906125dd565b604080513381526001600160a01b03861660208201527f044032bdad012ab1001337af550128e75e446f1f8d8c32eb9c6193a13d56fc70910160405180910390a1606461204083601e612be3565b61204a9190612c02565b816002015411156120c4576040516001600160a01b03851681527f2579eab5d400c5cc266359842639b59e8c3629d634c5e6d274fe8ad69128844a9060200160405180910390a1600680546001600160a01b0386166101000274ffffffffffffffffffffffffffffffffffffffffff199091161760011790555b50505050565b60065460ff16806120dc575060075442115b61214e5760405162461bcd60e51b815260206004820152603760248201527f526566756e6473206d6179206e6f74206265206469737472696275746564207560448201527f6e74696c2074686520706572696f64206973206f766572000000000000000000606482015260840161075b565b6001600160a01b0381166121a45760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c20616464726573732063616e2774206265203000604482015260640161075b565b6001600160a01b0380821660008181526003602052604090206001810154909216146122255760405162461bcd60e51b815260206004820152602a60248201527f5468652070726f76696465642070726f706f73616c2061646472657373206973604482015269081b9bdd081d985b1a5960b21b606482015260840161075b565b80546001600160a01b03838116600090815260036020526040812080546001600160a01b0319908116825560018281018054909216909155600290910191909155600454919092169161227791612bb4565b6004556122826123be565b60405163a9059cbb60e01b81526001600160a01b038381166004830152682b5e3af16b188000006024830152919091169063a9059cbb90604401602060405180830381600087803b1580156122d657600080fd5b505af11580156122ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061230e9190612b75565b506001820154604080516001600160a01b03808516825290921660208301527fa4b5ba93242889336ac4acfa759ee8ad38969fd974e00cc01dee8fb2e4463aa89101611325565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b60006123e97fe0391e627a5766ef56109c7c98e0542c6e96a116720d7c626119be5b67e1813d6123ee565b905090565b6000805460405163555ddc6560e11b81526001600160a01b03909116600482015260248101839052731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b15801561244d57600080fd5b505afa158015612461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124859190612b97565b92915050565b60006123e97fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa186123ee565b60006123e97fe10ab6c94f1da69921a0ca1c1b96b4fc339699153931c9bfd565e91f44c19b0b6123ee565b60006124f9600080516020612c258339815191525490565b6001600160a01b0316146125605760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161075b565b61256981612615565b600054604051635df8122f60e01b81523060048201526001600160a01b039091166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f906044015b600060405180830381600087803b1580156125c957600080fd5b505af1158015610787573d6000803e3d6000fd5b6125e561248b565b6040516324b07fd160e21b81526001600160a01b03838116600483015291909116906392c1ff44906024016125af565b600061262d600080516020612c258339815191525490565b6001600160a01b0316146126945760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161075b565b61269d81612731565b806001600160a01b0316630505c8c96040518163ffffffff1660e01b815260040160206040518083038186803b1580156126d657600080fd5b505afa1580156126ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270e9190612b97565b600080546001600160a01b0319166001600160a01b039290921691909117905550565b6000612749600080516020612c258339815191525490565b6001600160a01b0316146127b05760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161075b565b610c9d816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127ec57600080fd5b505afa158015612800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128249190612b97565b806001600160a01b0316612844600080516020612c258339815191525490565b6001600160a01b0316141561289b5760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e6700604482015260640161075b565b600080516020612c2583398151915255565b6001600160a01b0381168114610c9d57600080fd5b634e487b7160e01b600052604160045260246000fd5b600080604083850312156128eb57600080fd5b82356128f6816128ad565b9150602083013567ffffffffffffffff8082111561291357600080fd5b818501915085601f83011261292757600080fd5b813581811115612939576129396128c2565b604051601f8201601f19908116603f01168101908382118183101715612961576129616128c2565b8160405282815288602084870101111561297a57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156129af57600080fd5b8235915060208301356129c1816128ad565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b82811015612a2457815180516001600160a01b03908116865287820151168786015285015185850152606090930192908501906001016129e9565b5091979650505050505050565b600060208284031215612a4357600080fd5b8135612a4e816128ad565b9392505050565b600060208284031215612a6757600080fd5b5035919050565b60008060408385031215612a8157600080fd5b8235612a8c816128ad565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b81811015612adb5783516001600160a01b031683529284019291840191600101612ab6565b50909695505050505050565b60008060408385031215612afa57600080fd5b8235612b05816128ad565b915060208301356129c1816128ad565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612b5557612b55612b2b565b5060010190565b600060208284031215612b6e57600080fd5b5051919050565b600060208284031215612b8757600080fd5b81518015158114612a4e57600080fd5b600060208284031215612ba957600080fd5b8151612a4e816128ad565b600082821015612bc657612bc6612b2b565b500390565b60008219821115612bde57612bde612b2b565b500190565b6000816000190483118215151615612bfd57612bfd612b2b565b500290565b600082612c1f57634e487b7160e01b600052601260045260246000fd5b50049056fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220b6099eceff276f187c0a40ac3057c96c6757d2ba744a065ff46042f3959d748e64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1930:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:85"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:85"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:85",
                "type": ""
              }
            ],
            "src": "14:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "311:263:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "357:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "366:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "359:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "359:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "359:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "332:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "341:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "328:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "328:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "321:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "382:50:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "422:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "392:29:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "392:40:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "382:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "441:59:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "485:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "496:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "481:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "481:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "451:29:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:49:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "441:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "509:59:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "553:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "564:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "549:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "549:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "519:29:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "519:49:85"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "509:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "261:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "272:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "284:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "292:6:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "300:6:85",
                "type": ""
              }
            ],
            "src": "196:378:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:86:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "788:3:85"
                      },
                      {
                        "hexValue": "636f6d2e65636f2e466f727761726450726f78792e746172676574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "793:29:85",
                        "type": "",
                        "value": "com.eco.ForwardProxy.target"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "781:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:42:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "781:42:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "832:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "843:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "848:2:85",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "839:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "832:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "755:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "763:3:85",
                "type": ""
              }
            ],
            "src": "579:278:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1036:223:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1053:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1064:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1046:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1046:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1087:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1098:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1083:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1083:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1103:2:85",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1076:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1076:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1126:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1137:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1122:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1122:18:85"
                      },
                      {
                        "hexValue": "494d504c454d454e544154494f4e5f534c4f542068617368206d69736d617463",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1142:34:85",
                        "type": "",
                        "value": "IMPLEMENTATION_SLOT hash mismatc"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1115:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1115:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1115:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1197:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1208:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:18:85"
                      },
                      {
                        "hexValue": "68",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1213:3:85",
                        "type": "",
                        "value": "h"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1186:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1186:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1186:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1226:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1238:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1249:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1234:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1234:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1226:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7fb1fca4349024c38b3a8169ec4d86f1425ddbd22ae97901943d2477faaff784__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1013:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1027:4:85",
                "type": ""
              }
            ],
            "src": "862:397:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1393:175:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1403:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1415:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1426:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1411:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1411:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1403:4:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1438:29:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1456:3:85",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1461:1:85",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1452:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1452:11:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1465:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1448:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1448:19:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1442:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1483:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1498:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1506:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1494:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1494:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1476:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1476:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1530:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1541:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1526:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1526:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1550:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1558:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1546:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1546:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1519:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1519:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1519:43:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1354:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1365:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1373:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1384:4:85",
                "type": ""
              }
            ],
            "src": "1264:304:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1747:181:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1764:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1775:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1757:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1757:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1757:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1798:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1809:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1794:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1814:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1787:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1787:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1787:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1837:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1848:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1833:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1833:18:85"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1853:33:85",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1826:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1826:61:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1826:61:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1896:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1908:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1919:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1904:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1904:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1896:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1724:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1738:4:85",
                "type": ""
              }
            ],
            "src": "1573:355:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"com.eco.ForwardProxy.target\")\n        end := add(pos, 27)\n    }\n    function abi_encode_tuple_t_stringliteral_7fb1fca4349024c38b3a8169ec4d86f1425ddbd22ae97901943d2477faaff784__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"IMPLEMENTATION_SLOT hash mismatc\")\n        mstore(add(headStart, 96), \"h\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18006:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:85",
                "type": ""
              }
            ],
            "src": "14:226:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "290:109:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "377:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "386:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "389:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "379:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "379:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "379:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "313:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "324:5:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "331:42:85",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "320:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "320:54:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "310:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "310:65:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "303:73:85"
                  },
                  "nodeType": "YulIf",
                  "src": "300:93:85"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "279:5:85",
                "type": ""
              }
            ],
            "src": "245:154:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "436:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "453:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "465:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "456:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "446:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "493:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:4:85",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "486:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "486:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "520:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "510:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "510:15:85"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "404:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "632:960:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "678:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "687:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "690:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "680:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "680:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "680:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "653:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "662:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "649:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "649:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "674:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "645:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "642:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "703:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "729:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "716:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "707:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "773:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "748:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "748:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "788:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "798:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "788:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "812:46:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "826:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "816:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "867:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "877:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "871:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "922:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "931:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "934:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "924:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "924:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "924:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "910:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "918:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "907:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:14:85"
                  },
                  "nodeType": "YulIf",
                  "src": "904:34:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "947:32:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "961:9:85"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "972:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:22:85"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "951:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1027:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1039:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1029:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1029:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1029:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1006:2:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1010:4:85",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1002:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1002:13:85"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1017:7:85"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "998:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "998:27:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "991:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "991:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "988:55:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1052:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1075:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1062:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:16:85"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1056:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1101:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1103:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1103:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1103:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1093:2:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1097:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1090:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1090:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1087:36:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1132:17:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1146:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1142:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:7:85"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1136:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1158:23:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1178:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1172:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:9:85"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1162:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1190:71:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1212:6:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1236:2:85"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1240:4:85",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1232:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1232:13:85"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1247:2:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1228:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1228:22:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1252:2:85",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1224:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1224:31:85"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1257:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1220:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1220:40:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1208:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:53:85"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1194:10:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1320:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1322:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1322:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1322:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1279:10:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1291:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1276:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1299:10:85"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1311:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1296:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1296:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1273:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1273:46:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1270:72:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1358:2:85",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1362:10:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1351:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1351:22:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1389:6:85"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1397:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1382:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1382:18:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1382:18:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1446:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1455:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1458:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1448:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1448:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1448:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1423:2:85"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1427:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1419:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1419:11:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1432:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1415:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1415:20:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1437:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1412:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:33:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1409:53:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1488:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:15:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1505:2:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1509:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1501:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1501:11:85"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1514:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1471:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1471:46:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1471:46:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1541:6:85"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1549:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1537:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1537:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1554:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1533:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1533:24:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1559:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1526:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1526:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1570:16:85",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1580:6:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1570:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "621:6:85",
                "type": ""
              }
            ],
            "src": "536:1056:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1698:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1708:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1720:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1731:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1716:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1716:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1708:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1750:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1761:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1743:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1743:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1743:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1667:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1678:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1689:4:85",
                "type": ""
              }
            ],
            "src": "1597:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1866:228:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1912:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1921:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1924:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1914:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1914:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1914:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1887:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1896:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1883:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1883:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1908:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1879:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1876:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1937:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1960:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1947:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1947:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1937:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1979:45:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2009:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2020:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2005:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2005:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1992:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:32:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1983:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2058:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2033:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2033:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2073:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2083:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2073:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1824:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1835:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1847:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1855:6:85",
                "type": ""
              }
            ],
            "src": "1779:315:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2296:725:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2306:12:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2316:2:85",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2310:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2327:32:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2345:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2356:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2341:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2341:18:85"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "2331:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2375:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2386:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2368:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2368:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2368:21:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2398:17:85",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "2409:6:85"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2402:3:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2424:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2444:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2438:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2438:13:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2428:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2467:6:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2475:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2460:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2460:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2460:22:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2491:12:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2501:2:85",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2495:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2512:25:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2523:9:85"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2534:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2519:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2519:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2512:3:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2546:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2564:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2572:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2560:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2560:15:85"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2550:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2584:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2593:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2588:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2652:343:85",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2666:23:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2682:6:85"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2676:5:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2676:13:85"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "2670:2:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2702:52:85",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2712:42:85",
                          "type": "",
                          "value": "0xffffffffffffffffffffffffffffffffffffffff"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "2706:2:85",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2774:3:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2789:2:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2783:5:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2783:9:85"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2794:2:85"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2779:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2779:18:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2767:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2767:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2767:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2822:3:85"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2827:2:85"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2818:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2818:12:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "2846:2:85"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2850:2:85"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2842:3:85"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2842:11:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "2836:5:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2836:18:85"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "2856:2:85"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2832:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2832:27:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2811:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2811:49:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2811:49:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2884:3:85"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2889:2:85"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2880:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2880:12:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "2904:2:85"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2908:2:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2900:3:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2900:11:85"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2894:5:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2894:18:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2873:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2873:40:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2873:40:85"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2926:21:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "2937:3:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2942:4:85",
                              "type": "",
                              "value": "0x60"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2933:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2933:14:85"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2926:3:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2960:25:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2974:6:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2982:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2970:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2970:15:85"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2960:6:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2614:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2617:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2611:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2611:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2625:18:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2627:14:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2636:1:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2639:1:85",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2632:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2632:9:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2627:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2607:3:85",
                    "statements": []
                  },
                  "src": "2603:392:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3004:11:85",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3012:3:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3004:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2265:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2276:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2287:4:85",
                "type": ""
              }
            ],
            "src": "2099:922:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3096:177:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3142:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3151:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3154:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3144:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3144:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3144:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3117:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3126:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3113:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3113:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3138:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3109:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3109:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3106:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3167:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3193:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3180:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3171:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3237:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3212:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3212:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3252:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3262:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3252:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3062:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3073:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3085:6:85",
                "type": ""
              }
            ],
            "src": "3026:247:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3435:241:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3445:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3457:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3468:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3453:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3453:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3445:4:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3480:52:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3490:42:85",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3484:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3548:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3563:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3571:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3559:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3559:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3541:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3541:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3541:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3595:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3606:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3591:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3591:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3615:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3623:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3611:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3611:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3584:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3584:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3584:43:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3647:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3658:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3643:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3643:18:85"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3663:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3636:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3636:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3636:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3388:9:85",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3399:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3407:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3415:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3426:4:85",
                "type": ""
              }
            ],
            "src": "3278:398:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3782:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3792:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3804:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3815:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3800:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3800:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3792:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3834:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3845:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3827:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3827:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3827:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3751:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3762:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3773:4:85",
                "type": ""
              }
            ],
            "src": "3681:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3958:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3968:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3980:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3991:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3976:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3976:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3968:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4010:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4035:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4028:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4028:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4021:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4021:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4003:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4003:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4003:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3927:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3938:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3949:4:85",
                "type": ""
              }
            ],
            "src": "3863:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4125:110:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4171:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4180:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4183:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4173:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4173:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4173:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4146:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4155:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4142:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4142:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4167:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4138:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4138:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4135:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4196:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4219:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4206:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4206:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4196:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4091:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4102:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4114:6:85",
                "type": ""
              }
            ],
            "src": "4055:180:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4327:228:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4373:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4382:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4385:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4375:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4375:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4375:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4348:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4357:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4344:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4344:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4369:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4340:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4340:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "4337:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4398:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4424:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4411:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4411:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4402:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4468:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4443:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4443:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4443:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4483:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4493:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4483:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4507:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4534:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4545:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4530:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4530:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4517:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4517:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4507:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4285:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4296:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4308:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4316:6:85",
                "type": ""
              }
            ],
            "src": "4240:315:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4711:530:85",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4721:12:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4731:2:85",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4725:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4742:32:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4760:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4771:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4756:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4756:18:85"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4746:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4790:9:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4801:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4783:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4783:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4783:21:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4813:17:85",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4824:6:85"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4817:3:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4839:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4859:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4853:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4853:13:85"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4843:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4882:6:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4890:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4875:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4875:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4875:22:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4906:25:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4917:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4928:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4913:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4913:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4906:3:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4940:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4958:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4966:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4954:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4954:15:85"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4944:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4978:10:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4987:1:85",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4982:1:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5046:169:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5067:3:85"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "5082:6:85"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "5076:5:85"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5076:13:85"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5091:42:85",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5072:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5072:62:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5060:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5060:75:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5060:75:85"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5148:19:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5159:3:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5164:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5155:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5155:12:85"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5148:3:85"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5180:25:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5194:6:85"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5202:2:85"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5190:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5190:15:85"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5180:6:85"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5008:1:85"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5011:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5005:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5005:13:85"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5019:18:85",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5021:14:85",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5030:1:85"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5033:1:85",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5026:3:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5026:9:85"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5021:1:85"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5001:3:85",
                    "statements": []
                  },
                  "src": "4997:218:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5224:11:85",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5232:3:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5224:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4680:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4691:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4702:4:85",
                "type": ""
              }
            ],
            "src": "4560:681:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5333:301:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5379:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5388:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5391:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5381:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5381:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5381:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5354:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5363:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5350:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5350:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5375:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5346:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5346:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "5343:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5404:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5430:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5417:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5417:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5408:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5474:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5449:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5449:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5449:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5489:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5499:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5489:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5513:47:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5545:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5556:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5541:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5541:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5528:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5528:32:85"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "5517:7:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5594:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5569:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5569:33:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5569:33:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5611:17:85",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "5621:7:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5611:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5291:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5302:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5314:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5322:6:85",
                "type": ""
              }
            ],
            "src": "5246:388:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5813:236:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5830:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5841:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5823:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5823:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5823:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5864:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5875:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5860:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5860:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5880:2:85",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5853:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5853:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5853:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5903:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5914:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5899:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5899:18:85"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5919:34:85",
                        "type": "",
                        "value": "Only the policy contract may cal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5892:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5892:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5892:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5974:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5985:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5970:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5970:18:85"
                      },
                      {
                        "hexValue": "6c2074686973206d6574686f642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5990:16:85",
                        "type": "",
                        "value": "l this method."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5963:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5963:44:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5963:44:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6016:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6028:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6039:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6024:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6024:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6016:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5790:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5804:4:85",
                "type": ""
              }
            ],
            "src": "5639:410:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6228:251:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6245:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6256:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6238:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6238:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6238:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6279:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6290:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6275:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6275:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6295:2:85",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6268:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6268:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6268:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6318:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6329:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6314:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6314:18:85"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6334:34:85",
                        "type": "",
                        "value": "Only the policy or interface con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6307:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6307:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6307:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6389:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6400:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6385:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6385:18:85"
                      },
                      {
                        "hexValue": "7472616374206d61792063616c6c20746869732066756e6374696f6e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6405:31:85",
                        "type": "",
                        "value": "tract may call this function."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6378:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:59:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6378:59:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6446:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6458:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6469:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6454:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6454:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6446:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c08a7732a8ea3cb127f93b70513851c8bc500317c87cd62569cce952d70845e4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6205:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6219:4:85",
                "type": ""
              }
            ],
            "src": "6054:425:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6676:79:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6693:3:85"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6698:22:85",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6686:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6686:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6686:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6730:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6741:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6746:2:85",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6737:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6737:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6730:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6660:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6668:3:85",
                "type": ""
              }
            ],
            "src": "6484:271:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6792:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6809:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6816:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6821:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6812:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6812:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6802:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6802:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6802:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6849:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6852:4:85",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6842:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6842:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6842:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6873:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6876:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6866:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6866:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6866:15:85"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6760:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6924:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6941:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6948:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6953:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6944:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6944:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6934:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6934:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6934:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6981:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6984:4:85",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6974:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6974:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6974:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7005:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7008:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6998:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6998:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6998:15:85"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6892:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7071:88:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7102:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7104:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7104:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7104:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7087:5:85"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7098:1:85",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7094:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7094:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7084:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7084:17:85"
                  },
                  "nodeType": "YulIf",
                  "src": "7081:43:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7133:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7144:5:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7151:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7140:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7140:13:85"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "7133:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7053:5:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "7063:3:85",
                "type": ""
              }
            ],
            "src": "7024:135:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7338:298:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7355:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7366:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7348:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7348:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7348:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7389:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7400:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7385:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7385:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7405:2:85",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7378:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7378:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7378:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7428:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7439:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7424:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7424:18:85"
                      },
                      {
                        "hexValue": "546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7444:34:85",
                        "type": "",
                        "value": "The destruct operation can only "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7417:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7417:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7417:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7499:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7510:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7495:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7495:18:85"
                      },
                      {
                        "hexValue": "626520706572666f726d6564207768656e2074686520706572696f6420697320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7515:34:85",
                        "type": "",
                        "value": "be performed when the period is "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7488:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7488:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7488:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7570:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7581:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7566:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7566:19:85"
                      },
                      {
                        "hexValue": "6f766572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7587:6:85",
                        "type": "",
                        "value": "over"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7559:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7559:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7559:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7603:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7615:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7626:3:85",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7611:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7611:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7603:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7315:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7329:4:85",
                "type": ""
              }
            ],
            "src": "7164:472:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7815:228:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7832:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7843:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7825:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7825:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7825:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7866:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7877:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7862:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7862:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7882:2:85",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7855:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7855:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7855:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7905:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7916:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7901:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7901:18:85"
                      },
                      {
                        "hexValue": "4d75737420726566756e6420616c6c206d69737365642070726f706f73616c73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7921:34:85",
                        "type": "",
                        "value": "Must refund all missed proposals"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7894:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7894:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7894:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7976:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7987:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7972:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7972:18:85"
                      },
                      {
                        "hexValue": "206669727374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7992:8:85",
                        "type": "",
                        "value": " first"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7965:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7965:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7965:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8010:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8022:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8033:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8018:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8018:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8010:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7792:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7806:4:85",
                "type": ""
              }
            ],
            "src": "7641:402:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8129:103:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8175:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8184:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8187:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8177:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8177:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8177:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8150:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8159:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8146:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8146:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8171:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8142:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8142:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8139:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8200:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8216:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8210:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8210:16:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8200:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8095:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8106:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8118:6:85",
                "type": ""
              }
            ],
            "src": "8048:184:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8366:168:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8376:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8388:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8399:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8384:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8384:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8376:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8418:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8433:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8441:42:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8429:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8429:55:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8411:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8411:74:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8411:74:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8505:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8516:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8501:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8501:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8521:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8494:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8494:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8494:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8327:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8338:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8346:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8357:4:85",
                "type": ""
              }
            ],
            "src": "8237:297:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8617:199:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8663:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8672:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8675:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8665:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8665:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8665:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8638:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8647:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8634:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8634:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8659:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8630:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8630:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8627:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8688:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8707:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8701:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8701:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8692:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8770:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8779:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8782:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8772:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8772:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8772:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8739:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8760:5:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8753:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8753:13:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8746:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8746:21:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8736:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8736:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8729:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8729:40:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8726:60:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8795:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8805:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8795:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8583:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8594:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8606:6:85",
                "type": ""
              }
            ],
            "src": "8539:277:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8995:179:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9012:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9023:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9005:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9005:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9005:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9046:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9057:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9042:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9042:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9062:2:85",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9035:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9035:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9035:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9085:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9096:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9081:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9081:18:85"
                      },
                      {
                        "hexValue": "6e6f2070726f706f73616c20686173206265656e2073656c6563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9101:31:85",
                        "type": "",
                        "value": "no proposal has been selected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9074:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9074:59:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9074:59:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9142:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9154:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9165:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9150:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9150:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9142:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8972:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8986:4:85",
                "type": ""
              }
            ],
            "src": "8821:353:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9353:182:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9370:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9381:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9363:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9363:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9363:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9404:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9415:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9400:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9400:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9420:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9393:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9393:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9393:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9443:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9454:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9439:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9439:18:85"
                      },
                      {
                        "hexValue": "766f74696e672068617320616c7265616479206265656e206465706c6f796564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9459:34:85",
                        "type": "",
                        "value": "voting has already been deployed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9432:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9432:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9432:62:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9503:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9515:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9526:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9511:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9511:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9503:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9330:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9344:4:85",
                "type": ""
              }
            ],
            "src": "9179:356:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9621:170:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9667:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9676:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9679:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9669:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9669:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9669:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9642:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9651:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9638:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9638:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9663:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9634:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9634:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "9631:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9692:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9711:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9705:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9705:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9696:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9755:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9730:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9730:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9730:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9770:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9780:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9770:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9587:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9598:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9610:6:85",
                "type": ""
              }
            ],
            "src": "9540:251:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9925:168:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9935:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9947:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9958:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9943:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9943:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9935:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9977:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9988:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9970:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9970:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9970:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10015:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10026:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10011:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10011:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10035:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10043:42:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10031:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10031:55:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10004:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10004:83:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10004:83:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9886:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9897:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9905:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9916:4:85",
                "type": ""
              }
            ],
            "src": "9796:297:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10147:76:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10169:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10171:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10171:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10171:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10163:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10166:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10160:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10160:8:85"
                  },
                  "nodeType": "YulIf",
                  "src": "10157:34:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10200:17:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10212:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10215:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10208:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10208:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10200:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10129:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10132:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10138:4:85",
                "type": ""
              }
            ],
            "src": "10098:125:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10402:224:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10419:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10430:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10412:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10412:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10412:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10453:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10464:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10449:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10449:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10469:2:85",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10442:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10442:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10442:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10492:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10503:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10488:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10488:18:85"
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10508:34:85",
                        "type": "",
                        "value": "Proposal contract no longer acti"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10481:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10481:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10481:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10563:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10574:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10559:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10559:18:85"
                      },
                      {
                        "hexValue": "7665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10579:4:85",
                        "type": "",
                        "value": "ve"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10552:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10552:32:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10552:32:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10593:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10605:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10616:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10601:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10601:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10593:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10379:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10393:4:85",
                "type": ""
              }
            ],
            "src": "10228:398:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10805:226:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10822:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10833:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10815:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10815:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10815:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10856:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10867:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10852:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10852:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10872:2:85",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10845:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10845:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10845:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10895:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10906:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10891:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10891:18:85"
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10911:34:85",
                        "type": "",
                        "value": "A proposal has already been sele"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10884:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10884:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10884:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10966:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10977:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10962:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10962:18:85"
                      },
                      {
                        "hexValue": "63746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10982:6:85",
                        "type": "",
                        "value": "cted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10955:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10955:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10955:34:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10998:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11010:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11021:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11006:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11006:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10998:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10782:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10796:4:85",
                "type": ""
              }
            ],
            "src": "10631:400:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11210:308:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11227:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11238:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11220:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11220:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11220:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11261:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11272:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11257:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11257:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11277:2:85",
                        "type": "",
                        "value": "78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11250:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11250:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11250:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11300:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11311:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11296:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11296:18:85"
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11316:34:85",
                        "type": "",
                        "value": "Proposals may no longer be suppo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11289:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11289:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11289:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11371:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11382:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11367:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11367:18:85"
                      },
                      {
                        "hexValue": "7274656420626563617573652074686520726567697374726174696f6e207065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11387:34:85",
                        "type": "",
                        "value": "rted because the registration pe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11360:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11360:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11360:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11442:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11453:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11438:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11438:19:85"
                      },
                      {
                        "hexValue": "72696f642068617320656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11459:16:85",
                        "type": "",
                        "value": "riod has ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11431:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11431:45:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11431:45:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11485:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11497:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11508:3:85",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11493:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11493:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11485:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11187:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11201:4:85",
                "type": ""
              }
            ],
            "src": "11036:482:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11697:223:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11714:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11725:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11707:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11707:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11707:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11748:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11759:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11744:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11744:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11764:2:85",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11737:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11737:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11737:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11787:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11798:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11783:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11783:18:85"
                      },
                      {
                        "hexValue": "596f752068617665206e6f74207374616b656420746869732070726f706f7361",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11803:34:85",
                        "type": "",
                        "value": "You have not staked this proposa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11776:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11776:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11776:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11858:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11869:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11854:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11854:18:85"
                      },
                      {
                        "hexValue": "6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11874:3:85",
                        "type": "",
                        "value": "l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11847:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11847:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11847:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11887:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11899:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11910:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11895:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11895:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11887:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11674:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11688:4:85",
                "type": ""
              }
            ],
            "src": "11523:397:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12054:198:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12064:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12076:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12087:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12072:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12072:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12064:4:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12099:52:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12109:42:85",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12103:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12167:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12182:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12190:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12178:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12178:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12160:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12160:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12160:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12214:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12225:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12210:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12210:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12234:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12242:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12230:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12230:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12203:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12203:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12203:43:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12015:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12026:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12034:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12045:4:85",
                "type": ""
              }
            ],
            "src": "11925:327:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12386:119:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12396:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12408:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12419:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12404:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12404:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12396:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12438:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12449:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12431:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12431:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12431:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12476:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12487:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12472:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12472:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12492:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12465:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12465:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12465:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12347:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12358:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12366:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12377:4:85",
                "type": ""
              }
            ],
            "src": "12257:248:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12558:80:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12585:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12587:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12587:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12587:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12574:1:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "12581:1:85"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "12577:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12577:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12571:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12571:13:85"
                  },
                  "nodeType": "YulIf",
                  "src": "12568:39:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12616:16:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12627:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12630:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12623:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12623:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "12616:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12541:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12544:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "12550:3:85",
                "type": ""
              }
            ],
            "src": "12510:128:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12817:230:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12834:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12845:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12827:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12827:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12827:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12868:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12879:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12864:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12864:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12884:2:85",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12857:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12857:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12857:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12907:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12918:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12903:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12903:18:85"
                      },
                      {
                        "hexValue": "43616e206f6e6c792062652063616c6c656420647572696e6720696e69746961",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12923:34:85",
                        "type": "",
                        "value": "Can only be called during initia"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12896:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12896:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12896:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12978:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12989:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12974:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12974:18:85"
                      },
                      {
                        "hexValue": "6c697a6174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12994:10:85",
                        "type": "",
                        "value": "lization"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12967:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12967:38:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12967:38:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13014:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13026:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13037:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13022:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13022:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13014:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12794:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12808:4:85",
                "type": ""
              }
            ],
            "src": "12643:404:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13226:181:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13243:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13254:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13236:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13236:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13236:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13277:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13288:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13273:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13273:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13293:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13266:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13266:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13266:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13316:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13327:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13312:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13312:18:85"
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13332:33:85",
                        "type": "",
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13305:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13305:61:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13305:61:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13375:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13387:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13398:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13383:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13383:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13375:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13203:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13217:4:85",
                "type": ""
              }
            ],
            "src": "13052:355:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13586:309:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13603:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13614:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13596:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13596:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13596:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13637:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13648:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13633:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13633:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13653:2:85",
                        "type": "",
                        "value": "79"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13626:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13626:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13626:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13676:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13687:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13672:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13672:18:85"
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e676572206265207265676973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13692:34:85",
                        "type": "",
                        "value": "Proposals may no longer be regis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13665:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13665:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13665:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13747:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13758:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13743:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13743:18:85"
                      },
                      {
                        "hexValue": "746572656420626563617573652074686520726567697374726174696f6e2070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13763:34:85",
                        "type": "",
                        "value": "tered because the registration p"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13736:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13736:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13736:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13818:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13829:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13814:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13814:19:85"
                      },
                      {
                        "hexValue": "6572696f642068617320656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13835:17:85",
                        "type": "",
                        "value": "eriod has ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13807:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13807:46:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13807:46:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13862:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13874:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13885:3:85",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13870:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13870:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13862:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13563:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13577:4:85",
                "type": ""
              }
            ],
            "src": "13412:483:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14074:228:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14091:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14102:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14084:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14084:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14084:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14125:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14136:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14121:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14121:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14141:2:85",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14114:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14114:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14114:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14164:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14175:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14160:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14160:18:85"
                      },
                      {
                        "hexValue": "412070726f706f73616c206d6179206f6e6c7920626520726567697374657265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14180:34:85",
                        "type": "",
                        "value": "A proposal may only be registere"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14153:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14153:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14153:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14235:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14246:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14231:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14231:18:85"
                      },
                      {
                        "hexValue": "64206f6e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14251:8:85",
                        "type": "",
                        "value": "d once"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14224:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14224:36:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14224:36:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14269:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14281:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14292:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14277:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14277:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14269:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14051:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14065:4:85",
                "type": ""
              }
            ],
            "src": "13900:402:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14481:323:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14498:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14509:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14491:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14491:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14491:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14532:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14543:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14528:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14528:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14548:2:85",
                        "type": "",
                        "value": "93"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14521:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14521:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14521:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14571:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14582:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14567:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14567:18:85"
                      },
                      {
                        "hexValue": "54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14587:34:85",
                        "type": "",
                        "value": "The token cost of registration m"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14560:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14560:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14560:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14642:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14653:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14638:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14638:18:85"
                      },
                      {
                        "hexValue": "75737420626520617070726f76656420746f207472616e73666572207072696f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14658:34:85",
                        "type": "",
                        "value": "ust be approved to transfer prio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14631:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14631:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14631:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14713:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14724:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14709:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14709:19:85"
                      },
                      {
                        "hexValue": "7220746f2063616c6c696e6720726567697374657250726f706f73616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14730:31:85",
                        "type": "",
                        "value": "r to calling registerProposal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14702:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14702:60:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14702:60:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14771:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14783:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14794:3:85",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14779:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14779:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14771:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14458:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14472:4:85",
                "type": ""
              }
            ],
            "src": "14307:497:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14983:303:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15000:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15011:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14993:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14993:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14993:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15034:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15045:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15030:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15030:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15050:2:85",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15023:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15023:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15023:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15073:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15084:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15069:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15069:18:85"
                      },
                      {
                        "hexValue": "496e206f7264657220746f20737570706f727420612070726f706f73616c2079",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15089:34:85",
                        "type": "",
                        "value": "In order to support a proposal y"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15062:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15062:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15062:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15144:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15155:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15140:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15140:18:85"
                      },
                      {
                        "hexValue": "6f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15160:34:85",
                        "type": "",
                        "value": "ou must stake a non-zero amount "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15133:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15133:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15133:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15215:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15226:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15211:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15211:19:85"
                      },
                      {
                        "hexValue": "6f6620746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15232:11:85",
                        "type": "",
                        "value": "of tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15204:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15204:40:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15204:40:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15253:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15265:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15276:3:85",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15261:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15261:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15253:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14960:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14974:4:85",
                "type": ""
              }
            ],
            "src": "14809:477:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15465:230:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15482:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15493:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15475:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15475:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15475:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15516:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15527:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15512:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15512:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15532:2:85",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15505:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15505:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15505:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15555:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15566:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15551:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15551:18:85"
                      },
                      {
                        "hexValue": "54686520737570706f727465642070726f706f73616c206973206e6f74207265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15571:34:85",
                        "type": "",
                        "value": "The supported proposal is not re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15544:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15544:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15544:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15626:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15637:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15622:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15622:18:85"
                      },
                      {
                        "hexValue": "6769737465726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15642:10:85",
                        "type": "",
                        "value": "gistered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15615:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15615:38:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15615:38:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15662:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15674:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15685:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15670:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15670:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15662:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15442:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15456:4:85",
                "type": ""
              }
            ],
            "src": "15291:404:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15874:238:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15891:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15902:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15884:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15884:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15884:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15925:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15936:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15921:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15921:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15941:2:85",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15914:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15914:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15914:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15964:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15975:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15960:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15960:18:85"
                      },
                      {
                        "hexValue": "596f75206d6179206e6f74207374616b6520696e20737570706f7274206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15980:34:85",
                        "type": "",
                        "value": "You may not stake in support of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15953:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15953:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15953:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16035:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16046:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16031:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16031:18:85"
                      },
                      {
                        "hexValue": "612070726f706f73616c207477696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16051:18:85",
                        "type": "",
                        "value": "a proposal twice"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16024:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16024:46:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16024:46:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16079:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16091:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16102:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16087:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16087:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16079:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15851:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15865:4:85",
                "type": ""
              }
            ],
            "src": "15700:412:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16169:116:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16228:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16230:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16230:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16230:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "16200:1:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16193:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16193:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16186:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16186:17:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "16208:1:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16219:1:85",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "16215:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16215:6:85"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "16223:1:85"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "16211:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16211:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "16205:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16205:21:85"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "16182:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16182:45:85"
                  },
                  "nodeType": "YulIf",
                  "src": "16179:71:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16259:20:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16274:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16277:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "16270:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16270:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "16259:7:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16148:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16151:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "16157:7:85",
                "type": ""
              }
            ],
            "src": "16117:168:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16336:171:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16367:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16388:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16395:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16400:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "16391:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16391:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16381:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16381:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16381:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16432:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16435:4:85",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16425:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16425:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16425:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16460:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16463:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "16453:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16453:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16453:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16356:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "16349:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16349:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "16346:132:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16487:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16496:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16499:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "16492:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16492:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "16487:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16321:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16324:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "16330:1:85",
                "type": ""
              }
            ],
            "src": "16290:217:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16686:245:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16703:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16714:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16696:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16696:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16696:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16737:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16748:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16733:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16733:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16753:2:85",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16726:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16726:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16726:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16776:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16787:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16772:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16772:18:85"
                      },
                      {
                        "hexValue": "526566756e6473206d6179206e6f742062652064697374726962757465642075",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16792:34:85",
                        "type": "",
                        "value": "Refunds may not be distributed u"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16765:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16765:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16765:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16847:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16858:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16843:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16843:18:85"
                      },
                      {
                        "hexValue": "6e74696c2074686520706572696f64206973206f766572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16863:25:85",
                        "type": "",
                        "value": "ntil the period is over"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16836:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16836:53:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16836:53:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16898:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16910:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16921:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16906:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16906:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16898:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16663:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16677:4:85",
                "type": ""
              }
            ],
            "src": "16512:419:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17110:232:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17127:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17138:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17120:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17120:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17120:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17161:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17172:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17157:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17157:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17177:2:85",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17150:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17150:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17150:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17200:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17211:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17196:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17196:18:85"
                      },
                      {
                        "hexValue": "5468652070726f76696465642070726f706f73616c2061646472657373206973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17216:34:85",
                        "type": "",
                        "value": "The provided proposal address is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17189:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17189:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17189:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17271:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17282:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17267:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17267:18:85"
                      },
                      {
                        "hexValue": "206e6f742076616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17287:12:85",
                        "type": "",
                        "value": " not valid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17260:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17260:40:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17260:40:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17309:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17321:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17332:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17317:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17317:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17309:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17087:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17101:4:85",
                "type": ""
              }
            ],
            "src": "16936:406:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17476:168:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17486:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17498:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17509:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17494:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17494:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17486:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17528:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "17543:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17551:42:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17539:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17539:55:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17521:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17521:74:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17521:74:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17615:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17626:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17611:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17611:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "17631:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17604:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17604:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17604:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17437:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "17448:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "17456:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17467:4:85",
                "type": ""
              }
            ],
            "src": "17347:297:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17823:181:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17840:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17851:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17833:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17833:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17833:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17874:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17885:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17870:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17870:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17890:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17863:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17863:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17863:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17913:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17924:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17909:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17909:18:85"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17929:33:85",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17902:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17902:61:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17902:61:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17972:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17984:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17995:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17980:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17980:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17972:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17800:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17814:4:85",
                "type": ""
              }
            ],
            "src": "17649:355:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            let _4 := 0xffffffffffffffffffffffffffffffffffffffff\n            mstore(pos, and(mload(_3), _4))\n            mstore(add(pos, _1), and(mload(add(_3, _1)), _4))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Only the policy contract may cal\")\n        mstore(add(headStart, 96), \"l this method.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c08a7732a8ea3cb127f93b70513851c8bc500317c87cd62569cce952d70845e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Only the policy or interface con\")\n        mstore(add(headStart, 96), \"tract may call this function.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"The destruct operation can only \")\n        mstore(add(headStart, 96), \"be performed when the period is \")\n        mstore(add(headStart, 128), \"over\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Must refund all missed proposals\")\n        mstore(add(headStart, 96), \" first\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"no proposal has been selected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"voting has already been deployed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Proposal contract no longer acti\")\n        mstore(add(headStart, 96), \"ve\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"A proposal has already been sele\")\n        mstore(add(headStart, 96), \"cted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 78)\n        mstore(add(headStart, 64), \"Proposals may no longer be suppo\")\n        mstore(add(headStart, 96), \"rted because the registration pe\")\n        mstore(add(headStart, 128), \"riod has ended\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You have not staked this proposa\")\n        mstore(add(headStart, 96), \"l\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Can only be called during initia\")\n        mstore(add(headStart, 96), \"lization\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"The proposal address can't be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 79)\n        mstore(add(headStart, 64), \"Proposals may no longer be regis\")\n        mstore(add(headStart, 96), \"tered because the registration p\")\n        mstore(add(headStart, 128), \"eriod has ended\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"A proposal may only be registere\")\n        mstore(add(headStart, 96), \"d once\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 93)\n        mstore(add(headStart, 64), \"The token cost of registration m\")\n        mstore(add(headStart, 96), \"ust be approved to transfer prio\")\n        mstore(add(headStart, 128), \"r to calling registerProposal\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 73)\n        mstore(add(headStart, 64), \"In order to support a proposal y\")\n        mstore(add(headStart, 96), \"ou must stake a non-zero amount \")\n        mstore(add(headStart, 128), \"of tokens\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"The supported proposal is not re\")\n        mstore(add(headStart, 96), \"gistered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"You may not stake in support of \")\n        mstore(add(headStart, 96), \"a proposal twice\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Refunds may not be distributed u\")\n        mstore(add(headStart, 96), \"ntil the period is over\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"The provided proposal address is\")\n        mstore(add(headStart, 96), \" not valid\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "981:11693:45:-:0;;;5021:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5137:7;388::53;2351::56;694:47:60;;;;;;793:29:85;781:42;;848:2;839:12;;579:278;694:47:60;;;;;;;;;;;;;684:58;;;;;;655:105;;-1:-1:-1;;;;;;;;;;;616:144:60;595:224;;;;-1:-1:-1;;;595:224:60;;1064:2:85;595:224:60;;;1046:21:85;1103:2;1083:18;;;1076:30;1142:34;1122:18;;;1115:62;-1:-1:-1;;;1193:18:85;;;1186:31;1234:19;;595:224:60;;;;;;;;;829:32;855:4;829:17;:32::i;:::-;997:6:55;:16;;-1:-1:-1;;;;;;997:16:55;-1:-1:-1;;;;;997:16:55;;;;;;2370:50:56::1;::::0;-1:-1:-1;;;2370:50:56;;2405:4:::1;2370:50;::::0;::::1;1476:34:85::0;1546:15;;;1526:18;;;1519:43;294:42:54::1;::::0;2370:26:56::1;::::0;1411:18:85;;2370:50:56::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5156:15:45::1;:30:::0;;-1:-1:-1;;;;;5156:30:45;;::::1;-1:-1:-1::0;;;;;;5156:30:45;;::::1;;::::0;;;5196:16:::1;:32:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;981:11693:45;;-1:-1:-1;;;;981:11693:45;1843:246:60;-1:-1:-1;;;;;1912:25:60;;:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;1912:16;-1:-1:-1;;;;;1912:25:60;;;1904:69;;;;-1:-1:-1;;;1904:69:60;;1775:2:85;1904:69:60;;;1757:21:85;1814:2;1794:18;;;1787:30;1853:33;1833:18;;;1826:61;1904:18;;:69:60;1573:355:85;1904:69:60;-1:-1:-1;;;;;;;;;;;2052:21:60;1843:246::o;14:177:85:-;93:13;;-1:-1:-1;;;;;135:31:85;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:378::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;519:49;564:2;553:9;549:18;519:49;:::i;:::-;509:59;;196:378;;;;;:::o;1573:355::-;981:11693:45;;;;;;",
  "deployedSourceMap": "981:11693:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:21:55;;;;;-1:-1:-1;;;;;688:21:55;;;;;;-1:-1:-1;;;;;178:55:85;;;160:74;;148:2;133:18;688:21:55;;;;;;;;2717:1279;;;;;;:::i;:::-;;:::i;:::-;;4258:189:56;;;:::i;2003:108::-;;2045:66;2003:108;;;;;1743:25:85;;;1731:2;1716:18;2003:108:56;1597:177:85;1689:123:56;;1746:66;1689:123;;903:118;;955:66;903:118;;2563:352;;;;;;:::i;:::-;;:::i;6056:308:45:-;;;:::i;:::-;;;;;;;:::i;12041:470::-;;;:::i;1735:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1735:41:45;;;;;;;;;;;;;;-1:-1:-1;;;;;3559:15:85;;;3541:34;;3611:15;;;;3606:2;3591:18;;3584:43;3643:18;;;3636:34;3468:2;3453:18;1735:41:45;3278:398:85;10107:841:45;;;:::i;2670:27::-;;;;;;3511:111:56;;;;;;:::i;:::-;;:::i;2171:28:45:-;;;;;;;;;;;;4028:14:85;;4021:22;4003:41;;3991:2;3976:18;2171:28:45;3863:187:85;9285:816:45;;;;;;:::i;:::-;;:::i;1221:120:56:-;;1275:66;1221:120;;405:372:53;;;;;;:::i;:::-;;:::i;783:376::-;;;;;;:::i;:::-;;:::i;2811:26:45:-;;;;;;1616:179:60;-1:-1:-1;;;;;;;;;;;1766:13:60;1616:179;;751:111:56;;796:66;751:111;;460:110;;504:66;460:110;;2517:62:45;;2558:21;2517:62;;2375;;2415:22;2375:62;;1934:29;;;;;;:::i;:::-;;:::i;2945:30::-;;;;;-1:-1:-1;;;;;2945:30:45;;;2046:50;;2086:10;2046:50;;5895:107;;;:::i;:::-;;;;;;;:::i;1835:29::-;;;;;;1380:116:56;;1430:66;1380:116;;2277:34:45;;;;;;;;-1:-1:-1;;;;;2277:34:45;;;5493:334;;;;;;:::i;:::-;;:::i;1489:58::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:117:56;;1112:66;1061:117;;3100:31:45;;;;;-1:-1:-1;;;;;3100:31:45;;;1853:118:56;;1905:66;1853:118;;6742:884:45;;;;;;:::i;:::-;;:::i;7911:1368::-;;;;;;:::i;:::-;;:::i;601:107:56:-;;642:66;601:107;;2149:114;;2197:66;2149:114;;11266:672:45;;;;;;:::i;:::-;;:::i;1531:112:56:-;;1577:66;1531:112;;2717:1279:55;856:6;;-1:-1:-1;;;;;856:6:55;842:10;:20;821:113;;;;-1:-1:-1;;;821:113:55;;5841:2:85;821:113:55;;;5823:21:85;5880:2;5860:18;;;5853:30;5919:34;5899:18;;;5892:62;-1:-1:-1;;;5970:18:85;;;5963:44;6024:19;;821:113:55;;;;;;;;;3417:1:::1;3398::::0;3374:5:::1;3368:12;3345:4;3338:5;3334:16;3307:9;3284:5;3254:178;3609:16;3661:4;3658:1;3653:3:::0;3638:28:::1;3835:6:::0;3854:56;;::::1;;3961:4;3956:3;3949:17;3854:56;3891:4;3886:3;3879:17;3828:152;;;;2717:1279:::0;;:::o;4258:189:56:-;4299:7;4318:14;4335:26;4355:4;4335:11;:26::i;:::-;4371:46;;-1:-1:-1;;;4371:46:56;;4411:4;4371:46;;;160:74:85;4318:43:56;;-1:-1:-1;;;;;;4371:31:56;;;;;133:18:85;;4371:46:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4434:6:56;;4258:189;-1:-1:-1;;;;4258:189:56:o;2563:352::-;2692:7;2745:6;;-1:-1:-1;;;;;2736:15:56;;;2745:6;;2736:15;;:48;;-1:-1:-1;2764:20:56;;-1:-1:-1;;;;;2755:29:56;;;2764:20;;2755:29;2736:48;2715:156;;;;-1:-1:-1;;;2715:156:56;;6256:2:85;2715:156:56;;;6238:21:85;6295:2;6275:18;;;6268:30;6334:34;6314:18;;;6307:62;6405:31;6385:18;;;6378:59;6454:19;;2715:156:56;6054:425:85;2715:156:56;396:40:55;;6698:22:85;396:40:55;;;6686:35:85;6737:12;;396:40:55;;;;;;;;;;;;386:51;;;;;;2881:27:56;;2563:352;;;;:::o;6056:308:45:-;6104:13;6129:26;6169:14;;6158:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;6158:26:45;;-1:-1:-1;;6158:26:45;;;;;;;;;;;;6129:55;;6199:13;6194:134;6226:14;;6218:5;:22;6194:134;;;6287:9;:30;6297:12;6310:5;6297:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6297:19:45;;;6287:30;;;;;;;;;;;;;;;;6265:52;;;;;;;;;;;;;6297:19;6265:52;;;;;;;;;;;;;;;;;;;;:19;;:12;;6278:5;;6265:19;;;;;;:::i;:::-;;;;;;:52;;;;6242:7;;;;;:::i;:::-;;;;6194:134;;;-1:-1:-1;6345:12:45;6056:308;-1:-1:-1;6056:308:45:o;12041:470::-;12101:16;;;;;:44;;-1:-1:-1;12133:12:45;;504:15:84;12121:24:45;12101:44;12080:159;;;;-1:-1:-1;;;12080:159:45;;7366:2:85;12080:159:45;;;7348:21:85;7405:2;7385:18;;;7378:30;;;7444:34;7424:18;;;7417:62;7515:34;7495:18;;;7488:62;-1:-1:-1;;;7566:19:85;;;7559:35;7611:19;;12080:159:45;7164:472:85;12080:159:45;12258:14;;:19;12250:70;;;;-1:-1:-1;;;12250:70:45;;7843:2:85;12250:70:45;;;7825:21:85;7882:2;7862:18;;;7855:30;7921:34;7901:18;;;7894:62;-1:-1:-1;;;7972:18:85;;;7965:36;8018:19;;12250:70:45;7641:402:85;12250:70:45;12338:6;;12331:46;;-1:-1:-1;;;12331:46:45;;1275:66:56;12331:46:45;;;1743:25:85;-1:-1:-1;;;;;12338:6:45;;;;12331:25;;1716:18:85;;12331:46:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:10;:8;:10::i;:::-;12437:6;;-1:-1:-1;;;;;12388:19:45;;;;;;12437:6;12459:10;:8;:10::i;:::-;:35;;-1:-1:-1;;;12459:35:45;;12488:4;12459:35;;;160:74:85;-1:-1:-1;;;;;12459:20:45;;;;;;;133:18:85;;12459:35:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12388:116;;;;;;;;;;-1:-1:-1;;;;;8429:55:85;;;12388:116:45;;;8411:74:85;8501:18;;;8494:34;8384:18;;12388:116:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12041:470::o;10107:841::-;10166:16;;;;10158:58;;;;-1:-1:-1;;;10158:58:45;;9023:2:85;10158:58:45;;;9005:21:85;9062:2;9042:18;;;9035:30;9101:31;9081:18;;;9074:59;9150:18;;10158:58:45;8821:353:85;10158:58:45;10247:19;;;;;-1:-1:-1;;;;;10247:19:45;10226:112;;;;-1:-1:-1;;;10226:112:45;;9381:2:85;10226:112:45;;;9363:21:85;;;9400:18;;;9393:30;9459:34;9439:18;;;9432:62;9511:18;;10226:112:45;9179:356:85;10226:112:45;10373:19;;;-1:-1:-1;;10402:26:45;;;;;10480:15;;10468:36;;;-1:-1:-1;;;10468:36:45;;;;-1:-1:-1;;;;;10373:19:45;;;;;;;10348:22;;10480:15;;10468:34;;:36;;;;;;;;;;;;;;10348:22;10480:15;10468:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10515:37;;-1:-1:-1;;;10515:37:45;;-1:-1:-1;;;;;178:55:85;;;10515:37:45;;;160:74:85;10439:66:45;;-1:-1:-1;10515:12:45;;;;;;133:18:85;;10515:37:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10639:16:45;;10620:118;;-1:-1:-1;;;10620:118:45;;1430:66:56;10620:118:45;;;9970:25:85;-1:-1:-1;;;;;10031:55:85;;;10011:18;;;10004:83;10563:22:45;;-1:-1:-1;10639:16:45;;;;-1:-1:-1;10620:42:45;;9943:18:85;;10620:118:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10765:6;;10758:44;;-1:-1:-1;;;10758:44:45;;-1:-1:-1;;;;;178:55:85;;;10758:44:45;;;160:74:85;10563:185:45;;-1:-1:-1;10765:6:45;;;10758:30;;133:18:85;;10758:44:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10818:26:45;;-1:-1:-1;;;;;178:55:85;;160:74;;10818:26:45;;-1:-1:-1;148:2:85;133:18;;-1:-1:-1;10818:26:45;;;;;;;-1:-1:-1;;;;;10862:34:45;;;;;;:9;:34;;;;;10855:41;;-1:-1:-1;;;;;;10855:41:45;;;;;;;;;;;;;;;;;;;;;;;;;10923:14;;:18;;10855:41;10923:18;:::i;:::-;10906:14;:35;-1:-1:-1;;;10107:841:45:o;3511:111:56:-;856:6:55;;-1:-1:-1;;;;;856:6:55;842:10;:20;821:113;;;;-1:-1:-1;;;821:113:55;;5841:2:85;821:113:55;;;5823:21:85;5880:2;5860:18;;;5853:30;5919:34;5899:18;;;5892:62;-1:-1:-1;;;5970:18:85;;;5963:44;6024:19;;821:113:55;5639:410:85;821:113:55;3587:20:56::1;:28:::0;;-1:-1:-1;;;;;;3587:28:56::1;-1:-1:-1::0;;;;;3587:28:56;;;::::1;::::0;;;::::1;::::0;;3511:111::o;9285:816:45:-;9401:4;9359:30;1275:66:56;9359:9:45;:30::i;:::-;-1:-1:-1;;;;;9359:47:45;;9338:128;;;;-1:-1:-1;;;9338:128:45;;10430:2:85;9338:128:45;;;10412:21:85;10469:2;10449:18;;;10442:30;10508:34;10488:18;;;10481:62;-1:-1:-1;;;10559:18:85;;;10552:32;10601:19;;9338:128:45;10228:398:85;9338:128:45;9485:16;;;;9484:17;9476:66;;;;-1:-1:-1;;;9476:66:45;;10833:2:85;9476:66:45;;;10815:21:85;10872:2;10852:18;;;10845:30;10911:34;10891:18;;;10884:62;-1:-1:-1;;;10962:18:85;;;10955:34;11006:19;;9476:66:45;10631:400:85;9476:66:45;9585:12;;504:15:84;9573:24:45;9552:149;;;;-1:-1:-1;;;9552:149:45;;11238:2:85;9552:149:45;;;11220:21:85;11277:2;11257:18;;;11250:30;11316:34;11296:18;;;11289:62;11387:34;11367:18;;;11360:62;-1:-1:-1;;;11438:19:85;;;11431:45;11493:19;;9552:149:45;11036:482:85;9552:149:45;9712:15;9730:36;9742:10;9754:11;;9730;:36::i;:::-;-1:-1:-1;;;;;9794:25:45;;;9776:15;9794:25;;;:9;:25;;;;;;;;9858:11;;;;;;;9851:19;;:6;:19;;;;;9871:10;9851:31;;;;;;;;9712:54;;-1:-1:-1;9794:25:45;9851:31;;9830:111;;;;-1:-1:-1;;;9830:111:45;;11725:2:85;9830:111:45;;;11707:21:85;11764:2;11744:18;;;11737:30;11803:34;11783:18;;;11776:62;-1:-1:-1;;;11854:18:85;;;11847:31;11895:19;;9830:111:45;11523:397:85;9830:111:45;9984:7;9968:2;:13;;;:23;;;;:::i;:::-;9952:13;;;;:39;;;;10008:11;;;;-1:-1:-1;;;;;10008:11:45;10035:5;10001:19;;;;;;;;;;;10021:10;10001:31;;;;;;;;;:39;;-1:-1:-1;;10001:39:45;;;10056:38;;;;;10088:5;;-1:-1:-1;;;;;12178:15:85;;;12160:34;;12230:15;;12225:2;12210:18;;12203:43;12087:2;12072:18;;11925:327;10056:38:45;;;;;;;;9328:773;;9285:816;:::o;405:372:53:-;498:7;521:13;537:10;:8;:10::i;:::-;-1:-1:-1;;;;;537:24:53;;562:12;537:38;;;;;;;;;;;;;1743:25:85;;1731:2;1716:18;;1597:177;537:38:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;521:54;;586:14;603:12;:10;:12::i;:::-;-1:-1:-1;;;;;603:28:53;;632:12;603:42;;;;;;;;;;;;;1743:25:85;;1731:2;1716:18;;1597:177;603:42:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;586:59;-1:-1:-1;659:10:53;;655:93;;701:6;:4;:6::i;:::-;:36;;-1:-1:-1;;;701:36:53;;;;;12431:25:85;;;12472:18;;;12465:34;;;-1:-1:-1;;;;;701:14:53;;;;;;;12404:18:85;;701:36:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;693:44;;:5;:44;:::i;:::-;685:52;;655:93;-1:-1:-1;765:5:53;405:372;-1:-1:-1;;405:372:53:o;783:376::-;885:7;908:14;925:10;:8;:10::i;:::-;:40;;-1:-1:-1;;;925:40:53;;-1:-1:-1;;;;;8429:55:85;;;925:40:53;;;8411:74:85;8501:18;;;8494:34;;;925:20:53;;;;;;;8384:18:85;;925:40:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;908:57;;976:10;989:12;:10;:12::i;:::-;:43;;-1:-1:-1;;;989:43:53;;-1:-1:-1;;;;;8429:55:85;;;989:43:53;;;8411:74:85;8501:18;;;8494:34;;;989:23:53;;;;;;;8384:18:85;;989:43:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;976:56;-1:-1:-1;1046:6:53;;1042:87;;1086:6;:4;:6::i;:::-;:32;;-1:-1:-1;;;1086:32:53;;;;;12431:25:85;;;12472:18;;;12465:34;;;-1:-1:-1;;;;;1086:14:53;;;;;;;12404:18:85;;1086:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1077:41;;:6;:41;:::i;:::-;1068:50;;1042:87;-1:-1:-1;1146:6:53;783:376;-1:-1:-1;;;783:376:53:o;1934:29:45:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1934:29:45;;-1:-1:-1;1934:29:45;:::o;5895:107::-;5948:16;5983:12;5976:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5976:19:45;;;;;;;;;;;;;;;;;;;;;;;5895:107;:::o;5493:334::-;479:1:60;451:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;451:16;-1:-1:-1;;;;;451:30:60;;430:117;;;;-1:-1:-1;;;430:117:60;;12845:2:85;430:117:60;;;12827:21:85;12884:2;12864:18;;;12857:30;12923:34;12903:18;;;12896:62;-1:-1:-1;;;12974:18:85;;;12967:38;13022:19;;430:117:60;12643:404:85;430:117:60;5571:23:45::1;5588:5;5571:16;:23::i;:::-;5639:5;-1:-1:-1::0;;;;;5623:38:45::1;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5605:15;;:58;;;;;-1:-1:-1::0;;;;;5605:58:45::1;;;;;-1:-1:-1::0;;;;;5605:58:45::1;;;;;;5708:5;-1:-1:-1::0;;;;;5692:39:45::1;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5673:16;:60:::0;;-1:-1:-1;;;;;;5673:60:45::1;-1:-1:-1::0;;;;;5673:60:45;;;::::1;::::0;;;::::1;::::0;;2086:10:::1;504:15:84::0;5759:25:45::1;;;;:::i;:::-;5744:12;:40:::0;-1:-1:-1;5808:12:45::1;5794:11;:26:::0;5493:334::o;6742:884::-;-1:-1:-1;;;;;6820:16:45;;6802:15;6820:16;;;:9;:16;;;;;;6847:63;;;;-1:-1:-1;;;6847:63:45;;13254:2:85;6847:63:45;;;13236:21:85;13293:2;13273:18;;;13266:30;13332:33;13312:18;;;13305:61;13383:18;;6847:63:45;13052:355:85;6847:63:45;6954:12;;504:15:84;6942:24:45;:45;;;;-1:-1:-1;6971:16:45;;;;6970:17;6942:45;6921:171;;;;-1:-1:-1;;;6921:171:45;;13614:2:85;6921:171:45;;;13596:21:85;13653:2;13633:18;;;13626:30;13692:34;13672:18;;;13665:62;13763:34;13743:18;;;13736:62;13835:17;13814:19;;;13807:46;13870:19;;6921:171:45;13412:483:85;6921:171:45;7123:11;;;;-1:-1:-1;;;;;7123:11:45;:25;7102:110;;;;-1:-1:-1;;;7102:110:45;;14102:2:85;7102:110:45;;;14084:21:85;14141:2;14121:18;;;14114:30;14180:34;14160:18;;;14153:62;-1:-1:-1;;;14231:18:85;;;14224:36;14277:19;;7102:110:45;13900:402:85;7102:110:45;7243:10;:8;:10::i;:::-;:65;;-1:-1:-1;;;7243:65:45;;7267:10;7243:65;;;3541:34:85;7287:4:45;3591:18:85;;;3584:43;2415:22:45;3643:18:85;;;3636:34;-1:-1:-1;;;;;7243:23:45;;;;;;;3453:18:85;;7243:65:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7222:205;;;;-1:-1:-1;;;7222:205:45;;14509:2:85;7222:205:45;;;14491:21:85;14548:2;14528:18;;;14521:30;14587:34;14567:18;;;14560:62;14658:34;14638:18;;;14631:62;14730:31;14709:19;;;14702:60;14779:19;;7222:205:45;14307:497:85;7222:205:45;7438:11;;;;:19;;-1:-1:-1;;;;;7438:19:45;;-1:-1:-1;;;;;;7438:19:45;;;;;;;;7467:24;;;;7481:10;7467:24;;;7502:12;:24;;;;;;;7438:11;7502:24;;;;;;;;;;;;;;;;7553:14;;:18;;;:::i;:::-;7536:14;:35;7587:32;;;7601:10;12160:34:85;;-1:-1:-1;;;;;12230:15:85;;12225:2;12210:18;;12203:43;7587:32:45;;12072:18:85;7587:32:45;;;;;;;6792:834;6742:884;:::o;7911:1368::-;8025:4;7983:30;1275:66:56;7983:9:45;:30::i;:::-;-1:-1:-1;;;;;7983:47:45;;7962:128;;;;-1:-1:-1;;;7962:128:45;;10430:2:85;7962:128:45;;;10412:21:85;10469:2;10449:18;;;10442:30;10508:34;10488:18;;;10481:62;-1:-1:-1;;;10559:18:85;;;10552:32;10601:19;;7962:128:45;10228:398:85;7962:128:45;8109:16;;;;8108:17;8100:66;;;;-1:-1:-1;;;8100:66:45;;10833:2:85;8100:66:45;;;10815:21:85;10872:2;10852:18;;;10845:30;10911:34;10891:18;;;10884:62;-1:-1:-1;;;10962:18:85;;;10955:34;11006:19;;8100:66:45;10631:400:85;8100:66:45;8209:12;;504:15:84;8197:24:45;8176:149;;;;-1:-1:-1;;;8176:149:45;;11238:2:85;8176:149:45;;;11220:21:85;11277:2;11257:18;;;11250:30;11316:34;11296:18;;;11289:62;11387:34;11367:18;;;11360:62;-1:-1:-1;;;11438:19:85;;;11431:45;11493:19;;8176:149:45;11036:482:85;8176:149:45;8336:15;8354:36;8366:10;8378:11;;8354;:36::i;:::-;8336:54;;8400:14;8417:29;8434:11;;8417:16;:29::i;:::-;-1:-1:-1;;;;;8475:25:45;;8457:15;8475:25;;;:9;:25;;;;;8400:46;;-1:-1:-1;8532:11:45;8511:131;;;;-1:-1:-1;;;8511:131:45;;15011:2:85;8511:131:45;;;14993:21:85;15050:2;15030:18;;;15023:30;15089:34;15069:18;;;15062:62;15160:34;15140:18;;;15133:62;-1:-1:-1;;;15211:19:85;;;15204:40;15261:19;;8511:131:45;14809:477:85;8511:131:45;8673:11;;;;-1:-1:-1;;;;;8673:11:45;8652:112;;;;-1:-1:-1;;;8652:112:45;;15493:2:85;8652:112:45;;;15475:21:85;15532:2;15512:18;;;15505:30;15571:34;15551:18;;;15544:62;-1:-1:-1;;;15622:18:85;;;15615:38;15670:19;;8652:112:45;15291:404:85;8652:112:45;8803:11;;;;-1:-1:-1;;;;;8803:11:45;8796:19;;;;:6;:19;;;;;;;;8816:10;8796:31;;;;;;;;;;8795:32;8774:127;;;;-1:-1:-1;;;8774:127:45;;15902:2:85;8774:127:45;;;15884:21:85;15941:2;15921:18;;;15914:30;15980:34;15960:18;;;15953:62;16051:18;16031;;;16024:46;16087:19;;8774:127:45;15700:412:85;8774:127:45;8944:7;8928:2;:13;;;:23;;;;:::i;:::-;8912:13;;;;:39;;;;8995:4;8968:11;;;;-1:-1:-1;;;;;8968:11:45;8961:19;;;;;;;;;;;;8981:10;8961:31;;;;;;;:38;;-1:-1:-1;;8961:38:45;;;;;;9010:22;;:10;:22::i;:::-;9047:36;;;9065:10;12160:34:85;;-1:-1:-1;;;;;12230:15:85;;12225:2;12210:18;;12203:43;9047:36:45;;12072:18:85;9047:36:45;;;;;;;9130:3;9115:11;:6;9124:2;9115:11;:::i;:::-;9114:19;;;;:::i;:::-;9098:2;:13;;;:35;9094:179;;;9154:30;;-1:-1:-1;;;;;178:55:85;;160:74;;9154:30:45;;148:2:85;133:18;9154:30:45;;;;;;;9198:16;:23;;-1:-1:-1;;;;;9235:27:45;;9198:23;9235:27;-1:-1:-1;;9235:27:45;;;;9217:4;9235:27;;;9094:179;7952:1327;;;7911:1368;:::o;11266:672::-;11337:16;;;;;:44;;-1:-1:-1;11369:12:45;;504:15:84;11357:24:45;11337:44;11316:146;;;;-1:-1:-1;;;11316:146:45;;16714:2:85;11316:146:45;;;16696:21:85;16753:2;16733:18;;;16726:30;16792:34;16772:18;;;16765:62;16863:25;16843:18;;;16836:53;16906:19;;11316:146:45;16512:419:85;11316:146:45;-1:-1:-1;;;;;11481:19:45;;11473:63;;;;-1:-1:-1;;;11473:63:45;;13254:2:85;11473:63:45;;;13236:21:85;13293:2;13273:18;;;13266:30;13332:33;13312:18;;;13305:61;13383:18;;11473:63:45;13052:355:85;11473:63:45;-1:-1:-1;;;;;11565:16:45;;;11547:15;11565:16;;;:9;:16;;;;;11612:11;;;;11565:16;;11612:11;:20;11591:109;;;;-1:-1:-1;;;11591:109:45;;17138:2:85;11591:109:45;;;17120:21:85;17177:2;17157:18;;;17150:30;17216:34;17196:18;;;17189:62;-1:-1:-1;;;17267:18:85;;;17260:40;17317:19;;11591:109:45;16936:406:85;11591:109:45;11730:11;;-1:-1:-1;;;;;11759:16:45;;;11711;11759;;;:9;:16;;;;;11752:23;;-1:-1:-1;;;;;;11752:23:45;;;;;11730:11;11752:23;;;;;;;;;;;;;;;;;;;11802:14;;11730:11;;;;;11802:18;;;:::i;:::-;11785:14;:35;11831:10;:8;:10::i;:::-;:45;;-1:-1:-1;;;11831:45:45;;-1:-1:-1;;;;;8429:55:85;;;11831:45:45;;;8411:74:85;2558:21:45;8501:18:85;;;8494:34;11831:19:45;;;;;;;8384:18:85;;11831:45:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11919:11:45;;;;11892:39;;;-1:-1:-1;;;;;12178:15:85;;;12160:34;;11919:11:45;;;12225:2:85;12210:18;;12203:43;11892:39:45;;12072:18:85;11892:39:45;11925:327:85;1343:577:23;1398:14;1424:19;1454:6;1446:15;;1424:37;;1513:4;1507:11;1578:66;1555:5;1531:127;1696:11;1689:4;1682:5;1678:16;1671:37;1779:66;1756:4;1749:5;1745:16;1721:138;1899:4;1892:5;1889:1;1882:22;1872:32;1343:577;-1:-1:-1;;;;1343:577:23:o;12573:99:45:-;12615:6;12647:17;642:66:56;12647:9:45;:17::i;:::-;12633:32;;12573:99;:::o;5024:140:56:-;5079:7;5145:6;;5105:52;;-1:-1:-1;;;5105:52:56;;-1:-1:-1;;;;;5145:6:56;;;5105:52;;;8411:74:85;8501:18;;;8494:34;;;294:42:54;;5105:39:56;;8384:18:85;;5105:52:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5098:59;5024:140;-1:-1:-1;;5024:140:56:o;1541:117:53:-;1586:10;1626:24;2197:66:56;1626:9:53;:24::i;1442:93::-;1481:4;1509:18;2045:66:56;1509:9:53;:18::i;3247:211:56:-;479:1:60;451:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;451:16;-1:-1:-1;;;;;451:30:60;;430:117;;;;-1:-1:-1;;;430:117:60;;12845:2:85;430:117:60;;;12827:21:85;12884:2;12864:18;;;12857:30;12923:34;12903:18;;;12896:62;-1:-1:-1;;;12974:18:85;;;12967:38;13022:19;;430:117:60;12643:404:85;430:117:60;3369:23:56::1;3386:5;3369:16;:23::i;:::-;3444:6;::::0;3402:49:::1;::::0;-1:-1:-1;;;3402:49:56;;3437:4:::1;3402:49;::::0;::::1;12160:34:85::0;-1:-1:-1;;;;;3444:6:56;;::::1;12210:18:85::0;;;12203:43;294:42:54::1;::::0;3402:26:56::1;::::0;12072:18:85;;3402:49:56::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;1165:89:53::0;1218:12;:10;:12::i;:::-;:29;;-1:-1:-1;;;1218:29:53;;-1:-1:-1;;;;;178:55:85;;;1218:29:53;;;160:74:85;1218:23:53;;;;;;;133:18:85;;1218:29:53;14:226:85;1963:194:55;479:1:60;451:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;451:16;-1:-1:-1;;;;;451:30:60;;430:117;;;;-1:-1:-1;;;430:117:60;;12845:2:85;430:117:60;;;12827:21:85;12884:2;12864:18;;;12857:30;12923:34;12903:18;;;12896:62;-1:-1:-1;;;12974:18:85;;;12967:38;13022:19;;430:117:60;12643:404:85;430:117:60;2085:23:55::1;2102:5;2085:16;:23::i;:::-;2135:5;-1:-1:-1::0;;;;;2127:21:55::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2118:6;:32:::0;;-1:-1:-1;;;;;;2118:32:55::1;-1:-1:-1::0;;;;;2118:32:55;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1963:194:55:o;1399:149:60:-;479:1;451:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;451:16;-1:-1:-1;;;;;451:30:60;;430:117;;;;-1:-1:-1;;;430:117:60;;12845:2:85;430:117:60;;;12827:21:85;12884:2;12864:18;;;12857:30;12923:34;12903:18;;;12896:62;-1:-1:-1;;;12974:18:85;;;12967:38;13022:19;;430:117:60;12643:404:85;430:117:60;1476:65:::1;1516:5;-1:-1:-1::0;;;;;1502:35:60::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1932:5:::0;-1:-1:-1;;;;;1912:25:60;:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;1912:16;-1:-1:-1;;;;;1912:25:60;;;1904:69;;;;-1:-1:-1;;;1904:69:60;;17851:2:85;1904:69:60;;;17833:21:85;17890:2;17870:18;;;17863:30;17929:33;17909:18;;;17902:61;17980:18;;1904:69:60;17649:355:85;1904:69:60;-1:-1:-1;;;;;;;;;;;2052:21:60;1843:246::o;245:154:85:-;-1:-1:-1;;;;;324:5:85;320:54;313:5;310:65;300:93;;389:1;386;379:12;404:127;465:10;460:3;456:20;453:1;446:31;496:4;493:1;486:15;520:4;517:1;510:15;536:1056;613:6;621;674:2;662:9;653:7;649:23;645:32;642:52;;;690:1;687;680:12;642:52;729:9;716:23;748:31;773:5;748:31;:::i;:::-;798:5;-1:-1:-1;854:2:85;839:18;;826:32;877:18;907:14;;;904:34;;;934:1;931;924:12;904:34;972:6;961:9;957:22;947:32;;1017:7;1010:4;1006:2;1002:13;998:27;988:55;;1039:1;1036;1029:12;988:55;1075:2;1062:16;1097:2;1093;1090:10;1087:36;;;1103:18;;:::i;:::-;1178:2;1172:9;1146:2;1232:13;;-1:-1:-1;;1228:22:85;;;1252:2;1224:31;1220:40;1208:53;;;1276:18;;;1296:22;;;1273:46;1270:72;;;1322:18;;:::i;:::-;1362:10;1358:2;1351:22;1397:2;1389:6;1382:18;1437:7;1432:2;1427;1423;1419:11;1415:20;1412:33;1409:53;;;1458:1;1455;1448:12;1409:53;1514:2;1509;1505;1501:11;1496:2;1488:6;1484:15;1471:46;1559:1;1554:2;1549;1541:6;1537:15;1533:24;1526:35;1580:6;1570:16;;;;;;;536:1056;;;;;:::o;1779:315::-;1847:6;1855;1908:2;1896:9;1887:7;1883:23;1879:32;1876:52;;;1924:1;1921;1914:12;1876:52;1960:9;1947:23;1937:33;;2020:2;2009:9;2005:18;1992:32;2033:31;2058:5;2033:31;:::i;:::-;2083:5;2073:15;;;1779:315;;;;;:::o;2099:922::-;2316:2;2368:21;;;2438:13;;2341:18;;;2460:22;;;2287:4;;2316:2;2501;;2519:18;;;;2560:15;;;2287:4;2603:392;2617:6;2614:1;2611:13;2603:392;;;2676:13;;2783:9;;-1:-1:-1;;;;;2779:18:85;;;2767:31;;2842:11;;;2836:18;2832:27;2818:12;;;2811:49;2900:11;;2894:18;2880:12;;;2873:40;2942:4;2933:14;;;;2970:15;;;;2639:1;2632:9;2603:392;;;-1:-1:-1;3012:3:85;;2099:922;-1:-1:-1;;;;;;;2099:922:85:o;3026:247::-;3085:6;3138:2;3126:9;3117:7;3113:23;3109:32;3106:52;;;3154:1;3151;3144:12;3106:52;3193:9;3180:23;3212:31;3237:5;3212:31;:::i;:::-;3262:5;3026:247;-1:-1:-1;;;3026:247:85:o;4055:180::-;4114:6;4167:2;4155:9;4146:7;4142:23;4138:32;4135:52;;;4183:1;4180;4173:12;4135:52;-1:-1:-1;4206:23:85;;4055:180;-1:-1:-1;4055:180:85:o;4240:315::-;4308:6;4316;4369:2;4357:9;4348:7;4344:23;4340:32;4337:52;;;4385:1;4382;4375:12;4337:52;4424:9;4411:23;4443:31;4468:5;4443:31;:::i;:::-;4493:5;4545:2;4530:18;;;;4517:32;;-1:-1:-1;;;4240:315:85:o;4560:681::-;4731:2;4783:21;;;4853:13;;4756:18;;;4875:22;;;4702:4;;4731:2;4954:15;;;;4928:2;4913:18;;;4702:4;4997:218;5011:6;5008:1;5005:13;4997:218;;;5076:13;;-1:-1:-1;;;;;5072:62:85;5060:75;;5190:15;;;;5155:12;;;;5033:1;5026:9;4997:218;;;-1:-1:-1;5232:3:85;;4560:681;-1:-1:-1;;;;;;4560:681:85:o;5246:388::-;5314:6;5322;5375:2;5363:9;5354:7;5350:23;5346:32;5343:52;;;5391:1;5388;5381:12;5343:52;5430:9;5417:23;5449:31;5474:5;5449:31;:::i;:::-;5499:5;-1:-1:-1;5556:2:85;5541:18;;5528:32;5569:33;5528:32;5569:33;:::i;6760:127::-;6821:10;6816:3;6812:20;6809:1;6802:31;6852:4;6849:1;6842:15;6876:4;6873:1;6866:15;6892:127;6953:10;6948:3;6944:20;6941:1;6934:31;6984:4;6981:1;6974:15;7008:4;7005:1;6998:15;7024:135;7063:3;-1:-1:-1;;7084:17:85;;7081:43;;;7104:18;;:::i;:::-;-1:-1:-1;7151:1:85;7140:13;;7024:135::o;8048:184::-;8118:6;8171:2;8159:9;8150:7;8146:23;8142:32;8139:52;;;8187:1;8184;8177:12;8139:52;-1:-1:-1;8210:16:85;;8048:184;-1:-1:-1;8048:184:85:o;8539:277::-;8606:6;8659:2;8647:9;8638:7;8634:23;8630:32;8627:52;;;8675:1;8672;8665:12;8627:52;8707:9;8701:16;8760:5;8753:13;8746:21;8739:5;8736:32;8726:60;;8782:1;8779;8772:12;9540:251;9610:6;9663:2;9651:9;9642:7;9638:23;9634:32;9631:52;;;9679:1;9676;9669:12;9631:52;9711:9;9705:16;9730:31;9755:5;9730:31;:::i;10098:125::-;10138:4;10166:1;10163;10160:8;10157:34;;;10171:18;;:::i;:::-;-1:-1:-1;10208:9:85;;10098:125::o;12510:128::-;12550:3;12581:1;12577:6;12574:1;12571:13;12568:39;;;12587:18;;:::i;:::-;-1:-1:-1;12623:9:85;;12510:128::o;16117:168::-;16157:7;16223:1;16219;16215:6;16211:14;16208:1;16205:21;16200:1;16193:9;16186:17;16182:45;16179:71;;;16230:18;;:::i;:::-;-1:-1:-1;16270:9:85;;16117:168::o;16290:217::-;16330:1;16356;16346:132;;16400:10;16395:3;16391:20;16388:1;16381:31;16435:4;16432:1;16425:15;16463:4;16460:1;16453:15;16346:132;-1:-1:-1;16492:9:85;;16290:217::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"../policy/Policy.sol\";\nimport \"../currency/EcoBalanceStore.sol\";\nimport \"../policy/PolicedUtils.sol\";\nimport \"./Proposal.sol\";\nimport \"./PolicyVotes.sol\";\nimport \"./SimplePolicySetter.sol\";\nimport \"./VotingPower.sol\";\nimport \"../utils/TimeUtils.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/** @title PolicyProposals\n * `PolicyProposals` oversees the proposals phase of the policy decision\n * process. Proposals can be submitted by anyone willing to put forth funds, and\n * submitted proposals can be supported by anyone\n *\n * First, during the proposals portion of the proposals phase, proposals can be\n * submitted (for a fee). This is parallelized with a signal voting process where\n * support can be distributed and redistributed to proposals after they are submitted.\n *\n * A proposal that makes it to support above 30% of the total possible support ends this\n * phase and starts a vote.\n */\ncontract PolicyProposals is VotingPower, TimeUtils {\n    /** A proposal submitted to the process.\n     */\n    struct Prop {\n        /* The address of the proposing account.\n         */\n        address proposer;\n        /* The address of the proposal contract.\n         */\n        address proposal;\n        /* The amount of tokens staked in support of this proposal.\n         */\n        uint256 totalstake;\n    }\n\n    /* A record of which addresses have already staked in support of each proposal\n     */\n    mapping(address => mapping(address => bool)) public staked;\n\n    /** The set of proposals under consideration.\n     * maps from addresses of proposals to structs containing with info and\n     * the staking data (struct defined above)\n     */\n    mapping(address => Prop) public proposals;\n\n    /** The total number of proposals made.\n     */\n    uint256 public totalproposals;\n\n    /** A list of the addresses of all proposals made.\n     */\n    address[] public allProposals;\n\n    /** The duration of the proposal portion of the proposal phase.\n     */\n    uint256 public constant PROPOSAL_TIME = 10 minutes;\n\n    /** Whether or not a winning proposal has been selected\n     */\n    bool public proposalSelected;\n\n    /** selected proposal awaiting configuration before voting\n     */\n    address public proposalToConfigure;\n\n    /** The minimum cost to register a proposal.\n     */\n    uint256 public constant COST_REGISTER = 1000000000000000000000;\n\n    /** The amount refunded if a proposal does not get selected.\n     */\n    uint256 public constant REFUND_IF_LOST = 800000000000000000000;\n\n    /** The time at which the proposal portion of the proposals phase ends.\n     */\n    uint256 public proposalEnds;\n\n    /** The block number of the balance stores to use for staking in\n     * support of a proposal.\n     */\n    uint256 public blockNumber;\n\n    /** The address of the `PolicyVotes` contract, to be cloned for the voting\n     * phase.\n     */\n    address public policyVotesImpl;\n\n    /** The address of a `SimplePolicySetter` contract used to grant permissions\n     * for the voting phase.\n     */\n    address public simplePolicyImpl;\n\n    /** An event indicating a proposal has been proposed\n     *\n     * @param proposalAddress The address of the PolicyVotes contract instance.\n     */\n    event ProposalAdded(address proposer, address proposalAddress);\n\n    /** An event indicating that proposal have been supported by stake.\n     *\n     * @param proposalAddress The address of the PolicyVotes contract instance that was supported\n     */\n    event ProposalSupported(address supporter, address proposalAddress);\n\n    /** An event indicating that support has been removed from a proposal.\n     *\n     * @param proposalAddress The address of the PolicyVotes contract instance that was supported\n     */\n    event ProposalUnsupported(address unsupporter, address proposalAddress);\n\n    /** An event indicating a proposal has reached its support threshold\n     *\n     * @param proposalAddress The address of the PolicyVotes contract instance.\n     */\n    event SupportThresholdReached(address proposalAddress);\n\n    /** An event indicating that proposals have been accepted for voting\n     *\n     * @param contractAddress The address of the PolicyVotes contract instance.\n     */\n    event VotingStarted(address contractAddress);\n\n    /** An event indicating that proposal fee was partially refunded.\n     *\n     * @param proposer The address of the proposee which was refunded\n     */\n    event ProposalRefunded(address proposer, address proposalAddress);\n\n    /** Construct a new PolicyProposals instance using the provided supervising\n     * policy (root) and supporting contracts.\n     *\n     * @param _policy The root policy contract.\n     * @param _policyvotes The address of the contract that will be cloned to\n     *                     oversee the voting phase.\n     * @param _simplepolicy The address of the `SimplePolicySetter` contract to\n     *                      be used in managing permissions.\n     */\n    constructor(\n        address _policy,\n        address _policyvotes,\n        address _simplepolicy\n    ) VotingPower(_policy) {\n        policyVotesImpl = _policyvotes;\n        simplePolicyImpl = _simplepolicy;\n    }\n\n    /** Initialize the storage context using parameters copied from the original\n     * contract (provided as _self).\n     *\n     * Can only be called once, during proxy initialization.\n     *\n     * @param _self The original contract address.\n     */\n    function initialize(address _self) public override onlyConstruction {\n        super.initialize(_self);\n\n        policyVotesImpl = PolicyProposals(_self).policyVotesImpl();\n        simplePolicyImpl = PolicyProposals(_self).simplePolicyImpl();\n\n        proposalEnds = getTime() + PROPOSAL_TIME;\n        blockNumber = block.number;\n    }\n\n    /** A list of addresses for all proposed policies\n     */\n    function allProposalAddresses() public view returns (address[] memory) {\n        return allProposals;\n    }\n\n    /** A list of all proposed policies\n     */\n    function allProposalData() public view returns (Prop[] memory) {\n        Prop[] memory proposalData = new Prop[](totalproposals);\n        for (uint256 index = 0; index < totalproposals; index++) {\n            proposalData[index] = proposals[allProposals[index]];\n        }\n\n        return proposalData;\n    }\n\n    /** Submit a proposal.\n     *\n     * You must approve the policy proposals contract to withdraw the required\n     * fee from your account before calling this.\n     *\n     * Can only be called during the proposals portion of the proposals phase.\n     * Each proposal may only be submitted once.\n     *\n     * @param _prop The address of the proposal to submit.\n     */\n    function registerProposal(address _prop) external {\n        Prop storage _p = proposals[_prop];\n\n        require(_prop != address(0), \"The proposal address can't be 0\");\n\n        require(\n            getTime() < proposalEnds && !proposalSelected,\n            \"Proposals may no longer be registered because the registration period has ended\"\n        );\n        require(\n            _p.proposal == address(0),\n            \"A proposal may only be registered once\"\n        );\n        require(\n            getToken().transferFrom(msg.sender, address(this), COST_REGISTER),\n            \"The token cost of registration must be approved to transfer prior to calling registerProposal\"\n        );\n\n        _p.proposal = _prop;\n        _p.proposer = msg.sender;\n\n        allProposals.push(_prop);\n        totalproposals = totalproposals + 1;\n\n        emit ProposalAdded(msg.sender, _prop);\n    }\n\n    /** Stake in support of an existing proposal.\n     *\n     * Can only be called during the staking portion of the proposals phase.\n     *\n     * Your voting strength is added to the supporting stake of the proposal.\n     *\n     * @param _prop The proposal to support.\n     */\n    function support(address _prop) external {\n        require(\n            policyFor(ID_POLICY_PROPOSALS) == address(this),\n            \"Proposal contract no longer active\"\n        );\n        require(!proposalSelected, \"A proposal has already been selected\");\n        require(\n            getTime() < proposalEnds,\n            \"Proposals may no longer be supported because the registration period has ended\"\n        );\n\n        uint256 _amount = votingPower(msg.sender, blockNumber);\n        uint256 _total = totalVotingPower(blockNumber);\n\n        Prop storage _p = proposals[address(_prop)];\n\n        require(\n            _amount > 0,\n            \"In order to support a proposal you must stake a non-zero amount of tokens\"\n        );\n        require(\n            _p.proposal != address(0),\n            \"The supported proposal is not registered\"\n        );\n        require(\n            !staked[_p.proposal][msg.sender],\n            \"You may not stake in support of a proposal twice\"\n        );\n\n        _p.totalstake = _p.totalstake + _amount;\n        staked[_p.proposal][msg.sender] = true;\n\n        recordVote(msg.sender);\n        emit ProposalSupported(msg.sender, _prop);\n\n        if (_p.totalstake > (_total * 30) / 100) {\n            emit SupportThresholdReached(_prop);\n            proposalSelected = true;\n            proposalToConfigure = _prop;\n        }\n    }\n\n    function unsupport(address _prop) external {\n        require(\n            policyFor(ID_POLICY_PROPOSALS) == address(this),\n            \"Proposal contract no longer active\"\n        );\n        require(!proposalSelected, \"A proposal has already been selected\");\n        require(\n            getTime() < proposalEnds,\n            \"Proposals may no longer be supported because the registration period has ended\"\n        );\n\n        uint256 _amount = votingPower(msg.sender, blockNumber);\n        Prop storage _p = proposals[address(_prop)];\n\n        require(\n            staked[_p.proposal][msg.sender],\n            \"You have not staked this proposal\"\n        );\n\n        _p.totalstake = _p.totalstake - _amount;\n        staked[_p.proposal][msg.sender] = false;\n\n        emit ProposalUnsupported(msg.sender, _prop);\n    }\n\n    function deployProposalVoting() external {\n        require(proposalSelected, \"no proposal has been selected\");\n        require(\n            proposalToConfigure != address(0),\n            \"voting has already been deployed\"\n        );\n        address votingProposal = proposalToConfigure;\n        delete proposalToConfigure;\n\n        PolicyVotes pv = PolicyVotes(PolicyVotes(policyVotesImpl).clone());\n        pv.configure(address(votingProposal));\n\n        SimplePolicySetter sps = SimplePolicySetter(\n            SimplePolicySetter(simplePolicyImpl).clone(\n                ID_POLICY_VOTES,\n                address(pv)\n            )\n        );\n        Policy(policy).internalCommand(address(sps));\n\n        emit VotingStarted(address(pv));\n\n        delete proposals[address(votingProposal)];\n        totalproposals = totalproposals - 1;\n    }\n\n    /** Refund the fee for a proposal that was not selected.\n     *\n     * Returns a partial refund only, does not work on proposals that are\n     * on the ballot for the voting phase, and can only be called after the\n     * period is over.\n     *\n     * @param _prop The proposal to issue a refund for.\n     */\n    function refund(address _prop) external {\n        require(\n            proposalSelected || getTime() > proposalEnds,\n            \"Refunds may not be distributed until the period is over\"\n        );\n\n        require(_prop != address(0), \"The proposal address can't be 0\");\n\n        Prop storage _p = proposals[_prop];\n        require(\n            _p.proposal == _prop,\n            \"The provided proposal address is not valid\"\n        );\n\n        address receiver = _p.proposer;\n\n        delete proposals[_prop];\n        totalproposals = totalproposals - 1;\n\n        getToken().transfer(receiver, REFUND_IF_LOST);\n\n        emit ProposalRefunded(receiver, _p.proposal);\n    }\n\n    /** Reclaim tokens after end time\n     * only callable if all proposals are refunded\n     */\n    function destruct() external {\n        require(\n            proposalSelected || getTime() > proposalEnds,\n            \"The destruct operation can only be performed when the period is over\"\n        );\n\n        require(totalproposals == 0, \"Must refund all missed proposals first\");\n\n        Policy(policy).removeSelf(ID_POLICY_PROPOSALS);\n\n        getToken().transfer(\n            address(uint160(policy)),\n            getToken().balanceOf(address(this))\n        );\n    }\n\n    /** Get the associated ERC20 token address.\n     */\n    function getToken() private view returns (IERC20) {\n        return IERC20(policyFor(ID_ECO));\n    }\n}\n",
  "sourcePath": "/Users/dirksmac/dev/eco/currency/contracts/governance/PolicyProposals.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/PolicyProposals.sol",
    "exportedSymbols": {
      "CloneFactory": [
        4532
      ],
      "CurrencyTimer": [
        9936
      ],
      "ECOx": [
        5512
      ],
      "ECOxLockup": [
        10216
      ],
      "ERC1820Client": [
        13518
      ],
      "ERC20": [
        6069
      ],
      "EcoBalanceStore": [
        6115
      ],
      "ForwardTarget": [
        14261
      ],
      "IERC1820Implementer": [
        1920
      ],
      "IERC1820Registry": [
        2010
      ],
      "IERC20": [
        1403
      ],
      "IERC20Metadata": [
        1509
      ],
      "IEcoBalanceStoreGenerationBalance": [
        6127
      ],
      "IGeneration": [
        10224
      ],
      "ILockups": [
        10234
      ],
      "InflationRootHashProposal": [
        7857
      ],
      "Lockup": [
        11146
      ],
      "Policed": [
        13619
      ],
      "PolicedUtils": [
        13797
      ],
      "Policy": [
        13940
      ],
      "PolicyProposals": [
        11923
      ],
      "PolicyVotes": [
        12292
      ],
      "Proposal": [
        12320
      ],
      "SimplePolicySetter": [
        12438
      ],
      "TimeUtils": [
        16911
      ],
      "VoteCheckpoints": [
        8607
      ],
      "VotingPower": [
        13460
      ]
    },
    "id": 11924,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11148,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:45"
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 11149,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 13941,
        "src": "57:30:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/EcoBalanceStore.sol",
        "file": "../currency/EcoBalanceStore.sol",
        "id": 11150,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 6116,
        "src": "88:41:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 11151,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 13798,
        "src": "130:36:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Proposal.sol",
        "file": "./Proposal.sol",
        "id": 11152,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 12321,
        "src": "167:24:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/PolicyVotes.sol",
        "file": "./PolicyVotes.sol",
        "id": 11153,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 12293,
        "src": "192:27:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/SimplePolicySetter.sol",
        "file": "./SimplePolicySetter.sol",
        "id": 11154,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 12439,
        "src": "220:34:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/VotingPower.sol",
        "file": "./VotingPower.sol",
        "id": 11155,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 13461,
        "src": "255:27:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 11156,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 16912,
        "src": "283:32:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 11157,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 1404,
        "src": "316:56:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11159,
              "name": "VotingPower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13460,
              "src": "1009:11:45"
            },
            "id": 11160,
            "nodeType": "InheritanceSpecifier",
            "src": "1009:11:45"
          },
          {
            "baseName": {
              "id": 11161,
              "name": "TimeUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16911,
              "src": "1022:9:45"
            },
            "id": 11162,
            "nodeType": "InheritanceSpecifier",
            "src": "1022:9:45"
          }
        ],
        "canonicalName": "PolicyProposals",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11158,
          "nodeType": "StructuredDocumentation",
          "src": "374:606:45",
          "text": "@title PolicyProposals\n `PolicyProposals` oversees the proposals phase of the policy decision\n process. Proposals can be submitted by anyone willing to put forth funds, and\n submitted proposals can be supported by anyone\n First, during the proposals portion of the proposals phase, proposals can be\n submitted (for a fee). This is parallelized with a signal voting process where\n support can be distributed and redistributed to proposals after they are submitted.\n A proposal that makes it to support above 30% of the total possible support ends this\n phase and starts a vote."
        },
        "fullyImplemented": true,
        "id": 11923,
        "linearizedBaseContracts": [
          11923,
          16911,
          13460,
          13797,
          13518,
          4532,
          13619,
          1920,
          14261
        ],
        "name": "PolicyProposals",
        "nameLocation": "990:15:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PolicyProposals.Prop",
            "id": 11169,
            "members": [
              {
                "constant": false,
                "id": 11164,
                "mutability": "mutable",
                "name": "proposer",
                "nameLocation": "1182:8:45",
                "nodeType": "VariableDeclaration",
                "scope": 11169,
                "src": "1174:16:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11163,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1174:7:45",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11166,
                "mutability": "mutable",
                "name": "proposal",
                "nameLocation": "1269:8:45",
                "nodeType": "VariableDeclaration",
                "scope": 11169,
                "src": "1261:16:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11165,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1261:7:45",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11168,
                "mutability": "mutable",
                "name": "totalstake",
                "nameLocation": "1375:10:45",
                "nodeType": "VariableDeclaration",
                "scope": 11169,
                "src": "1367:18:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11167,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1367:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prop",
            "nameLocation": "1098:4:45",
            "nodeType": "StructDefinition",
            "scope": 11923,
            "src": "1091:301:45",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6d3afc9",
            "id": 11175,
            "mutability": "mutable",
            "name": "staked",
            "nameLocation": "1541:6:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "1489:58:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 11174,
              "keyType": {
                "id": 11170,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1497:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1489:44:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 11173,
                "keyType": {
                  "id": 11171,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1516:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1508:24:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 11172,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1527:4:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11176,
              "nodeType": "StructuredDocumentation",
              "src": "1554:176:45",
              "text": "The set of proposals under consideration.\n maps from addresses of proposals to structs containing with info and\n the staking data (struct defined above)"
            },
            "functionSelector": "3341b445",
            "id": 11181,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "1767:9:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "1735:41:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
              "typeString": "mapping(address => struct PolicyProposals.Prop)"
            },
            "typeName": {
              "id": 11180,
              "keyType": {
                "id": 11177,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1743:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1735:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                "typeString": "mapping(address => struct PolicyProposals.Prop)"
              },
              "valueType": {
                "id": 11179,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11178,
                  "name": "Prop",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11169,
                  "src": "1754:4:45"
                },
                "referencedDeclaration": 11169,
                "src": "1754:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                  "typeString": "struct PolicyProposals.Prop"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11182,
              "nodeType": "StructuredDocumentation",
              "src": "1783:47:45",
              "text": "The total number of proposals made."
            },
            "functionSelector": "b88ad48b",
            "id": 11184,
            "mutability": "mutable",
            "name": "totalproposals",
            "nameLocation": "1850:14:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "1835:29:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1835:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11185,
              "nodeType": "StructuredDocumentation",
              "src": "1871:58:45",
              "text": "A list of the addresses of all proposals made."
            },
            "functionSelector": "938351b8",
            "id": 11188,
            "mutability": "mutable",
            "name": "allProposals",
            "nameLocation": "1951:12:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "1934:29:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 11186,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1934:7:45",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 11187,
              "nodeType": "ArrayTypeName",
              "src": "1934:9:45",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11189,
              "nodeType": "StructuredDocumentation",
              "src": "1970:71:45",
              "text": "The duration of the proposal portion of the proposal phase."
            },
            "functionSelector": "af12645a",
            "id": 11192,
            "mutability": "constant",
            "name": "PROPOSAL_TIME",
            "nameLocation": "2070:13:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2046:50:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11190,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2046:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 11191,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2086:10:45",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11193,
              "nodeType": "StructuredDocumentation",
              "src": "2103:63:45",
              "text": "Whether or not a winning proposal has been selected"
            },
            "functionSelector": "3dc716f3",
            "id": 11195,
            "mutability": "mutable",
            "name": "proposalSelected",
            "nameLocation": "2183:16:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2171:28:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11194,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2171:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11196,
              "nodeType": "StructuredDocumentation",
              "src": "2206:66:45",
              "text": "selected proposal awaiting configuration before voting"
            },
            "functionSelector": "c3d2a0bc",
            "id": 11198,
            "mutability": "mutable",
            "name": "proposalToConfigure",
            "nameLocation": "2292:19:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2277:34:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11197,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2277:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11199,
              "nodeType": "StructuredDocumentation",
              "src": "2318:52:45",
              "text": "The minimum cost to register a proposal."
            },
            "functionSelector": "8881a874",
            "id": 11202,
            "mutability": "constant",
            "name": "COST_REGISTER",
            "nameLocation": "2399:13:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2375:62:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2375:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030303030",
              "id": 11201,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2415:22:45",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              },
              "value": "1000000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11203,
              "nodeType": "StructuredDocumentation",
              "src": "2444:68:45",
              "text": "The amount refunded if a proposal does not get selected."
            },
            "functionSelector": "762ec1e9",
            "id": 11206,
            "mutability": "constant",
            "name": "REFUND_IF_LOST",
            "nameLocation": "2541:14:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2517:62:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11204,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2517:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "383030303030303030303030303030303030303030",
              "id": 11205,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2558:21:45",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_800000000000000000000_by_1",
                "typeString": "int_const 800000000000000000000"
              },
              "value": "800000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11207,
              "nodeType": "StructuredDocumentation",
              "src": "2586:79:45",
              "text": "The time at which the proposal portion of the proposals phase ends."
            },
            "functionSelector": "376cf9bf",
            "id": 11209,
            "mutability": "mutable",
            "name": "proposalEnds",
            "nameLocation": "2685:12:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2670:27:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11208,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2670:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11210,
              "nodeType": "StructuredDocumentation",
              "src": "2704:102:45",
              "text": "The block number of the balance stores to use for staking in\n support of a proposal."
            },
            "functionSelector": "57e871e7",
            "id": 11212,
            "mutability": "mutable",
            "name": "blockNumber",
            "nameLocation": "2826:11:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2811:26:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11211,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2811:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11213,
              "nodeType": "StructuredDocumentation",
              "src": "2844:96:45",
              "text": "The address of the `PolicyVotes` contract, to be cloned for the voting\n phase."
            },
            "functionSelector": "984db242",
            "id": 11215,
            "mutability": "mutable",
            "name": "policyVotesImpl",
            "nameLocation": "2960:15:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2945:30:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11214,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2945:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11216,
              "nodeType": "StructuredDocumentation",
              "src": "2982:113:45",
              "text": "The address of a `SimplePolicySetter` contract used to grant permissions\n for the voting phase."
            },
            "functionSelector": "cebd2c09",
            "id": 11218,
            "mutability": "mutable",
            "name": "simplePolicyImpl",
            "nameLocation": "3115:16:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "3100:31:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11217,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3100:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11219,
              "nodeType": "StructuredDocumentation",
              "src": "3138:147:45",
              "text": "An event indicating a proposal has been proposed\n @param proposalAddress The address of the PolicyVotes contract instance."
            },
            "id": 11225,
            "name": "ProposalAdded",
            "nameLocation": "3296:13:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11221,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "3318:8:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11225,
                  "src": "3310:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11223,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3336:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11225,
                  "src": "3328:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3309:43:45"
            },
            "src": "3290:63:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11226,
              "nodeType": "StructuredDocumentation",
              "src": "3359:180:45",
              "text": "An event indicating that proposal have been supported by stake.\n @param proposalAddress The address of the PolicyVotes contract instance that was supported"
            },
            "id": 11232,
            "name": "ProposalSupported",
            "nameLocation": "3550:17:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supporter",
                  "nameLocation": "3576:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11232,
                  "src": "3568:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3568:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11230,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3595:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11232,
                  "src": "3587:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3567:44:45"
            },
            "src": "3544:68:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11233,
              "nodeType": "StructuredDocumentation",
              "src": "3618:183:45",
              "text": "An event indicating that support has been removed from a proposal.\n @param proposalAddress The address of the PolicyVotes contract instance that was supported"
            },
            "id": 11239,
            "name": "ProposalUnsupported",
            "nameLocation": "3812:19:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unsupporter",
                  "nameLocation": "3840:11:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11239,
                  "src": "3832:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11237,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3861:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11239,
                  "src": "3853:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3831:46:45"
            },
            "src": "3806:72:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11240,
              "nodeType": "StructuredDocumentation",
              "src": "3884:163:45",
              "text": "An event indicating a proposal has reached its support threshold\n @param proposalAddress The address of the PolicyVotes contract instance."
            },
            "id": 11244,
            "name": "SupportThresholdReached",
            "nameLocation": "4058:23:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "4090:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11244,
                  "src": "4082:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4081:25:45"
            },
            "src": "4052:55:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11245,
              "nodeType": "StructuredDocumentation",
              "src": "4113:163:45",
              "text": "An event indicating that proposals have been accepted for voting\n @param contractAddress The address of the PolicyVotes contract instance."
            },
            "id": 11249,
            "name": "VotingStarted",
            "nameLocation": "4287:13:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "4309:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11249,
                  "src": "4301:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4300:25:45"
            },
            "src": "4281:45:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11250,
              "nodeType": "StructuredDocumentation",
              "src": "4332:150:45",
              "text": "An event indicating that proposal fee was partially refunded.\n @param proposer The address of the proposee which was refunded"
            },
            "id": 11256,
            "name": "ProposalRefunded",
            "nameLocation": "4493:16:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11252,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "4518:8:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11256,
                  "src": "4510:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "4536:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11256,
                  "src": "4528:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4509:43:45"
            },
            "src": "4487:66:45"
          },
          {
            "body": {
              "id": 11277,
              "nodeType": "Block",
              "src": "5146:89:45",
              "statements": [
                {
                  "expression": {
                    "id": 11271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11269,
                      "name": "policyVotesImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11215,
                      "src": "5156:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11270,
                      "name": "_policyvotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11261,
                      "src": "5174:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5156:30:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11272,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:30:45"
                },
                {
                  "expression": {
                    "id": 11275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11273,
                      "name": "simplePolicyImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11218,
                      "src": "5196:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11274,
                      "name": "_simplepolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11263,
                      "src": "5215:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5196:32:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11276,
                  "nodeType": "ExpressionStatement",
                  "src": "5196:32:45"
                }
              ]
            },
            "documentation": {
              "id": 11257,
              "nodeType": "StructuredDocumentation",
              "src": "4559:457:45",
              "text": "Construct a new PolicyProposals instance using the provided supervising\n policy (root) and supporting contracts.\n @param _policy The root policy contract.\n @param _policyvotes The address of the contract that will be cloned to\n                     oversee the voting phase.\n @param _simplepolicy The address of the `SimplePolicySetter` contract to\n                      be used in managing permissions."
            },
            "id": 11278,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11266,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11259,
                    "src": "5137:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11267,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11265,
                  "name": "VotingPower",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13460,
                  "src": "5125:11:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "5125:20:45"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11259,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "5050:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11278,
                  "src": "5042:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5042:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11261,
                  "mutability": "mutable",
                  "name": "_policyvotes",
                  "nameLocation": "5075:12:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11278,
                  "src": "5067:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5067:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11263,
                  "mutability": "mutable",
                  "name": "_simplepolicy",
                  "nameLocation": "5105:13:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11278,
                  "src": "5097:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5097:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5032:92:45"
            },
            "returnParameters": {
              "id": 11268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5146:0:45"
            },
            "scope": 11923,
            "src": "5021:214:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13740
            ],
            "body": {
              "id": 11321,
              "nodeType": "Block",
              "src": "5561:266:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11290,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11281,
                        "src": "5588:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11287,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5571:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyProposals_$11923_$",
                          "typeString": "type(contract super PolicyProposals)"
                        }
                      },
                      "id": 11289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13740,
                      "src": "5571:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5571:23:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11292,
                  "nodeType": "ExpressionStatement",
                  "src": "5571:23:45"
                },
                {
                  "expression": {
                    "id": 11299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11293,
                      "name": "policyVotesImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11215,
                      "src": "5605:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 11295,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11281,
                              "src": "5639:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11294,
                            "name": "PolicyProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11923,
                            "src": "5623:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PolicyProposals_$11923_$",
                              "typeString": "type(contract PolicyProposals)"
                            }
                          },
                          "id": 11296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5623:22:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                            "typeString": "contract PolicyProposals"
                          }
                        },
                        "id": 11297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "policyVotesImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11215,
                        "src": "5623:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 11298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5623:40:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5605:58:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11300,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:58:45"
                },
                {
                  "expression": {
                    "id": 11307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11301,
                      "name": "simplePolicyImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11218,
                      "src": "5673:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 11303,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11281,
                              "src": "5708:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11302,
                            "name": "PolicyProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11923,
                            "src": "5692:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PolicyProposals_$11923_$",
                              "typeString": "type(contract PolicyProposals)"
                            }
                          },
                          "id": 11304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5692:22:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                            "typeString": "contract PolicyProposals"
                          }
                        },
                        "id": 11305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "simplePolicyImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11218,
                        "src": "5692:39:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 11306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5692:41:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5673:60:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11308,
                  "nodeType": "ExpressionStatement",
                  "src": "5673:60:45"
                },
                {
                  "expression": {
                    "id": 11314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11309,
                      "name": "proposalEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "5744:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11310,
                          "name": "getTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16910,
                          "src": "5759:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 11311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5759:9:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 11312,
                        "name": "PROPOSAL_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11192,
                        "src": "5771:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5759:25:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5744:40:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11315,
                  "nodeType": "ExpressionStatement",
                  "src": "5744:40:45"
                },
                {
                  "expression": {
                    "id": 11319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11316,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11212,
                      "src": "5794:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11317,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5808:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 11318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "5808:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5794:26:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11320,
                  "nodeType": "ExpressionStatement",
                  "src": "5794:26:45"
                }
              ]
            },
            "documentation": {
              "id": 11279,
              "nodeType": "StructuredDocumentation",
              "src": "5241:247:45",
              "text": "Initialize the storage context using parameters copied from the original\n contract (provided as _self).\n Can only be called once, during proxy initialization.\n @param _self The original contract address."
            },
            "functionSelector": "c4d66de8",
            "id": 11322,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11285,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11284,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14182,
                  "src": "5544:16:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "5544:16:45"
              }
            ],
            "name": "initialize",
            "nameLocation": "5502:10:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11283,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5535:8:45"
            },
            "parameters": {
              "id": 11282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11281,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "5521:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11322,
                  "src": "5513:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5513:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5512:15:45"
            },
            "returnParameters": {
              "id": 11286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5561:0:45"
            },
            "scope": 11923,
            "src": "5493:334:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11331,
              "nodeType": "Block",
              "src": "5966:36:45",
              "statements": [
                {
                  "expression": {
                    "id": 11329,
                    "name": "allProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11188,
                    "src": "5983:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 11328,
                  "id": 11330,
                  "nodeType": "Return",
                  "src": "5976:19:45"
                }
              ]
            },
            "documentation": {
              "id": 11323,
              "nodeType": "StructuredDocumentation",
              "src": "5833:57:45",
              "text": "A list of addresses for all proposed policies"
            },
            "functionSelector": "b87341b8",
            "id": 11332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allProposalAddresses",
            "nameLocation": "5904:20:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5924:2:45"
            },
            "returnParameters": {
              "id": 11328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11332,
                  "src": "5948:16:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11325,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5948:7:45",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11326,
                    "nodeType": "ArrayTypeName",
                    "src": "5948:9:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5947:18:45"
            },
            "scope": 11923,
            "src": "5895:107:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11376,
              "nodeType": "Block",
              "src": "6119:245:45",
              "statements": [
                {
                  "assignments": [
                    11344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11344,
                      "mutability": "mutable",
                      "name": "proposalData",
                      "nameLocation": "6143:12:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11376,
                      "src": "6129:26:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct PolicyProposals.Prop[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11342,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11341,
                            "name": "Prop",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11169,
                            "src": "6129:4:45"
                          },
                          "referencedDeclaration": 11169,
                          "src": "6129:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop"
                          }
                        },
                        "id": 11343,
                        "nodeType": "ArrayTypeName",
                        "src": "6129:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prop_$11169_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11351,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11349,
                        "name": "totalproposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11184,
                        "src": "6169:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6158:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct PolicyProposals.Prop memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11346,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11345,
                            "name": "Prop",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11169,
                            "src": "6162:4:45"
                          },
                          "referencedDeclaration": 11169,
                          "src": "6162:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop"
                          }
                        },
                        "id": 11347,
                        "nodeType": "ArrayTypeName",
                        "src": "6162:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prop_$11169_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop[]"
                        }
                      }
                    },
                    "id": 11350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6158:26:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PolicyProposals.Prop memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6129:55:45"
                },
                {
                  "body": {
                    "id": 11372,
                    "nodeType": "Block",
                    "src": "6251:77:45",
                    "statements": [
                      {
                        "expression": {
                          "id": 11370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 11362,
                              "name": "proposalData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11344,
                              "src": "6265:12:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct PolicyProposals.Prop memory[] memory"
                              }
                            },
                            "id": 11364,
                            "indexExpression": {
                              "id": 11363,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11353,
                              "src": "6278:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6265:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_memory_ptr",
                              "typeString": "struct PolicyProposals.Prop memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 11365,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11181,
                              "src": "6287:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                                "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                              }
                            },
                            "id": 11369,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 11366,
                                "name": "allProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11188,
                                "src": "6297:12:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 11368,
                              "indexExpression": {
                                "id": 11367,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11353,
                                "src": "6310:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6297:19:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6287:30:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage",
                              "typeString": "struct PolicyProposals.Prop storage ref"
                            }
                          },
                          "src": "6265:52:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_memory_ptr",
                            "typeString": "struct PolicyProposals.Prop memory"
                          }
                        },
                        "id": 11371,
                        "nodeType": "ExpressionStatement",
                        "src": "6265:52:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11356,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11353,
                      "src": "6218:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11357,
                      "name": "totalproposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11184,
                      "src": "6226:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6218:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11373,
                  "initializationExpression": {
                    "assignments": [
                      11353
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11353,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "6207:5:45",
                        "nodeType": "VariableDeclaration",
                        "scope": 11373,
                        "src": "6199:13:45",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11355,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6215:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6199:17:45"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6242:7:45",
                      "subExpression": {
                        "id": 11359,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11353,
                        "src": "6242:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11361,
                    "nodeType": "ExpressionStatement",
                    "src": "6242:7:45"
                  },
                  "nodeType": "ForStatement",
                  "src": "6194:134:45"
                },
                {
                  "expression": {
                    "id": 11374,
                    "name": "proposalData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11344,
                    "src": "6345:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PolicyProposals.Prop memory[] memory"
                    }
                  },
                  "functionReturnParameters": 11339,
                  "id": 11375,
                  "nodeType": "Return",
                  "src": "6338:19:45"
                }
              ]
            },
            "documentation": {
              "id": 11333,
              "nodeType": "StructuredDocumentation",
              "src": "6008:43:45",
              "text": "A list of all proposed policies"
            },
            "functionSelector": "25f4627f",
            "id": 11377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allProposalData",
            "nameLocation": "6065:15:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6080:2:45"
            },
            "returnParameters": {
              "id": 11339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11377,
                  "src": "6104:13:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PolicyProposals.Prop[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11336,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11335,
                        "name": "Prop",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11169,
                        "src": "6104:4:45"
                      },
                      "referencedDeclaration": 11169,
                      "src": "6104:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      }
                    },
                    "id": 11337,
                    "nodeType": "ArrayTypeName",
                    "src": "6104:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$11169_storage_$dyn_storage_ptr",
                      "typeString": "struct PolicyProposals.Prop[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6103:15:45"
            },
            "scope": 11923,
            "src": "6056:308:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11468,
              "nodeType": "Block",
              "src": "6792:834:45",
              "statements": [
                {
                  "assignments": [
                    11385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11385,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "6815:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11468,
                      "src": "6802:15:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 11384,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11383,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11169,
                          "src": "6802:4:45"
                        },
                        "referencedDeclaration": 11169,
                        "src": "6802:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11389,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11386,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11181,
                      "src": "6820:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                        "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 11388,
                    "indexExpression": {
                      "id": 11387,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11380,
                      "src": "6830:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6820:16:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$11169_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6802:34:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11391,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11380,
                          "src": "6855:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6872:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6864:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11392,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6864:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6864:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6855:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "id": 11397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6876:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        },
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        }
                      ],
                      "id": 11390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6847:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6847:63:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11399,
                  "nodeType": "ExpressionStatement",
                  "src": "6847:63:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11401,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16910,
                              "src": "6942:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 11402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6942:9:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 11403,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11209,
                            "src": "6954:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6942:24:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 11406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6970:17:45",
                          "subExpression": {
                            "id": 11405,
                            "name": "proposalSelected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11195,
                            "src": "6971:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6942:45:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e676572206265207265676973746572656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 11408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7001:81:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85",
                          "typeString": "literal_string \"Proposals may no longer be registered because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be registered because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85",
                          "typeString": "literal_string \"Proposals may no longer be registered because the registration period has ended\""
                        }
                      ],
                      "id": 11400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6921:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6921:171:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11410,
                  "nodeType": "ExpressionStatement",
                  "src": "6921:171:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11412,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11385,
                            "src": "7123:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11413,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "7123:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7146:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7138:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7138:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7138:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7123:25:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c206d6179206f6e6c792062652072656769737465726564206f6e6365",
                        "id": 11419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7162:40:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115",
                          "typeString": "literal_string \"A proposal may only be registered once\""
                        },
                        "value": "A proposal may only be registered once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115",
                          "typeString": "literal_string \"A proposal may only be registered once\""
                        }
                      ],
                      "id": 11411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7102:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:110:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11421,
                  "nodeType": "ExpressionStatement",
                  "src": "7102:110:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 11426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7267:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7267:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 11430,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7287:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                  "typeString": "contract PolicyProposals"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                  "typeString": "contract PolicyProposals"
                                }
                              ],
                              "id": 11429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7279:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11428,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7279:7:45",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7279:13:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11432,
                            "name": "COST_REGISTER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11202,
                            "src": "7294:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11423,
                              "name": "getToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11922,
                              "src": "7243:8:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 11424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7243:10:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1403",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 11425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1402,
                          "src": "7243:23:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 11433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7243:65:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d75737420626520617070726f76656420746f207472616e73666572207072696f7220746f2063616c6c696e6720726567697374657250726f706f73616c",
                        "id": 11434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7322:95:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252",
                          "typeString": "literal_string \"The token cost of registration must be approved to transfer prior to calling registerProposal\""
                        },
                        "value": "The token cost of registration must be approved to transfer prior to calling registerProposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252",
                          "typeString": "literal_string \"The token cost of registration must be approved to transfer prior to calling registerProposal\""
                        }
                      ],
                      "id": 11422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7222:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7222:205:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11436,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:205:45"
                },
                {
                  "expression": {
                    "id": 11441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11437,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11385,
                        "src": "7438:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11439,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11166,
                      "src": "7438:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11440,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11380,
                      "src": "7452:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7438:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11442,
                  "nodeType": "ExpressionStatement",
                  "src": "7438:19:45"
                },
                {
                  "expression": {
                    "id": 11448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11443,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11385,
                        "src": "7467:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11445,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11164,
                      "src": "7467:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11446,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7481:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7481:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7467:24:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11449,
                  "nodeType": "ExpressionStatement",
                  "src": "7467:24:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11453,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11380,
                        "src": "7520:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11450,
                        "name": "allProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11188,
                        "src": "7502:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 11452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7502:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 11454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7502:24:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11455,
                  "nodeType": "ExpressionStatement",
                  "src": "7502:24:45"
                },
                {
                  "expression": {
                    "id": 11460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11456,
                      "name": "totalproposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11184,
                      "src": "7536:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11457,
                        "name": "totalproposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11184,
                        "src": "7553:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 11458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7570:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "7553:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7536:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11461,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:35:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11463,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7601:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7601:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11465,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11380,
                        "src": "7613:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11462,
                      "name": "ProposalAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11225,
                      "src": "7587:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7587:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11467,
                  "nodeType": "EmitStatement",
                  "src": "7582:37:45"
                }
              ]
            },
            "documentation": {
              "id": 11378,
              "nodeType": "StructuredDocumentation",
              "src": "6370:367:45",
              "text": "Submit a proposal.\n You must approve the policy proposals contract to withdraw the required\n fee from your account before calling this.\n Can only be called during the proposals portion of the proposals phase.\n Each proposal may only be submitted once.\n @param _prop The address of the proposal to submit."
            },
            "functionSelector": "dea64535",
            "id": 11469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerProposal",
            "nameLocation": "6751:16:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11380,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "6776:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11469,
                  "src": "6768:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:15:45"
            },
            "returnParameters": {
              "id": 11382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6792:0:45"
            },
            "scope": 11923,
            "src": "6742:884:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11608,
              "nodeType": "Block",
              "src": "7952:1327:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11477,
                              "name": "ID_POLICY_PROPOSALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13650,
                              "src": "7993:19:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 11476,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13796,
                            "src": "7983:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 11478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7983:30:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11481,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "8025:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                "typeString": "contract PolicyProposals"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                "typeString": "contract PolicyProposals"
                              }
                            ],
                            "id": 11480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8017:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11479,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8017:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8017:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7983:47:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e67657220616374697665",
                        "id": 11484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8044:36:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        },
                        "value": "Proposal contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        }
                      ],
                      "id": 11475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7962:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7962:128:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11486,
                  "nodeType": "ExpressionStatement",
                  "src": "7962:128:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8108:17:45",
                        "subExpression": {
                          "id": 11488,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11195,
                          "src": "8109:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c6563746564",
                        "id": 11490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8127:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        },
                        "value": "A proposal has already been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        }
                      ],
                      "id": 11487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8100:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8100:66:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11492,
                  "nodeType": "ExpressionStatement",
                  "src": "8100:66:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11494,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16910,
                            "src": "8197:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8197:9:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 11496,
                          "name": "proposalEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11209,
                          "src": "8209:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8197:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f7274656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 11498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8235:80:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be supported because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        }
                      ],
                      "id": 11493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8176:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8176:149:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11500,
                  "nodeType": "ExpressionStatement",
                  "src": "8176:149:45"
                },
                {
                  "assignments": [
                    11502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11502,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "8344:7:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11608,
                      "src": "8336:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8336:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11508,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8366:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8366:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11506,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11212,
                        "src": "8378:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11503,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13407,
                      "src": "8354:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 11507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8354:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8336:54:45"
                },
                {
                  "assignments": [
                    11510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11510,
                      "mutability": "mutable",
                      "name": "_total",
                      "nameLocation": "8408:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11608,
                      "src": "8400:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8400:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11514,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11512,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11212,
                        "src": "8434:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11511,
                      "name": "totalVotingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13361,
                      "src": "8417:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 11513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8417:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8400:46:45"
                },
                {
                  "assignments": [
                    11517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11517,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "8470:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11608,
                      "src": "8457:15:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 11516,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11515,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11169,
                          "src": "8457:4:45"
                        },
                        "referencedDeclaration": 11169,
                        "src": "8457:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11524,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11518,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11181,
                      "src": "8475:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                        "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 11523,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11521,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11472,
                          "src": "8493:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8485:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11519,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8485:7:45",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8485:14:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8475:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$11169_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8457:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11526,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11502,
                          "src": "8532:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8542:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8532:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e206f7264657220746f20737570706f727420612070726f706f73616c20796f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e74206f6620746f6b656e73",
                        "id": 11529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8557:75:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f",
                          "typeString": "literal_string \"In order to support a proposal you must stake a non-zero amount of tokens\""
                        },
                        "value": "In order to support a proposal you must stake a non-zero amount of tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f",
                          "typeString": "literal_string \"In order to support a proposal you must stake a non-zero amount of tokens\""
                        }
                      ],
                      "id": 11525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8511:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8511:131:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11531,
                  "nodeType": "ExpressionStatement",
                  "src": "8511:131:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11533,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11517,
                            "src": "8673:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11534,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "8673:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8696:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8688:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11535,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8688:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8688:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8673:25:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520737570706f727465642070726f706f73616c206973206e6f742072656769737465726564",
                        "id": 11540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8712:42:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a",
                          "typeString": "literal_string \"The supported proposal is not registered\""
                        },
                        "value": "The supported proposal is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a",
                          "typeString": "literal_string \"The supported proposal is not registered\""
                        }
                      ],
                      "id": 11532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8652:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8652:112:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11542,
                  "nodeType": "ExpressionStatement",
                  "src": "8652:112:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8795:32:45",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 11544,
                              "name": "staked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11175,
                              "src": "8796:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 11547,
                            "indexExpression": {
                              "expression": {
                                "id": 11545,
                                "name": "_p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11517,
                                "src": "8803:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                                  "typeString": "struct PolicyProposals.Prop storage pointer"
                                }
                              },
                              "id": 11546,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11166,
                              "src": "8803:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8796:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 11550,
                          "indexExpression": {
                            "expression": {
                              "id": 11548,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8816:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8816:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8796:31:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d6179206e6f74207374616b6520696e20737570706f7274206f6620612070726f706f73616c207477696365",
                        "id": 11552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8841:50:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac",
                          "typeString": "literal_string \"You may not stake in support of a proposal twice\""
                        },
                        "value": "You may not stake in support of a proposal twice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac",
                          "typeString": "literal_string \"You may not stake in support of a proposal twice\""
                        }
                      ],
                      "id": 11543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8774:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8774:127:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11554,
                  "nodeType": "ExpressionStatement",
                  "src": "8774:127:45"
                },
                {
                  "expression": {
                    "id": 11562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11555,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11517,
                        "src": "8912:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11557,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11168,
                      "src": "8912:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11558,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11517,
                          "src": "8928:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 11559,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalstake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11168,
                        "src": "8928:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 11560,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11502,
                        "src": "8944:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8928:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8912:39:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11563,
                  "nodeType": "ExpressionStatement",
                  "src": "8912:39:45"
                },
                {
                  "expression": {
                    "id": 11572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11564,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11175,
                          "src": "8961:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11569,
                        "indexExpression": {
                          "expression": {
                            "id": 11565,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11517,
                            "src": "8968:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11566,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "8968:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8961:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11570,
                      "indexExpression": {
                        "expression": {
                          "id": 11567,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8981:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8981:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8961:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8995:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8961:38:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11573,
                  "nodeType": "ExpressionStatement",
                  "src": "8961:38:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11575,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9021:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9021:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11574,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13419,
                      "src": "9010:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9010:22:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11578,
                  "nodeType": "ExpressionStatement",
                  "src": "9010:22:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9065:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9065:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11582,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11472,
                        "src": "9077:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11579,
                      "name": "ProposalSupported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11232,
                      "src": "9047:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9047:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11584,
                  "nodeType": "EmitStatement",
                  "src": "9042:41:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 11585,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11517,
                        "src": "9098:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11586,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11168,
                      "src": "9098:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 11587,
                              "name": "_total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11510,
                              "src": "9115:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3330",
                              "id": 11588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9124:2:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_30_by_1",
                                "typeString": "int_const 30"
                              },
                              "value": "30"
                            },
                            "src": "9115:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 11590,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9114:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 11591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9130:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "9114:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9098:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11607,
                  "nodeType": "IfStatement",
                  "src": "9094:179:45",
                  "trueBody": {
                    "id": 11606,
                    "nodeType": "Block",
                    "src": "9135:138:45",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 11595,
                              "name": "_prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11472,
                              "src": "9178:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11594,
                            "name": "SupportThresholdReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11244,
                            "src": "9154:23:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 11596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9154:30:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11597,
                        "nodeType": "EmitStatement",
                        "src": "9149:35:45"
                      },
                      {
                        "expression": {
                          "id": 11600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11598,
                            "name": "proposalSelected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11195,
                            "src": "9198:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 11599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9217:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9198:23:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11601,
                        "nodeType": "ExpressionStatement",
                        "src": "9198:23:45"
                      },
                      {
                        "expression": {
                          "id": 11604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11602,
                            "name": "proposalToConfigure",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11198,
                            "src": "9235:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11603,
                            "name": "_prop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11472,
                            "src": "9257:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9235:27:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 11605,
                        "nodeType": "ExpressionStatement",
                        "src": "9235:27:45"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11470,
              "nodeType": "StructuredDocumentation",
              "src": "7632:274:45",
              "text": "Stake in support of an existing proposal.\n Can only be called during the staking portion of the proposals phase.\n Your voting strength is added to the supporting stake of the proposal.\n @param _prop The proposal to support."
            },
            "functionSelector": "e660cc08",
            "id": 11609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "support",
            "nameLocation": "7920:7:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11472,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "7936:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11609,
                  "src": "7928:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7928:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7927:15:45"
            },
            "returnParameters": {
              "id": 11474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7952:0:45"
            },
            "scope": 11923,
            "src": "7911:1368:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11694,
              "nodeType": "Block",
              "src": "9328:773:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11616,
                              "name": "ID_POLICY_PROPOSALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13650,
                              "src": "9369:19:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 11615,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13796,
                            "src": "9359:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 11617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9359:30:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11620,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "9401:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                "typeString": "contract PolicyProposals"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                "typeString": "contract PolicyProposals"
                              }
                            ],
                            "id": 11619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9393:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11618,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9393:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9393:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9359:47:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e67657220616374697665",
                        "id": 11623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9420:36:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        },
                        "value": "Proposal contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        }
                      ],
                      "id": 11614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9338:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9338:128:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11625,
                  "nodeType": "ExpressionStatement",
                  "src": "9338:128:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9484:17:45",
                        "subExpression": {
                          "id": 11627,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11195,
                          "src": "9485:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c6563746564",
                        "id": 11629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9503:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        },
                        "value": "A proposal has already been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        }
                      ],
                      "id": 11626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9476:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9476:66:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11631,
                  "nodeType": "ExpressionStatement",
                  "src": "9476:66:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11633,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16910,
                            "src": "9573:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9573:9:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 11635,
                          "name": "proposalEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11209,
                          "src": "9585:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9573:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f7274656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 11637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9611:80:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be supported because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        }
                      ],
                      "id": 11632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9552:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9552:149:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11639,
                  "nodeType": "ExpressionStatement",
                  "src": "9552:149:45"
                },
                {
                  "assignments": [
                    11641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11641,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "9720:7:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11694,
                      "src": "9712:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11640,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9712:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11647,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9742:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9742:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11645,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11212,
                        "src": "9754:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11642,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13407,
                      "src": "9730:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 11646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9730:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9712:54:45"
                },
                {
                  "assignments": [
                    11650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11650,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "9789:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11694,
                      "src": "9776:15:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 11649,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11648,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11169,
                          "src": "9776:4:45"
                        },
                        "referencedDeclaration": 11169,
                        "src": "9776:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11657,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11651,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11181,
                      "src": "9794:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                        "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 11656,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11654,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11611,
                          "src": "9812:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9804:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9804:7:45",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9804:14:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9794:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$11169_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9776:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 11659,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11175,
                            "src": "9851:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(address => mapping(address => bool))"
                            }
                          },
                          "id": 11662,
                          "indexExpression": {
                            "expression": {
                              "id": 11660,
                              "name": "_p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11650,
                              "src": "9858:2:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                                "typeString": "struct PolicyProposals.Prop storage pointer"
                              }
                            },
                            "id": 11661,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11166,
                            "src": "9858:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9851:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 11665,
                        "indexExpression": {
                          "expression": {
                            "id": 11663,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9871:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9871:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9851:31:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206e6f74207374616b656420746869732070726f706f73616c",
                        "id": 11666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9896:35:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15",
                          "typeString": "literal_string \"You have not staked this proposal\""
                        },
                        "value": "You have not staked this proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15",
                          "typeString": "literal_string \"You have not staked this proposal\""
                        }
                      ],
                      "id": 11658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9830:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9830:111:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11668,
                  "nodeType": "ExpressionStatement",
                  "src": "9830:111:45"
                },
                {
                  "expression": {
                    "id": 11676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11669,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11650,
                        "src": "9952:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11168,
                      "src": "9952:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11672,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11650,
                          "src": "9968:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 11673,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalstake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11168,
                        "src": "9968:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 11674,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11641,
                        "src": "9984:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9968:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9952:39:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11677,
                  "nodeType": "ExpressionStatement",
                  "src": "9952:39:45"
                },
                {
                  "expression": {
                    "id": 11686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11678,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11175,
                          "src": "10001:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11683,
                        "indexExpression": {
                          "expression": {
                            "id": 11679,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11650,
                            "src": "10008:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11680,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "10008:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10001:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11684,
                      "indexExpression": {
                        "expression": {
                          "id": 11681,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10021:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10021:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10001:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 11685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10035:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10001:39:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11687,
                  "nodeType": "ExpressionStatement",
                  "src": "10001:39:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10076:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10076:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11691,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11611,
                        "src": "10088:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11688,
                      "name": "ProposalUnsupported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11239,
                      "src": "10056:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10056:38:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11693,
                  "nodeType": "EmitStatement",
                  "src": "10051:43:45"
                }
              ]
            },
            "functionSelector": "3fc9d621",
            "id": 11695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsupport",
            "nameLocation": "9294:9:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11611,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "9312:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11695,
                  "src": "9304:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9304:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9303:15:45"
            },
            "returnParameters": {
              "id": 11613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9328:0:45"
            },
            "scope": 11923,
            "src": "9285:816:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11787,
              "nodeType": "Block",
              "src": "10148:800:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11699,
                        "name": "proposalSelected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11195,
                        "src": "10166:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f2070726f706f73616c20686173206265656e2073656c6563746564",
                        "id": 11700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10184:31:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf",
                          "typeString": "literal_string \"no proposal has been selected\""
                        },
                        "value": "no proposal has been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf",
                          "typeString": "literal_string \"no proposal has been selected\""
                        }
                      ],
                      "id": 11698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10158:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10158:58:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11702,
                  "nodeType": "ExpressionStatement",
                  "src": "10158:58:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11704,
                          "name": "proposalToConfigure",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11198,
                          "src": "10247:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10278:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10270:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11705,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10270:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10270:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10247:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e672068617320616c7265616479206265656e206465706c6f796564",
                        "id": 11710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10294:34:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844",
                          "typeString": "literal_string \"voting has already been deployed\""
                        },
                        "value": "voting has already been deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844",
                          "typeString": "literal_string \"voting has already been deployed\""
                        }
                      ],
                      "id": 11703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10226:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10226:112:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11712,
                  "nodeType": "ExpressionStatement",
                  "src": "10226:112:45"
                },
                {
                  "assignments": [
                    11714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11714,
                      "mutability": "mutable",
                      "name": "votingProposal",
                      "nameLocation": "10356:14:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11787,
                      "src": "10348:22:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11713,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10348:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11716,
                  "initialValue": {
                    "id": 11715,
                    "name": "proposalToConfigure",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11198,
                    "src": "10373:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10348:44:45"
                },
                {
                  "expression": {
                    "id": 11718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10402:26:45",
                    "subExpression": {
                      "id": 11717,
                      "name": "proposalToConfigure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11198,
                      "src": "10409:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11719,
                  "nodeType": "ExpressionStatement",
                  "src": "10402:26:45"
                },
                {
                  "assignments": [
                    11722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11722,
                      "mutability": "mutable",
                      "name": "pv",
                      "nameLocation": "10451:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11787,
                      "src": "10439:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                        "typeString": "contract PolicyVotes"
                      },
                      "typeName": {
                        "id": 11721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11720,
                          "name": "PolicyVotes",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12292,
                          "src": "10439:11:45"
                        },
                        "referencedDeclaration": 12292,
                        "src": "10439:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                          "typeString": "contract PolicyVotes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11730,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 11725,
                                "name": "policyVotesImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11215,
                                "src": "10480:15:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11724,
                              "name": "PolicyVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12292,
                              "src": "10468:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PolicyVotes_$12292_$",
                                "typeString": "type(contract PolicyVotes)"
                              }
                            },
                            "id": 11726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10468:28:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                              "typeString": "contract PolicyVotes"
                            }
                          },
                          "id": 11727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clone",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13781,
                          "src": "10468:34:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () external returns (address)"
                          }
                        },
                        "id": 11728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10468:36:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11723,
                      "name": "PolicyVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12292,
                      "src": "10456:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PolicyVotes_$12292_$",
                        "typeString": "type(contract PolicyVotes)"
                      }
                    },
                    "id": 11729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10456:49:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10439:66:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11736,
                            "name": "votingProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11714,
                            "src": "10536:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10528:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10528:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10528:23:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11731,
                        "name": "pv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11722,
                        "src": "10515:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                          "typeString": "contract PolicyVotes"
                        }
                      },
                      "id": 11733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configure",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12159,
                      "src": "10515:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10515:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11739,
                  "nodeType": "ExpressionStatement",
                  "src": "10515:37:45"
                },
                {
                  "assignments": [
                    11742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11742,
                      "mutability": "mutable",
                      "name": "sps",
                      "nameLocation": "10582:3:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11787,
                      "src": "10563:22:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                        "typeString": "contract SimplePolicySetter"
                      },
                      "typeName": {
                        "id": 11741,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11740,
                          "name": "SimplePolicySetter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12438,
                          "src": "10563:18:45"
                        },
                        "referencedDeclaration": 12438,
                        "src": "10563:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                          "typeString": "contract SimplePolicySetter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11755,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11748,
                            "name": "ID_POLICY_VOTES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13653,
                            "src": "10680:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 11751,
                                "name": "pv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11722,
                                "src": "10721:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                                  "typeString": "contract PolicyVotes"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                                  "typeString": "contract PolicyVotes"
                                }
                              ],
                              "id": 11750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10713:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11749,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10713:7:45",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10713:11:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 11745,
                                "name": "simplePolicyImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11218,
                                "src": "10639:16:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11744,
                              "name": "SimplePolicySetter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12438,
                              "src": "10620:18:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SimplePolicySetter_$12438_$",
                                "typeString": "type(contract SimplePolicySetter)"
                              }
                            },
                            "id": 11746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10620:36:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                              "typeString": "contract SimplePolicySetter"
                            }
                          },
                          "id": 11747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clone",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12408,
                          "src": "10620:42:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$_t_address_$",
                            "typeString": "function (bytes32,address) external returns (address)"
                          }
                        },
                        "id": 11753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10620:118:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11743,
                      "name": "SimplePolicySetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12438,
                      "src": "10588:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SimplePolicySetter_$12438_$",
                        "typeString": "type(contract SimplePolicySetter)"
                      }
                    },
                    "id": 11754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10588:160:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                      "typeString": "contract SimplePolicySetter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10563:185:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11762,
                            "name": "sps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11742,
                            "src": "10797:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                              "typeString": "contract SimplePolicySetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                              "typeString": "contract SimplePolicySetter"
                            }
                          ],
                          "id": 11761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10789:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10789:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10789:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11757,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13538,
                            "src": "10765:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11756,
                          "name": "Policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13940,
                          "src": "10758:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Policy_$13940_$",
                            "typeString": "type(contract Policy)"
                          }
                        },
                        "id": 11758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10758:14:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$13940",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 11759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "internalCommand",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13923,
                      "src": "10758:30:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10758:44:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11765,
                  "nodeType": "ExpressionStatement",
                  "src": "10758:44:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11769,
                            "name": "pv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11722,
                            "src": "10840:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                              "typeString": "contract PolicyVotes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                              "typeString": "contract PolicyVotes"
                            }
                          ],
                          "id": 11768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10832:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10832:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10832:11:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11766,
                      "name": "VotingStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11249,
                      "src": "10818:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10818:26:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11772,
                  "nodeType": "EmitStatement",
                  "src": "10813:31:45"
                },
                {
                  "expression": {
                    "id": 11779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10855:41:45",
                    "subExpression": {
                      "baseExpression": {
                        "id": 11773,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11181,
                        "src": "10862:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                          "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                        }
                      },
                      "id": 11778,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 11776,
                            "name": "votingProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11714,
                            "src": "10880:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10872:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11774,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10872:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10872:23:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10862:34:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage",
                        "typeString": "struct PolicyProposals.Prop storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11780,
                  "nodeType": "ExpressionStatement",
                  "src": "10855:41:45"
                },
                {
                  "expression": {
                    "id": 11785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11781,
                      "name": "totalproposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11184,
                      "src": "10906:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11782,
                        "name": "totalproposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11184,
                        "src": "10923:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 11783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10940:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10923:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10906:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11786,
                  "nodeType": "ExpressionStatement",
                  "src": "10906:35:45"
                }
              ]
            },
            "functionSelector": "34f1020e",
            "id": 11788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployProposalVoting",
            "nameLocation": "10116:20:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10136:2:45"
            },
            "returnParameters": {
              "id": 11697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10148:0:45"
            },
            "scope": 11923,
            "src": "10107:841:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11858,
              "nodeType": "Block",
              "src": "11306:632:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11795,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11195,
                          "src": "11337:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11796,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16910,
                              "src": "11357:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 11797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11357:9:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 11798,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11209,
                            "src": "11369:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11357:24:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11337:44:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6473206d6179206e6f7420626520646973747269627574656420756e74696c2074686520706572696f64206973206f766572",
                        "id": 11801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11395:57:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc",
                          "typeString": "literal_string \"Refunds may not be distributed until the period is over\""
                        },
                        "value": "Refunds may not be distributed until the period is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc",
                          "typeString": "literal_string \"Refunds may not be distributed until the period is over\""
                        }
                      ],
                      "id": 11794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11316:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11316:146:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11803,
                  "nodeType": "ExpressionStatement",
                  "src": "11316:146:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11805,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11791,
                          "src": "11481:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11498:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11490:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11806,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11490:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11490:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11481:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "id": 11811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11502:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        },
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        }
                      ],
                      "id": 11804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11473:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11473:63:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11813,
                  "nodeType": "ExpressionStatement",
                  "src": "11473:63:45"
                },
                {
                  "assignments": [
                    11816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11816,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "11560:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11858,
                      "src": "11547:15:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 11815,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11814,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11169,
                          "src": "11547:4:45"
                        },
                        "referencedDeclaration": 11169,
                        "src": "11547:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11820,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11817,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11181,
                      "src": "11565:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                        "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 11819,
                    "indexExpression": {
                      "id": 11818,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11791,
                      "src": "11575:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11565:16:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$11169_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11547:34:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11822,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11816,
                            "src": "11612:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "11612:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11824,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11791,
                          "src": "11627:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11612:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f76696465642070726f706f73616c2061646472657373206973206e6f742076616c6964",
                        "id": 11826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11646:44:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327",
                          "typeString": "literal_string \"The provided proposal address is not valid\""
                        },
                        "value": "The provided proposal address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327",
                          "typeString": "literal_string \"The provided proposal address is not valid\""
                        }
                      ],
                      "id": 11821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11591:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11591:109:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11828,
                  "nodeType": "ExpressionStatement",
                  "src": "11591:109:45"
                },
                {
                  "assignments": [
                    11830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11830,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "11719:8:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11858,
                      "src": "11711:16:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11829,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11711:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11833,
                  "initialValue": {
                    "expression": {
                      "id": 11831,
                      "name": "_p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11816,
                      "src": "11730:2:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop storage pointer"
                      }
                    },
                    "id": 11832,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "proposer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11164,
                    "src": "11730:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11711:30:45"
                },
                {
                  "expression": {
                    "id": 11837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11752:23:45",
                    "subExpression": {
                      "baseExpression": {
                        "id": 11834,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11181,
                        "src": "11759:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                          "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                        }
                      },
                      "id": 11836,
                      "indexExpression": {
                        "id": 11835,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11791,
                        "src": "11769:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11759:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage",
                        "typeString": "struct PolicyProposals.Prop storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11838,
                  "nodeType": "ExpressionStatement",
                  "src": "11752:23:45"
                },
                {
                  "expression": {
                    "id": 11843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11839,
                      "name": "totalproposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11184,
                      "src": "11785:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11840,
                        "name": "totalproposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11184,
                        "src": "11802:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 11841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11819:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "11802:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11785:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11844,
                  "nodeType": "ExpressionStatement",
                  "src": "11785:35:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11848,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11830,
                        "src": "11851:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11849,
                        "name": "REFUND_IF_LOST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11206,
                        "src": "11861:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11845,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "11831:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 11846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11831:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1403",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "11831:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11831:45:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11851,
                  "nodeType": "ExpressionStatement",
                  "src": "11831:45:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11853,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11830,
                        "src": "11909:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 11854,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11816,
                          "src": "11919:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 11855,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proposal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11166,
                        "src": "11919:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11852,
                      "name": "ProposalRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11256,
                      "src": "11892:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11892:39:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11857,
                  "nodeType": "EmitStatement",
                  "src": "11887:44:45"
                }
              ]
            },
            "documentation": {
              "id": 11789,
              "nodeType": "StructuredDocumentation",
              "src": "10954:307:45",
              "text": "Refund the fee for a proposal that was not selected.\n Returns a partial refund only, does not work on proposals that are\n on the ballot for the voting phase, and can only be called after the\n period is over.\n @param _prop The proposal to issue a refund for."
            },
            "functionSelector": "fa89401a",
            "id": 11859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "11275:6:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11791,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "11290:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11859,
                  "src": "11282:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11282:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11281:15:45"
            },
            "returnParameters": {
              "id": 11793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11306:0:45"
            },
            "scope": 11923,
            "src": "11266:672:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11907,
              "nodeType": "Block",
              "src": "12070:441:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11864,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11195,
                          "src": "12101:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11865,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16910,
                              "src": "12121:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 11866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12121:9:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 11867,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11209,
                            "src": "12133:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12121:24:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12101:44:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920626520706572666f726d6564207768656e2074686520706572696f64206973206f766572",
                        "id": 11870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12159:70:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db",
                          "typeString": "literal_string \"The destruct operation can only be performed when the period is over\""
                        },
                        "value": "The destruct operation can only be performed when the period is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db",
                          "typeString": "literal_string \"The destruct operation can only be performed when the period is over\""
                        }
                      ],
                      "id": 11863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12080:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12080:159:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11872,
                  "nodeType": "ExpressionStatement",
                  "src": "12080:159:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11874,
                          "name": "totalproposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11184,
                          "src": "12258:14:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12276:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12258:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420726566756e6420616c6c206d69737365642070726f706f73616c73206669727374",
                        "id": 11877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12279:40:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e",
                          "typeString": "literal_string \"Must refund all missed proposals first\""
                        },
                        "value": "Must refund all missed proposals first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e",
                          "typeString": "literal_string \"Must refund all missed proposals first\""
                        }
                      ],
                      "id": 11873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12250:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12250:70:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11879,
                  "nodeType": "ExpressionStatement",
                  "src": "12250:70:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11884,
                        "name": "ID_POLICY_PROPOSALS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13650,
                        "src": "12357:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11881,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13538,
                            "src": "12338:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11880,
                          "name": "Policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13940,
                          "src": "12331:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Policy_$13940_$",
                            "typeString": "type(contract Policy)"
                          }
                        },
                        "id": 11882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12331:14:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$13940",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 11883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeSelf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13848,
                      "src": "12331:25:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 11885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12331:46:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11886,
                  "nodeType": "ExpressionStatement",
                  "src": "12331:46:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 11894,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13538,
                                "src": "12437:6:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12429:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 11892,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "12429:7:45",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12429:15:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 11891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12421:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11890,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12421:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12421:24:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 11902,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "12488:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                  "typeString": "contract PolicyProposals"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                  "typeString": "contract PolicyProposals"
                                }
                              ],
                              "id": 11901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12480:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11900,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12480:7:45",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12480:13:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11897,
                              "name": "getToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11922,
                              "src": "12459:8:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 11898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12459:10:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1403",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 11899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1360,
                          "src": "12459:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 11904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12459:35:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11887,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "12388:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 11888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12388:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1403",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "12388:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12388:116:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11906,
                  "nodeType": "ExpressionStatement",
                  "src": "12388:116:45"
                }
              ]
            },
            "documentation": {
              "id": 11860,
              "nodeType": "StructuredDocumentation",
              "src": "11944:92:45",
              "text": "Reclaim tokens after end time\n only callable if all proposals are refunded"
            },
            "functionSelector": "2b68b9c6",
            "id": 11908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destruct",
            "nameLocation": "12050:8:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12058:2:45"
            },
            "returnParameters": {
              "id": 11862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12070:0:45"
            },
            "scope": 11923,
            "src": "12041:470:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11921,
              "nodeType": "Block",
              "src": "12623:49:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11917,
                            "name": "ID_ECO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13638,
                            "src": "12657:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 11916,
                          "name": "policyFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13796,
                          "src": "12647:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view returns (address)"
                          }
                        },
                        "id": 11918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12647:17:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11915,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "12640:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1403_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 11919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12640:25:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1403",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 11914,
                  "id": 11920,
                  "nodeType": "Return",
                  "src": "12633:32:45"
                }
              ]
            },
            "documentation": {
              "id": 11909,
              "nodeType": "StructuredDocumentation",
              "src": "12517:51:45",
              "text": "Get the associated ERC20 token address."
            },
            "id": 11922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "12582:8:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12590:2:45"
            },
            "returnParameters": {
              "id": 11914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11922,
                  "src": "12615:6:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1403",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11912,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11911,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1403,
                      "src": "12615:6:45"
                    },
                    "referencedDeclaration": 1403,
                    "src": "12615:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1403",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12614:8:45"
            },
            "scope": 11923,
            "src": "12573:99:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 11924,
        "src": "981:11693:45",
        "usedErrors": []
      }
    ],
    "src": "32:12643:45"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/governance/PolicyProposals.sol",
    "exportedSymbols": {
      "CloneFactory": [
        4532
      ],
      "CurrencyTimer": [
        9936
      ],
      "ECOx": [
        5512
      ],
      "ECOxLockup": [
        10216
      ],
      "ERC1820Client": [
        13518
      ],
      "ERC20": [
        6069
      ],
      "EcoBalanceStore": [
        6115
      ],
      "ForwardTarget": [
        14261
      ],
      "IERC1820Implementer": [
        1920
      ],
      "IERC1820Registry": [
        2010
      ],
      "IERC20": [
        1403
      ],
      "IERC20Metadata": [
        1509
      ],
      "IEcoBalanceStoreGenerationBalance": [
        6127
      ],
      "IGeneration": [
        10224
      ],
      "ILockups": [
        10234
      ],
      "InflationRootHashProposal": [
        7857
      ],
      "Lockup": [
        11146
      ],
      "Policed": [
        13619
      ],
      "PolicedUtils": [
        13797
      ],
      "Policy": [
        13940
      ],
      "PolicyProposals": [
        11923
      ],
      "PolicyVotes": [
        12292
      ],
      "Proposal": [
        12320
      ],
      "SimplePolicySetter": [
        12438
      ],
      "TimeUtils": [
        16911
      ],
      "VoteCheckpoints": [
        8607
      ],
      "VotingPower": [
        13460
      ]
    },
    "id": 11924,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11148,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:45"
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 11149,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 13941,
        "src": "57:30:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/EcoBalanceStore.sol",
        "file": "../currency/EcoBalanceStore.sol",
        "id": 11150,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 6116,
        "src": "88:41:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 11151,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 13798,
        "src": "130:36:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Proposal.sol",
        "file": "./Proposal.sol",
        "id": 11152,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 12321,
        "src": "167:24:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/PolicyVotes.sol",
        "file": "./PolicyVotes.sol",
        "id": 11153,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 12293,
        "src": "192:27:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/SimplePolicySetter.sol",
        "file": "./SimplePolicySetter.sol",
        "id": 11154,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 12439,
        "src": "220:34:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/VotingPower.sol",
        "file": "./VotingPower.sol",
        "id": 11155,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 13461,
        "src": "255:27:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 11156,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 16912,
        "src": "283:32:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 11157,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11924,
        "sourceUnit": 1404,
        "src": "316:56:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11159,
              "name": "VotingPower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13460,
              "src": "1009:11:45"
            },
            "id": 11160,
            "nodeType": "InheritanceSpecifier",
            "src": "1009:11:45"
          },
          {
            "baseName": {
              "id": 11161,
              "name": "TimeUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16911,
              "src": "1022:9:45"
            },
            "id": 11162,
            "nodeType": "InheritanceSpecifier",
            "src": "1022:9:45"
          }
        ],
        "canonicalName": "PolicyProposals",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11158,
          "nodeType": "StructuredDocumentation",
          "src": "374:606:45",
          "text": "@title PolicyProposals\n `PolicyProposals` oversees the proposals phase of the policy decision\n process. Proposals can be submitted by anyone willing to put forth funds, and\n submitted proposals can be supported by anyone\n First, during the proposals portion of the proposals phase, proposals can be\n submitted (for a fee). This is parallelized with a signal voting process where\n support can be distributed and redistributed to proposals after they are submitted.\n A proposal that makes it to support above 30% of the total possible support ends this\n phase and starts a vote."
        },
        "fullyImplemented": true,
        "id": 11923,
        "linearizedBaseContracts": [
          11923,
          16911,
          13460,
          13797,
          13518,
          4532,
          13619,
          1920,
          14261
        ],
        "name": "PolicyProposals",
        "nameLocation": "990:15:45",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PolicyProposals.Prop",
            "id": 11169,
            "members": [
              {
                "constant": false,
                "id": 11164,
                "mutability": "mutable",
                "name": "proposer",
                "nameLocation": "1182:8:45",
                "nodeType": "VariableDeclaration",
                "scope": 11169,
                "src": "1174:16:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11163,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1174:7:45",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11166,
                "mutability": "mutable",
                "name": "proposal",
                "nameLocation": "1269:8:45",
                "nodeType": "VariableDeclaration",
                "scope": 11169,
                "src": "1261:16:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11165,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1261:7:45",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11168,
                "mutability": "mutable",
                "name": "totalstake",
                "nameLocation": "1375:10:45",
                "nodeType": "VariableDeclaration",
                "scope": 11169,
                "src": "1367:18:45",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 11167,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1367:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prop",
            "nameLocation": "1098:4:45",
            "nodeType": "StructDefinition",
            "scope": 11923,
            "src": "1091:301:45",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6d3afc9",
            "id": 11175,
            "mutability": "mutable",
            "name": "staked",
            "nameLocation": "1541:6:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "1489:58:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 11174,
              "keyType": {
                "id": 11170,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1497:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1489:44:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 11173,
                "keyType": {
                  "id": 11171,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1516:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1508:24:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 11172,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1527:4:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11176,
              "nodeType": "StructuredDocumentation",
              "src": "1554:176:45",
              "text": "The set of proposals under consideration.\n maps from addresses of proposals to structs containing with info and\n the staking data (struct defined above)"
            },
            "functionSelector": "3341b445",
            "id": 11181,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "1767:9:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "1735:41:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
              "typeString": "mapping(address => struct PolicyProposals.Prop)"
            },
            "typeName": {
              "id": 11180,
              "keyType": {
                "id": 11177,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1743:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1735:24:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                "typeString": "mapping(address => struct PolicyProposals.Prop)"
              },
              "valueType": {
                "id": 11179,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11178,
                  "name": "Prop",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11169,
                  "src": "1754:4:45"
                },
                "referencedDeclaration": 11169,
                "src": "1754:4:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                  "typeString": "struct PolicyProposals.Prop"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11182,
              "nodeType": "StructuredDocumentation",
              "src": "1783:47:45",
              "text": "The total number of proposals made."
            },
            "functionSelector": "b88ad48b",
            "id": 11184,
            "mutability": "mutable",
            "name": "totalproposals",
            "nameLocation": "1850:14:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "1835:29:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1835:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11185,
              "nodeType": "StructuredDocumentation",
              "src": "1871:58:45",
              "text": "A list of the addresses of all proposals made."
            },
            "functionSelector": "938351b8",
            "id": 11188,
            "mutability": "mutable",
            "name": "allProposals",
            "nameLocation": "1951:12:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "1934:29:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 11186,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1934:7:45",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 11187,
              "nodeType": "ArrayTypeName",
              "src": "1934:9:45",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11189,
              "nodeType": "StructuredDocumentation",
              "src": "1970:71:45",
              "text": "The duration of the proposal portion of the proposal phase."
            },
            "functionSelector": "af12645a",
            "id": 11192,
            "mutability": "constant",
            "name": "PROPOSAL_TIME",
            "nameLocation": "2070:13:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2046:50:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11190,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2046:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 11191,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2086:10:45",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11193,
              "nodeType": "StructuredDocumentation",
              "src": "2103:63:45",
              "text": "Whether or not a winning proposal has been selected"
            },
            "functionSelector": "3dc716f3",
            "id": 11195,
            "mutability": "mutable",
            "name": "proposalSelected",
            "nameLocation": "2183:16:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2171:28:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11194,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2171:4:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11196,
              "nodeType": "StructuredDocumentation",
              "src": "2206:66:45",
              "text": "selected proposal awaiting configuration before voting"
            },
            "functionSelector": "c3d2a0bc",
            "id": 11198,
            "mutability": "mutable",
            "name": "proposalToConfigure",
            "nameLocation": "2292:19:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2277:34:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11197,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2277:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11199,
              "nodeType": "StructuredDocumentation",
              "src": "2318:52:45",
              "text": "The minimum cost to register a proposal."
            },
            "functionSelector": "8881a874",
            "id": 11202,
            "mutability": "constant",
            "name": "COST_REGISTER",
            "nameLocation": "2399:13:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2375:62:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11200,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2375:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030303030",
              "id": 11201,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2415:22:45",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              },
              "value": "1000000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11203,
              "nodeType": "StructuredDocumentation",
              "src": "2444:68:45",
              "text": "The amount refunded if a proposal does not get selected."
            },
            "functionSelector": "762ec1e9",
            "id": 11206,
            "mutability": "constant",
            "name": "REFUND_IF_LOST",
            "nameLocation": "2541:14:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2517:62:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11204,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2517:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "383030303030303030303030303030303030303030",
              "id": 11205,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2558:21:45",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_800000000000000000000_by_1",
                "typeString": "int_const 800000000000000000000"
              },
              "value": "800000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11207,
              "nodeType": "StructuredDocumentation",
              "src": "2586:79:45",
              "text": "The time at which the proposal portion of the proposals phase ends."
            },
            "functionSelector": "376cf9bf",
            "id": 11209,
            "mutability": "mutable",
            "name": "proposalEnds",
            "nameLocation": "2685:12:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2670:27:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11208,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2670:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11210,
              "nodeType": "StructuredDocumentation",
              "src": "2704:102:45",
              "text": "The block number of the balance stores to use for staking in\n support of a proposal."
            },
            "functionSelector": "57e871e7",
            "id": 11212,
            "mutability": "mutable",
            "name": "blockNumber",
            "nameLocation": "2826:11:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2811:26:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11211,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2811:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11213,
              "nodeType": "StructuredDocumentation",
              "src": "2844:96:45",
              "text": "The address of the `PolicyVotes` contract, to be cloned for the voting\n phase."
            },
            "functionSelector": "984db242",
            "id": 11215,
            "mutability": "mutable",
            "name": "policyVotesImpl",
            "nameLocation": "2960:15:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "2945:30:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11214,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2945:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11216,
              "nodeType": "StructuredDocumentation",
              "src": "2982:113:45",
              "text": "The address of a `SimplePolicySetter` contract used to grant permissions\n for the voting phase."
            },
            "functionSelector": "cebd2c09",
            "id": 11218,
            "mutability": "mutable",
            "name": "simplePolicyImpl",
            "nameLocation": "3115:16:45",
            "nodeType": "VariableDeclaration",
            "scope": 11923,
            "src": "3100:31:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11217,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3100:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11219,
              "nodeType": "StructuredDocumentation",
              "src": "3138:147:45",
              "text": "An event indicating a proposal has been proposed\n @param proposalAddress The address of the PolicyVotes contract instance."
            },
            "id": 11225,
            "name": "ProposalAdded",
            "nameLocation": "3296:13:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11221,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "3318:8:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11225,
                  "src": "3310:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3310:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11223,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3336:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11225,
                  "src": "3328:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3328:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3309:43:45"
            },
            "src": "3290:63:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11226,
              "nodeType": "StructuredDocumentation",
              "src": "3359:180:45",
              "text": "An event indicating that proposal have been supported by stake.\n @param proposalAddress The address of the PolicyVotes contract instance that was supported"
            },
            "id": 11232,
            "name": "ProposalSupported",
            "nameLocation": "3550:17:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11228,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "supporter",
                  "nameLocation": "3576:9:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11232,
                  "src": "3568:17:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3568:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11230,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3595:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11232,
                  "src": "3587:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3587:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3567:44:45"
            },
            "src": "3544:68:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11233,
              "nodeType": "StructuredDocumentation",
              "src": "3618:183:45",
              "text": "An event indicating that support has been removed from a proposal.\n @param proposalAddress The address of the PolicyVotes contract instance that was supported"
            },
            "id": 11239,
            "name": "ProposalUnsupported",
            "nameLocation": "3812:19:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11235,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "unsupporter",
                  "nameLocation": "3840:11:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11239,
                  "src": "3832:19:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3832:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11237,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3861:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11239,
                  "src": "3853:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3831:46:45"
            },
            "src": "3806:72:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11240,
              "nodeType": "StructuredDocumentation",
              "src": "3884:163:45",
              "text": "An event indicating a proposal has reached its support threshold\n @param proposalAddress The address of the PolicyVotes contract instance."
            },
            "id": 11244,
            "name": "SupportThresholdReached",
            "nameLocation": "4058:23:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11242,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "4090:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11244,
                  "src": "4082:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4082:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4081:25:45"
            },
            "src": "4052:55:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11245,
              "nodeType": "StructuredDocumentation",
              "src": "4113:163:45",
              "text": "An event indicating that proposals have been accepted for voting\n @param contractAddress The address of the PolicyVotes contract instance."
            },
            "id": 11249,
            "name": "VotingStarted",
            "nameLocation": "4287:13:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11247,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "4309:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11249,
                  "src": "4301:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4300:25:45"
            },
            "src": "4281:45:45"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11250,
              "nodeType": "StructuredDocumentation",
              "src": "4332:150:45",
              "text": "An event indicating that proposal fee was partially refunded.\n @param proposer The address of the proposee which was refunded"
            },
            "id": 11256,
            "name": "ProposalRefunded",
            "nameLocation": "4493:16:45",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11252,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "4518:8:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11256,
                  "src": "4510:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "4536:15:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11256,
                  "src": "4528:23:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11253,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4509:43:45"
            },
            "src": "4487:66:45"
          },
          {
            "body": {
              "id": 11277,
              "nodeType": "Block",
              "src": "5146:89:45",
              "statements": [
                {
                  "expression": {
                    "id": 11271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11269,
                      "name": "policyVotesImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11215,
                      "src": "5156:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11270,
                      "name": "_policyvotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11261,
                      "src": "5174:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5156:30:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11272,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:30:45"
                },
                {
                  "expression": {
                    "id": 11275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11273,
                      "name": "simplePolicyImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11218,
                      "src": "5196:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11274,
                      "name": "_simplepolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11263,
                      "src": "5215:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5196:32:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11276,
                  "nodeType": "ExpressionStatement",
                  "src": "5196:32:45"
                }
              ]
            },
            "documentation": {
              "id": 11257,
              "nodeType": "StructuredDocumentation",
              "src": "4559:457:45",
              "text": "Construct a new PolicyProposals instance using the provided supervising\n policy (root) and supporting contracts.\n @param _policy The root policy contract.\n @param _policyvotes The address of the contract that will be cloned to\n                     oversee the voting phase.\n @param _simplepolicy The address of the `SimplePolicySetter` contract to\n                      be used in managing permissions."
            },
            "id": 11278,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11266,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11259,
                    "src": "5137:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11267,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11265,
                  "name": "VotingPower",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13460,
                  "src": "5125:11:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "5125:20:45"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11259,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "5050:7:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11278,
                  "src": "5042:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5042:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11261,
                  "mutability": "mutable",
                  "name": "_policyvotes",
                  "nameLocation": "5075:12:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11278,
                  "src": "5067:20:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5067:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11263,
                  "mutability": "mutable",
                  "name": "_simplepolicy",
                  "nameLocation": "5105:13:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11278,
                  "src": "5097:21:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5097:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5032:92:45"
            },
            "returnParameters": {
              "id": 11268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5146:0:45"
            },
            "scope": 11923,
            "src": "5021:214:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13740
            ],
            "body": {
              "id": 11321,
              "nodeType": "Block",
              "src": "5561:266:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11290,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11281,
                        "src": "5588:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11287,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5571:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyProposals_$11923_$",
                          "typeString": "type(contract super PolicyProposals)"
                        }
                      },
                      "id": 11289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13740,
                      "src": "5571:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5571:23:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11292,
                  "nodeType": "ExpressionStatement",
                  "src": "5571:23:45"
                },
                {
                  "expression": {
                    "id": 11299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11293,
                      "name": "policyVotesImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11215,
                      "src": "5605:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 11295,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11281,
                              "src": "5639:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11294,
                            "name": "PolicyProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11923,
                            "src": "5623:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PolicyProposals_$11923_$",
                              "typeString": "type(contract PolicyProposals)"
                            }
                          },
                          "id": 11296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5623:22:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                            "typeString": "contract PolicyProposals"
                          }
                        },
                        "id": 11297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "policyVotesImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11215,
                        "src": "5623:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 11298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5623:40:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5605:58:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11300,
                  "nodeType": "ExpressionStatement",
                  "src": "5605:58:45"
                },
                {
                  "expression": {
                    "id": 11307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11301,
                      "name": "simplePolicyImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11218,
                      "src": "5673:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 11303,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11281,
                              "src": "5708:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11302,
                            "name": "PolicyProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11923,
                            "src": "5692:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PolicyProposals_$11923_$",
                              "typeString": "type(contract PolicyProposals)"
                            }
                          },
                          "id": 11304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5692:22:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                            "typeString": "contract PolicyProposals"
                          }
                        },
                        "id": 11305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "simplePolicyImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11218,
                        "src": "5692:39:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 11306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5692:41:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5673:60:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11308,
                  "nodeType": "ExpressionStatement",
                  "src": "5673:60:45"
                },
                {
                  "expression": {
                    "id": 11314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11309,
                      "name": "proposalEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11209,
                      "src": "5744:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11310,
                          "name": "getTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16910,
                          "src": "5759:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 11311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5759:9:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 11312,
                        "name": "PROPOSAL_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11192,
                        "src": "5771:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5759:25:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5744:40:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11315,
                  "nodeType": "ExpressionStatement",
                  "src": "5744:40:45"
                },
                {
                  "expression": {
                    "id": 11319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11316,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11212,
                      "src": "5794:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11317,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5808:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 11318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "5808:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5794:26:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11320,
                  "nodeType": "ExpressionStatement",
                  "src": "5794:26:45"
                }
              ]
            },
            "documentation": {
              "id": 11279,
              "nodeType": "StructuredDocumentation",
              "src": "5241:247:45",
              "text": "Initialize the storage context using parameters copied from the original\n contract (provided as _self).\n Can only be called once, during proxy initialization.\n @param _self The original contract address."
            },
            "functionSelector": "c4d66de8",
            "id": 11322,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11285,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11284,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14182,
                  "src": "5544:16:45"
                },
                "nodeType": "ModifierInvocation",
                "src": "5544:16:45"
              }
            ],
            "name": "initialize",
            "nameLocation": "5502:10:45",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11283,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5535:8:45"
            },
            "parameters": {
              "id": 11282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11281,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "5521:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11322,
                  "src": "5513:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5513:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5512:15:45"
            },
            "returnParameters": {
              "id": 11286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5561:0:45"
            },
            "scope": 11923,
            "src": "5493:334:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11331,
              "nodeType": "Block",
              "src": "5966:36:45",
              "statements": [
                {
                  "expression": {
                    "id": 11329,
                    "name": "allProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11188,
                    "src": "5983:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 11328,
                  "id": 11330,
                  "nodeType": "Return",
                  "src": "5976:19:45"
                }
              ]
            },
            "documentation": {
              "id": 11323,
              "nodeType": "StructuredDocumentation",
              "src": "5833:57:45",
              "text": "A list of addresses for all proposed policies"
            },
            "functionSelector": "b87341b8",
            "id": 11332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allProposalAddresses",
            "nameLocation": "5904:20:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5924:2:45"
            },
            "returnParameters": {
              "id": 11328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11332,
                  "src": "5948:16:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11325,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5948:7:45",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11326,
                    "nodeType": "ArrayTypeName",
                    "src": "5948:9:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5947:18:45"
            },
            "scope": 11923,
            "src": "5895:107:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11376,
              "nodeType": "Block",
              "src": "6119:245:45",
              "statements": [
                {
                  "assignments": [
                    11344
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11344,
                      "mutability": "mutable",
                      "name": "proposalData",
                      "nameLocation": "6143:12:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11376,
                      "src": "6129:26:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct PolicyProposals.Prop[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11342,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11341,
                            "name": "Prop",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11169,
                            "src": "6129:4:45"
                          },
                          "referencedDeclaration": 11169,
                          "src": "6129:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop"
                          }
                        },
                        "id": 11343,
                        "nodeType": "ArrayTypeName",
                        "src": "6129:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prop_$11169_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11351,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11349,
                        "name": "totalproposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11184,
                        "src": "6169:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6158:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct PolicyProposals.Prop memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11346,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 11345,
                            "name": "Prop",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 11169,
                            "src": "6162:4:45"
                          },
                          "referencedDeclaration": 11169,
                          "src": "6162:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop"
                          }
                        },
                        "id": 11347,
                        "nodeType": "ArrayTypeName",
                        "src": "6162:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prop_$11169_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop[]"
                        }
                      }
                    },
                    "id": 11350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6158:26:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PolicyProposals.Prop memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6129:55:45"
                },
                {
                  "body": {
                    "id": 11372,
                    "nodeType": "Block",
                    "src": "6251:77:45",
                    "statements": [
                      {
                        "expression": {
                          "id": 11370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 11362,
                              "name": "proposalData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11344,
                              "src": "6265:12:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct PolicyProposals.Prop memory[] memory"
                              }
                            },
                            "id": 11364,
                            "indexExpression": {
                              "id": 11363,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11353,
                              "src": "6278:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6265:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_memory_ptr",
                              "typeString": "struct PolicyProposals.Prop memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 11365,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11181,
                              "src": "6287:9:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                                "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                              }
                            },
                            "id": 11369,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 11366,
                                "name": "allProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11188,
                                "src": "6297:12:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 11368,
                              "indexExpression": {
                                "id": 11367,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11353,
                                "src": "6310:5:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6297:19:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6287:30:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage",
                              "typeString": "struct PolicyProposals.Prop storage ref"
                            }
                          },
                          "src": "6265:52:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_memory_ptr",
                            "typeString": "struct PolicyProposals.Prop memory"
                          }
                        },
                        "id": 11371,
                        "nodeType": "ExpressionStatement",
                        "src": "6265:52:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11356,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11353,
                      "src": "6218:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11357,
                      "name": "totalproposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11184,
                      "src": "6226:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6218:22:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11373,
                  "initializationExpression": {
                    "assignments": [
                      11353
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11353,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "6207:5:45",
                        "nodeType": "VariableDeclaration",
                        "scope": 11373,
                        "src": "6199:13:45",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11355,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6215:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6199:17:45"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 11360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6242:7:45",
                      "subExpression": {
                        "id": 11359,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11353,
                        "src": "6242:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11361,
                    "nodeType": "ExpressionStatement",
                    "src": "6242:7:45"
                  },
                  "nodeType": "ForStatement",
                  "src": "6194:134:45"
                },
                {
                  "expression": {
                    "id": 11374,
                    "name": "proposalData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11344,
                    "src": "6345:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PolicyProposals.Prop memory[] memory"
                    }
                  },
                  "functionReturnParameters": 11339,
                  "id": 11375,
                  "nodeType": "Return",
                  "src": "6338:19:45"
                }
              ]
            },
            "documentation": {
              "id": 11333,
              "nodeType": "StructuredDocumentation",
              "src": "6008:43:45",
              "text": "A list of all proposed policies"
            },
            "functionSelector": "25f4627f",
            "id": 11377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allProposalData",
            "nameLocation": "6065:15:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6080:2:45"
            },
            "returnParameters": {
              "id": 11339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11377,
                  "src": "6104:13:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Prop_$11169_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PolicyProposals.Prop[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11336,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 11335,
                        "name": "Prop",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 11169,
                        "src": "6104:4:45"
                      },
                      "referencedDeclaration": 11169,
                      "src": "6104:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      }
                    },
                    "id": 11337,
                    "nodeType": "ArrayTypeName",
                    "src": "6104:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$11169_storage_$dyn_storage_ptr",
                      "typeString": "struct PolicyProposals.Prop[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6103:15:45"
            },
            "scope": 11923,
            "src": "6056:308:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11468,
              "nodeType": "Block",
              "src": "6792:834:45",
              "statements": [
                {
                  "assignments": [
                    11385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11385,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "6815:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11468,
                      "src": "6802:15:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 11384,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11383,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11169,
                          "src": "6802:4:45"
                        },
                        "referencedDeclaration": 11169,
                        "src": "6802:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11389,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11386,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11181,
                      "src": "6820:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                        "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 11388,
                    "indexExpression": {
                      "id": 11387,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11380,
                      "src": "6830:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6820:16:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$11169_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6802:34:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11391,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11380,
                          "src": "6855:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6872:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6864:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11392,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6864:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6864:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6855:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "id": 11397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6876:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        },
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        }
                      ],
                      "id": 11390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6847:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6847:63:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11399,
                  "nodeType": "ExpressionStatement",
                  "src": "6847:63:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11401,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16910,
                              "src": "6942:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 11402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6942:9:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 11403,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11209,
                            "src": "6954:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6942:24:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 11406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6970:17:45",
                          "subExpression": {
                            "id": 11405,
                            "name": "proposalSelected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11195,
                            "src": "6971:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6942:45:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e676572206265207265676973746572656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 11408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7001:81:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85",
                          "typeString": "literal_string \"Proposals may no longer be registered because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be registered because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85",
                          "typeString": "literal_string \"Proposals may no longer be registered because the registration period has ended\""
                        }
                      ],
                      "id": 11400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6921:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6921:171:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11410,
                  "nodeType": "ExpressionStatement",
                  "src": "6921:171:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11412,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11385,
                            "src": "7123:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11413,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "7123:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7146:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7138:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11414,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7138:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7138:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7123:25:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c206d6179206f6e6c792062652072656769737465726564206f6e6365",
                        "id": 11419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7162:40:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115",
                          "typeString": "literal_string \"A proposal may only be registered once\""
                        },
                        "value": "A proposal may only be registered once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115",
                          "typeString": "literal_string \"A proposal may only be registered once\""
                        }
                      ],
                      "id": 11411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7102:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:110:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11421,
                  "nodeType": "ExpressionStatement",
                  "src": "7102:110:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 11426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7267:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7267:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 11430,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7287:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                  "typeString": "contract PolicyProposals"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                  "typeString": "contract PolicyProposals"
                                }
                              ],
                              "id": 11429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7279:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11428,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7279:7:45",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7279:13:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11432,
                            "name": "COST_REGISTER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11202,
                            "src": "7294:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11423,
                              "name": "getToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11922,
                              "src": "7243:8:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 11424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7243:10:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1403",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 11425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1402,
                          "src": "7243:23:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 11433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7243:65:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d75737420626520617070726f76656420746f207472616e73666572207072696f7220746f2063616c6c696e6720726567697374657250726f706f73616c",
                        "id": 11434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7322:95:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252",
                          "typeString": "literal_string \"The token cost of registration must be approved to transfer prior to calling registerProposal\""
                        },
                        "value": "The token cost of registration must be approved to transfer prior to calling registerProposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252",
                          "typeString": "literal_string \"The token cost of registration must be approved to transfer prior to calling registerProposal\""
                        }
                      ],
                      "id": 11422,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7222:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7222:205:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11436,
                  "nodeType": "ExpressionStatement",
                  "src": "7222:205:45"
                },
                {
                  "expression": {
                    "id": 11441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11437,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11385,
                        "src": "7438:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11439,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11166,
                      "src": "7438:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11440,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11380,
                      "src": "7452:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7438:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11442,
                  "nodeType": "ExpressionStatement",
                  "src": "7438:19:45"
                },
                {
                  "expression": {
                    "id": 11448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11443,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11385,
                        "src": "7467:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11445,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11164,
                      "src": "7467:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11446,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7481:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7481:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7467:24:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 11449,
                  "nodeType": "ExpressionStatement",
                  "src": "7467:24:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11453,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11380,
                        "src": "7520:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11450,
                        "name": "allProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11188,
                        "src": "7502:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 11452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7502:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 11454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7502:24:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11455,
                  "nodeType": "ExpressionStatement",
                  "src": "7502:24:45"
                },
                {
                  "expression": {
                    "id": 11460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11456,
                      "name": "totalproposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11184,
                      "src": "7536:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11457,
                        "name": "totalproposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11184,
                        "src": "7553:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 11458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7570:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "7553:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7536:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11461,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:35:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11463,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7601:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7601:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11465,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11380,
                        "src": "7613:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11462,
                      "name": "ProposalAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11225,
                      "src": "7587:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7587:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11467,
                  "nodeType": "EmitStatement",
                  "src": "7582:37:45"
                }
              ]
            },
            "documentation": {
              "id": 11378,
              "nodeType": "StructuredDocumentation",
              "src": "6370:367:45",
              "text": "Submit a proposal.\n You must approve the policy proposals contract to withdraw the required\n fee from your account before calling this.\n Can only be called during the proposals portion of the proposals phase.\n Each proposal may only be submitted once.\n @param _prop The address of the proposal to submit."
            },
            "functionSelector": "dea64535",
            "id": 11469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerProposal",
            "nameLocation": "6751:16:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11380,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "6776:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11469,
                  "src": "6768:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:15:45"
            },
            "returnParameters": {
              "id": 11382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6792:0:45"
            },
            "scope": 11923,
            "src": "6742:884:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11608,
              "nodeType": "Block",
              "src": "7952:1327:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11477,
                              "name": "ID_POLICY_PROPOSALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13650,
                              "src": "7993:19:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 11476,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13796,
                            "src": "7983:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 11478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7983:30:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11481,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "8025:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                "typeString": "contract PolicyProposals"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                "typeString": "contract PolicyProposals"
                              }
                            ],
                            "id": 11480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8017:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11479,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8017:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8017:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7983:47:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e67657220616374697665",
                        "id": 11484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8044:36:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        },
                        "value": "Proposal contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        }
                      ],
                      "id": 11475,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7962:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7962:128:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11486,
                  "nodeType": "ExpressionStatement",
                  "src": "7962:128:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8108:17:45",
                        "subExpression": {
                          "id": 11488,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11195,
                          "src": "8109:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c6563746564",
                        "id": 11490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8127:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        },
                        "value": "A proposal has already been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        }
                      ],
                      "id": 11487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8100:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8100:66:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11492,
                  "nodeType": "ExpressionStatement",
                  "src": "8100:66:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11494,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16910,
                            "src": "8197:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8197:9:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 11496,
                          "name": "proposalEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11209,
                          "src": "8209:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8197:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f7274656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 11498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8235:80:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be supported because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        }
                      ],
                      "id": 11493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8176:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8176:149:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11500,
                  "nodeType": "ExpressionStatement",
                  "src": "8176:149:45"
                },
                {
                  "assignments": [
                    11502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11502,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "8344:7:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11608,
                      "src": "8336:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8336:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11508,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11504,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8366:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8366:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11506,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11212,
                        "src": "8378:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11503,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13407,
                      "src": "8354:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 11507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8354:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8336:54:45"
                },
                {
                  "assignments": [
                    11510
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11510,
                      "mutability": "mutable",
                      "name": "_total",
                      "nameLocation": "8408:6:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11608,
                      "src": "8400:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11509,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8400:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11514,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11512,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11212,
                        "src": "8434:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11511,
                      "name": "totalVotingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13361,
                      "src": "8417:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 11513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8417:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8400:46:45"
                },
                {
                  "assignments": [
                    11517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11517,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "8470:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11608,
                      "src": "8457:15:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 11516,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11515,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11169,
                          "src": "8457:4:45"
                        },
                        "referencedDeclaration": 11169,
                        "src": "8457:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11524,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11518,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11181,
                      "src": "8475:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                        "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 11523,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11521,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11472,
                          "src": "8493:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8485:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11519,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8485:7:45",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8485:14:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8475:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$11169_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8457:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11526,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11502,
                          "src": "8532:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8542:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8532:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e206f7264657220746f20737570706f727420612070726f706f73616c20796f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e74206f6620746f6b656e73",
                        "id": 11529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8557:75:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f",
                          "typeString": "literal_string \"In order to support a proposal you must stake a non-zero amount of tokens\""
                        },
                        "value": "In order to support a proposal you must stake a non-zero amount of tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f",
                          "typeString": "literal_string \"In order to support a proposal you must stake a non-zero amount of tokens\""
                        }
                      ],
                      "id": 11525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8511:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8511:131:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11531,
                  "nodeType": "ExpressionStatement",
                  "src": "8511:131:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11533,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11517,
                            "src": "8673:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11534,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "8673:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8696:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8688:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11535,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8688:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8688:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8673:25:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520737570706f727465642070726f706f73616c206973206e6f742072656769737465726564",
                        "id": 11540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8712:42:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a",
                          "typeString": "literal_string \"The supported proposal is not registered\""
                        },
                        "value": "The supported proposal is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a",
                          "typeString": "literal_string \"The supported proposal is not registered\""
                        }
                      ],
                      "id": 11532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8652:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8652:112:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11542,
                  "nodeType": "ExpressionStatement",
                  "src": "8652:112:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8795:32:45",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 11544,
                              "name": "staked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11175,
                              "src": "8796:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(address => mapping(address => bool))"
                              }
                            },
                            "id": 11547,
                            "indexExpression": {
                              "expression": {
                                "id": 11545,
                                "name": "_p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11517,
                                "src": "8803:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                                  "typeString": "struct PolicyProposals.Prop storage pointer"
                                }
                              },
                              "id": 11546,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11166,
                              "src": "8803:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8796:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 11550,
                          "indexExpression": {
                            "expression": {
                              "id": 11548,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "8816:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8816:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8796:31:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d6179206e6f74207374616b6520696e20737570706f7274206f6620612070726f706f73616c207477696365",
                        "id": 11552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8841:50:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac",
                          "typeString": "literal_string \"You may not stake in support of a proposal twice\""
                        },
                        "value": "You may not stake in support of a proposal twice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac",
                          "typeString": "literal_string \"You may not stake in support of a proposal twice\""
                        }
                      ],
                      "id": 11543,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8774:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8774:127:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11554,
                  "nodeType": "ExpressionStatement",
                  "src": "8774:127:45"
                },
                {
                  "expression": {
                    "id": 11562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11555,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11517,
                        "src": "8912:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11557,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11168,
                      "src": "8912:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11558,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11517,
                          "src": "8928:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 11559,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalstake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11168,
                        "src": "8928:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 11560,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11502,
                        "src": "8944:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8928:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8912:39:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11563,
                  "nodeType": "ExpressionStatement",
                  "src": "8912:39:45"
                },
                {
                  "expression": {
                    "id": 11572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11564,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11175,
                          "src": "8961:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11569,
                        "indexExpression": {
                          "expression": {
                            "id": 11565,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11517,
                            "src": "8968:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11566,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "8968:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8961:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11570,
                      "indexExpression": {
                        "expression": {
                          "id": 11567,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8981:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8981:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8961:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 11571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8995:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8961:38:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11573,
                  "nodeType": "ExpressionStatement",
                  "src": "8961:38:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11575,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9021:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9021:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11574,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13419,
                      "src": "9010:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9010:22:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11578,
                  "nodeType": "ExpressionStatement",
                  "src": "9010:22:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11580,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9065:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9065:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11582,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11472,
                        "src": "9077:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11579,
                      "name": "ProposalSupported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11232,
                      "src": "9047:17:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9047:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11584,
                  "nodeType": "EmitStatement",
                  "src": "9042:41:45"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 11585,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11517,
                        "src": "9098:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11586,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11168,
                      "src": "9098:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 11589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 11587,
                              "name": "_total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11510,
                              "src": "9115:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3330",
                              "id": 11588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9124:2:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_30_by_1",
                                "typeString": "int_const 30"
                              },
                              "value": "30"
                            },
                            "src": "9115:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 11590,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9114:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 11591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9130:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "9114:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9098:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11607,
                  "nodeType": "IfStatement",
                  "src": "9094:179:45",
                  "trueBody": {
                    "id": 11606,
                    "nodeType": "Block",
                    "src": "9135:138:45",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 11595,
                              "name": "_prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11472,
                              "src": "9178:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11594,
                            "name": "SupportThresholdReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11244,
                            "src": "9154:23:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 11596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9154:30:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11597,
                        "nodeType": "EmitStatement",
                        "src": "9149:35:45"
                      },
                      {
                        "expression": {
                          "id": 11600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11598,
                            "name": "proposalSelected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11195,
                            "src": "9198:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 11599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9217:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9198:23:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11601,
                        "nodeType": "ExpressionStatement",
                        "src": "9198:23:45"
                      },
                      {
                        "expression": {
                          "id": 11604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11602,
                            "name": "proposalToConfigure",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11198,
                            "src": "9235:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11603,
                            "name": "_prop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11472,
                            "src": "9257:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9235:27:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 11605,
                        "nodeType": "ExpressionStatement",
                        "src": "9235:27:45"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11470,
              "nodeType": "StructuredDocumentation",
              "src": "7632:274:45",
              "text": "Stake in support of an existing proposal.\n Can only be called during the staking portion of the proposals phase.\n Your voting strength is added to the supporting stake of the proposal.\n @param _prop The proposal to support."
            },
            "functionSelector": "e660cc08",
            "id": 11609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "support",
            "nameLocation": "7920:7:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11472,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "7936:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11609,
                  "src": "7928:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7928:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7927:15:45"
            },
            "returnParameters": {
              "id": 11474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7952:0:45"
            },
            "scope": 11923,
            "src": "7911:1368:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11694,
              "nodeType": "Block",
              "src": "9328:773:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 11616,
                              "name": "ID_POLICY_PROPOSALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13650,
                              "src": "9369:19:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 11615,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13796,
                            "src": "9359:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 11617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9359:30:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11620,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "9401:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                "typeString": "contract PolicyProposals"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                "typeString": "contract PolicyProposals"
                              }
                            ],
                            "id": 11619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9393:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11618,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9393:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9393:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9359:47:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e67657220616374697665",
                        "id": 11623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9420:36:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        },
                        "value": "Proposal contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        }
                      ],
                      "id": 11614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9338:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9338:128:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11625,
                  "nodeType": "ExpressionStatement",
                  "src": "9338:128:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9484:17:45",
                        "subExpression": {
                          "id": 11627,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11195,
                          "src": "9485:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c6563746564",
                        "id": 11629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9503:38:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        },
                        "value": "A proposal has already been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        }
                      ],
                      "id": 11626,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9476:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9476:66:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11631,
                  "nodeType": "ExpressionStatement",
                  "src": "9476:66:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11633,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16910,
                            "src": "9573:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9573:9:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 11635,
                          "name": "proposalEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11209,
                          "src": "9585:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9573:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f7274656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 11637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9611:80:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be supported because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        }
                      ],
                      "id": 11632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9552:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9552:149:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11639,
                  "nodeType": "ExpressionStatement",
                  "src": "9552:149:45"
                },
                {
                  "assignments": [
                    11641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11641,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "9720:7:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11694,
                      "src": "9712:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11640,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9712:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11647,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9742:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9742:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11645,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11212,
                        "src": "9754:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11642,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13407,
                      "src": "9730:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 11646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9730:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9712:54:45"
                },
                {
                  "assignments": [
                    11650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11650,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "9789:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11694,
                      "src": "9776:15:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 11649,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11648,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11169,
                          "src": "9776:4:45"
                        },
                        "referencedDeclaration": 11169,
                        "src": "9776:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11657,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11651,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11181,
                      "src": "9794:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                        "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 11656,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 11654,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11611,
                          "src": "9812:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9804:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9804:7:45",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9804:14:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9794:25:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$11169_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9776:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 11659,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11175,
                            "src": "9851:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(address => mapping(address => bool))"
                            }
                          },
                          "id": 11662,
                          "indexExpression": {
                            "expression": {
                              "id": 11660,
                              "name": "_p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11650,
                              "src": "9858:2:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                                "typeString": "struct PolicyProposals.Prop storage pointer"
                              }
                            },
                            "id": 11661,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11166,
                            "src": "9858:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9851:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 11665,
                        "indexExpression": {
                          "expression": {
                            "id": 11663,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9871:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9871:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9851:31:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206e6f74207374616b656420746869732070726f706f73616c",
                        "id": 11666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9896:35:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15",
                          "typeString": "literal_string \"You have not staked this proposal\""
                        },
                        "value": "You have not staked this proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15",
                          "typeString": "literal_string \"You have not staked this proposal\""
                        }
                      ],
                      "id": 11658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9830:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9830:111:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11668,
                  "nodeType": "ExpressionStatement",
                  "src": "9830:111:45"
                },
                {
                  "expression": {
                    "id": 11676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 11669,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11650,
                        "src": "9952:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 11671,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalstake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11168,
                      "src": "9952:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 11672,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11650,
                          "src": "9968:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 11673,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalstake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11168,
                        "src": "9968:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 11674,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11641,
                        "src": "9984:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9968:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9952:39:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11677,
                  "nodeType": "ExpressionStatement",
                  "src": "9952:39:45"
                },
                {
                  "expression": {
                    "id": 11686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 11678,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11175,
                          "src": "10001:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 11683,
                        "indexExpression": {
                          "expression": {
                            "id": 11679,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11650,
                            "src": "10008:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11680,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "10008:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10001:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 11684,
                      "indexExpression": {
                        "expression": {
                          "id": 11681,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10021:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10021:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10001:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 11685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10035:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10001:39:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11687,
                  "nodeType": "ExpressionStatement",
                  "src": "10001:39:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10076:3:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10076:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11691,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11611,
                        "src": "10088:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11688,
                      "name": "ProposalUnsupported",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11239,
                      "src": "10056:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10056:38:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11693,
                  "nodeType": "EmitStatement",
                  "src": "10051:43:45"
                }
              ]
            },
            "functionSelector": "3fc9d621",
            "id": 11695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsupport",
            "nameLocation": "9294:9:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11611,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "9312:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11695,
                  "src": "9304:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9304:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9303:15:45"
            },
            "returnParameters": {
              "id": 11613,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9328:0:45"
            },
            "scope": 11923,
            "src": "9285:816:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11787,
              "nodeType": "Block",
              "src": "10148:800:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11699,
                        "name": "proposalSelected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11195,
                        "src": "10166:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f2070726f706f73616c20686173206265656e2073656c6563746564",
                        "id": 11700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10184:31:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf",
                          "typeString": "literal_string \"no proposal has been selected\""
                        },
                        "value": "no proposal has been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf",
                          "typeString": "literal_string \"no proposal has been selected\""
                        }
                      ],
                      "id": 11698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10158:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10158:58:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11702,
                  "nodeType": "ExpressionStatement",
                  "src": "10158:58:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11704,
                          "name": "proposalToConfigure",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11198,
                          "src": "10247:19:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10278:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10270:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11705,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10270:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10270:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10247:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e672068617320616c7265616479206265656e206465706c6f796564",
                        "id": 11710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10294:34:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844",
                          "typeString": "literal_string \"voting has already been deployed\""
                        },
                        "value": "voting has already been deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844",
                          "typeString": "literal_string \"voting has already been deployed\""
                        }
                      ],
                      "id": 11703,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10226:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10226:112:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11712,
                  "nodeType": "ExpressionStatement",
                  "src": "10226:112:45"
                },
                {
                  "assignments": [
                    11714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11714,
                      "mutability": "mutable",
                      "name": "votingProposal",
                      "nameLocation": "10356:14:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11787,
                      "src": "10348:22:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11713,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10348:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11716,
                  "initialValue": {
                    "id": 11715,
                    "name": "proposalToConfigure",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11198,
                    "src": "10373:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10348:44:45"
                },
                {
                  "expression": {
                    "id": 11718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10402:26:45",
                    "subExpression": {
                      "id": 11717,
                      "name": "proposalToConfigure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11198,
                      "src": "10409:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11719,
                  "nodeType": "ExpressionStatement",
                  "src": "10402:26:45"
                },
                {
                  "assignments": [
                    11722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11722,
                      "mutability": "mutable",
                      "name": "pv",
                      "nameLocation": "10451:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11787,
                      "src": "10439:14:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                        "typeString": "contract PolicyVotes"
                      },
                      "typeName": {
                        "id": 11721,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11720,
                          "name": "PolicyVotes",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12292,
                          "src": "10439:11:45"
                        },
                        "referencedDeclaration": 12292,
                        "src": "10439:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                          "typeString": "contract PolicyVotes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11730,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 11725,
                                "name": "policyVotesImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11215,
                                "src": "10480:15:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11724,
                              "name": "PolicyVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12292,
                              "src": "10468:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_PolicyVotes_$12292_$",
                                "typeString": "type(contract PolicyVotes)"
                              }
                            },
                            "id": 11726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10468:28:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                              "typeString": "contract PolicyVotes"
                            }
                          },
                          "id": 11727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clone",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13781,
                          "src": "10468:34:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () external returns (address)"
                          }
                        },
                        "id": 11728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10468:36:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11723,
                      "name": "PolicyVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12292,
                      "src": "10456:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PolicyVotes_$12292_$",
                        "typeString": "type(contract PolicyVotes)"
                      }
                    },
                    "id": 11729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10456:49:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10439:66:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11736,
                            "name": "votingProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11714,
                            "src": "10536:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10528:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11734,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10528:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10528:23:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 11731,
                        "name": "pv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11722,
                        "src": "10515:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                          "typeString": "contract PolicyVotes"
                        }
                      },
                      "id": 11733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configure",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12159,
                      "src": "10515:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10515:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11739,
                  "nodeType": "ExpressionStatement",
                  "src": "10515:37:45"
                },
                {
                  "assignments": [
                    11742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11742,
                      "mutability": "mutable",
                      "name": "sps",
                      "nameLocation": "10582:3:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11787,
                      "src": "10563:22:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                        "typeString": "contract SimplePolicySetter"
                      },
                      "typeName": {
                        "id": 11741,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11740,
                          "name": "SimplePolicySetter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12438,
                          "src": "10563:18:45"
                        },
                        "referencedDeclaration": 12438,
                        "src": "10563:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                          "typeString": "contract SimplePolicySetter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11755,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11748,
                            "name": "ID_POLICY_VOTES",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13653,
                            "src": "10680:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 11751,
                                "name": "pv",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11722,
                                "src": "10721:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                                  "typeString": "contract PolicyVotes"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                                  "typeString": "contract PolicyVotes"
                                }
                              ],
                              "id": 11750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10713:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11749,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10713:7:45",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10713:11:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 11745,
                                "name": "simplePolicyImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11218,
                                "src": "10639:16:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11744,
                              "name": "SimplePolicySetter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12438,
                              "src": "10620:18:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SimplePolicySetter_$12438_$",
                                "typeString": "type(contract SimplePolicySetter)"
                              }
                            },
                            "id": 11746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10620:36:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                              "typeString": "contract SimplePolicySetter"
                            }
                          },
                          "id": 11747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clone",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12408,
                          "src": "10620:42:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$_t_address_$",
                            "typeString": "function (bytes32,address) external returns (address)"
                          }
                        },
                        "id": 11753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10620:118:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11743,
                      "name": "SimplePolicySetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12438,
                      "src": "10588:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_SimplePolicySetter_$12438_$",
                        "typeString": "type(contract SimplePolicySetter)"
                      }
                    },
                    "id": 11754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10588:160:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                      "typeString": "contract SimplePolicySetter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10563:185:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11762,
                            "name": "sps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11742,
                            "src": "10797:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                              "typeString": "contract SimplePolicySetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SimplePolicySetter_$12438",
                              "typeString": "contract SimplePolicySetter"
                            }
                          ],
                          "id": 11761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10789:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10789:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10789:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11757,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13538,
                            "src": "10765:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11756,
                          "name": "Policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13940,
                          "src": "10758:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Policy_$13940_$",
                            "typeString": "type(contract Policy)"
                          }
                        },
                        "id": 11758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10758:14:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$13940",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 11759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "internalCommand",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13923,
                      "src": "10758:30:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 11764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10758:44:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11765,
                  "nodeType": "ExpressionStatement",
                  "src": "10758:44:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11769,
                            "name": "pv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11722,
                            "src": "10840:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                              "typeString": "contract PolicyVotes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyVotes_$12292",
                              "typeString": "contract PolicyVotes"
                            }
                          ],
                          "id": 11768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10832:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10832:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10832:11:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11766,
                      "name": "VotingStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11249,
                      "src": "10818:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10818:26:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11772,
                  "nodeType": "EmitStatement",
                  "src": "10813:31:45"
                },
                {
                  "expression": {
                    "id": 11779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10855:41:45",
                    "subExpression": {
                      "baseExpression": {
                        "id": 11773,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11181,
                        "src": "10862:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                          "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                        }
                      },
                      "id": 11778,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 11776,
                            "name": "votingProposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11714,
                            "src": "10880:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10872:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11774,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10872:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10872:23:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10862:34:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage",
                        "typeString": "struct PolicyProposals.Prop storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11780,
                  "nodeType": "ExpressionStatement",
                  "src": "10855:41:45"
                },
                {
                  "expression": {
                    "id": 11785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11781,
                      "name": "totalproposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11184,
                      "src": "10906:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11782,
                        "name": "totalproposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11184,
                        "src": "10923:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 11783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10940:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10923:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10906:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11786,
                  "nodeType": "ExpressionStatement",
                  "src": "10906:35:45"
                }
              ]
            },
            "functionSelector": "34f1020e",
            "id": 11788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployProposalVoting",
            "nameLocation": "10116:20:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10136:2:45"
            },
            "returnParameters": {
              "id": 11697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10148:0:45"
            },
            "scope": 11923,
            "src": "10107:841:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11858,
              "nodeType": "Block",
              "src": "11306:632:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11795,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11195,
                          "src": "11337:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11796,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16910,
                              "src": "11357:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 11797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11357:9:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 11798,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11209,
                            "src": "11369:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11357:24:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11337:44:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6473206d6179206e6f7420626520646973747269627574656420756e74696c2074686520706572696f64206973206f766572",
                        "id": 11801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11395:57:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc",
                          "typeString": "literal_string \"Refunds may not be distributed until the period is over\""
                        },
                        "value": "Refunds may not be distributed until the period is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc",
                          "typeString": "literal_string \"Refunds may not be distributed until the period is over\""
                        }
                      ],
                      "id": 11794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11316:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11316:146:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11803,
                  "nodeType": "ExpressionStatement",
                  "src": "11316:146:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11805,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11791,
                          "src": "11481:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11498:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11490:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11806,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11490:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11490:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11481:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "id": 11811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11502:33:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        },
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        }
                      ],
                      "id": 11804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11473:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11473:63:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11813,
                  "nodeType": "ExpressionStatement",
                  "src": "11473:63:45"
                },
                {
                  "assignments": [
                    11816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11816,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "11560:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11858,
                      "src": "11547:15:45",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 11815,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11814,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11169,
                          "src": "11547:4:45"
                        },
                        "referencedDeclaration": 11169,
                        "src": "11547:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11820,
                  "initialValue": {
                    "baseExpression": {
                      "id": 11817,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11181,
                      "src": "11565:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                        "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 11819,
                    "indexExpression": {
                      "id": 11818,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11791,
                      "src": "11575:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11565:16:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$11169_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11547:34:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 11822,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11816,
                            "src": "11612:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 11823,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11166,
                          "src": "11612:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 11824,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11791,
                          "src": "11627:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11612:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f76696465642070726f706f73616c2061646472657373206973206e6f742076616c6964",
                        "id": 11826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11646:44:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327",
                          "typeString": "literal_string \"The provided proposal address is not valid\""
                        },
                        "value": "The provided proposal address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327",
                          "typeString": "literal_string \"The provided proposal address is not valid\""
                        }
                      ],
                      "id": 11821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11591:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11591:109:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11828,
                  "nodeType": "ExpressionStatement",
                  "src": "11591:109:45"
                },
                {
                  "assignments": [
                    11830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11830,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "11719:8:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 11858,
                      "src": "11711:16:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11829,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11711:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11833,
                  "initialValue": {
                    "expression": {
                      "id": 11831,
                      "name": "_p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11816,
                      "src": "11730:2:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop storage pointer"
                      }
                    },
                    "id": 11832,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "proposer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 11164,
                    "src": "11730:11:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11711:30:45"
                },
                {
                  "expression": {
                    "id": 11837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11752:23:45",
                    "subExpression": {
                      "baseExpression": {
                        "id": 11834,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11181,
                        "src": "11759:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Prop_$11169_storage_$",
                          "typeString": "mapping(address => struct PolicyProposals.Prop storage ref)"
                        }
                      },
                      "id": 11836,
                      "indexExpression": {
                        "id": 11835,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11791,
                        "src": "11769:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11759:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$11169_storage",
                        "typeString": "struct PolicyProposals.Prop storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11838,
                  "nodeType": "ExpressionStatement",
                  "src": "11752:23:45"
                },
                {
                  "expression": {
                    "id": 11843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11839,
                      "name": "totalproposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11184,
                      "src": "11785:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 11842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11840,
                        "name": "totalproposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11184,
                        "src": "11802:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 11841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11819:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "11802:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11785:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11844,
                  "nodeType": "ExpressionStatement",
                  "src": "11785:35:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11848,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11830,
                        "src": "11851:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11849,
                        "name": "REFUND_IF_LOST",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11206,
                        "src": "11861:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11845,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "11831:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 11846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11831:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1403",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "11831:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11831:45:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11851,
                  "nodeType": "ExpressionStatement",
                  "src": "11831:45:45"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11853,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11830,
                        "src": "11909:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 11854,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11816,
                          "src": "11919:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$11169_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 11855,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "proposal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11166,
                        "src": "11919:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11852,
                      "name": "ProposalRefunded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11256,
                      "src": "11892:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 11856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11892:39:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11857,
                  "nodeType": "EmitStatement",
                  "src": "11887:44:45"
                }
              ]
            },
            "documentation": {
              "id": 11789,
              "nodeType": "StructuredDocumentation",
              "src": "10954:307:45",
              "text": "Refund the fee for a proposal that was not selected.\n Returns a partial refund only, does not work on proposals that are\n on the ballot for the voting phase, and can only be called after the\n period is over.\n @param _prop The proposal to issue a refund for."
            },
            "functionSelector": "fa89401a",
            "id": 11859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "11275:6:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11791,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "11290:5:45",
                  "nodeType": "VariableDeclaration",
                  "scope": 11859,
                  "src": "11282:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11790,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11282:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11281:15:45"
            },
            "returnParameters": {
              "id": 11793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11306:0:45"
            },
            "scope": 11923,
            "src": "11266:672:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11907,
              "nodeType": "Block",
              "src": "12070:441:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11864,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11195,
                          "src": "12101:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11865,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16910,
                              "src": "12121:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 11866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12121:9:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 11867,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11209,
                            "src": "12133:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12121:24:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12101:44:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920626520706572666f726d6564207768656e2074686520706572696f64206973206f766572",
                        "id": 11870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12159:70:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db",
                          "typeString": "literal_string \"The destruct operation can only be performed when the period is over\""
                        },
                        "value": "The destruct operation can only be performed when the period is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db",
                          "typeString": "literal_string \"The destruct operation can only be performed when the period is over\""
                        }
                      ],
                      "id": 11863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12080:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12080:159:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11872,
                  "nodeType": "ExpressionStatement",
                  "src": "12080:159:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11874,
                          "name": "totalproposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11184,
                          "src": "12258:14:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 11875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12276:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12258:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420726566756e6420616c6c206d69737365642070726f706f73616c73206669727374",
                        "id": 11877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12279:40:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e",
                          "typeString": "literal_string \"Must refund all missed proposals first\""
                        },
                        "value": "Must refund all missed proposals first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e",
                          "typeString": "literal_string \"Must refund all missed proposals first\""
                        }
                      ],
                      "id": 11873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12250:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12250:70:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11879,
                  "nodeType": "ExpressionStatement",
                  "src": "12250:70:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11884,
                        "name": "ID_POLICY_PROPOSALS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13650,
                        "src": "12357:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11881,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13538,
                            "src": "12338:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11880,
                          "name": "Policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13940,
                          "src": "12331:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Policy_$13940_$",
                            "typeString": "type(contract Policy)"
                          }
                        },
                        "id": 11882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12331:14:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$13940",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 11883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeSelf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13848,
                      "src": "12331:25:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 11885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12331:46:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11886,
                  "nodeType": "ExpressionStatement",
                  "src": "12331:46:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 11894,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13538,
                                "src": "12437:6:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 11893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12429:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 11892,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "12429:7:45",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12429:15:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 11891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12421:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11890,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12421:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12421:24:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 11902,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "12488:4:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                  "typeString": "contract PolicyProposals"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$11923",
                                  "typeString": "contract PolicyProposals"
                                }
                              ],
                              "id": 11901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12480:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 11900,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12480:7:45",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12480:13:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11897,
                              "name": "getToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11922,
                              "src": "12459:8:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 11898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12459:10:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1403",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 11899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1360,
                          "src": "12459:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 11904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12459:35:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11887,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11922,
                          "src": "12388:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 11888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12388:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1403",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 11889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "12388:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 11905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12388:116:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11906,
                  "nodeType": "ExpressionStatement",
                  "src": "12388:116:45"
                }
              ]
            },
            "documentation": {
              "id": 11860,
              "nodeType": "StructuredDocumentation",
              "src": "11944:92:45",
              "text": "Reclaim tokens after end time\n only callable if all proposals are refunded"
            },
            "functionSelector": "2b68b9c6",
            "id": 11908,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destruct",
            "nameLocation": "12050:8:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12058:2:45"
            },
            "returnParameters": {
              "id": 11862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12070:0:45"
            },
            "scope": 11923,
            "src": "12041:470:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11921,
              "nodeType": "Block",
              "src": "12623:49:45",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 11917,
                            "name": "ID_ECO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13638,
                            "src": "12657:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 11916,
                          "name": "policyFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13796,
                          "src": "12647:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view returns (address)"
                          }
                        },
                        "id": 11918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12647:17:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11915,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "12640:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1403_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 11919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12640:25:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1403",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 11914,
                  "id": 11920,
                  "nodeType": "Return",
                  "src": "12633:32:45"
                }
              ]
            },
            "documentation": {
              "id": 11909,
              "nodeType": "StructuredDocumentation",
              "src": "12517:51:45",
              "text": "Get the associated ERC20 token address."
            },
            "id": 11922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "12582:8:45",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12590:2:45"
            },
            "returnParameters": {
              "id": 11914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11913,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11922,
                  "src": "12615:6:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1403",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11912,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11911,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1403,
                      "src": "12615:6:45"
                    },
                    "referencedDeclaration": 1403,
                    "src": "12615:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1403",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12614:8:45"
            },
            "scope": 11923,
            "src": "12573:99:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 11924,
        "src": "981:11693:45",
        "usedErrors": []
      }
    ],
    "src": "32:12643:45"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-06-16T22:14:23.093Z",
  "devdoc": {
    "events": {
      "ProposalAdded(address,address)": {
        "params": {
          "proposalAddress": "The address of the PolicyVotes contract instance."
        }
      },
      "ProposalRefunded(address,address)": {
        "params": {
          "proposer": "The address of the proposee which was refunded"
        }
      },
      "ProposalSupported(address,address)": {
        "params": {
          "proposalAddress": "The address of the PolicyVotes contract instance that was supported"
        }
      },
      "ProposalUnsupported(address,address)": {
        "params": {
          "proposalAddress": "The address of the PolicyVotes contract instance that was supported"
        }
      },
      "SupportThresholdReached(address)": {
        "params": {
          "proposalAddress": "The address of the PolicyVotes contract instance."
        }
      },
      "VotingStarted(address)": {
        "params": {
          "contractAddress": "The address of the PolicyVotes contract instance."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "params": {
          "_addr": "The address of the contract we might act on behalf of."
        }
      },
      "constructor": {
        "params": {
          "_policy": "The root policy contract.",
          "_policyvotes": "The address of the contract that will be cloned to                     oversee the voting phase.",
          "_simplepolicy": "The address of the `SimplePolicySetter` contract to                      be used in managing permissions."
        }
      },
      "initialize(address)": {
        "params": {
          "_self": "The original contract address."
        }
      },
      "policyCommand(address,bytes)": {
        "params": {
          "_data": "The call message/data to execute on.",
          "_delegate": "The address of the contract to delegate execution to."
        }
      },
      "refund(address)": {
        "params": {
          "_prop": "The proposal to issue a refund for."
        }
      },
      "registerProposal(address)": {
        "params": {
          "_prop": "The address of the proposal to submit."
        }
      },
      "support(address)": {
        "params": {
          "_prop": "The proposal to support."
        }
      }
    },
    "title": "PolicyProposals `PolicyProposals` oversees the proposals phase of the policy decision process. Proposals can be submitted by anyone willing to put forth funds, and submitted proposals can be supported by anyone First, during the proposals portion of the proposals phase, proposals can be submitted (for a fee). This is parallelized with a signal voting process where support can be distributed and redistributed to proposals after they are submitted. A proposal that makes it to support above 30% of the total possible support ends this phase and starts a vote.",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ProposalAdded(address,address)": {
        "notice": "An event indicating a proposal has been proposed"
      },
      "ProposalRefunded(address,address)": {
        "notice": "An event indicating that proposal fee was partially refunded."
      },
      "ProposalSupported(address,address)": {
        "notice": "An event indicating that proposal have been supported by stake."
      },
      "ProposalUnsupported(address,address)": {
        "notice": "An event indicating that support has been removed from a proposal."
      },
      "SupportThresholdReached(address)": {
        "notice": "An event indicating a proposal has reached its support threshold"
      },
      "VotingStarted(address)": {
        "notice": "An event indicating that proposals have been accepted for voting"
      }
    },
    "kind": "user",
    "methods": {
      "COST_REGISTER()": {
        "notice": "The minimum cost to register a proposal."
      },
      "PROPOSAL_TIME()": {
        "notice": "The duration of the proposal portion of the proposal phase."
      },
      "REFUND_IF_LOST()": {
        "notice": "The amount refunded if a proposal does not get selected."
      },
      "allProposalAddresses()": {
        "notice": "A list of addresses for all proposed policies"
      },
      "allProposalData()": {
        "notice": "A list of all proposed policies"
      },
      "allProposals(uint256)": {
        "notice": "A list of the addresses of all proposals made."
      },
      "blockNumber()": {
        "notice": "The block number of the balance stores to use for staking in support of a proposal."
      },
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "ERC1820 permissioning interface"
      },
      "clone()": {
        "notice": "Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract."
      },
      "constructor": {
        "notice": "Construct a new PolicyProposals instance using the provided supervising policy (root) and supporting contracts."
      },
      "destruct()": {
        "notice": "Reclaim tokens after end time only callable if all proposals are refunded"
      },
      "implementation()": {
        "notice": "Get the address of the proxy target contract."
      },
      "initialize(address)": {
        "notice": "Initialize the storage context using parameters copied from the original contract (provided as _self). Can only be called once, during proxy initialization."
      },
      "policy()": {
        "notice": "The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy."
      },
      "policyCommand(address,bytes)": {
        "notice": "Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space."
      },
      "policyVotesImpl()": {
        "notice": "The address of the `PolicyVotes` contract, to be cloned for the voting phase."
      },
      "proposalEnds()": {
        "notice": "The time at which the proposal portion of the proposals phase ends."
      },
      "proposalSelected()": {
        "notice": "Whether or not a winning proposal has been selected"
      },
      "proposalToConfigure()": {
        "notice": "selected proposal awaiting configuration before voting"
      },
      "proposals(address)": {
        "notice": "The set of proposals under consideration. maps from addresses of proposals to structs containing with info and the staking data (struct defined above)"
      },
      "refund(address)": {
        "notice": "Refund the fee for a proposal that was not selected. Returns a partial refund only, does not work on proposals that are on the ballot for the voting phase, and can only be called after the period is over."
      },
      "registerProposal(address)": {
        "notice": "Submit a proposal. You must approve the policy proposals contract to withdraw the required fee from your account before calling this. Can only be called during the proposals portion of the proposals phase. Each proposal may only be submitted once."
      },
      "setExpectedInterfaceSet(address)": {
        "notice": "Set the expected interface set"
      },
      "simplePolicyImpl()": {
        "notice": "The address of a `SimplePolicySetter` contract used to grant permissions for the voting phase."
      },
      "support(address)": {
        "notice": "Stake in support of an existing proposal. Can only be called during the staking portion of the proposals phase. Your voting strength is added to the supporting stake of the proposal."
      },
      "totalproposals()": {
        "notice": "The total number of proposals made."
      }
    },
    "version": 1
  }
}