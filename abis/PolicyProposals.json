{
  "contractName": "PolicyProposals",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Policy",
          "name": "_policy",
          "type": "address"
        },
        {
          "internalType": "contract PolicyVotes",
          "name": "_policyvotes",
          "type": "address"
        },
        {
          "internalType": "contract ECO",
          "name": "_ecoAddr",
          "type": "address"
        },
        {
          "internalType": "contract ECOx",
          "name": "_ecoXAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Proposal",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "ProposalRefund",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Proposal",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "supporter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Proposal",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "Support",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Proposal",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "SupportThresholdReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "unsupporter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Proposal",
          "name": "proposalAddress",
          "type": "address"
        }
      ],
      "name": "Unsupport",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract PolicyVotes",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "VoteStart",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "COST_REGISTER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROPOSAL_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REFUND_IF_LOST",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SUPPORT_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SUPPORT_THRESHOLD_DIVISOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allProposals",
      "outputs": [
        {
          "internalType": "contract Proposal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clone",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ecoToken",
      "outputs": [
        {
          "internalType": "contract ECO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ecoXToken",
      "outputs": [
        {
          "internalType": "contract ECOx",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "contract Policy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "policyCommand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policyVotesImpl",
      "outputs": [
        {
          "internalType": "contract PolicyVotes",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalEnds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalSelected",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalToConfigure",
      "outputs": [
        {
          "internalType": "contract Proposal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Proposal",
          "name": "",
          "type": "address"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "contract Proposal",
          "name": "proposal",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "totalStake",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setExpectedInterfaceSet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Proposal",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "staked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalVotingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "votingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_self",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalAddresses",
      "outputs": [
        {
          "internalType": "contract Proposal[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allProposalData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "proposer",
              "type": "address"
            },
            {
              "internalType": "contract Proposal",
              "name": "proposal",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "totalStake",
              "type": "uint256"
            }
          ],
          "internalType": "struct PolicyProposals.Prop[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Proposal",
          "name": "_prop",
          "type": "address"
        }
      ],
      "name": "registerProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Proposal",
          "name": "_prop",
          "type": "address"
        }
      ],
      "name": "support",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Proposal",
          "name": "_prop",
          "type": "address"
        }
      ],
      "name": "unsupport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployProposalVoting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Proposal",
          "name": "_prop",
          "type": "address"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "destruct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Policy\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"contract PolicyVotes\",\"name\":\"_policyvotes\",\"type\":\"address\"},{\"internalType\":\"contract ECO\",\"name\":\"_ecoAddr\",\"type\":\"address\"},{\"internalType\":\"contract ECOx\",\"name\":\"_ecoXAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Proposal\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"ProposalRefund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Proposal\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"Register\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supporter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Proposal\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"Support\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Proposal\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"SupportThresholdReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unsupporter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Proposal\",\"name\":\"proposalAddress\",\"type\":\"address\"}],\"name\":\"Unsupport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract PolicyVotes\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"VoteStart\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COST_REGISTER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROPOSAL_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFUND_IF_LOST\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPPORT_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUPPORT_THRESHOLD_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalAddresses\",\"outputs\":[{\"internalType\":\"contract Proposal[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProposalData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"contract Proposal\",\"name\":\"proposal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"}],\"internalType\":\"struct PolicyProposals.Prop[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allProposals\",\"outputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deployProposalVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecoToken\",\"outputs\":[{\"internalType\":\"contract ECO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecoXToken\",\"outputs\":[{\"internalType\":\"contract ECOx\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"contract Policy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"policyCommand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policyVotesImpl\",\"outputs\":[{\"internalType\":\"contract PolicyVotes\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalEnds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalSelected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalToConfigure\",\"outputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"contract Proposal\",\"name\":\"proposal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalStake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"_prop\",\"type\":\"address\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"_prop\",\"type\":\"address\"}],\"name\":\"registerProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setExpectedInterfaceSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"staked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"_prop\",\"type\":\"address\"}],\"name\":\"support\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"_prop\",\"type\":\"address\"}],\"name\":\"unsupport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ProposalRefund(address,address)\":{\"params\":{\"proposer\":\"The address of the proposee which was refunded\"}},\"Register(address,address)\":{\"params\":{\"proposalAddress\":\"The address of the Proposal contract instance that was added\"}},\"Support(address,address)\":{\"params\":{\"proposalAddress\":\"The address of the Proposal contract instance that was supported\"}},\"SupportThresholdReached(address)\":{\"params\":{\"proposalAddress\":\"The address of the Proposal contract instance.\"}},\"Unsupport(address,address)\":{\"params\":{\"proposalAddress\":\"The address of the Proposal contract instance that was unsupported\"}},\"VoteStart(address)\":{\"params\":{\"contractAddress\":\"The address of the PolicyVotes contract instance.\"}}},\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"params\":{\"_addr\":\"The address of the contract we might act on behalf of.\"}},\"constructor\":{\"params\":{\"_ecoAddr\":\"The address of the ECO token contract.\",\"_ecoXAddr\":\"The address of the ECOx token contract.\",\"_policy\":\"The address of the root policy contract.\",\"_policyvotes\":\"The address of the contract that will be cloned to                     oversee the voting phase.\"}},\"initialize(address)\":{\"params\":{\"_self\":\"The original contract address.\"}},\"policyCommand(address,bytes)\":{\"params\":{\"_data\":\"The call message/data to execute on.\",\"_delegate\":\"The address of the contract to delegate execution to.\"}},\"refund(address)\":{\"params\":{\"_prop\":\"The proposal to issue a refund for.\"}},\"registerProposal(address)\":{\"params\":{\"_prop\":\"The address of the proposal to submit.\"}},\"support(address)\":{\"params\":{\"_prop\":\"The proposal to support.\"}}},\"title\":\"PolicyProposals `PolicyProposals` oversees the proposals phase of the policy decision process. Proposals can be submitted by anyone willing to put forth funds, and submitted proposals can be supported by anyone First, during the proposals portion of the proposals phase, proposals can be submitted (for a fee). This is parallelized with a signal voting process where support can be distributed and redistributed to proposals after they are submitted. A proposal that makes it to support above 30% of the total possible support ends this phase and starts a vote.\",\"version\":1},\"userdoc\":{\"events\":{\"ProposalRefund(address,address)\":{\"notice\":\"An event indicating that proposal fee was partially refunded.\"},\"Register(address,address)\":{\"notice\":\"An event indicating a proposal has been proposed\"},\"Support(address,address)\":{\"notice\":\"An event indicating that proposal have been supported by stake.\"},\"SupportThresholdReached(address)\":{\"notice\":\"An event indicating a proposal has reached its support threshold\"},\"Unsupport(address,address)\":{\"notice\":\"An event indicating that support has been removed from a proposal.\"},\"VoteStart(address)\":{\"notice\":\"An event indicating that a proposal has been accepted for voting\"}},\"kind\":\"user\",\"methods\":{\"COST_REGISTER()\":{\"notice\":\"The minimum cost to register a proposal.\"},\"PROPOSAL_TIME()\":{\"notice\":\"The duration of the proposal portion of the proposal phase.\"},\"REFUND_IF_LOST()\":{\"notice\":\"The amount refunded if a proposal does not get selected.\"},\"SUPPORT_THRESHOLD()\":{\"notice\":\"The percentage of total voting power required to push to a vote.\"},\"SUPPORT_THRESHOLD_DIVISOR()\":{\"notice\":\"The divisor for the above constant, tracks the digits of precision.\"},\"allProposalAddresses()\":{\"notice\":\"A list of addresses for all proposed policies\"},\"allProposalData()\":{\"notice\":\"A list of all proposed policies\"},\"allProposals(uint256)\":{\"notice\":\"A list of the addresses of all proposals made.\"},\"blockNumber()\":{\"notice\":\"The block number of the balance stores to use for staking in support of a proposal.\"},\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"ERC1820 permissioning interface\"},\"clone()\":{\"notice\":\"Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract.\"},\"constructor\":{\"notice\":\"Construct a new PolicyProposals instance using the provided supervising policy (root) and supporting contracts.\"},\"destruct()\":{\"notice\":\"Reclaim tokens after end time only callable if all proposals are refunded\"},\"implementation()\":{\"notice\":\"Get the address of the proxy target contract.\"},\"initialize(address)\":{\"notice\":\"Initialize the storage context using parameters copied from the original contract (provided as _self). Can only be called once, during proxy initialization.\"},\"policy()\":{\"notice\":\"The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy.\"},\"policyCommand(address,bytes)\":{\"notice\":\"Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space.\"},\"policyVotesImpl()\":{\"notice\":\"The address of the `PolicyVotes` contract, to be cloned for the voting phase.\"},\"proposalEnds()\":{\"notice\":\"The time at which the proposal portion of the proposals phase ends.\"},\"proposalSelected()\":{\"notice\":\"Whether or not a winning proposal has been selected\"},\"proposalToConfigure()\":{\"notice\":\"selected proposal awaiting configuration before voting\"},\"proposals(address)\":{\"notice\":\"The set of proposals under consideration. maps from addresses of proposals to structs containing with info and the staking data (struct defined above)\"},\"refund(address)\":{\"notice\":\"Refund the fee for a proposal that was not selected. Returns a partial refund only, does not work on proposals that are on the ballot for the voting phase, and can only be called after the period is over.\"},\"registerProposal(address)\":{\"notice\":\"Submit a proposal. You must approve the policy proposals contract to withdraw the required fee from your account before calling this. Can only be called during the proposals portion of the proposals phase. Each proposal may only be submitted once.\"},\"setExpectedInterfaceSet(address)\":{\"notice\":\"Set the expected interface set\"},\"support(address)\":{\"notice\":\"Stake in support of an existing proposal. Can only be called during the staking portion of the proposals phase. Your voting strength is added to the supporting stake of the proposal.\"},\"totalProposals()\":{\"notice\":\"The total number of proposals made.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/PolicyProposals.sol\":\"PolicyProposals\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xc94f9b84096deaf9d2ba5681db62455e3f2d5f0a61341f68a6f576f32a6e60be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74465bbd80d2e8cfb900bf00c69940822d59bfee20d3a9725fbd74e26413319b\",\"dweb:/ipfs/QmYLEg43ZBYBsjx6qDiHK21P4YjVYLzQcUMhadrdqmA5ZL\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x1e34ab6382525e2c48a01d9edbcfeab024072e8fa80332d48fb7011ebdf59562\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d4c3a1cacb1b5ce5681edac3dc3034a9e6ea6b9e4ef338564ca70b9b6ea2fd7\",\"dweb:/ipfs/QmXwhPvgGK4envqERyjh5W7CtrH72geAE7fh1EFcVerviw\"]},\"project:/contracts/VDF/BigNumber.sol\":{\"keccak256\":\"0x34d951601236edb052216f0bc19d97ae87b0027c04cbcc03df5783b60efe925a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f32735389846ecd7f74b610365e5cfac957fee19b87638e4a8b1da2a11a9378c\",\"dweb:/ipfs/QmbUZzmMWsRP5pqRcGdqRKsnTWz9zHrygzaXFturbaFzog\"]},\"project:/contracts/VDF/IsPrime.sol\":{\"keccak256\":\"0x92b6298ae541b196d5262c703d8382b4faa006441435caa09a8a483256dd76d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b288dbaa70d20b1cb37b5c56e96d8e98a693285ea9ee38b53b20c04a246c59f8\",\"dweb:/ipfs/QmXZYBBrQNeL4tofwXvwumpSNQ5Fv6fwvjCavFxXuuKp81\"]},\"project:/contracts/VDF/VDFVerifier.sol\":{\"keccak256\":\"0xbf72a376305be00235eee04b66ac2d2f88f7a9fe2fa02f8b80318bef5fdd1de0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96dc0debb3e1760ca04ecb0457d6fef9de71ac58e005ed1dee88701a8f377581\",\"dweb:/ipfs/QmVtUphFUGreXdPxycbnWq8Qvd7jcuCbkmz8bz1GsDH2h4\"]},\"project:/contracts/clone/CloneFactory.sol\":{\"keccak256\":\"0xfe4d4a9e72693d4cc3cd16d1d84b4405ae7b61d8a2a932696ec44fdb29a7e2a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19534495f562093202e3d5a7284ff1f9ccccdcbebdbcd6009f4f5d5a87d0e274\",\"dweb:/ipfs/QmY2PTpJTxCZhGQtoMxY6w8kT5SqgXpZ2B7MNJkrEkMmaU\"]},\"project:/contracts/currency/ECO.sol\":{\"keccak256\":\"0x0b67dc11f4bfafd55a9f53f5d30ad34c2dcf440e9f2139183a4fa623fc8847a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915e8ce2d086c4b0c4ea5e5741d5d061ea0799fcce06b8247bff5cb9762bc4a9\",\"dweb:/ipfs/QmNxLrFAdVmNEmF6CHU4pZNn9JQ5ScjGehKbjdFdTTR9EU\"]},\"project:/contracts/currency/ECOx.sol\":{\"keccak256\":\"0x05239e594b73c24f40a57efdace61ff2ce5454a250493d99d53875ffabaaeeb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d1ed04c26c587ffc8dbe10feff1b3e4f8b4e7abc132d4eb63ed0f377609bb3b\",\"dweb:/ipfs/QmYqYWEKV1eypWQEM74ffS8TVn62b4rqZqYt65cvR9zXKD\"]},\"project:/contracts/currency/ERC20.sol\":{\"keccak256\":\"0x04f4fab4b58b24157c167f18845dd6f9662eb0b23046b2f16b72ae39751943da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8b998b10f4b7ff52f378b4b3472a62a3817f1d1137b8c1b77dee8f7fbfeb84f\",\"dweb:/ipfs/QmTBmFDAWPAztp9vSm4PxE65xdzNNb4unq3mbdGXjhqhzA\"]},\"project:/contracts/currency/IECO.sol\":{\"keccak256\":\"0x39421a11c92c9919b75e41fd5bef469121615a9c78f499a1b94d60e6ea52e723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3956164c417c573f9b7aaef45c34c7a63bc4cc8ccaab96c9d4f0f671fe6375c1\",\"dweb:/ipfs/QmZoKZggRqTamBu9cpbT1oW2Cn3K9FQkQgLfoiQCS7fwgj\"]},\"project:/contracts/currency/InflationCheckpoints.sol\":{\"keccak256\":\"0xf8fe3d431088c349283763034cd3ade89c10e04025d233c9c9a63406e1a82a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2664cab77d37515c6eb3512c15131338e4b1667da98c6cbb8c522aceb2debf16\",\"dweb:/ipfs/QmPWrkmA2NCtQbr9oLiP7DtJpcw13JfZZ5qe5V6zamZzzw\"]},\"project:/contracts/currency/InflationRootHashProposal.sol\":{\"keccak256\":\"0x41bbb2a0328a937ce4bece7bbae128226e6e9d92f2e7148a00b2b80a62a0c6cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252280b652372a14a0b0ca2c1f202fcb4e44364f82aa9ef0359ae0f7d9af4db7\",\"dweb:/ipfs/QmatZn4DcjHdTvdUJUaV8SfYst3g7YJZ9D9N5ysG2zLn8Z\"]},\"project:/contracts/currency/VoteCheckpoints.sol\":{\"keccak256\":\"0x00299bd0dafb41177ab16b8de0c25dceb501cf00766b66d891fa7fde334cf545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffce57c05b306dceb3c3da29bc8501334b5ae90cd0daa7f3f8bfa5a0e909e032\",\"dweb:/ipfs/QmTquBdUymBZG9GnNe4R6obRtFiZwko4RXbn18yU6ciHit\"]},\"project:/contracts/governance/CurrencyGovernance.sol\":{\"keccak256\":\"0xf3f9fa62813b328dac9fb6a3093cf0a049a971a3a2faaa3ffffcb84abdee3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47149b9db0aa58d84f85411bef6282bd990120efa6755b40c335b4c322f9909d\",\"dweb:/ipfs/QmYqVPxWqDxxpX56i4Hi2YYhyLXwiKYt5zNnMByR5X9uyU\"]},\"project:/contracts/governance/CurrencyTimer.sol\":{\"keccak256\":\"0x2916f5a33e3f1a34dd7def2626a5f59b74ced7fe4cf4ac71612bf5662064378c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51aa30923e8dcb02d8fbd0aca32ad262861564cc70917c1cd6116ffa307b9fa1\",\"dweb:/ipfs/QmWziQkpGEzVRByVDfHBzjg3bhy9xd6xf5q7U9FHkaaRLK\"]},\"project:/contracts/governance/ECOxLockup.sol\":{\"keccak256\":\"0xcbbc8b3a923afeb6c414869123c1010783022e1fe27f480e882e1f835b60aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f40e18c91bc3f1b37980f11541eb981d2860af2c8adde5fda3303c624a7a8a59\",\"dweb:/ipfs/QmWChpUrYk97GUpcjCmkf6xpiZvKudRCXNy5gCSu1vbknt\"]},\"project:/contracts/governance/IGeneration.sol\":{\"keccak256\":\"0x43adc6aca3058f0f21c0f4ad390158b9104327030109faf012955c6433cb4a62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://926098535fc6c8e8aaa6c85f7d67bd329262a6aae7f67c37577d908e4844e7d1\",\"dweb:/ipfs/QmbnE43jCzbgJ52kT3tDR7BAS9W1CH35A2adEkRctDxm3S\"]},\"project:/contracts/governance/IGenerationIncrease.sol\":{\"keccak256\":\"0x45ec21c86ff3ca31c5aef0bced8f01960e3c7292019938f1613916ff142e0a2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://793dfdb9f8eb72e9a391a176667b775fb300cfae5331b896c4458bf14f27ef20\",\"dweb:/ipfs/QmXuUoWw6eoTJfBUhtdGvuZqBcCHaPayRPP6vs9qnn2ff3\"]},\"project:/contracts/governance/ILockups.sol\":{\"keccak256\":\"0x05500a2bd766460d10f294ed5b533cbb269d8183351e4fa0080fa633cc37c428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bdb96d4380906693d2b041150203169527a03094523876b16b741da1edaeb1a\",\"dweb:/ipfs/QmXvkJNhcYSD7j1isisXeUReJsqrobNKw9MK2XExBXQQTd\"]},\"project:/contracts/governance/Inflation.sol\":{\"keccak256\":\"0x392a8bb76be0873ade520c01dcb37605ee06e543c153cff230d65437b3a8ebdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86e926890755439dec7f5a39c8cff198de362a027297da0e0beacb057e8daeb2\",\"dweb:/ipfs/QmVM1jGPD74aEdzcMmJacbQjexgoaZ747eBzhsXTCYAec4\"]},\"project:/contracts/governance/Lockup.sol\":{\"keccak256\":\"0xd26c83f0aee4b4db05264163df633bd31e698c3e30accc6c24ca47ef1717449e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://330b75fabc16445157763f9e0699add46ddca534b396931b1cd6a316edde64a6\",\"dweb:/ipfs/QmZaSxnvpmKEZQ6BoqNAr4WgdHzcMTCh8N8XBhVXu6s8Eo\"]},\"project:/contracts/governance/PolicyProposals.sol\":{\"keccak256\":\"0xb80a24d7b51539534b56780c33d5745786588e9ea7120d8f05076e9fd67701a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9062149cca82b70bfddf84e50be077aa3c444821d28c4e8dfdef2dc2dc2df2e6\",\"dweb:/ipfs/QmVxKjeDSkK1AxiMY2kxvZiVXULzmx2Dyj3vUGuARHojFV\"]},\"project:/contracts/governance/PolicyVotes.sol\":{\"keccak256\":\"0x28203ad203d2b19adfbd307d0880404b8b48435e3a40d13a8a8b2795a677beb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84172604ceb4b3f2afe6a0bbfcff662cdd114cd7ae22d8500020dab8bbfb8ad4\",\"dweb:/ipfs/QmRHqah9HHiiHsE23ydyZpCB76NEBMcFxFNKy35fjcVjvA\"]},\"project:/contracts/governance/Proposal.sol\":{\"keccak256\":\"0x54644b5204b10eb6f97290eef1fefb633f108c7facb3feb12b2d0a7847a95333\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04eb89925c361e4058a0d7ce181f7bd54f1b6fe06cf659307ace3c76de6ede23\",\"dweb:/ipfs/QmezPJo7PEZt4qrPeq8YC5aaFzfLa9aQNU4f3Kt77Ud6ZN\"]},\"project:/contracts/governance/TrustedNodes.sol\":{\"keccak256\":\"0x6d9e40412ed80217e3c0c798895ffa9ea3c8b05d49766003d68db3a54100b338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ae4bfdf5eccd451ae0190b3a39df0b2d48c50659a914c9605b6676810f33ade\",\"dweb:/ipfs/QmcneByJ6s5XWECKTdTz1pRaPF52WjpicKZiUj9YR6YccP\"]},\"project:/contracts/governance/VotingPower.sol\":{\"keccak256\":\"0x7bce6064a03d7c576e58bc7b67a3d191723d8b5f3fa0f6e9fc7430fb278f5db8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79e196e5efbca8e5d2161e2b1552e432c3b7b7b74d66bd9e00b1fe8478e1fc77\",\"dweb:/ipfs/QmXDZVQtBipAS1hzjLrzawJJkcCqRyNvSKaaNcW4uQkFkU\"]},\"project:/contracts/policy/ERC1820Client.sol\":{\"keccak256\":\"0x3a82b9d79edd1e418d3f166af46654217f207dd519a3b26673e7e01d85797649\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0818990811db9adffdee91aa1a3c28f2adcb318f7b4d04bcb82a857f0ae6a14b\",\"dweb:/ipfs/QmdcRjsdk3HCo7BXvAViCmFwrfSuxCMotXXcFDX1enTq9o\"]},\"project:/contracts/policy/Policed.sol\":{\"keccak256\":\"0xac0ccec0cafcf4d0e6dd2fcff84b4ab9c2eb70e449cc335c4131c7cda4305bea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d338c84e3286ee1d8c507221a9db515b0644c7a0d76364c9231e391691e1fa15\",\"dweb:/ipfs/QmbFwDftaHeNB1eHjKGxcjcTYMb23iVHAxR1Gi9AhsY8cw\"]},\"project:/contracts/policy/PolicedUtils.sol\":{\"keccak256\":\"0xcb4a275e06c9b8ae68ccf1c5b07e472d7441e5d50de84a0fb3e707cd66c59300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://437f054d74f49621530e7e02a440fd67681249f482f91126544d44ed135c2a83\",\"dweb:/ipfs/QmeKAoXxLhXtFx4UX9ohYF4YyfiUqRdsA6TYyj1dGPKMr8\"]},\"project:/contracts/policy/Policy.sol\":{\"keccak256\":\"0xe3e1d9e85b325b1b10cdddc805934f782c6afd48c31c842c4fdc31facf738e54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bd44653112a8399dafb826ac7dffe030019aba0a4125eaab36a8b0c49ca3b98\",\"dweb:/ipfs/Qmc78KixAw9VD9xd9RR1EFDxZoJ52pgNo8DDPNtJgF91Y6\"]},\"project:/contracts/proxy/ForwardTarget.sol\":{\"keccak256\":\"0xc2b17e83877e14d1f32faaca4010f65cf8515c009dbf0ee09e73912ef1e1a4c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f3713b39edb3d06fbda57f7bab8fbd36e286a327ad36f8651c5b1877386667\",\"dweb:/ipfs/QmdF4oaYgLjEcpRqbAjdHXEdQRzZWPk7LqgqHS5SBwN8t5\"]},\"project:/contracts/utils/StringPacker.sol\":{\"keccak256\":\"0x65a6869487c2ea25893715a3f26d5db0aa68a933894e2bfeaf8a6cfdee0df731\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ae1a06e1a4bddbb446d61f19ed25a6fe8a91f02ca05e0361b3b497af28c897a\",\"dweb:/ipfs/QmXqeBvyzr5QwLioWEiS2MXBZZe9hdszsDwn91gR3wpgHU\"]},\"project:/contracts/utils/TimeUtils.sol\":{\"keccak256\":\"0x774aeda81c9cb23eb02c5ec60bc1af8cb915627ae9fbc78862d3c4eadf560d1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d619e69a1e3063ccf6a38b44e8a8d1d4e86161668134dc414f3c7d75125d6cf7\",\"dweb:/ipfs/QmU2dS1MFr9Sgq9iD6mYkpTjuVV17Xq19aho5NGZcuZkAZ\"]}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162002c9e38038062002c9e8339810160408190526200003491620001a2565b83828282806200004430620000f8565b6001600160a01b03908116608052604051635df8122f60e01b81523060048201529082166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b158015620000a757600080fd5b505af1158015620000bc573d6000803e3d6000fd5b505050506001600160a01b0392831660a05250811660c052600880546001600160a01b0319169590911694909417909355506200020a92505050565b6001600160a01b0381166200011a60008051602062002c7e8339815191525490565b6001600160a01b03161415620001765760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e6700604482015260640160405180910390fd5b60008051602062002c7e83398151915255565b6001600160a01b03811681146200019f57600080fd5b50565b60008060008060808587031215620001b957600080fd5b8451620001c68162000189565b6020860151909450620001d98162000189565b6040860151909350620001ec8162000189565b6060860151909250620001ff8162000189565b939692955090935050565b60805160a05160c0516129e96200029560003960006103080152600081816103c701528181610a610152818161122a0152818161136c015281816117f1015261200001526000818161020501528181610503015281816106a5015281816109ea01528181610a9401528181610de701528181610ed50152818161217f01526122f801526129e96000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c60da1b1161011a578063af12645a116100ad578063c6d3afc91161007c578063c6d3afc914610489578063dea64535146104b7578063e660cc08146104ca578063ec7f729c146104dd578063fa89401a146104e557600080fd5b8063af12645a14610440578063b87341b814610449578063c3d2a0bc1461045e578063c4d66de81461047657600080fd5b80638881a874116100e95780638881a87414610401578063938351b814610411578063984db24214610424578063a78d80fc1461043757600080fd5b80635c60da1b146103ad578063705d5304146103c2578063762ec1e9146103e957806381e53876146103f957600080fd5b806334f1020e116101925780633fc9d621116101615780633fc9d6211461036b578063536f9f421461037e5780635423b94d1461039157806357e871e7146103a457600080fd5b806334f1020e1461032a578063376cf9bf1461033257806339634e0c1461033b5780633dc716f31461034e57600080fd5b806325f4627f116101ce57806325f4627f146102825780632b68b9c6146102975780633341b4451461029f57806333800bac1461030357600080fd5b80630505c8c91461020057806309d7f23b1461024457806309ed460714610259578063249cb3fa14610261575b600080fd5b6102277f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61025761025236600461264e565b6104f8565b005b6102276105b6565b61027461026f366004612712565b6106a1565b60405190815260200161023b565b61028a6107ac565b60405161023b9190612742565b6102576108c4565b6102dd6102ad3660046127a7565b60026020819052600091825260409091208054600182015491909201546001600160a01b03928316929091169083565b604080516001600160a01b0394851681529390921660208401529082015260600161023b565b6102277f000000000000000000000000000000000000000000000000000000000000000081565b610257610be5565b61027460065481565b6102576103493660046127a7565b610eca565b60055461035b9060ff1681565b604051901515815260200161023b565b6102576103793660046127a7565b610f7b565b61027461038c3660046127c4565b611207565b61027461039f3660046127dd565b611341565b61027460075481565b60008051602061299483398151915254610227565b6102277f000000000000000000000000000000000000000000000000000000000000000081565b610274682b5e3af16b1880000081565b610274606481565b610274683635c9adc5dea0000081565b61022761041f3660046127c4565b611489565b600854610227906001600160a01b031681565b61027460035481565b61027461025881565b6104516114b3565b60405161023b9190612809565b6005546102279061010090046001600160a01b031681565b6102576104843660046127a7565b611515565b61035b610497366004612856565b600160209081526000928352604080842090915290825290205460ff1681565b6102746104c53660046127a7565b611646565b6102576104d83660046127a7565b6119d4565b610274601e81565b6102576104f33660046127a7565b611e23565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461058c5760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e8180156105aa57816000f35b816000fd5b5050505050565b6000306105cf6000805160206129948339815191525490565b6001600160a01b0316146106345760405162461bcd60e51b815260206004820152602660248201527f54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20604482015265636c6f6e657360d01b6064820152608401610583565b600061063f306120ff565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561068357600080fd5b505af1158015610697573d6000803e3d6000fd5b5092949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614806106f057506000546001600160a01b038381169116145b6107625760405162461bcd60e51b815260206004820152603c60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f74726163742063616e207365742074686520696e746572666163652e000000006064820152608401610583565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b6060600060035467ffffffffffffffff8111156107cb576107cb612638565b60405190808252806020026020018201604052801561081657816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816107e95790505b50905060005b6003548110156108be57600260006004838154811061083d5761083d612884565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251606081018452815485168152600182015490941691840191909152600201549082015282518390839081106108a0576108a0612884565b602002602001018190525080806108b6906128b0565b91505061081c565b50919050565b60055460ff16806108d6575060065442115b6109565760405162461bcd60e51b8152602060048201526044602482018190527f546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920908201527f626520706572666f726d6564207768656e2074686520706572696f642069732060648201526337bb32b960e11b608482015260a401610583565b600354156109b55760405162461bcd60e51b815260206004820152602660248201527f4d75737420726566756e6420616c6c206d69737365642070726f706f73616c7360448201526508199a5c9cdd60d21b6064820152608401610583565b6040516319bb6e0160e11b81527f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633376dc0290602401600060405180830381600087803b158015610a3657600080fd5b505af1158015610a4a573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063a9059cbb91507f00000000000000000000000000000000000000000000000000000000000000009083906370a082319060240160206040518083038186803b158015610ad757600080fd5b505afa158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f91906128cb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610b6d57600080fd5b505af1158015610b81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba591906128e4565b610be35760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8811985a5b1959608a1b6044820152606401610583565b565b60055460ff16610c375760405162461bcd60e51b815260206004820152601d60248201527f6e6f2070726f706f73616c20686173206265656e2073656c65637465640000006044820152606401610583565b60055461010090046001600160a01b0316610c945760405162461bcd60e51b815260206004820181905260248201527f766f74696e672068617320616c7265616479206265656e206465706c6f7965646044820152606401610583565b6005805474ffffffffffffffffffffffffffffffffffffffff00198116909155600854604080516309ed460760e01b815290516001600160a01b0361010090940484169360009316916309ed460791600480830192602092919082900301818787803b158015610d0357600080fd5b505af1158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190612906565b60075460405163039657b760e11b81526001600160a01b038581166004830152602482019290925291925082169063072caf6e90604401600060405180830381600087803b158015610d8c57600080fd5b505af1158015610da0573d6000803e3d6000fd5b50506040516343c8dfc160e11b81527f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f60048201526001600160a01b0384811660248301527f0000000000000000000000000000000000000000000000000000000000000000169250638791bf829150604401600060405180830381600087803b158015610e2d57600080fd5b505af1158015610e41573d6000803e3d6000fd5b50506040516001600160a01b03841692507f96d53cebc4306e6d2e0c0c31750cee34ce44cb92e542424cd7f43ddb3a5857049150600090a26001600160a01b0382166000908152600260208190526040822080546001600160a01b0319908116825560018083018054909216909155910191909155600354610ec39190612923565b6003555050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f595760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b6064820152608401610583565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b30610fa57f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a612168565b6001600160a01b0316146110065760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469604482015261766560f01b6064820152608401610583565b60055460ff16156110655760405162461bcd60e51b8152602060048201526024808201527f412070726f706f73616c2068617320616c7265616479206265656e2073656c6560448201526318dd195960e21b6064820152608401610583565b60065442106110f35760405162461bcd60e51b815260206004820152604e60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f60448201527f7274656420626563617573652074686520726567697374726174696f6e20706560648201526d1c9a5bd9081a185cc8195b99195960921b608482015260a401610583565b6001600160a01b038082166000908152600260209081526040808320600180820154909516845293825280832033845290915290205460ff166111825760405162461bcd60e51b815260206004820152602160248201527f596f752068617665206e6f74207374616b656420746869732070726f706f73616044820152601b60fa1b6064820152608401610583565b600061119033600754611341565b90508082600201546111a29190612923565b60028301556001808301546001600160a01b03908116600090815260209283526040808220338084529452808220805460ff191690555191861692917f4c167103e052a33aeab9affe91d94a8f5f224fb1ba8d6d5af4e46e514a41b57e9190a3505050565b604051630981b24d60e41b81526004810182905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063981b24d09060240160206040518083038186803b15801561126c57600080fd5b505afa158015611280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a491906128cb565b905060006112b0612223565b6001600160a01b0316635bb748ad856040518263ffffffff1660e01b81526004016112dd91815260200190565b60206040518083038186803b1580156112f557600080fd5b505afa158015611309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132d91906128cb565b9050611339818361293a565b949350505050565b604051630748d63560e31b81526001600160a01b0383811660048301526024820183905260009182917f00000000000000000000000000000000000000000000000000000000000000001690633a46b1a89060440160206040518083038186803b1580156113ae57600080fd5b505afa1580156113c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e691906128cb565b905060006113f2612223565b60405163334ff4e160e21b81526001600160a01b03878116600483015260248201879052919091169063cd3fd3849060440160206040518083038186803b15801561143c57600080fd5b505afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147491906128cb565b9050611480818361293a565b95945050505050565b6004818154811061149957600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600480548060200260200160405190810160405280929190818152602001828054801561150b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114ed575b5050505050905090565b600061152d6000805160206129948339815191525490565b6001600160a01b0316146115945760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610583565b61159d81612253565b806001600160a01b031663984db2426040518163ffffffff1660e01b815260040160206040518083038186803b1580156115d657600080fd5b505afa1580156115ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160e9190612906565b600880546001600160a01b0319166001600160a01b03929092169190911790556102584261163c919061293a565b6006555043600755565b60006001600160a01b03821661169e5760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c20616464726573732063616e27742062652030006044820152606401610583565b600654421080156116b2575060055460ff16155b61174a5760405162461bcd60e51b815260206004820152604f60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520726567697360448201527f746572656420626563617573652074686520726567697374726174696f6e207060648201527f6572696f642068617320656e6465640000000000000000000000000000000000608482015260a401610583565b6001600160a01b0380831660009081526002602052604090206001810154909116156117c75760405162461bcd60e51b815260206004820152602660248201527f412070726f706f73616c206d6179206f6e6c792062652072656769737465726560448201526564206f6e636560d01b6064820152608401610583565b6040516323b872dd60e01b8152336004820152306024820152683635c9adc5dea0000060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561183d57600080fd5b505af1158015611851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187591906128e4565b61190d5760405162461bcd60e51b815260206004820152605d60248201527f54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d60448201527f75737420626520617070726f76656420746f207472616e73666572207072696f60648201527f7220746f2063616c6c696e6720726567697374657250726f706f73616c000000608482015260a401610583565b600180820180546001600160a01b0386166001600160a01b03199182168117909255835481163317845560048054808501825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805490921690921790556003805490919061198390849061293a565b90915550506040516001600160a01b0384169033907f98ada70a1cb506dc4591465e1ee9be3fd7a2b6c73ecf3b949009718c9a35151990600090a360016003546119cd9190612923565b9392505050565b306119fe7f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a612168565b6001600160a01b031614611a5f5760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469604482015261766560f01b6064820152608401610583565b60055460ff1615611abe5760405162461bcd60e51b8152602060048201526024808201527f412070726f706f73616c2068617320616c7265616479206265656e2073656c6560448201526318dd195960e21b6064820152608401610583565b6006544210611b4c5760405162461bcd60e51b815260206004820152604e60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f60448201527f7274656420626563617573652074686520726567697374726174696f6e20706560648201526d1c9a5bd9081a185cc8195b99195960921b608482015260a401610583565b6000611b5a33600754611341565b905060008111611be45760405162461bcd60e51b815260206004820152604960248201527f496e206f7264657220746f20737570706f727420612070726f706f73616c207960448201527f6f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e74206064820152686f6620746f6b656e7360b81b608482015260a401610583565b6001600160a01b0380831660009081526002602052604090206001810154909116611c625760405162461bcd60e51b815260206004820152602860248201527f54686520737570706f727465642070726f706f73616c206973206e6f7420726560448201526719da5cdd195c995960c21b6064820152608401610583565b6001818101546001600160a01b0316600090815260209182526040808220338352909252205460ff1615611cfe5760405162461bcd60e51b815260206004820152603060248201527f596f75206d6179206e6f74207374616b6520696e20737570706f7274206f662060448201527f612070726f706f73616c207477696365000000000000000000000000000000006064820152608401610583565b818160020154611d0e919061293a565b60028201556001808201546001600160a01b0316600090815260208281526040808320338085529252909120805460ff1916909217909155611d4f9061236b565b6040516001600160a01b0384169033907fb3c205034c4cecc47ba710615ad80879be14b177df75ddbcce0237302ea3fa8090600090a36000611d92600754611207565b90506064611da1601e83612952565b611dab9190612971565b82600201541115611e1d576040516001600160a01b038516907f2579eab5d400c5cc266359842639b59e8c3629d634c5e6d274fe8ad69128844a90600090a2600580546001600160a01b0386166101000274ffffffffffffffffffffffffffffffffffffffffff199091161760011790555b50505050565b60055460ff1680611e35575060065442115b611ea75760405162461bcd60e51b815260206004820152603760248201527f526566756e6473206d6179206e6f74206265206469737472696275746564207560448201527f6e74696c2074686520706572696f64206973206f7665720000000000000000006064820152608401610583565b6001600160a01b038116611efd5760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c20616464726573732063616e27742062652030006044820152606401610583565b6001600160a01b038082166000818152600260205260409020600181015490921614611f7e5760405162461bcd60e51b815260206004820152602a60248201527f5468652070726f76696465642070726f706f73616c2061646472657373206973604482015269081b9bdd081d985b1a5960b21b6064820152608401610583565b80546001600160a01b038381166000908152600260208190526040822080546001600160a01b03199081168255600182810180549092169091559101919091556003549190921691611fcf91612923565b60035560405163a9059cbb60e01b81526001600160a01b038281166004830152682b5e3af16b1880000060248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561204457600080fd5b505af1158015612058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207c91906128e4565b6120ba5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8811985a5b1959608a1b6044820152606401610583565b826001600160a01b0316816001600160a01b03167fc52fd9b1554962318237b164e3ab32e9c2afbce879a97267fa3828763fbb142a60405160405180910390a3505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b60405163555ddc6560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b1580156121e557600080fd5b505afa1580156121f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061221d9190612906565b92915050565b600061224e7fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa18612168565b905090565b600061226b6000805160206129948339815191525490565b6001600160a01b0316146122d25760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610583565b6122db816123a3565b604051635df8122f60e01b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f906044015b600060405180830381600087803b15801561235757600080fd5b505af11580156105af573d6000803e3d6000fd5b612373612223565b6040516324b07fd160e21b81526001600160a01b03838116600483015291909116906392c1ff449060240161233d565b60006123bb6000805160206129948339815191525490565b6001600160a01b0316146124225760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610583565b61242b8161242e565b50565b60006124466000805160206129948339815191525490565b6001600160a01b0316146124ad5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610583565b6000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124e857600080fd5b505afa1580156124fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125209190612906565b90506001600160a01b03811661258d5760405162461bcd60e51b815260206004820152602c60248201527f696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e672060448201526b1d1bc81a5b5c1b195b595b9d60a21b6064820152608401610583565b6125968161259a565b5050565b806001600160a01b03166125ba6000805160206129948339815191525490565b6001600160a01b031614156126115760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e67006044820152606401610583565b60008051602061299483398151915255565b6001600160a01b038116811461242b57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561266157600080fd5b823561266c81612623565b9150602083013567ffffffffffffffff8082111561268957600080fd5b818501915085601f83011261269d57600080fd5b8135818111156126af576126af612638565b604051601f8201601f19908116603f011681019083821181831017156126d7576126d7612638565b816040528281528860208487010111156126f057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561272557600080fd5b82359150602083013561273781612623565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b8281101561279a57815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161275f565b5091979650505050505050565b6000602082840312156127b957600080fd5b81356119cd81612623565b6000602082840312156127d657600080fd5b5035919050565b600080604083850312156127f057600080fd5b82356127fb81612623565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561284a5783516001600160a01b031683529284019291840191600101612825565b50909695505050505050565b6000806040838503121561286957600080fd5b823561287481612623565b9150602083013561273781612623565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128c4576128c461289a565b5060010190565b6000602082840312156128dd57600080fd5b5051919050565b6000602082840312156128f657600080fd5b815180151581146119cd57600080fd5b60006020828403121561291857600080fd5b81516119cd81612623565b6000828210156129355761293561289a565b500390565b6000821982111561294d5761294d61289a565b500190565b600081600019048311821515161561296c5761296c61289a565b500290565b60008261298e57634e487b7160e01b600052601260045260246000fd5b50049056fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220ad6bca9d577192097cabd8c82284dd951a1b066a3c9fc9a5b1cd7ce59687d56f64736f6c63430008090033f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c80635c60da1b1161011a578063af12645a116100ad578063c6d3afc91161007c578063c6d3afc914610489578063dea64535146104b7578063e660cc08146104ca578063ec7f729c146104dd578063fa89401a146104e557600080fd5b8063af12645a14610440578063b87341b814610449578063c3d2a0bc1461045e578063c4d66de81461047657600080fd5b80638881a874116100e95780638881a87414610401578063938351b814610411578063984db24214610424578063a78d80fc1461043757600080fd5b80635c60da1b146103ad578063705d5304146103c2578063762ec1e9146103e957806381e53876146103f957600080fd5b806334f1020e116101925780633fc9d621116101615780633fc9d6211461036b578063536f9f421461037e5780635423b94d1461039157806357e871e7146103a457600080fd5b806334f1020e1461032a578063376cf9bf1461033257806339634e0c1461033b5780633dc716f31461034e57600080fd5b806325f4627f116101ce57806325f4627f146102825780632b68b9c6146102975780633341b4451461029f57806333800bac1461030357600080fd5b80630505c8c91461020057806309d7f23b1461024457806309ed460714610259578063249cb3fa14610261575b600080fd5b6102277f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61025761025236600461264e565b6104f8565b005b6102276105b6565b61027461026f366004612712565b6106a1565b60405190815260200161023b565b61028a6107ac565b60405161023b9190612742565b6102576108c4565b6102dd6102ad3660046127a7565b60026020819052600091825260409091208054600182015491909201546001600160a01b03928316929091169083565b604080516001600160a01b0394851681529390921660208401529082015260600161023b565b6102277f000000000000000000000000000000000000000000000000000000000000000081565b610257610be5565b61027460065481565b6102576103493660046127a7565b610eca565b60055461035b9060ff1681565b604051901515815260200161023b565b6102576103793660046127a7565b610f7b565b61027461038c3660046127c4565b611207565b61027461039f3660046127dd565b611341565b61027460075481565b60008051602061299483398151915254610227565b6102277f000000000000000000000000000000000000000000000000000000000000000081565b610274682b5e3af16b1880000081565b610274606481565b610274683635c9adc5dea0000081565b61022761041f3660046127c4565b611489565b600854610227906001600160a01b031681565b61027460035481565b61027461025881565b6104516114b3565b60405161023b9190612809565b6005546102279061010090046001600160a01b031681565b6102576104843660046127a7565b611515565b61035b610497366004612856565b600160209081526000928352604080842090915290825290205460ff1681565b6102746104c53660046127a7565b611646565b6102576104d83660046127a7565b6119d4565b610274601e81565b6102576104f33660046127a7565b611e23565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461058c5760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e8180156105aa57816000f35b816000fd5b5050505050565b6000306105cf6000805160206129948339815191525490565b6001600160a01b0316146106345760405162461bcd60e51b815260206004820152602660248201527f54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20604482015265636c6f6e657360d01b6064820152608401610583565b600061063f306120ff565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561068357600080fd5b505af1158015610697573d6000803e3d6000fd5b5092949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614806106f057506000546001600160a01b038381169116145b6107625760405162461bcd60e51b815260206004820152603c60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f74726163742063616e207365742074686520696e746572666163652e000000006064820152608401610583565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b6060600060035467ffffffffffffffff8111156107cb576107cb612638565b60405190808252806020026020018201604052801561081657816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816107e95790505b50905060005b6003548110156108be57600260006004838154811061083d5761083d612884565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251606081018452815485168152600182015490941691840191909152600201549082015282518390839081106108a0576108a0612884565b602002602001018190525080806108b6906128b0565b91505061081c565b50919050565b60055460ff16806108d6575060065442115b6109565760405162461bcd60e51b8152602060048201526044602482018190527f546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920908201527f626520706572666f726d6564207768656e2074686520706572696f642069732060648201526337bb32b960e11b608482015260a401610583565b600354156109b55760405162461bcd60e51b815260206004820152602660248201527f4d75737420726566756e6420616c6c206d69737365642070726f706f73616c7360448201526508199a5c9cdd60d21b6064820152608401610583565b6040516319bb6e0160e11b81527f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633376dc0290602401600060405180830381600087803b158015610a3657600080fd5b505af1158015610a4a573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063a9059cbb91507f00000000000000000000000000000000000000000000000000000000000000009083906370a082319060240160206040518083038186803b158015610ad757600080fd5b505afa158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f91906128cb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610b6d57600080fd5b505af1158015610b81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba591906128e4565b610be35760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8811985a5b1959608a1b6044820152606401610583565b565b60055460ff16610c375760405162461bcd60e51b815260206004820152601d60248201527f6e6f2070726f706f73616c20686173206265656e2073656c65637465640000006044820152606401610583565b60055461010090046001600160a01b0316610c945760405162461bcd60e51b815260206004820181905260248201527f766f74696e672068617320616c7265616479206265656e206465706c6f7965646044820152606401610583565b6005805474ffffffffffffffffffffffffffffffffffffffff00198116909155600854604080516309ed460760e01b815290516001600160a01b0361010090940484169360009316916309ed460791600480830192602092919082900301818787803b158015610d0357600080fd5b505af1158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190612906565b60075460405163039657b760e11b81526001600160a01b038581166004830152602482019290925291925082169063072caf6e90604401600060405180830381600087803b158015610d8c57600080fd5b505af1158015610da0573d6000803e3d6000fd5b50506040516343c8dfc160e11b81527f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f60048201526001600160a01b0384811660248301527f0000000000000000000000000000000000000000000000000000000000000000169250638791bf829150604401600060405180830381600087803b158015610e2d57600080fd5b505af1158015610e41573d6000803e3d6000fd5b50506040516001600160a01b03841692507f96d53cebc4306e6d2e0c0c31750cee34ce44cb92e542424cd7f43ddb3a5857049150600090a26001600160a01b0382166000908152600260208190526040822080546001600160a01b0319908116825560018083018054909216909155910191909155600354610ec39190612923565b6003555050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f595760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b6064820152608401610583565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b30610fa57f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a612168565b6001600160a01b0316146110065760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469604482015261766560f01b6064820152608401610583565b60055460ff16156110655760405162461bcd60e51b8152602060048201526024808201527f412070726f706f73616c2068617320616c7265616479206265656e2073656c6560448201526318dd195960e21b6064820152608401610583565b60065442106110f35760405162461bcd60e51b815260206004820152604e60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f60448201527f7274656420626563617573652074686520726567697374726174696f6e20706560648201526d1c9a5bd9081a185cc8195b99195960921b608482015260a401610583565b6001600160a01b038082166000908152600260209081526040808320600180820154909516845293825280832033845290915290205460ff166111825760405162461bcd60e51b815260206004820152602160248201527f596f752068617665206e6f74207374616b656420746869732070726f706f73616044820152601b60fa1b6064820152608401610583565b600061119033600754611341565b90508082600201546111a29190612923565b60028301556001808301546001600160a01b03908116600090815260209283526040808220338084529452808220805460ff191690555191861692917f4c167103e052a33aeab9affe91d94a8f5f224fb1ba8d6d5af4e46e514a41b57e9190a3505050565b604051630981b24d60e41b81526004810182905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063981b24d09060240160206040518083038186803b15801561126c57600080fd5b505afa158015611280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a491906128cb565b905060006112b0612223565b6001600160a01b0316635bb748ad856040518263ffffffff1660e01b81526004016112dd91815260200190565b60206040518083038186803b1580156112f557600080fd5b505afa158015611309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132d91906128cb565b9050611339818361293a565b949350505050565b604051630748d63560e31b81526001600160a01b0383811660048301526024820183905260009182917f00000000000000000000000000000000000000000000000000000000000000001690633a46b1a89060440160206040518083038186803b1580156113ae57600080fd5b505afa1580156113c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e691906128cb565b905060006113f2612223565b60405163334ff4e160e21b81526001600160a01b03878116600483015260248201879052919091169063cd3fd3849060440160206040518083038186803b15801561143c57600080fd5b505afa158015611450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147491906128cb565b9050611480818361293a565b95945050505050565b6004818154811061149957600080fd5b6000918252602090912001546001600160a01b0316905081565b6060600480548060200260200160405190810160405280929190818152602001828054801561150b57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114ed575b5050505050905090565b600061152d6000805160206129948339815191525490565b6001600160a01b0316146115945760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610583565b61159d81612253565b806001600160a01b031663984db2426040518163ffffffff1660e01b815260040160206040518083038186803b1580156115d657600080fd5b505afa1580156115ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160e9190612906565b600880546001600160a01b0319166001600160a01b03929092169190911790556102584261163c919061293a565b6006555043600755565b60006001600160a01b03821661169e5760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c20616464726573732063616e27742062652030006044820152606401610583565b600654421080156116b2575060055460ff16155b61174a5760405162461bcd60e51b815260206004820152604f60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520726567697360448201527f746572656420626563617573652074686520726567697374726174696f6e207060648201527f6572696f642068617320656e6465640000000000000000000000000000000000608482015260a401610583565b6001600160a01b0380831660009081526002602052604090206001810154909116156117c75760405162461bcd60e51b815260206004820152602660248201527f412070726f706f73616c206d6179206f6e6c792062652072656769737465726560448201526564206f6e636560d01b6064820152608401610583565b6040516323b872dd60e01b8152336004820152306024820152683635c9adc5dea0000060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561183d57600080fd5b505af1158015611851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187591906128e4565b61190d5760405162461bcd60e51b815260206004820152605d60248201527f54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d60448201527f75737420626520617070726f76656420746f207472616e73666572207072696f60648201527f7220746f2063616c6c696e6720726567697374657250726f706f73616c000000608482015260a401610583565b600180820180546001600160a01b0386166001600160a01b03199182168117909255835481163317845560048054808501825560009182527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805490921690921790556003805490919061198390849061293a565b90915550506040516001600160a01b0384169033907f98ada70a1cb506dc4591465e1ee9be3fd7a2b6c73ecf3b949009718c9a35151990600090a360016003546119cd9190612923565b9392505050565b306119fe7f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a612168565b6001600160a01b031614611a5f5760405162461bcd60e51b815260206004820152602260248201527f50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469604482015261766560f01b6064820152608401610583565b60055460ff1615611abe5760405162461bcd60e51b8152602060048201526024808201527f412070726f706f73616c2068617320616c7265616479206265656e2073656c6560448201526318dd195960e21b6064820152608401610583565b6006544210611b4c5760405162461bcd60e51b815260206004820152604e60248201527f50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f60448201527f7274656420626563617573652074686520726567697374726174696f6e20706560648201526d1c9a5bd9081a185cc8195b99195960921b608482015260a401610583565b6000611b5a33600754611341565b905060008111611be45760405162461bcd60e51b815260206004820152604960248201527f496e206f7264657220746f20737570706f727420612070726f706f73616c207960448201527f6f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e74206064820152686f6620746f6b656e7360b81b608482015260a401610583565b6001600160a01b0380831660009081526002602052604090206001810154909116611c625760405162461bcd60e51b815260206004820152602860248201527f54686520737570706f727465642070726f706f73616c206973206e6f7420726560448201526719da5cdd195c995960c21b6064820152608401610583565b6001818101546001600160a01b0316600090815260209182526040808220338352909252205460ff1615611cfe5760405162461bcd60e51b815260206004820152603060248201527f596f75206d6179206e6f74207374616b6520696e20737570706f7274206f662060448201527f612070726f706f73616c207477696365000000000000000000000000000000006064820152608401610583565b818160020154611d0e919061293a565b60028201556001808201546001600160a01b0316600090815260208281526040808320338085529252909120805460ff1916909217909155611d4f9061236b565b6040516001600160a01b0384169033907fb3c205034c4cecc47ba710615ad80879be14b177df75ddbcce0237302ea3fa8090600090a36000611d92600754611207565b90506064611da1601e83612952565b611dab9190612971565b82600201541115611e1d576040516001600160a01b038516907f2579eab5d400c5cc266359842639b59e8c3629d634c5e6d274fe8ad69128844a90600090a2600580546001600160a01b0386166101000274ffffffffffffffffffffffffffffffffffffffffff199091161760011790555b50505050565b60055460ff1680611e35575060065442115b611ea75760405162461bcd60e51b815260206004820152603760248201527f526566756e6473206d6179206e6f74206265206469737472696275746564207560448201527f6e74696c2074686520706572696f64206973206f7665720000000000000000006064820152608401610583565b6001600160a01b038116611efd5760405162461bcd60e51b815260206004820152601f60248201527f5468652070726f706f73616c20616464726573732063616e27742062652030006044820152606401610583565b6001600160a01b038082166000818152600260205260409020600181015490921614611f7e5760405162461bcd60e51b815260206004820152602a60248201527f5468652070726f76696465642070726f706f73616c2061646472657373206973604482015269081b9bdd081d985b1a5960b21b6064820152608401610583565b80546001600160a01b038381166000908152600260208190526040822080546001600160a01b03199081168255600182810180549092169091559101919091556003549190921691611fcf91612923565b60035560405163a9059cbb60e01b81526001600160a01b038281166004830152682b5e3af16b1880000060248301527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b15801561204457600080fd5b505af1158015612058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207c91906128e4565b6120ba5760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8811985a5b1959608a1b6044820152606401610583565b826001600160a01b0316816001600160a01b03167fc52fd9b1554962318237b164e3ab32e9c2afbce879a97267fa3828763fbb142a60405160405180910390a3505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b60405163555ddc6560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b1580156121e557600080fd5b505afa1580156121f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061221d9190612906565b92915050565b600061224e7fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa18612168565b905090565b600061226b6000805160206129948339815191525490565b6001600160a01b0316146122d25760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610583565b6122db816123a3565b604051635df8122f60e01b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f906044015b600060405180830381600087803b15801561235757600080fd5b505af11580156105af573d6000803e3d6000fd5b612373612223565b6040516324b07fd160e21b81526001600160a01b03838116600483015291909116906392c1ff449060240161233d565b60006123bb6000805160206129948339815191525490565b6001600160a01b0316146124225760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610583565b61242b8161242e565b50565b60006124466000805160206129948339815191525490565b6001600160a01b0316146124ad5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610583565b6000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156124e857600080fd5b505afa1580156124fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125209190612906565b90506001600160a01b03811661258d5760405162461bcd60e51b815260206004820152602c60248201527f696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e672060448201526b1d1bc81a5b5c1b195b595b9d60a21b6064820152608401610583565b6125968161259a565b5050565b806001600160a01b03166125ba6000805160206129948339815191525490565b6001600160a01b031614156126115760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e67006044820152606401610583565b60008051602061299483398151915255565b6001600160a01b038116811461242b57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561266157600080fd5b823561266c81612623565b9150602083013567ffffffffffffffff8082111561268957600080fd5b818501915085601f83011261269d57600080fd5b8135818111156126af576126af612638565b604051601f8201601f19908116603f011681019083821181831017156126d7576126d7612638565b816040528281528860208487010111156126f057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561272557600080fd5b82359150602083013561273781612623565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b8281101561279a57815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161275f565b5091979650505050505050565b6000602082840312156127b957600080fd5b81356119cd81612623565b6000602082840312156127d657600080fd5b5035919050565b600080604083850312156127f057600080fd5b82356127fb81612623565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b8181101561284a5783516001600160a01b031683529284019291840191600101612825565b50909695505050505050565b6000806040838503121561286957600080fd5b823561287481612623565b9150602083013561273781612623565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128c4576128c461289a565b5060010190565b6000602082840312156128dd57600080fd5b5051919050565b6000602082840312156128f657600080fd5b815180151581146119cd57600080fd5b60006020828403121561291857600080fd5b81516119cd81612623565b6000828210156129355761293561289a565b500390565b6000821982111561294d5761294d61289a565b500190565b600081600019048311821515161561296c5761296c61289a565b500290565b60008261298e57634e487b7160e01b600052601260045260246000fd5b50049056fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220ad6bca9d577192097cabd8c82284dd951a1b066a3c9fc9a5b1cd7ce59687d56f64736f6c63430008090033",
  "immutableReferences": {
    "11848": [
      {
        "length": 32,
        "start": 967
      },
      {
        "length": 32,
        "start": 2657
      },
      {
        "length": 32,
        "start": 4650
      },
      {
        "length": 32,
        "start": 4972
      },
      {
        "length": 32,
        "start": 6129
      },
      {
        "length": 32,
        "start": 8192
      }
    ],
    "11851": [
      {
        "length": 32,
        "start": 776
      }
    ],
    "12039": [
      {
        "length": 32,
        "start": 517
      },
      {
        "length": 32,
        "start": 1283
      },
      {
        "length": 32,
        "start": 1701
      },
      {
        "length": 32,
        "start": 2538
      },
      {
        "length": 32,
        "start": 2708
      },
      {
        "length": 32,
        "start": 3559
      },
      {
        "length": 32,
        "start": 3797
      },
      {
        "length": 32,
        "start": 8575
      },
      {
        "length": 32,
        "start": 8952
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1577:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:86:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "131:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "140:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "143:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "133:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "133:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "133:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:66"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "116:3:66",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "121:1:66",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:66"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:11:66"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "125:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:19:66"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:31:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:42:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:50:66"
                  },
                  "nodeType": "YulIf",
                  "src": "77:70:66"
                }
              ]
            },
            "name": "validator_revert_contract_Policy",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "56:5:66",
                "type": ""
              }
            ],
            "src": "14:139:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "352:554:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "399:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "408:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "411:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "401:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "401:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "401:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "373:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "382:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "369:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "369:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "394:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "365:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "365:33:66"
                  },
                  "nodeType": "YulIf",
                  "src": "362:53:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "424:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "443:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "437:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "437:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "428:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "495:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "462:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "462:39:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "462:39:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "510:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "520:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "510:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "534:40:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "570:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "549:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "549:25:66"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "538:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "616:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "583:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "583:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "583:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "633:17:66",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "643:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "633:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "659:40:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "684:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "695:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "680:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "680:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "674:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:25:66"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "663:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "741:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "708:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "708:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "708:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "758:17:66",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "768:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "758:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "784:40:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "809:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "820:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "805:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "799:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:25:66"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "788:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "866:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "833:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "833:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "833:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "883:17:66",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "893:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "883:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Policy_$12499t_contract$_PolicyVotes_$10915t_contract$_ECO_$2497t_contract$_ECOx_$3238_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "294:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "305:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "317:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "325:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "333:6:66",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "341:6:66",
                "type": ""
              }
            ],
            "src": "158:748:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:175:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1050:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1062:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1073:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1058:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1058:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1050:4:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1085:29:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1103:3:66",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1108:1:66",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1099:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1099:11:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1112:1:66",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1095:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1095:19:66"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1089:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1130:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1145:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1153:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1123:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1123:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1177:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1188:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1173:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1173:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1197:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1205:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1166:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1166:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1166:43:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1001:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1012:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1020:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1031:4:66",
                "type": ""
              }
            ],
            "src": "911:304:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1394:181:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1411:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1422:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1404:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1404:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1404:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1445:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1456:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1441:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1441:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1461:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1434:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1434:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1434:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1484:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1495:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1480:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1480:18:66"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1500:33:66",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1473:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1473:61:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1473:61:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1543:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1555:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1566:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1551:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1551:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1543:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1371:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1385:4:66",
                "type": ""
              }
            ],
            "src": "1220:355:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_Policy(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_Policy_$12499t_contract$_PolicyVotes_$10915t_contract$_ECO_$2497t_contract$_ECOx_$3238_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_Policy(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_Policy(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_Policy(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_contract_Policy(value_3)\n        value3 := value_3\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:21473:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "131:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "141:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "153:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "164:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "149:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "149:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "141:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "183:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "198:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "194:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "194:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "176:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "176:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Policy_$12499__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "100:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "111:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "122:4:66",
                "type": ""
              }
            ],
            "src": "14:242:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:109:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "393:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "402:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "405:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "395:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "395:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "395:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "329:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "340:5:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "347:42:66",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "336:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "336:54:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "326:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "326:65:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "319:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "319:73:66"
                  },
                  "nodeType": "YulIf",
                  "src": "316:93:66"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "295:5:66",
                "type": ""
              }
            ],
            "src": "261:154:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "452:95:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "469:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "476:3:66",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "481:10:66",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "472:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "472:20:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "462:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "462:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "462:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:1:66",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:4:66",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "502:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "502:15:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "533:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "536:4:66",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "526:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "526:15:66"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "420:127:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:960:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "694:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "703:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "696:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "696:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "696:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "669:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "678:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "665:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "690:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "661:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "658:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "719:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "745:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "732:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "732:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "723:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "789:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "764:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "764:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "804:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "814:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "804:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "828:46:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "859:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "870:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "842:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:32:66"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "832:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "883:28:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "893:18:66",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "887:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "938:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "947:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "950:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "940:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "940:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "940:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "926:6:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "934:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "923:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:14:66"
                  },
                  "nodeType": "YulIf",
                  "src": "920:34:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "963:32:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "977:9:66"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "988:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "973:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:22:66"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "967:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1043:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1052:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1055:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1045:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1045:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1045:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1022:2:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1026:4:66",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1018:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1018:13:66"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1033:7:66"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1014:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1014:27:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1007:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1007:35:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1004:55:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1068:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1091:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1078:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:16:66"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1072:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1117:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1119:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1119:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1119:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1109:2:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1113:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1106:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:10:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1103:36:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1148:17:66",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1162:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1158:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1158:7:66"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1152:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1174:23:66",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1194:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1188:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1188:9:66"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1178:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1206:71:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1228:6:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1252:2:66"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1256:4:66",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1248:3:66"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1248:13:66"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1263:2:66"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1244:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1244:22:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1268:2:66",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1240:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1240:31:66"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1273:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1236:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:40:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1224:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:53:66"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1210:10:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1336:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1338:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1338:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1338:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1295:10:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1307:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1292:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1292:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1315:10:66"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1327:6:66"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1312:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1312:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1289:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:46:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1286:72:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1374:2:66",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1378:10:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1367:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:22:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1367:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1405:6:66"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1413:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1398:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:18:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1398:18:66"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1462:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1471:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1474:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1464:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1464:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1464:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1439:2:66"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1443:2:66"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1435:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1435:11:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1448:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1431:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1431:20:66"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1453:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1428:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:33:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1425:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1504:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1512:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1500:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1500:15:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1521:2:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1525:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1517:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1517:11:66"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1530:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1487:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:46:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1487:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1557:6:66"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1565:2:66"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1553:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1553:15:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1570:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1549:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1549:24:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:1:66",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1542:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:35:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:35:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1586:16:66",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1596:6:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1586:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "606:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "617:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "629:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "637:6:66",
                "type": ""
              }
            ],
            "src": "552:1056:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1714:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1724:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1736:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1747:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1732:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1724:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1766:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1781:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1789:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1777:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1759:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1759:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1759:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1683:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1694:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1705:4:66",
                "type": ""
              }
            ],
            "src": "1613:226:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1931:228:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1977:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1986:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1989:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1979:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1979:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1979:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1952:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1961:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1948:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1948:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1973:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1944:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1944:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1941:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2002:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2025:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2012:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2012:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2002:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2044:45:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2074:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2085:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2070:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2070:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2057:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:32:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2048:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2123:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2098:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2098:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2138:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2148:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2138:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1889:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1900:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1912:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1920:6:66",
                "type": ""
              }
            ],
            "src": "1844:315:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2265:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2275:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2287:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2298:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2283:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2275:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2317:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2328:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2310:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2310:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2234:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2245:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2256:4:66",
                "type": ""
              }
            ],
            "src": "2164:177:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2541:725:66",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2551:12:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2561:2:66",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2555:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2572:32:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2590:9:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2601:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2586:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2586:18:66"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "2576:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2620:9:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2631:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2613:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2613:21:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2643:17:66",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "2654:6:66"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "2647:3:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2669:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2689:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2683:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2683:13:66"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2673:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2712:6:66"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2720:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2705:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2705:22:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2705:22:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2736:12:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2746:2:66",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2740:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2757:25:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2768:9:66"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2779:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2764:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2764:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2757:3:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2791:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2809:6:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2817:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2805:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2805:15:66"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "2795:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2829:10:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2838:1:66",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2833:1:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2897:343:66",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2911:23:66",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "2927:6:66"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2921:5:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2921:13:66"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "2915:2:66",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2947:52:66",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2957:42:66",
                          "type": "",
                          "value": "0xffffffffffffffffffffffffffffffffffffffff"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "2951:2:66",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3019:3:66"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3034:2:66"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3028:5:66"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3028:9:66"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3039:2:66"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "3024:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3024:18:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3012:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3012:31:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3012:31:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3067:3:66"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3072:2:66"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3063:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3063:12:66"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "_3",
                                          "nodeType": "YulIdentifier",
                                          "src": "3091:2:66"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3095:2:66"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3087:3:66"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3087:11:66"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3081:5:66"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3081:18:66"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3101:2:66"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "3077:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3077:27:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3056:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3056:49:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3056:49:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3129:3:66"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "3134:2:66"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3125:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3125:12:66"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "3149:2:66"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "3153:2:66"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3145:3:66"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3145:11:66"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "3139:5:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3139:18:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3118:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3118:40:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3118:40:66"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3171:21:66",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "3182:3:66"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3187:4:66",
                              "type": "",
                              "value": "0x60"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3178:3:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3178:14:66"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3171:3:66"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3205:25:66",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3219:6:66"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "3227:2:66"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3215:3:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3215:15:66"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3205:6:66"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2859:1:66"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2862:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2856:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2856:13:66"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2870:18:66",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2872:14:66",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2881:1:66"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2884:1:66",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2877:3:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2877:9:66"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2872:1:66"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2852:3:66",
                    "statements": []
                  },
                  "src": "2848:392:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3249:11:66",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "3257:3:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3249:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2510:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2521:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2532:4:66",
                "type": ""
              }
            ],
            "src": "2346:920:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3359:177:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3405:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3414:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3417:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3407:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3407:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3407:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3380:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3389:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3376:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3401:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3372:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "3369:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3430:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3456:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3443:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3443:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3434:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3500:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3475:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3475:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3475:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3515:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3525:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3515:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Proposal_$10943",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3325:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3336:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3348:6:66",
                "type": ""
              }
            ],
            "src": "3271:265:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3716:241:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3726:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3738:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3749:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3734:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3734:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3726:4:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3761:52:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3771:42:66",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3765:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3829:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3844:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3852:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3840:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3840:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3822:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3822:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3822:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3876:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3887:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3872:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3872:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3896:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3904:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3892:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3892:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3865:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3865:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3865:43:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3928:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3939:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3924:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:18:66"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3944:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3917:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3917:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3917:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_contract$_Proposal_$10943_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3669:9:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3680:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3688:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3696:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3707:4:66",
                "type": ""
              }
            ],
            "src": "3541:416:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4076:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4086:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4098:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4109:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4094:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4094:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4086:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4128:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4143:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4151:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4139:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4139:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4121:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4121:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4121:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ECOx_$3238__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4045:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4056:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4067:4:66",
                "type": ""
              }
            ],
            "src": "3962:239:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4307:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4317:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4329:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4340:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4325:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4325:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4317:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4359:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4370:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4352:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4352:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4352:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4276:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4287:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4298:4:66",
                "type": ""
              }
            ],
            "src": "4206:177:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4458:177:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4504:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4513:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4516:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4506:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4506:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4506:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4479:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4488:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4475:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4475:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4500:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4471:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4471:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "4468:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4529:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4555:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4542:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4542:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4533:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4599:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4574:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4574:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4574:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4614:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4624:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4614:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4424:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4435:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4447:6:66",
                "type": ""
              }
            ],
            "src": "4388:247:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4735:92:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4745:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4757:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4768:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4753:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4753:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4745:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4787:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4812:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4805:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4805:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4798:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4798:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4780:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4780:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4780:41:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4704:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4715:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4726:4:66",
                "type": ""
              }
            ],
            "src": "4640:187:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4902:110:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4948:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4957:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4960:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4950:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4950:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4950:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4923:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4932:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4919:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4919:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4944:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4915:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4915:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "4912:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4973:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4996:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4983:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4983:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4973:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4868:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4879:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4891:6:66",
                "type": ""
              }
            ],
            "src": "4832:180:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5104:228:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5150:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5159:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5162:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5152:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5152:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5152:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5125:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5134:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5121:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5121:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5146:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5117:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5117:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "5114:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5175:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5201:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5188:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5188:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5179:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5245:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5220:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5220:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5220:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5260:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5270:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5260:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5284:42:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5311:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5322:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5307:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5307:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5294:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5294:32:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5284:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5062:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5073:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5085:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5093:6:66",
                "type": ""
              }
            ],
            "src": "5017:315:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5450:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5460:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5472:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5483:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5468:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5468:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5460:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5502:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5517:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5525:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5513:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5513:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5495:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5495:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5495:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ECO_$2497__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5419:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5430:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5441:4:66",
                "type": ""
              }
            ],
            "src": "5337:238:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5699:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5709:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5721:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5732:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5717:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5717:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5709:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5751:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5766:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5774:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5762:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5762:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5744:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5744:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5744:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Proposal_$10943__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5668:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5679:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5690:4:66",
                "type": ""
              }
            ],
            "src": "5580:244:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5951:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5961:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5973:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5984:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5969:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5969:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5961:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6003:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6018:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6026:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6014:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6014:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5996:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5996:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5996:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_PolicyVotes_$10915__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5920:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5931:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5942:4:66",
                "type": ""
              }
            ],
            "src": "5829:247:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6250:530:66",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6260:12:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6270:2:66",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6264:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6281:32:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6299:9:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6310:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6295:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6295:18:66"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "6285:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6329:9:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6340:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6322:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6322:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6322:21:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6352:17:66",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "6363:6:66"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "6356:3:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6378:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6398:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6392:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6392:13:66"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6382:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "6421:6:66"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6429:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6414:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6414:22:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6414:22:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6445:25:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6456:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6467:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6452:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6452:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6445:3:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6479:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6497:6:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6505:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6493:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6493:15:66"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "6483:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6517:10:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6526:1:66",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6521:1:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6585:169:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6606:3:66"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "6621:6:66"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "6615:5:66"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6615:13:66"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6630:42:66",
                                  "type": "",
                                  "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "6611:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6611:62:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6599:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6599:75:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6599:75:66"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6687:19:66",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6698:3:66"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6703:2:66"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6694:3:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6694:12:66"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6687:3:66"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6719:25:66",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6733:6:66"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6741:2:66"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6729:3:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6729:15:66"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6719:6:66"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6547:1:66"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6550:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6544:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6544:13:66"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6558:18:66",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6560:14:66",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6569:1:66"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6572:1:66",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6565:3:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6565:9:66"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6560:1:66"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6540:3:66",
                    "statements": []
                  },
                  "src": "6536:218:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6763:11:66",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6771:3:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6763:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_contract$_Proposal_$10943_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6219:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6230:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6241:4:66",
                "type": ""
              }
            ],
            "src": "6081:699:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6890:301:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6936:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6945:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6948:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6938:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6938:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6938:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6911:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6920:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6907:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6907:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6932:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6903:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6903:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "6900:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6961:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6987:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6974:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6974:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6965:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7031:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7006:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7006:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7006:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7046:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7056:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7046:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7070:47:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7102:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7113:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7098:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7098:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "7085:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7085:32:66"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "7074:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "7151:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7126:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7126:33:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7126:33:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7168:17:66",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "7178:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "7168:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Proposal_$10943t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6848:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6859:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6871:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6879:6:66",
                "type": ""
              }
            ],
            "src": "6785:406:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7370:236:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7387:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7398:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7380:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7380:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7380:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7421:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7432:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7417:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7417:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7437:2:66",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7410:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7410:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7410:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7460:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7471:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7456:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7456:18:66"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7476:34:66",
                        "type": "",
                        "value": "Only the policy contract may cal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7449:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7449:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7449:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7531:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7542:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7527:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7527:18:66"
                      },
                      {
                        "hexValue": "6c2074686973206d6574686f642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7547:16:66",
                        "type": "",
                        "value": "l this method."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7520:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7520:44:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7520:44:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7573:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7585:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7596:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7581:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7581:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7573:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7347:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7361:4:66",
                "type": ""
              }
            ],
            "src": "7196:410:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7785:228:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7802:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7813:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7795:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7795:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7795:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7836:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7847:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7832:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7832:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7852:2:66",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7825:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7825:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7825:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7875:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7886:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7871:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7871:18:66"
                      },
                      {
                        "hexValue": "54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7891:34:66",
                        "type": "",
                        "value": "This method cannot be called on "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7864:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7864:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7864:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7946:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7957:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7942:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7942:18:66"
                      },
                      {
                        "hexValue": "636c6f6e6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7962:8:66",
                        "type": "",
                        "value": "clones"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7935:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7935:36:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7935:36:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7980:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7992:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8003:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7988:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7988:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7980:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a35c1fe0fe1ed6afe3c9bc1734c4f5109aadfc21beb8ed8e518da672f582600b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7762:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7776:4:66",
                "type": ""
              }
            ],
            "src": "7611:402:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8192:250:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8209:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8220:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8202:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8202:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8202:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8243:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8254:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8239:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8239:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8259:2:66",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8232:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8232:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8232:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8282:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8293:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8278:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8278:18:66"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8298:34:66",
                        "type": "",
                        "value": "Only the policy or interface con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8271:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8271:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8271:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8353:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8364:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8349:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8349:18:66"
                      },
                      {
                        "hexValue": "74726163742063616e207365742074686520696e746572666163652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8369:30:66",
                        "type": "",
                        "value": "tract can set the interface."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8342:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8342:58:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8342:58:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8409:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8421:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8432:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8417:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8417:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8409:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08d278b1488142cbb27880a3aec0587d5b0d682f7907703765895f131b608af0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8169:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8183:4:66",
                "type": ""
              }
            ],
            "src": "8018:424:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8639:79:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8656:3:66"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8661:22:66",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8649:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8649:35:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8649:35:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8693:19:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8704:3:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8709:2:66",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8700:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8700:12:66"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8693:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8623:3:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8631:3:66",
                "type": ""
              }
            ],
            "src": "8447:271:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8755:95:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8772:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8779:3:66",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8784:10:66",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8775:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8775:20:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8765:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8765:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8765:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8812:1:66",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8815:4:66",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8805:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8805:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8805:15:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8836:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8839:4:66",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8829:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8829:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8829:15:66"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "8723:127:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8887:95:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8904:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8911:3:66",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8916:10:66",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8907:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8907:20:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8897:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8897:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8897:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8944:1:66",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8947:4:66",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8937:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8937:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8937:15:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8968:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8971:4:66",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8961:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8961:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8961:15:66"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8855:127:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9034:88:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9065:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9067:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9067:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9067:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9050:5:66"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9061:1:66",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9057:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9057:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9047:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9047:17:66"
                  },
                  "nodeType": "YulIf",
                  "src": "9044:43:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9096:20:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9107:5:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9114:1:66",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9103:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9103:13:66"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9096:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9016:5:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9026:3:66",
                "type": ""
              }
            ],
            "src": "8987:135:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9301:298:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9318:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9329:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9311:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9311:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9311:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9352:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9363:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9348:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9348:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9368:2:66",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9341:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9341:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9341:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9391:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9402:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9387:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9387:18:66"
                      },
                      {
                        "hexValue": "546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9407:34:66",
                        "type": "",
                        "value": "The destruct operation can only "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9380:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9380:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9380:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9462:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9473:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9458:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9458:18:66"
                      },
                      {
                        "hexValue": "626520706572666f726d6564207768656e2074686520706572696f6420697320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9478:34:66",
                        "type": "",
                        "value": "be performed when the period is "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9451:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9451:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9451:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9533:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9544:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9529:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9529:19:66"
                      },
                      {
                        "hexValue": "6f766572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9550:6:66",
                        "type": "",
                        "value": "over"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9522:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9522:35:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9522:35:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9566:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9578:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9589:3:66",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9574:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9574:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9566:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9278:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9292:4:66",
                "type": ""
              }
            ],
            "src": "9127:472:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9778:228:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9795:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9806:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9788:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9788:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9788:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9829:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9840:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9825:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9825:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9845:2:66",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9818:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9818:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9818:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9868:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9879:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9864:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9864:18:66"
                      },
                      {
                        "hexValue": "4d75737420726566756e6420616c6c206d69737365642070726f706f73616c73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9884:34:66",
                        "type": "",
                        "value": "Must refund all missed proposals"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9857:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9857:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9857:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9939:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9950:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9935:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9935:18:66"
                      },
                      {
                        "hexValue": "206669727374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9955:8:66",
                        "type": "",
                        "value": " first"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9928:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9928:36:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9928:36:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9973:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9985:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9996:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9981:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9981:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9973:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9755:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9769:4:66",
                "type": ""
              }
            ],
            "src": "9604:402:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10092:103:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10138:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10147:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10150:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10140:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10140:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10140:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10113:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10122:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10109:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10109:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10134:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10105:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10105:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10102:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10163:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10179:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10173:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10173:16:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10163:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10058:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10069:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10081:6:66",
                "type": ""
              }
            ],
            "src": "10011:184:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10329:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10339:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10351:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10362:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10347:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10347:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10339:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10381:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10396:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10404:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10392:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10392:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10374:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10374:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10374:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10468:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10479:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10464:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10464:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10484:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10457:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10457:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10457:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10290:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10301:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10309:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10320:4:66",
                "type": ""
              }
            ],
            "src": "10200:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10580:199:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10626:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10635:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10638:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10628:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10628:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10628:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10601:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10610:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10597:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10597:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10622:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10593:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10593:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10590:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10651:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10670:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10664:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10664:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10655:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10733:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10742:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10745:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10735:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10735:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10735:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10702:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10723:5:66"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "10716:6:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10716:13:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10709:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10709:21:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10699:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10699:32:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10692:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10692:40:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10689:60:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10758:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10768:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10758:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10546:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10557:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10569:6:66",
                "type": ""
              }
            ],
            "src": "10502:277:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10958:165:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10975:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10986:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10968:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10968:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10968:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11009:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11020:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11005:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11005:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11025:2:66",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10998:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10998:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10998:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11048:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11059:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11044:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11044:18:66"
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11064:17:66",
                        "type": "",
                        "value": "Transfer Failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11037:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11037:45:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11037:45:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11091:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11103:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11114:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11099:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11099:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11091:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10935:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10949:4:66",
                "type": ""
              }
            ],
            "src": "10784:339:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11302:179:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11319:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11330:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11312:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11312:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11312:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11353:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11364:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11349:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11349:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11369:2:66",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11342:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11342:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11342:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11392:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11403:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11388:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11388:18:66"
                      },
                      {
                        "hexValue": "6e6f2070726f706f73616c20686173206265656e2073656c6563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11408:31:66",
                        "type": "",
                        "value": "no proposal has been selected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11381:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11381:59:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11381:59:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11449:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11461:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11472:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11457:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11457:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11449:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11279:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11293:4:66",
                "type": ""
              }
            ],
            "src": "11128:353:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11660:182:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11677:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11688:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11670:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11670:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11670:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11711:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11722:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11707:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11707:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11727:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11700:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11700:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11700:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11750:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11761:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11746:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11746:18:66"
                      },
                      {
                        "hexValue": "766f74696e672068617320616c7265616479206265656e206465706c6f796564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11766:34:66",
                        "type": "",
                        "value": "voting has already been deployed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11739:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11739:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11739:62:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11810:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11822:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11833:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11818:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11818:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11810:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11637:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11651:4:66",
                "type": ""
              }
            ],
            "src": "11486:356:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11928:170:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11974:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11983:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11986:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11976:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11976:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11976:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11949:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11958:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11945:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11945:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11970:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11941:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11941:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "11938:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11999:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12018:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12012:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12012:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12003:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12062:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "12037:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12037:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12037:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12077:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "12087:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12077:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11894:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11905:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11917:6:66",
                "type": ""
              }
            ],
            "src": "11847:251:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12250:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12260:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12272:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12283:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12268:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12268:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12260:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12302:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12317:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12325:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12313:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12313:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12295:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12295:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12295:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12389:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12400:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12385:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12385:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12405:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12378:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12378:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12378:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Proposal_$10943_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12211:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12222:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12230:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12241:4:66",
                "type": ""
              }
            ],
            "src": "12103:315:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12552:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12562:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12574:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12585:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12570:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12570:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12562:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12604:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12615:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12597:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12597:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12597:25:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12642:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12653:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12638:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12638:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12662:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12670:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12658:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12658:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12631:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12631:83:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12631:83:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12513:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12524:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12532:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12543:4:66",
                "type": ""
              }
            ],
            "src": "12423:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12774:76:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12796:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "12798:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12798:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12798:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12790:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12793:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12787:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12787:8:66"
                  },
                  "nodeType": "YulIf",
                  "src": "12784:34:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12827:17:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "12839:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "12842:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12835:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12835:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "12827:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "12756:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "12759:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "12765:4:66",
                "type": ""
              }
            ],
            "src": "12725:125:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13029:224:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13046:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13057:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13039:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13039:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13039:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13080:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13091:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13076:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13076:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13096:2:66",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13069:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13069:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13069:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13119:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13130:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13115:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13115:18:66"
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e6765722061637469",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13135:34:66",
                        "type": "",
                        "value": "Proposal contract no longer acti"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13108:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13108:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13108:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13190:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13201:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13186:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13186:18:66"
                      },
                      {
                        "hexValue": "7665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13206:4:66",
                        "type": "",
                        "value": "ve"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13179:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13179:32:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13179:32:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13220:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13232:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13243:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13228:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13228:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13220:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13006:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13020:4:66",
                "type": ""
              }
            ],
            "src": "12855:398:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13432:226:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13449:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13460:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13442:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13442:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13442:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13483:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13494:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13479:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13479:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13499:2:66",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13472:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13472:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13472:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13522:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13533:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13518:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13518:18:66"
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13538:34:66",
                        "type": "",
                        "value": "A proposal has already been sele"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13511:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13511:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13511:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13593:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13604:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13589:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13589:18:66"
                      },
                      {
                        "hexValue": "63746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13609:6:66",
                        "type": "",
                        "value": "cted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13582:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13582:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13582:34:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13625:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13637:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13648:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13633:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13633:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13625:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13409:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13423:4:66",
                "type": ""
              }
            ],
            "src": "13258:400:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13837:308:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13854:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13865:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13847:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13847:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13847:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13888:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13899:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13884:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13884:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13904:2:66",
                        "type": "",
                        "value": "78"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13877:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13877:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13877:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13927:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13938:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13923:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13923:18:66"
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13943:34:66",
                        "type": "",
                        "value": "Proposals may no longer be suppo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13916:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13916:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13916:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13998:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14009:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13994:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13994:18:66"
                      },
                      {
                        "hexValue": "7274656420626563617573652074686520726567697374726174696f6e207065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14014:34:66",
                        "type": "",
                        "value": "rted because the registration pe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13987:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13987:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13987:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14069:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14080:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14065:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14065:19:66"
                      },
                      {
                        "hexValue": "72696f642068617320656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14086:16:66",
                        "type": "",
                        "value": "riod has ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14058:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14058:45:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14058:45:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14112:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14124:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14135:3:66",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14120:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14120:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14112:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13814:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13828:4:66",
                "type": ""
              }
            ],
            "src": "13663:482:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14324:223:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14341:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14352:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14334:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14334:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14334:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14375:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14386:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14371:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14371:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14391:2:66",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14364:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14364:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14364:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14414:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14425:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14410:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14410:18:66"
                      },
                      {
                        "hexValue": "596f752068617665206e6f74207374616b656420746869732070726f706f7361",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14430:34:66",
                        "type": "",
                        "value": "You have not staked this proposa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14403:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14403:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14403:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14485:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14496:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14481:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14481:18:66"
                      },
                      {
                        "hexValue": "6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14501:3:66",
                        "type": "",
                        "value": "l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14474:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14474:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14474:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14514:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14526:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14537:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14522:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14522:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14514:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14301:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14315:4:66",
                "type": ""
              }
            ],
            "src": "14150:397:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14600:80:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14627:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14629:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14629:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14629:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14616:1:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14623:1:66"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "14619:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14619:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "14613:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14613:13:66"
                  },
                  "nodeType": "YulIf",
                  "src": "14610:39:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14658:16:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14669:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14672:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14665:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14665:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "14658:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14583:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14586:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "14592:3:66",
                "type": ""
              }
            ],
            "src": "14552:128:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14859:230:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14876:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14887:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14869:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14869:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14869:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14910:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14921:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14906:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14906:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14926:2:66",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14899:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14899:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14899:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14949:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14960:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14945:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14945:18:66"
                      },
                      {
                        "hexValue": "43616e206f6e6c792062652063616c6c656420647572696e6720696e69746961",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14965:34:66",
                        "type": "",
                        "value": "Can only be called during initia"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14938:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14938:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14938:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15020:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15031:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15016:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15016:18:66"
                      },
                      {
                        "hexValue": "6c697a6174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15036:10:66",
                        "type": "",
                        "value": "lization"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15009:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15009:38:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15009:38:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15056:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15068:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15079:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15064:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15064:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15056:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14836:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14850:4:66",
                "type": ""
              }
            ],
            "src": "14685:404:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15196:170:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15242:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15251:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15254:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15244:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15244:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15244:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15217:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15226:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15213:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15213:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15238:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "15209:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15209:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "15206:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15267:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15286:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15280:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15280:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "15271:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15330:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "15305:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15305:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15305:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15345:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "15355:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "15345:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_PolicyVotes_$10915_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15162:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "15173:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15185:6:66",
                "type": ""
              }
            ],
            "src": "15094:272:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15545:181:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15562:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15573:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15555:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15555:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15555:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15596:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15607:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15592:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15592:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15612:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15585:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15585:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15585:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15635:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15646:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15631:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15631:18:66"
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15651:33:66",
                        "type": "",
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15624:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15624:61:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15624:61:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15694:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15706:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15717:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15702:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15702:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15694:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15522:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15536:4:66",
                "type": ""
              }
            ],
            "src": "15371:355:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15905:309:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15922:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15933:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15915:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15915:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15915:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15956:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15967:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15952:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15952:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15972:2:66",
                        "type": "",
                        "value": "79"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15945:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15945:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15945:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15995:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16006:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15991:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15991:18:66"
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e676572206265207265676973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16011:34:66",
                        "type": "",
                        "value": "Proposals may no longer be regis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15984:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15984:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15984:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16066:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16077:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16062:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16062:18:66"
                      },
                      {
                        "hexValue": "746572656420626563617573652074686520726567697374726174696f6e2070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16082:34:66",
                        "type": "",
                        "value": "tered because the registration p"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16055:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16055:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16055:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16137:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16148:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16133:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16133:19:66"
                      },
                      {
                        "hexValue": "6572696f642068617320656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16154:17:66",
                        "type": "",
                        "value": "eriod has ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16126:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16126:46:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16126:46:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16181:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16193:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16204:3:66",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16189:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16189:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16181:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15882:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15896:4:66",
                "type": ""
              }
            ],
            "src": "15731:483:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16393:228:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16410:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16421:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16403:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16403:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16403:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16444:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16455:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16440:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16440:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16460:2:66",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16433:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16433:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16433:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16483:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16494:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16479:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16479:18:66"
                      },
                      {
                        "hexValue": "412070726f706f73616c206d6179206f6e6c7920626520726567697374657265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16499:34:66",
                        "type": "",
                        "value": "A proposal may only be registere"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16472:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16472:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16472:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16554:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16565:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16550:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16550:18:66"
                      },
                      {
                        "hexValue": "64206f6e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16570:8:66",
                        "type": "",
                        "value": "d once"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16543:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16543:36:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16543:36:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16588:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16600:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16611:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16596:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16596:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16588:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16370:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16384:4:66",
                "type": ""
              }
            ],
            "src": "16219:402:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16783:241:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16793:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16805:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16816:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16801:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16801:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16793:4:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16828:52:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "16838:42:66",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "16832:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16896:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16911:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16919:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16907:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16907:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16889:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16889:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16889:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16943:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16954:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16939:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16939:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "16963:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "16971:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "16959:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16959:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16932:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16932:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16932:43:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16995:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17006:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16991:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16991:18:66"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "17011:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16984:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16984:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16984:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16736:9:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "16747:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "16755:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16763:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16774:4:66",
                "type": ""
              }
            ],
            "src": "16626:398:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17203:323:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17220:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17231:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17213:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17213:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17213:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17254:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17265:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17250:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17250:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17270:2:66",
                        "type": "",
                        "value": "93"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17243:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17243:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17243:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17293:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17304:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17289:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17289:18:66"
                      },
                      {
                        "hexValue": "54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17309:34:66",
                        "type": "",
                        "value": "The token cost of registration m"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17282:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17282:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17282:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17364:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17375:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17360:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17360:18:66"
                      },
                      {
                        "hexValue": "75737420626520617070726f76656420746f207472616e73666572207072696f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17380:34:66",
                        "type": "",
                        "value": "ust be approved to transfer prio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17353:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17353:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17353:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17435:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17446:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17431:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17431:19:66"
                      },
                      {
                        "hexValue": "7220746f2063616c6c696e6720726567697374657250726f706f73616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17452:31:66",
                        "type": "",
                        "value": "r to calling registerProposal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17424:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17424:60:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17424:60:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17493:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17505:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17516:3:66",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17501:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17501:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17493:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17180:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17194:4:66",
                "type": ""
              }
            ],
            "src": "17029:497:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17705:303:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17722:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17733:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17715:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17715:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17715:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17756:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17767:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17752:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17752:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17772:2:66",
                        "type": "",
                        "value": "73"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17745:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17745:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17745:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17795:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17806:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17791:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17791:18:66"
                      },
                      {
                        "hexValue": "496e206f7264657220746f20737570706f727420612070726f706f73616c2079",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17811:34:66",
                        "type": "",
                        "value": "In order to support a proposal y"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17784:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17784:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17784:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17866:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17877:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17862:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17862:18:66"
                      },
                      {
                        "hexValue": "6f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17882:34:66",
                        "type": "",
                        "value": "ou must stake a non-zero amount "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17855:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17855:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17855:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17937:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17948:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17933:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17933:19:66"
                      },
                      {
                        "hexValue": "6f6620746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "17954:11:66",
                        "type": "",
                        "value": "of tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17926:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17926:40:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17926:40:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17975:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17987:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17998:3:66",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17983:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17983:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17975:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17682:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17696:4:66",
                "type": ""
              }
            ],
            "src": "17531:477:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18187:230:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18204:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18215:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18197:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18197:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18197:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18238:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18249:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18234:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18234:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18254:2:66",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18227:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18227:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18227:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18277:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18288:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18273:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18273:18:66"
                      },
                      {
                        "hexValue": "54686520737570706f727465642070726f706f73616c206973206e6f74207265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18293:34:66",
                        "type": "",
                        "value": "The supported proposal is not re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18266:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18266:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18266:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18348:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18359:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18344:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18344:18:66"
                      },
                      {
                        "hexValue": "6769737465726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18364:10:66",
                        "type": "",
                        "value": "gistered"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18337:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18337:38:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18337:38:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18384:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18396:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18407:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18392:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18392:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18384:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18164:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18178:4:66",
                "type": ""
              }
            ],
            "src": "18013:404:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18596:238:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18613:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18624:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18606:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18606:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18606:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18647:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18658:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18643:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18643:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18663:2:66",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18636:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18636:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18636:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18686:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18697:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18682:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18682:18:66"
                      },
                      {
                        "hexValue": "596f75206d6179206e6f74207374616b6520696e20737570706f7274206f6620",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18702:34:66",
                        "type": "",
                        "value": "You may not stake in support of "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18675:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18675:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18675:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18757:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18768:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18753:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18753:18:66"
                      },
                      {
                        "hexValue": "612070726f706f73616c207477696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18773:18:66",
                        "type": "",
                        "value": "a proposal twice"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18746:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18746:46:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18746:46:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18801:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18813:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18824:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18809:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18809:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18801:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18573:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18587:4:66",
                "type": ""
              }
            ],
            "src": "18422:412:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18891:116:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18950:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18952:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18952:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18952:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "18922:1:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "18915:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18915:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "18908:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18908:17:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "18930:1:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18941:1:66",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "18937:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18937:6:66"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "18945:1:66"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "18933:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18933:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "18927:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18927:21:66"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "18904:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18904:45:66"
                  },
                  "nodeType": "YulIf",
                  "src": "18901:71:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18981:20:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18996:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18999:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "18992:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18992:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "18981:7:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18870:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18873:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "18879:7:66",
                "type": ""
              }
            ],
            "src": "18839:168:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19058:171:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19089:111:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19110:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19117:3:66",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "19122:10:66",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "19113:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "19113:20:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19103:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19103:31:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19103:31:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19154:1:66",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19157:4:66",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "19147:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19147:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19147:15:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19182:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "19185:4:66",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "19175:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19175:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19175:15:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19078:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19071:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19071:9:66"
                  },
                  "nodeType": "YulIf",
                  "src": "19068:132:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19209:14:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19218:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19221:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "19214:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19214:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "19209:1:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19043:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19046:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "19052:1:66",
                "type": ""
              }
            ],
            "src": "19012:217:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19408:245:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19425:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19436:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19418:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19418:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19418:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19459:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19470:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19455:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19455:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19475:2:66",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19448:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19448:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19448:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19498:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19509:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19494:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19494:18:66"
                      },
                      {
                        "hexValue": "526566756e6473206d6179206e6f742062652064697374726962757465642075",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19514:34:66",
                        "type": "",
                        "value": "Refunds may not be distributed u"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19487:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19487:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19487:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19569:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19580:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19565:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19565:18:66"
                      },
                      {
                        "hexValue": "6e74696c2074686520706572696f64206973206f766572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19585:25:66",
                        "type": "",
                        "value": "ntil the period is over"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19558:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19558:53:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19558:53:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19620:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19632:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19643:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19628:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19628:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19620:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19385:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19399:4:66",
                "type": ""
              }
            ],
            "src": "19234:419:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19832:232:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19849:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19860:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19842:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19842:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19842:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19883:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19894:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19879:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19879:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19899:2:66",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19872:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19872:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19872:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19922:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19933:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19918:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19918:18:66"
                      },
                      {
                        "hexValue": "5468652070726f76696465642070726f706f73616c2061646472657373206973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19938:34:66",
                        "type": "",
                        "value": "The provided proposal address is"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19911:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19911:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19911:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19993:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20004:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19989:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19989:18:66"
                      },
                      {
                        "hexValue": "206e6f742076616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20009:12:66",
                        "type": "",
                        "value": " not valid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19982:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19982:40:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19982:40:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20031:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20043:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20054:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20039:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20039:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20031:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19809:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19823:4:66",
                "type": ""
              }
            ],
            "src": "19658:406:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20198:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20208:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20220:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20231:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20216:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20216:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20208:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20250:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20265:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20273:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20261:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20261:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20243:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20243:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20243:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20337:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20348:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20333:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20333:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "20353:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20326:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20326:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20326:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20159:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20170:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20178:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20189:4:66",
                "type": ""
              }
            ],
            "src": "20069:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20500:198:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20510:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20522:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20533:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20518:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20518:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20510:4:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "20545:52:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "20555:42:66",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "20549:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20613:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "20628:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20636:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20624:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20624:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20606:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20606:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20606:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20660:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20671:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20656:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20656:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "20680:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "20688:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "20676:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20676:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20649:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20649:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20649:43:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20461:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "20472:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "20480:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20491:4:66",
                "type": ""
              }
            ],
            "src": "20371:327:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20877:234:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20894:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20905:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20887:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20887:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20887:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20928:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20939:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20924:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20924:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20944:2:66",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20917:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20917:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20917:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20967:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20978:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20963:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20963:18:66"
                      },
                      {
                        "hexValue": "696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20983:34:66",
                        "type": "",
                        "value": "initialization failure: nothing "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20956:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20956:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20956:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21038:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21049:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21034:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21034:18:66"
                      },
                      {
                        "hexValue": "746f20696d706c656d656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21054:14:66",
                        "type": "",
                        "value": "to implement"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21027:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21027:42:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21027:42:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21078:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21090:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21101:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21086:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21086:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21078:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_358f0a69429e5f4475e97793c43ead4f9c0987f98e7591dc6c37d0e56b6bd527__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20854:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20868:4:66",
                "type": ""
              }
            ],
            "src": "20703:408:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21290:181:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21307:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21318:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21300:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21300:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21300:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21341:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21352:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21337:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21337:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21357:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21330:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21330:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21330:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21380:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21391:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21376:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21376:18:66"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21396:33:66",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21369:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21369:61:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21369:61:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21439:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21451:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21462:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21447:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21447:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21439:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21267:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21281:4:66",
                "type": ""
              }
            ],
            "src": "21116:355:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_Policy_$12499__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            let _4 := 0xffffffffffffffffffffffffffffffffffffffff\n            mstore(pos, and(mload(_3), _4))\n            mstore(add(pos, _1), and(mload(add(_3, _1)), _4))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_contract$_Proposal_$10943(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_contract$_Proposal_$10943_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_ECOx_$3238__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_ECO_$2497__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_Proposal_$10943__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_PolicyVotes_$10915__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_array$_t_contract$_Proposal_$10943_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffffffffffffffffffffffffffffffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_contract$_Proposal_$10943t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Only the policy contract may cal\")\n        mstore(add(headStart, 96), \"l this method.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a35c1fe0fe1ed6afe3c9bc1734c4f5109aadfc21beb8ed8e518da672f582600b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"This method cannot be called on \")\n        mstore(add(headStart, 96), \"clones\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_08d278b1488142cbb27880a3aec0587d5b0d682f7907703765895f131b608af0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Only the policy or interface con\")\n        mstore(add(headStart, 96), \"tract can set the interface.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"The destruct operation can only \")\n        mstore(add(headStart, 96), \"be performed when the period is \")\n        mstore(add(headStart, 128), \"over\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Must refund all missed proposals\")\n        mstore(add(headStart, 96), \" first\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer Failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"no proposal has been selected\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"voting has already been deployed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_Proposal_$10943_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Proposal contract no longer acti\")\n        mstore(add(headStart, 96), \"ve\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"A proposal has already been sele\")\n        mstore(add(headStart, 96), \"cted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 78)\n        mstore(add(headStart, 64), \"Proposals may no longer be suppo\")\n        mstore(add(headStart, 96), \"rted because the registration pe\")\n        mstore(add(headStart, 128), \"riod has ended\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You have not staked this proposa\")\n        mstore(add(headStart, 96), \"l\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Can only be called during initia\")\n        mstore(add(headStart, 96), \"lization\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_contract$_PolicyVotes_$10915_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"The proposal address can't be 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 79)\n        mstore(add(headStart, 64), \"Proposals may no longer be regis\")\n        mstore(add(headStart, 96), \"tered because the registration p\")\n        mstore(add(headStart, 128), \"eriod has ended\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"A proposal may only be registere\")\n        mstore(add(headStart, 96), \"d once\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 93)\n        mstore(add(headStart, 64), \"The token cost of registration m\")\n        mstore(add(headStart, 96), \"ust be approved to transfer prio\")\n        mstore(add(headStart, 128), \"r to calling registerProposal\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 73)\n        mstore(add(headStart, 64), \"In order to support a proposal y\")\n        mstore(add(headStart, 96), \"ou must stake a non-zero amount \")\n        mstore(add(headStart, 128), \"of tokens\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"The supported proposal is not re\")\n        mstore(add(headStart, 96), \"gistered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"You may not stake in support of \")\n        mstore(add(headStart, 96), \"a proposal twice\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Refunds may not be distributed u\")\n        mstore(add(headStart, 96), \"ntil the period is over\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"The provided proposal address is\")\n        mstore(add(headStart, 96), \" not valid\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_358f0a69429e5f4475e97793c43ead4f9c0987f98e7591dc6c37d0e56b6bd527__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"initialization failure: nothing \")\n        mstore(add(headStart, 96), \"to implement\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "935:11849:30:-:0;;;5184:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5318:7;5327:8;5337:9;5318:7;;670:32:44;696:4;670:17;:32::i;:::-;-1:-1:-1;;;;;1046:16:39;;;;;2402:59:40::1;::::0;-1:-1:-1;;;2402:59:40;;2437:4:::1;2402:59;::::0;::::1;1123:34:66::0;1193:15;;;1173:18;;;1166:43;303:42:38::1;::::0;2402:26:40::1;::::0;1058:18:66;;2402:59:40::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;;593:19:37;;::::1;;::::0;-1:-1:-1;622:21:37;::::1;;::::0;5358:15:30::1;:30:::0;;-1:-1:-1;;;;;;5358:30:30::1;::::0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;935:11849:30;;-1:-1:-1;;;935:11849:30;1823:213:44;-1:-1:-1;;;;;1892:25:44;;:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;1892:16;-1:-1:-1;;;;;1892:25:44;;;1884:69;;;;-1:-1:-1;;;1884:69:44;;1422:2:66;1884:69:44;;;1404:21:66;1461:2;1441:18;;;1434:30;1500:33;1480:18;;;1473:61;1551:18;;1884:69:44;;;;;;;;-1:-1:-1;;;;;;;;;;;1986:34:44;1823:213::o;14:139:66:-;-1:-1:-1;;;;;97:31:66;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:748::-;317:6;325;333;341;394:3;382:9;373:7;369:23;365:33;362:53;;;411:1;408;401:12;362:53;443:9;437:16;462:39;495:5;462:39;:::i;:::-;570:2;555:18;;549:25;520:5;;-1:-1:-1;583:41:66;549:25;583:41;:::i;:::-;695:2;680:18;;674:25;643:7;;-1:-1:-1;708:41:66;674:25;708:41;:::i;:::-;820:2;805:18;;799:25;768:7;;-1:-1:-1;833:41:66;799:25;833:41;:::i;:::-;158:748;;;;-1:-1:-1;158:748:66;;-1:-1:-1;;158:748:66:o;1220:355::-;935:11849:30;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "935:11849:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:30:39;;;;;;;;-1:-1:-1;;;;;194:55:66;;;176:74;;164:2;149:18;720:30:39;;;;;;;;2733:1279;;;;;;:::i;:::-;;:::i;:::-;;4316:317:40;;;:::i;2604:360::-;;;;;;:::i;:::-;;:::i;:::-;;;2310:25:66;;;2298:2;2283:18;2604:360:40;2164:177:66;6225:308:30;;;:::i;:::-;;;;;;;:::i;12259:523::-;;;:::i;1691:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1691:42:30;;;;;;;;;;;;;;-1:-1:-1;;;;;3840:15:66;;;3822:34;;3892:15;;;;3887:2;3872:18;;3865:43;3924:18;;;3917:34;3749:2;3734:18;1691:42:30;3541:416:66;435:31:37;;;;;10478:626:30;;;:::i;2879:27::-;;;;;;3569:111:40;;;;;;:::i;:::-;;:::i;2129:28:30:-;;;;;;;;;;;;4805:14:66;;4798:22;4780:41;;4768:2;4753:18;2129:28:30;4640:187:66;9674:798:30;;;;;;:::i;:::-;;:::i;656:276:37:-;;;;;;:::i;:::-;;:::i;938:295::-;;;;;;:::i;:::-;;:::i;3020:26:30:-;;;;;;1629:146:44;-1:-1:-1;;;;;;;;;;;1733:26:44;1629:146;;366:29:37;;;;;2461:47:30;;2502:6;2461:47;;2733:55;;2785:3;2733:55;;2334:47;;2374:7;2334:47;;1891:30;;;;;;:::i;:::-;;:::i;3154:34::-;;;;;-1:-1:-1;;;;;3154:34:30;;;1792:29;;;;;;2004:50;;2044:10;2004:50;;6063:108;;;:::i;:::-;;;;;;;:::i;2235:35::-;;;;;;;;-1:-1:-1;;;;;2235:35:30;;;5653:342;;;;;;:::i;:::-;;:::i;1444:59::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;6911:1040;;;;;;:::i;:::-;;:::i;8236:1432::-;;;;;;:::i;:::-;;:::i;2596:46::-;;2640:2;2596:46;;11422:734;;;;;;:::i;:::-;;:::i;2733:1279:39:-;883:10;-1:-1:-1;;;;;905:6:39;883:29;;862:122;;;;-1:-1:-1;;;862:122:39;;7398:2:66;862:122:39;;;7380:21:66;7437:2;7417:18;;;7410:30;7476:34;7456:18;;;7449:62;-1:-1:-1;;;7527:18:66;;;7520:44;7581:19;;862:122:39;;;;;;;;;3433:1:::1;3414::::0;3390:5:::1;3384:12;3361:4;3354:5;3350:16;3323:9;3300:5;3270:178;3625:16;3677:4;3674:1;3669:3:::0;3654:28:::1;3851:6:::0;3870:56;;::::1;;3977:4;3972:3;3965:17;3870:56;3907:4;3902:3;3895:17;3844:152;;;;2733:1279:::0;;:::o;4316:317:40:-;4357:7;4425:4;4397:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;4397:16:40;-1:-1:-1;;;;;4397:33:40;;4376:118;;;;-1:-1:-1;;;4376:118:40;;7813:2:66;4376:118:40;;;7795:21:66;7852:2;7832:18;;;7825:30;7891:34;7871:18;;;7864:62;-1:-1:-1;;;7942:18:66;;;7935:36;7988:19;;4376:118:40;7611:402:66;4376:118:40;4504:14;4521:26;4541:4;4521:11;:26::i;:::-;4557:46;;-1:-1:-1;;;4557:46:40;;4597:4;4557:46;;;176:74:66;4504:43:40;;-1:-1:-1;;;;;;4557:31:40;;;;;149:18:66;;4557:46:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4620:6:40;;4316:317;-1:-1:-1;;;;4316:317:40:o;2604:360::-;2733:7;2794:6;-1:-1:-1;;;;;2777:24:40;:5;-1:-1:-1;;;;;2777:24:40;;:57;;;-1:-1:-1;2814:20:40;;-1:-1:-1;;;;;2805:29:40;;;2814:20;;2805:29;2777:57;2756:164;;;;-1:-1:-1;;;2756:164:40;;8220:2:66;2756:164:40;;;8202:21:66;8259:2;8239:18;;;8232:30;8298:34;8278:18;;;8271:62;8369:30;8349:18;;;8342:58;8417:19;;2756:164:40;8018:424:66;2756:164:40;428:40:39;;8661:22:66;428:40:39;;;8649:35:66;8700:12;;428:40:39;;;;;;;;;;;;418:51;;;;;;2930:27:40;;2604:360;;;;:::o;6225:308:30:-;6273:13;6298:26;6338:14;;6327:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;6327:26:30;;-1:-1:-1;;6327:26:30;;;;;;;;;;;;6298:55;;6368:13;6363:134;6395:14;;6387:5;:22;6363:134;;;6456:9;:30;6466:12;6479:5;6466:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;6466:19:30;;;6456:30;;;;;;;;;;;;;;;;6434:52;;;;;;;;;;;;;6466:19;6434:52;;;;;;;;;;;;;;;;;;;;:19;;:12;;6447:5;;6434:19;;;;;;:::i;:::-;;;;;;:52;;;;6411:7;;;;;:::i;:::-;;;;6363:134;;;-1:-1:-1;6514:12:30;6225:308;-1:-1:-1;6225:308:30:o;12259:523::-;12319:16;;;;;:44;;-1:-1:-1;12351:12:30;;513:15:65;12339:24:30;12319:44;12298:159;;;;-1:-1:-1;;;12298:159:30;;9329:2:66;12298:159:30;;;9311:21:66;9368:2;9348:18;;;9341:30;;;9407:34;9387:18;;;9380:62;9478:34;9458:18;;;9451:62;-1:-1:-1;;;9529:19:66;;;9522:35;9574:19;;12298:159:30;9127:472:66;12298:159:30;12476:14;;:19;12468:70;;;;-1:-1:-1;;;12468:70:30;;9806:2:66;12468:70:30;;;9788:21:66;9845:2;9825:18;;;9818:30;9884:34;9864:18;;;9857:62;-1:-1:-1;;;9935:18:66;;;9928:36;9981:19;;12468:70:30;9604:402:66;12468:70:30;12549:38;;-1:-1:-1;;;12549:38:30;;1296:66:40;12549:38:30;;;2310:25:66;12549:6:30;-1:-1:-1;;;;;12549:17:30;;;;2283:18:66;;12549:38:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12687:33:30;;-1:-1:-1;;;12687:33:30;;12714:4;12687:33;;;176:74:66;12619:8:30;-1:-1:-1;;;;;12619:17:30;;-1:-1:-1;12619:17:30;;-1:-1:-1;12662:6:30;;12619:17;;12687:18;;149::66;;12687:33:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12619:115;;;;;;;;;;-1:-1:-1;;;;;10392:55:66;;;12619:115:30;;;10374:74:66;10464:18;;;10457:34;10347:18;;12619:115:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12598:177;;;;-1:-1:-1;;;12598:177:30;;10986:2:66;12598:177:30;;;10968:21:66;11025:2;11005:18;;;10998:30;-1:-1:-1;;;11044:18:66;;;11037:45;11099:18;;12598:177:30;10784:339:66;12598:177:30;12259:523::o;10478:626::-;10537:16;;;;10529:58;;;;-1:-1:-1;;;10529:58:30;;11330:2:66;10529:58:30;;;11312:21:66;11369:2;11349:18;;;11342:30;11408:31;11388:18;;;11381:59;11457:18;;10529:58:30;11128:353:66;10529:58:30;10626:19;;;;;-1:-1:-1;;;;;10626:19:30;10597:121;;;;-1:-1:-1;;;10597:121:30;;11688:2:66;10597:121:30;;;11670:21:66;;;11707:18;;;11700:30;11766:34;11746:18;;;11739:62;11818:18;;10597:121:30;11486:356:66;10597:121:30;10754:19;;;-1:-1:-1;;10783:26:30;;;;;10849:15;;:23;;;-1:-1:-1;;;10849:23:30;;;;-1:-1:-1;;;;;10754:19:30;;;;;;;10728:23;;10849:15;;:21;;:23;;;;;;;;;;;;;;10728;10849:15;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10912:11;;10883:41;;-1:-1:-1;;;10883:41:30;;-1:-1:-1;;;;;10392:55:66;;;10883:41:30;;;10374:74:66;10464:18;;;10457:34;;;;10820:53:30;;-1:-1:-1;10883:12:30;;;;;10347:18:66;;10883:41:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10934:46:30;;-1:-1:-1;;;10934:46:30;;1453:66:40;10934:46:30;;;12597:25:66;-1:-1:-1;;;;;12658:55:66;;;12638:18;;;12631:83;10934:6:30;:16;;-1:-1:-1;10934:16:30;;-1:-1:-1;12570:18:66;;10934:46:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10996:13:30;;-1:-1:-1;;;;;10996:13:30;;;-1:-1:-1;10996:13:30;;-1:-1:-1;10996:13:30;;;-1:-1:-1;;;;;11027:25:30;;;;;;:9;:25;;;;;;;11020:32;;-1:-1:-1;;;;;;11020:32:30;;;;;;;;;;;;;;;;;;;;;;;11079:14;;:18;;11020:32;11079:18;:::i;:::-;11062:14;:35;-1:-1:-1;;10478:626:30:o;3569:111:40:-;883:10:39;-1:-1:-1;;;;;905:6:39;883:29;;862:122;;;;-1:-1:-1;;;862:122:39;;7398:2:66;862:122:39;;;7380:21:66;7437:2;7417:18;;;7410:30;7476:34;7456:18;;;7449:62;-1:-1:-1;;;7527:18:66;;;7520:44;7581:19;;862:122:39;7196:410:66;862:122:39;3645:20:40::1;:28:::0;;-1:-1:-1;;;;;;3645:28:40::1;-1:-1:-1::0;;;;;3645:28:40;;;::::1;::::0;;;::::1;::::0;;3569:111::o;9674:798:30:-;9791:4;9749:30;1296:66:40;9749:9:30;:30::i;:::-;-1:-1:-1;;;;;9749:47:30;;9728:128;;;;-1:-1:-1;;;9728:128:30;;13057:2:66;9728:128:30;;;13039:21:66;13096:2;13076:18;;;13069:30;13135:34;13115:18;;;13108:62;-1:-1:-1;;;13186:18:66;;;13179:32;13228:19;;9728:128:30;12855:398:66;9728:128:30;9875:16;;;;9874:17;9866:66;;;;-1:-1:-1;;;9866:66:30;;13460:2:66;9866:66:30;;;13442:21:66;13499:2;13479:18;;;13472:30;13538:34;13518:18;;;13511:62;-1:-1:-1;;;13589:18:66;;;13582:34;13633:19;;9866:66:30;13258:400:66;9866:66:30;9975:12;;513:15:65;9963:24:30;9942:149;;;;-1:-1:-1;;;9942:149:30;;13865:2:66;9942:149:30;;;13847:21:66;13904:2;13884:18;;;13877:30;13943:34;13923:18;;;13916:62;14014:34;13994:18;;;13987:62;-1:-1:-1;;;14065:19:66;;;14058:45;14120:19;;9942:149:30;13663:482:66;9942:149:30;-1:-1:-1;;;;;10120:16:30;;;10102:15;10120:16;;;:9;:16;;;;;;;;10168:6;10175:11;;;;;;;10168:19;;;;;;;;10188:10;10168:31;;;;;;;;;;10147:111;;;;-1:-1:-1;;;10147:111:30;;14352:2:66;10147:111:30;;;14334:21:66;14391:2;14371:18;;;14364:30;14430:34;14410:18;;;14403:62;-1:-1:-1;;;14481:18:66;;;14474:31;14522:19;;10147:111:30;14150:397:66;10147:111:30;10269:15;10287:36;10299:10;10311:11;;10287;:36::i;:::-;10269:54;;10365:7;10349:2;:13;;;:23;;;;:::i;:::-;10333:13;;;:39;10382:6;10389:11;;;;-1:-1:-1;;;;;10389:11:30;;;10416:5;10382:19;;;;;;;;;;;10402:10;10382:31;;;;;;;;:39;;-1:-1:-1;;10382:39:30;;;10437:28;;;;;10402:10;10437:28;;10416:5;10437:28;9718:754;;9674:798;:::o;656:276:37:-;788:36;;-1:-1:-1;;;788:36:37;;;;;2310:25:66;;;749:7:37;;;;-1:-1:-1;;;;;788:8:37;:22;;;;2283:18:66;;788:36:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;772:52;;834:14;851:12;:10;:12::i;:::-;-1:-1:-1;;;;;851:28:37;;880:12;851:42;;;;;;;;;;;;;2310:25:66;;2298:2;2283:18;;2164:177;851:42:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;834:59;-1:-1:-1;911:14:37;834:59;911:5;:14;:::i;:::-;904:21;656:276;-1:-1:-1;;;;656:276:37:o;938:295::-;1080:41;;-1:-1:-1;;;1080:41:37;;-1:-1:-1;;;;;10392:55:66;;;1080:41:37;;;10374:74:66;10464:18;;;10457:34;;;1040:7:37;;;;1080:8;:21;;;;10347:18:66;;1080:41:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:58;;1131:15;1149:12;:10;:12::i;:::-;:43;;-1:-1:-1;;;1149:43:37;;-1:-1:-1;;;;;10392:55:66;;;1149:43:37;;;10374:74:66;10464:18;;;10457:34;;;1149:23:37;;;;;;;10347:18:66;;1149:43:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1131:61;-1:-1:-1;1210:16:37;1131:61;1210:6;:16;:::i;:::-;1203:23;938:295;-1:-1:-1;;;;;938:295:37:o;1891:30:30:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:30:30;;-1:-1:-1;1891:30:30;:::o;6063:108::-;6116:17;6152:12;6145:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6145:19:30;;;;;;;;;;;;;;;;;;;;;;;6063:108;:::o;5653:342::-;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;14887:2:66;505:117:44;;;14869:21:66;14926:2;14906:18;;;14899:30;14965:34;14945:18;;;14938:62;-1:-1:-1;;;15016:18:66;;;15009:38;15064:19;;505:117:44;14685:404:66;505:117:44;5731:23:30::1;5748:5;5731:16;:23::i;:::-;5877:5;-1:-1:-1::0;;;;;5861:38:30::1;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5843:15;:58:::0;;-1:-1:-1;;;;;;5843:58:30::1;-1:-1:-1::0;;;;;5843:58:30;;;::::1;::::0;;;::::1;::::0;;2044:10:::1;513:15:65::0;5927:25:30::1;;;;:::i;:::-;5912:12;:40:::0;-1:-1:-1;5976:12:30::1;5962:11;:26:::0;5653:342::o;6911:1040::-;6971:7;-1:-1:-1;;;;;7011:28:30;;6990:106;;;;-1:-1:-1;;;6990:106:30;;15573:2:66;6990:106:30;;;15555:21:66;15612:2;15592:18;;;15585:30;15651:33;15631:18;;;15624:61;15702:18;;6990:106:30;15371:355:66;6990:106:30;7140:12;;513:15:65;7128:24:30;:45;;;;-1:-1:-1;7157:16:30;;;;7156:17;7128:45;7107:171;;;;-1:-1:-1;;;7107:171:30;;15933:2:66;7107:171:30;;;15915:21:66;15972:2;15952:18;;;15945:30;16011:34;15991:18;;;15984:62;16082:34;16062:18;;;16055:62;16154:17;16133:19;;;16126:46;16189:19;;7107:171:30;15731:483:66;7107:171:30;-1:-1:-1;;;;;7307:16:30;;;7289:15;7307:16;;;:9;:16;;;;;7363:11;;;;7307:16;;7363:11;7355:34;7334:119;;;;-1:-1:-1;;;7334:119:30;;16421:2:66;7334:119:30;;;16403:21:66;16460:2;16440:18;;;16433:30;16499:34;16479:18;;;16472:62;-1:-1:-1;;;16550:18:66;;;16543:36;16596:19;;7334:119:30;16219:402:66;7334:119:30;7484:63;;-1:-1:-1;;;7484:63:30;;7506:10;7484:63;;;3822:34:66;7526:4:30;3872:18:66;;;3865:43;2374:7:30;3924:18:66;;;3917:34;7484:8:30;-1:-1:-1;;;;;7484:21:30;;;;3734:18:66;;7484:63:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7463:203;;;;-1:-1:-1;;;7463:203:30;;17231:2:66;7463:203:30;;;17213:21:66;17270:2;17250:18;;;17243:30;17309:34;17289:18;;;17282:62;17380:34;17360:18;;;17353:62;17452:31;17431:19;;;17424:60;17501:19;;7463:203:30;17029:497:66;7463:203:30;7677:11;;;;:19;;-1:-1:-1;;;;;7677:19:30;;-1:-1:-1;;;;;;7677:19:30;;;;;;;;7706:24;;;;7720:10;7706:24;;;7741:12;:24;;;;;;;7677:11;7741:24;;;;;;;;;;;;;;;7775:14;:19;;:14;;7677:11;7775:19;;7677:11;;7775:19;:::i;:::-;;;;-1:-1:-1;;7810:27:30;;-1:-1:-1;;;;;7810:27:30;;;7819:10;;7810:27;;;;;7943:1;7926:14;;:18;;;;:::i;:::-;7919:25;6911:1040;-1:-1:-1;;;6911:1040:30:o;8236:1432::-;8351:4;8309:30;1296:66:40;8309:9:30;:30::i;:::-;-1:-1:-1;;;;;8309:47:30;;8288:128;;;;-1:-1:-1;;;8288:128:30;;13057:2:66;8288:128:30;;;13039:21:66;13096:2;13076:18;;;13069:30;13135:34;13115:18;;;13108:62;-1:-1:-1;;;13186:18:66;;;13179:32;13228:19;;8288:128:30;12855:398:66;8288:128:30;8435:16;;;;8434:17;8426:66;;;;-1:-1:-1;;;8426:66:30;;13460:2:66;8426:66:30;;;13442:21:66;13499:2;13479:18;;;13472:30;13538:34;13518:18;;;13511:62;-1:-1:-1;;;13589:18:66;;;13582:34;13633:19;;8426:66:30;13258:400:66;8426:66:30;8535:12;;513:15:65;8523:24:30;8502:149;;;;-1:-1:-1;;;8502:149:30;;13865:2:66;8502:149:30;;;13847:21:66;13904:2;13884:18;;;13877:30;13943:34;13923:18;;;13916:62;14014:34;13994:18;;;13987:62;-1:-1:-1;;;14065:19:66;;;14058:45;14120:19;;8502:149:30;13663:482:66;8502:149:30;8662:15;8680:36;8692:10;8704:11;;8680;:36::i;:::-;8662:54;;8758:1;8748:7;:11;8727:131;;;;-1:-1:-1;;;8727:131:30;;17733:2:66;8727:131:30;;;17715:21:66;17772:2;17752:18;;;17745:30;17811:34;17791:18;;;17784:62;17882:34;17862:18;;;17855:62;-1:-1:-1;;;17933:19:66;;;17926:40;17983:19;;8727:131:30;17531:477:66;8727:131:30;-1:-1:-1;;;;;8887:16:30;;;8869:15;8887:16;;;:9;:16;;;;;8943:11;;;;8887:16;;8943:11;8914:121;;;;-1:-1:-1;;;8914:121:30;;18215:2:66;8914:121:30;;;18197:21:66;18254:2;18234:18;;;18227:30;18293:34;18273:18;;;18266:62;-1:-1:-1;;;18344:18:66;;;18337:38;18392:19;;8914:121:30;18013:404:66;8914:121:30;9067:6;9074:11;;;;-1:-1:-1;;;;;9074:11:30;9067:19;;;;;;;;;;;;9087:10;9067:31;;;;;;;;;9066:32;9045:127;;;;-1:-1:-1;;;9045:127:30;;18624:2:66;9045:127:30;;;18606:21:66;18663:2;18643:18;;;18636:30;18702:34;18682:18;;;18675:62;18773:18;18753;;;18746:46;18809:19;;9045:127:30;18422:412:66;9045:127:30;9215:7;9199:2;:13;;;:23;;;;:::i;:::-;9183:13;;;:39;9266:4;9239:11;;;;-1:-1:-1;;;;;9239:11:30;9232:19;;;;;;;;;;;;9252:10;9232:31;;;;;;;;:38;;-1:-1:-1;;9232:38:30;;;;;;;9281:22;;:10;:22::i;:::-;9318:26;;-1:-1:-1;;;;;9318:26:30;;;9326:10;;9318:26;;;;;9355:14;9372:29;9389:11;;9372:16;:29::i;:::-;9355:46;-1:-1:-1;2785:3:30;9458:26;2640:2;9355:46;9458:26;:::i;:::-;9457:56;;;;:::i;:::-;9429:2;:13;;;:84;9412:250;;;9543:30;;-1:-1:-1;;;;;9543:30:30;;;;;;;;9587:16;:23;;-1:-1:-1;;;;;9624:27:30;;9587:23;9624:27;-1:-1:-1;;9624:27:30;;;;9606:4;9624:27;;;9412:250;8278:1390;;;8236:1432;:::o;11422:734::-;11494:16;;;;;:44;;-1:-1:-1;11526:12:30;;513:15:65;11514:24:30;11494:44;11473:146;;;;-1:-1:-1;;;11473:146:30;;19436:2:66;11473:146:30;;;19418:21:66;19475:2;19455:18;;;19448:30;19514:34;19494:18;;;19487:62;19585:25;19565:18;;;19558:53;19628:19;;11473:146:30;19234:419:66;11473:146:30;-1:-1:-1;;;;;11651:28:30;;11630:106;;;;-1:-1:-1;;;11630:106:30;;15573:2:66;11630:106:30;;;15555:21:66;15612:2;15592:18;;;15585:30;15651:33;15631:18;;;15624:61;15702:18;;11630:106:30;15371:355:66;11630:106:30;-1:-1:-1;;;;;11765:16:30;;;11747:15;11765:16;;;:9;:16;;;;;11812:11;;;;11765:16;;11812:11;:20;11791:109;;;;-1:-1:-1;;;11791:109:30;;19860:2:66;11791:109:30;;;19842:21:66;19899:2;19879:18;;;19872:30;19938:34;19918:18;;;19911:62;-1:-1:-1;;;19989:18:66;;;19982:40;20039:19;;11791:109:30;19658:406:66;11791:109:30;11930:11;;-1:-1:-1;;;;;11959:16:30;;;11911;11959;;;:9;:16;;;;;;;11952:23;;-1:-1:-1;;;;;;11952:23:30;;;;;11930:11;11952:23;;;;;;;;;;;;;;;;;12002:14;;11930:11;;;;;12002:18;;;:::i;:::-;11985:14;:35;12039:43;;-1:-1:-1;;;12039:43:30;;-1:-1:-1;;;;;10392:55:66;;;12039:43:30;;;10374:74:66;2502:6:30;10464:18:66;;;10457:34;12039:8:30;:17;;;;10347:18:66;;12039:43:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12031:71;;;;-1:-1:-1;;;12031:71:30;;10986:2:66;12031:71:30;;;10968:21:66;11025:2;11005:18;;;10998:30;-1:-1:-1;;;11044:18:66;;;11037:45;11099:18;;12031:71:30;10784:339:66;12031:71:30;12143:5;-1:-1:-1;;;;;12118:31:30;12133:8;-1:-1:-1;;;;;12118:31:30;;;;;;;;;;;11463:693;;11422:734;:::o;1352:577:8:-;1407:14;1433:19;1463:6;1455:15;;1433:37;;1522:4;1516:11;1587:66;1564:5;1540:127;1705:11;1698:4;1691:5;1687:16;1680:37;1788:66;1765:4;1758:5;1754:16;1730:138;1908:4;1901:5;1898:1;1891:22;1881:32;1352:577;-1:-1:-1;;;;1352:577:8:o;5210:149:40:-;5291:61;;-1:-1:-1;;;5291:61:40;;-1:-1:-1;;;;;5339:6:40;10392:55:66;5291:61:40;;;10374:74:66;10464:18;;;10457:34;;;5265:7:40;;303:42:38;;5291:39:40;;10347:18:66;;5291:61:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5284:68;5210:149;-1:-1:-1;;5210:149:40:o;1334:117:37:-;1379:10;1419:24;2230:66:40;1419:9:37;:24::i;:::-;1401:43;;1334:117;:::o;3296:220:40:-;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;14887:2:66;505:117:44;;;14869:21:66;14926:2;14906:18;;;14899:30;14965:34;14945:18;;;14938:62;-1:-1:-1;;;15016:18:66;;;15009:38;15064:19;;505:117:44;14685:404:66;505:117:44;3418:23:40::1;3435:5;3418:16;:23::i;:::-;3451:58;::::0;-1:-1:-1;;;3451:58:40;;3486:4:::1;3451:58;::::0;::::1;20606:34:66::0;-1:-1:-1;;;;;3501:6:40::1;20676:15:66::0;20656:18;;;20649:43;303:42:38::1;::::0;3451:26:40::1;::::0;20518:18:66;;3451:58:40::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;1239:89:37::0;1292:12;:10;:12::i;:::-;:29;;-1:-1:-1;;;1292:29:37;;-1:-1:-1;;;;;194:55:66;;;1292:29:37;;;176:74:66;1292:23:37;;;;;;;149:18:66;;1292:29:37;14:242:66;2021:152:39;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;14887:2:66;505:117:44;;;14869:21:66;14926:2;14906:18;;;14899:30;14965:34;14945:18;;;14938:62;-1:-1:-1;;;15016:18:66;;;15009:38;15064:19;;505:117:44;14685:404:66;505:117:44;2143:23:39::1;2160:5;2143:16;:23::i;:::-;2021:152:::0;:::o;1240:321:44:-;554:1;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;14887:2:66;505:117:44;;;14869:21:66;14926:2;14906:18;;;14899:30;14965:34;14945:18;;;14938:62;-1:-1:-1;;;15016:18:66;;;15009:38;15064:19;;505:117:44;14685:404:66;505:117:44;1317:20:::1;1362:5;-1:-1:-1::0;;;;;1348:35:44::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1317:69:::0;-1:-1:-1;;;;;;1417:26:44;::::1;1396:117;;;::::0;-1:-1:-1;;;1396:117:44;;20905:2:66;1396:117:44::1;::::0;::::1;20887:21:66::0;20944:2;20924:18;;;20917:30;20983:34;20963:18;;;20956:62;-1:-1:-1;;;21034:18:66;;;21027:42;21086:19;;1396:117:44::1;20703:408:66::0;1396:117:44::1;1523:31;1541:12;1523:17;:31::i;:::-;1307:254;1240:321:::0;:::o;1823:213::-;1912:5;-1:-1:-1;;;;;1892:25:44;:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;1892:16;-1:-1:-1;;;;;1892:25:44;;;1884:69;;;;-1:-1:-1;;;1884:69:44;;21318:2:66;1884:69:44;;;21300:21:66;21357:2;21337:18;;;21330:30;21396:33;21376:18;;;21369:61;21447:18;;1884:69:44;21116:355:66;1884:69:44;-1:-1:-1;;;;;;;;;;;1986:34:44;1823:213::o;261:154:66:-;-1:-1:-1;;;;;340:5:66;336:54;329:5;326:65;316:93;;405:1;402;395:12;420:127;481:10;476:3;472:20;469:1;462:31;512:4;509:1;502:15;536:4;533:1;526:15;552:1056;629:6;637;690:2;678:9;669:7;665:23;661:32;658:52;;;706:1;703;696:12;658:52;745:9;732:23;764:31;789:5;764:31;:::i;:::-;814:5;-1:-1:-1;870:2:66;855:18;;842:32;893:18;923:14;;;920:34;;;950:1;947;940:12;920:34;988:6;977:9;973:22;963:32;;1033:7;1026:4;1022:2;1018:13;1014:27;1004:55;;1055:1;1052;1045:12;1004:55;1091:2;1078:16;1113:2;1109;1106:10;1103:36;;;1119:18;;:::i;:::-;1194:2;1188:9;1162:2;1248:13;;-1:-1:-1;;1244:22:66;;;1268:2;1240:31;1236:40;1224:53;;;1292:18;;;1312:22;;;1289:46;1286:72;;;1338:18;;:::i;:::-;1378:10;1374:2;1367:22;1413:2;1405:6;1398:18;1453:7;1448:2;1443;1439;1435:11;1431:20;1428:33;1425:53;;;1474:1;1471;1464:12;1425:53;1530:2;1525;1521;1517:11;1512:2;1504:6;1500:15;1487:46;1575:1;1570:2;1565;1557:6;1553:15;1549:24;1542:35;1596:6;1586:16;;;;;;;552:1056;;;;;:::o;1844:315::-;1912:6;1920;1973:2;1961:9;1952:7;1948:23;1944:32;1941:52;;;1989:1;1986;1979:12;1941:52;2025:9;2012:23;2002:33;;2085:2;2074:9;2070:18;2057:32;2098:31;2123:5;2098:31;:::i;:::-;2148:5;2138:15;;;1844:315;;;;;:::o;2346:920::-;2561:2;2613:21;;;2683:13;;2586:18;;;2705:22;;;2532:4;;2561:2;2746;;2764:18;;;;2805:15;;;2532:4;2848:392;2862:6;2859:1;2856:13;2848:392;;;2921:13;;3028:9;;-1:-1:-1;;;;;3024:18:66;;;3012:31;;3087:11;;;3081:18;3077:27;3063:12;;;3056:49;3145:11;;3139:18;3125:12;;;3118:40;3187:4;3178:14;;;;3215:15;;;;2884:1;2877:9;2848:392;;;-1:-1:-1;3257:3:66;;2346:920;-1:-1:-1;;;;;;;2346:920:66:o;3271:265::-;3348:6;3401:2;3389:9;3380:7;3376:23;3372:32;3369:52;;;3417:1;3414;3407:12;3369:52;3456:9;3443:23;3475:31;3500:5;3475:31;:::i;4832:180::-;4891:6;4944:2;4932:9;4923:7;4919:23;4915:32;4912:52;;;4960:1;4957;4950:12;4912:52;-1:-1:-1;4983:23:66;;4832:180;-1:-1:-1;4832:180:66:o;5017:315::-;5085:6;5093;5146:2;5134:9;5125:7;5121:23;5117:32;5114:52;;;5162:1;5159;5152:12;5114:52;5201:9;5188:23;5220:31;5245:5;5220:31;:::i;:::-;5270:5;5322:2;5307:18;;;;5294:32;;-1:-1:-1;;;5017:315:66:o;6081:699::-;6270:2;6322:21;;;6392:13;;6295:18;;;6414:22;;;6241:4;;6270:2;6493:15;;;;6467:2;6452:18;;;6241:4;6536:218;6550:6;6547:1;6544:13;6536:218;;;6615:13;;-1:-1:-1;;;;;6611:62:66;6599:75;;6729:15;;;;6694:12;;;;6572:1;6565:9;6536:218;;;-1:-1:-1;6771:3:66;;6081:699;-1:-1:-1;;;;;;6081:699:66:o;6785:406::-;6871:6;6879;6932:2;6920:9;6911:7;6907:23;6903:32;6900:52;;;6948:1;6945;6938:12;6900:52;6987:9;6974:23;7006:31;7031:5;7006:31;:::i;:::-;7056:5;-1:-1:-1;7113:2:66;7098:18;;7085:32;7126:33;7085:32;7126:33;:::i;8723:127::-;8784:10;8779:3;8775:20;8772:1;8765:31;8815:4;8812:1;8805:15;8839:4;8836:1;8829:15;8855:127;8916:10;8911:3;8907:20;8904:1;8897:31;8947:4;8944:1;8937:15;8971:4;8968:1;8961:15;8987:135;9026:3;-1:-1:-1;;9047:17:66;;9044:43;;;9067:18;;:::i;:::-;-1:-1:-1;9114:1:66;9103:13;;8987:135::o;10011:184::-;10081:6;10134:2;10122:9;10113:7;10109:23;10105:32;10102:52;;;10150:1;10147;10140:12;10102:52;-1:-1:-1;10173:16:66;;10011:184;-1:-1:-1;10011:184:66:o;10502:277::-;10569:6;10622:2;10610:9;10601:7;10597:23;10593:32;10590:52;;;10638:1;10635;10628:12;10590:52;10670:9;10664:16;10723:5;10716:13;10709:21;10702:5;10699:32;10689:60;;10745:1;10742;10735:12;11847:251;11917:6;11970:2;11958:9;11949:7;11945:23;11941:32;11938:52;;;11986:1;11983;11976:12;11938:52;12018:9;12012:16;12037:31;12062:5;12037:31;:::i;12725:125::-;12765:4;12793:1;12790;12787:8;12784:34;;;12798:18;;:::i;:::-;-1:-1:-1;12835:9:66;;12725:125::o;14552:128::-;14592:3;14623:1;14619:6;14616:1;14613:13;14610:39;;;14629:18;;:::i;:::-;-1:-1:-1;14665:9:66;;14552:128::o;18839:168::-;18879:7;18945:1;18941;18937:6;18933:14;18930:1;18927:21;18922:1;18915:9;18908:17;18904:45;18901:71;;;18952:18;;:::i;:::-;-1:-1:-1;18992:9:66;;18839:168::o;19012:217::-;19052:1;19078;19068:132;;19122:10;19117:3;19113:20;19110:1;19103:31;19157:4;19154:1;19147:15;19185:4;19182:1;19175:15;19068:132;-1:-1:-1;19214:9:66;;19012:217::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../policy/Policy.sol\";\nimport \"../currency/IECO.sol\";\nimport \"../policy/PolicedUtils.sol\";\nimport \"./Proposal.sol\";\nimport \"./PolicyVotes.sol\";\nimport \"./VotingPower.sol\";\nimport \"../utils/TimeUtils.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/** @title PolicyProposals\n * `PolicyProposals` oversees the proposals phase of the policy decision\n * process. Proposals can be submitted by anyone willing to put forth funds, and\n * submitted proposals can be supported by anyone\n *\n * First, during the proposals portion of the proposals phase, proposals can be\n * submitted (for a fee). This is parallelized with a signal voting process where\n * support can be distributed and redistributed to proposals after they are submitted.\n *\n * A proposal that makes it to support above 30% of the total possible support ends this\n * phase and starts a vote.\n */\ncontract PolicyProposals is VotingPower, TimeUtils {\n    /** A proposal submitted to the process.\n     */\n    struct Prop {\n        /* The address of the proposing account.\n         */\n        address proposer;\n        /* The address of the proposal contract.\n         */\n        Proposal proposal;\n        /* The amount of tokens staked in support of this proposal.\n         */\n        uint256 totalStake;\n    }\n\n    /* A record of which addresses have already staked in support of each proposal\n     */\n    mapping(Proposal => mapping(address => bool)) public staked;\n\n    /** The set of proposals under consideration.\n     * maps from addresses of proposals to structs containing with info and\n     * the staking data (struct defined above)\n     */\n    mapping(Proposal => Prop) public proposals;\n\n    /** The total number of proposals made.\n     */\n    uint256 public totalProposals;\n\n    /** A list of the addresses of all proposals made.\n     */\n    Proposal[] public allProposals;\n\n    /** The duration of the proposal portion of the proposal phase.\n     */\n    uint256 public constant PROPOSAL_TIME = 10 minutes;\n\n    /** Whether or not a winning proposal has been selected\n     */\n    bool public proposalSelected;\n\n    /** selected proposal awaiting configuration before voting\n     */\n    Proposal public proposalToConfigure;\n\n    /** The minimum cost to register a proposal.\n     */\n    uint256 public constant COST_REGISTER = 1000e18;\n\n    /** The amount refunded if a proposal does not get selected.\n     */\n    uint256 public constant REFUND_IF_LOST = 800e18;\n\n    /** The percentage of total voting power required to push to a vote.\n     */\n    uint256 public constant SUPPORT_THRESHOLD = 30;\n\n    /** The divisor for the above constant, tracks the digits of precision.\n     */\n    uint256 public constant SUPPORT_THRESHOLD_DIVISOR = 100;\n\n    /** The time at which the proposal portion of the proposals phase ends.\n     */\n    uint256 public proposalEnds;\n\n    /** The block number of the balance stores to use for staking in\n     * support of a proposal.\n     */\n    uint256 public blockNumber;\n\n    /** The address of the `PolicyVotes` contract, to be cloned for the voting\n     * phase.\n     */\n    PolicyVotes public policyVotesImpl;\n\n    /** An event indicating a proposal has been proposed\n     *\n     * @param proposalAddress The address of the Proposal contract instance that was added\n     */\n    event Register(address indexed proposer, Proposal indexed proposalAddress);\n\n    /** An event indicating that proposal have been supported by stake.\n     *\n     * @param proposalAddress The address of the Proposal contract instance that was supported\n     */\n    event Support(address indexed supporter, Proposal indexed proposalAddress);\n\n    /** An event indicating that support has been removed from a proposal.\n     *\n     * @param proposalAddress The address of the Proposal contract instance that was unsupported\n     */\n    event Unsupport(\n        address indexed unsupporter,\n        Proposal indexed proposalAddress\n    );\n\n    /** An event indicating a proposal has reached its support threshold\n     *\n     * @param proposalAddress The address of the Proposal contract instance.\n     */\n    event SupportThresholdReached(Proposal indexed proposalAddress);\n\n    /** An event indicating that a proposal has been accepted for voting\n     *\n     * @param contractAddress The address of the PolicyVotes contract instance.\n     */\n    event VoteStart(PolicyVotes indexed contractAddress);\n\n    /** An event indicating that proposal fee was partially refunded.\n     *\n     * @param proposer The address of the proposee which was refunded\n     */\n    event ProposalRefund(\n        address indexed proposer,\n        Proposal indexed proposalAddress\n    );\n\n    /** Construct a new PolicyProposals instance using the provided supervising\n     * policy (root) and supporting contracts.\n     *\n     * @param _policy The address of the root policy contract.\n     * @param _policyvotes The address of the contract that will be cloned to\n     *                     oversee the voting phase.\n     * @param _ecoAddr The address of the ECO token contract.\n     * @param _ecoXAddr The address of the ECOx token contract.\n     */\n    constructor(\n        Policy _policy,\n        PolicyVotes _policyvotes,\n        ECO _ecoAddr,\n        ECOx _ecoXAddr\n    ) VotingPower(_policy, _ecoAddr, _ecoXAddr) {\n        policyVotesImpl = _policyvotes;\n    }\n\n    /** Initialize the storage context using parameters copied from the original\n     * contract (provided as _self).\n     *\n     * Can only be called once, during proxy initialization.\n     *\n     * @param _self The original contract address.\n     */\n    function initialize(address _self) public override onlyConstruction {\n        super.initialize(_self);\n\n        // implementation addresses are left as mutable for easier governance\n        policyVotesImpl = PolicyProposals(_self).policyVotesImpl();\n\n        proposalEnds = getTime() + PROPOSAL_TIME;\n        blockNumber = block.number;\n    }\n\n    /** A list of addresses for all proposed policies\n     */\n    function allProposalAddresses() public view returns (Proposal[] memory) {\n        return allProposals;\n    }\n\n    /** A list of all proposed policies\n     */\n    function allProposalData() public view returns (Prop[] memory) {\n        Prop[] memory proposalData = new Prop[](totalProposals);\n        for (uint256 index = 0; index < totalProposals; index++) {\n            proposalData[index] = proposals[allProposals[index]];\n        }\n\n        return proposalData;\n    }\n\n    /** Submit a proposal.\n     *\n     * You must approve the policy proposals contract to withdraw the required\n     * fee from your account before calling this.\n     *\n     * Can only be called during the proposals portion of the proposals phase.\n     * Each proposal may only be submitted once.\n     *\n     * @param _prop The address of the proposal to submit.\n     */\n    function registerProposal(Proposal _prop) external returns (uint256) {\n        require(\n            address(_prop) != address(0),\n            \"The proposal address can't be 0\"\n        );\n\n        require(\n            getTime() < proposalEnds && !proposalSelected,\n            \"Proposals may no longer be registered because the registration period has ended\"\n        );\n\n        Prop storage _p = proposals[_prop];\n\n        require(\n            address(_p.proposal) == address(0),\n            \"A proposal may only be registered once\"\n        );\n        require(\n            ecoToken.transferFrom(msg.sender, address(this), COST_REGISTER),\n            \"The token cost of registration must be approved to transfer prior to calling registerProposal\"\n        );\n\n        _p.proposal = _prop;\n        _p.proposer = msg.sender;\n\n        allProposals.push(_prop);\n        totalProposals += 1;\n\n        emit Register(msg.sender, _prop);\n\n        // returns the index of the proposal in the allProposals array\n        return totalProposals - 1;\n    }\n\n    /** Stake in support of an existing proposal.\n     *\n     * Can only be called during the staking portion of the proposals phase.\n     *\n     * Your voting strength is added to the supporting stake of the proposal.\n     *\n     * @param _prop The proposal to support.\n     */\n    function support(Proposal _prop) external {\n        require(\n            policyFor(ID_POLICY_PROPOSALS) == address(this),\n            \"Proposal contract no longer active\"\n        );\n        require(!proposalSelected, \"A proposal has already been selected\");\n        require(\n            getTime() < proposalEnds,\n            \"Proposals may no longer be supported because the registration period has ended\"\n        );\n\n        uint256 _amount = votingPower(msg.sender, blockNumber);\n\n        require(\n            _amount > 0,\n            \"In order to support a proposal you must stake a non-zero amount of tokens\"\n        );\n\n        Prop storage _p = proposals[_prop];\n\n        require(\n            address(_p.proposal) != address(0),\n            \"The supported proposal is not registered\"\n        );\n        require(\n            !staked[_p.proposal][msg.sender],\n            \"You may not stake in support of a proposal twice\"\n        );\n\n        _p.totalStake = _p.totalStake + _amount;\n        staked[_p.proposal][msg.sender] = true;\n\n        recordVote(msg.sender);\n        emit Support(msg.sender, _prop);\n\n        uint256 _total = totalVotingPower(blockNumber);\n\n        if (\n            _p.totalStake >\n            (_total * SUPPORT_THRESHOLD) / SUPPORT_THRESHOLD_DIVISOR\n        ) {\n            emit SupportThresholdReached(_prop);\n            proposalSelected = true;\n            proposalToConfigure = _prop;\n        }\n    }\n\n    function unsupport(Proposal _prop) external {\n        require(\n            policyFor(ID_POLICY_PROPOSALS) == address(this),\n            \"Proposal contract no longer active\"\n        );\n        require(!proposalSelected, \"A proposal has already been selected\");\n        require(\n            getTime() < proposalEnds,\n            \"Proposals may no longer be supported because the registration period has ended\"\n        );\n\n        Prop storage _p = proposals[_prop];\n\n        require(\n            staked[_p.proposal][msg.sender],\n            \"You have not staked this proposal\"\n        );\n\n        uint256 _amount = votingPower(msg.sender, blockNumber);\n        _p.totalStake = _p.totalStake - _amount;\n        staked[_p.proposal][msg.sender] = false;\n\n        emit Unsupport(msg.sender, _prop);\n    }\n\n    function deployProposalVoting() external {\n        require(proposalSelected, \"no proposal has been selected\");\n        require(\n            address(proposalToConfigure) != address(0),\n            \"voting has already been deployed\"\n        );\n        Proposal votingProposal = proposalToConfigure;\n        delete proposalToConfigure;\n\n        PolicyVotes pv = PolicyVotes(policyVotesImpl.clone());\n        pv.configure(votingProposal, blockNumber);\n        policy.setPolicy(ID_POLICY_VOTES, address(pv));\n\n        emit VoteStart(pv);\n\n        delete proposals[votingProposal];\n        totalProposals = totalProposals - 1;\n    }\n\n    /** Refund the fee for a proposal that was not selected.\n     *\n     * Returns a partial refund only, does not work on proposals that are\n     * on the ballot for the voting phase, and can only be called after the\n     * period is over.\n     *\n     * @param _prop The proposal to issue a refund for.\n     */\n    function refund(Proposal _prop) external {\n        require(\n            proposalSelected || getTime() > proposalEnds,\n            \"Refunds may not be distributed until the period is over\"\n        );\n\n        require(\n            address(_prop) != address(0),\n            \"The proposal address can't be 0\"\n        );\n\n        Prop storage _p = proposals[_prop];\n        require(\n            _p.proposal == _prop,\n            \"The provided proposal address is not valid\"\n        );\n\n        address receiver = _p.proposer;\n\n        delete proposals[_prop];\n        totalProposals = totalProposals - 1;\n\n        require(ecoToken.transfer(receiver, REFUND_IF_LOST), \"Transfer Failed\");\n\n        emit ProposalRefund(receiver, _prop);\n    }\n\n    /** Reclaim tokens after end time\n     * only callable if all proposals are refunded\n     */\n    function destruct() external {\n        require(\n            proposalSelected || getTime() > proposalEnds,\n            \"The destruct operation can only be performed when the period is over\"\n        );\n\n        require(totalProposals == 0, \"Must refund all missed proposals first\");\n\n        policy.removeSelf(ID_POLICY_PROPOSALS);\n\n        require(\n            ecoToken.transfer(\n                address(policy),\n                ecoToken.balanceOf(address(this))\n            ),\n            \"Transfer Failed\"\n        );\n    }\n}\n",
  "sourcePath": "/Users/dirksmac/dev/eco/currency/contracts/governance/PolicyProposals.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/PolicyProposals.sol",
    "exportedSymbols": {
      "CloneFactory": [
        2207
      ],
      "CurrencyTimer": [
        8401
      ],
      "ECO": [
        2497
      ],
      "ECOx": [
        3238
      ],
      "ECOxLockup": [
        8688
      ],
      "ERC1820Client": [
        12017
      ],
      "ERC20": [
        3785
      ],
      "ForwardTarget": [
        12742
      ],
      "IECO": [
        3826
      ],
      "IERC1820Implementer": [
        218
      ],
      "IERC1820Registry": [
        308
      ],
      "IERC20": [
        182
      ],
      "IGeneration": [
        8696
      ],
      "ILockups": [
        8714
      ],
      "Lockup": [
        9655
      ],
      "Policed": [
        12119
      ],
      "PolicedUtils": [
        12321
      ],
      "Policy": [
        12499
      ],
      "PolicyProposals": [
        10420
      ],
      "PolicyVotes": [
        10915
      ],
      "Proposal": [
        10943
      ],
      "StringPacker": [
        14748
      ],
      "TimeUtils": [
        14762
      ],
      "VoteCheckpoints": [
        6922
      ],
      "VotingPower": [
        11959
      ]
    },
    "id": 10421,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9657,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:30"
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 9658,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 12500,
        "src": "57:30:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/IECO.sol",
        "file": "../currency/IECO.sol",
        "id": 9659,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 3827,
        "src": "88:30:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 9660,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 12322,
        "src": "119:36:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Proposal.sol",
        "file": "./Proposal.sol",
        "id": 9661,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 10944,
        "src": "156:24:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/PolicyVotes.sol",
        "file": "./PolicyVotes.sol",
        "id": 9662,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 10916,
        "src": "181:27:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/VotingPower.sol",
        "file": "./VotingPower.sol",
        "id": 9663,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 11960,
        "src": "209:27:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 9664,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 14763,
        "src": "237:32:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 9665,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 183,
        "src": "270:56:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9667,
              "name": "VotingPower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11959,
              "src": "963:11:30"
            },
            "id": 9668,
            "nodeType": "InheritanceSpecifier",
            "src": "963:11:30"
          },
          {
            "baseName": {
              "id": 9669,
              "name": "TimeUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14762,
              "src": "976:9:30"
            },
            "id": 9670,
            "nodeType": "InheritanceSpecifier",
            "src": "976:9:30"
          }
        ],
        "canonicalName": "PolicyProposals",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9666,
          "nodeType": "StructuredDocumentation",
          "src": "328:606:30",
          "text": "@title PolicyProposals\n `PolicyProposals` oversees the proposals phase of the policy decision\n process. Proposals can be submitted by anyone willing to put forth funds, and\n submitted proposals can be supported by anyone\n First, during the proposals portion of the proposals phase, proposals can be\n submitted (for a fee). This is parallelized with a signal voting process where\n support can be distributed and redistributed to proposals after they are submitted.\n A proposal that makes it to support above 30% of the total possible support ends this\n phase and starts a vote."
        },
        "fullyImplemented": true,
        "id": 10420,
        "linearizedBaseContracts": [
          10420,
          14762,
          11959,
          12321,
          12017,
          2207,
          12119,
          218,
          12742
        ],
        "name": "PolicyProposals",
        "nameLocation": "944:15:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PolicyProposals.Prop",
            "id": 9678,
            "members": [
              {
                "constant": false,
                "id": 9672,
                "mutability": "mutable",
                "name": "proposer",
                "nameLocation": "1136:8:30",
                "nodeType": "VariableDeclaration",
                "scope": 9678,
                "src": "1128:16:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9671,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1128:7:30",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9675,
                "mutability": "mutable",
                "name": "proposal",
                "nameLocation": "1224:8:30",
                "nodeType": "VariableDeclaration",
                "scope": 9678,
                "src": "1215:17:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Proposal_$10943",
                  "typeString": "contract Proposal"
                },
                "typeName": {
                  "id": 9674,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9673,
                    "name": "Proposal",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10943,
                    "src": "1215:8:30"
                  },
                  "referencedDeclaration": 10943,
                  "src": "1215:8:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9677,
                "mutability": "mutable",
                "name": "totalStake",
                "nameLocation": "1330:10:30",
                "nodeType": "VariableDeclaration",
                "scope": 9678,
                "src": "1322:18:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9676,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1322:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prop",
            "nameLocation": "1052:4:30",
            "nodeType": "StructDefinition",
            "scope": 10420,
            "src": "1045:302:30",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6d3afc9",
            "id": 9685,
            "mutability": "mutable",
            "name": "staked",
            "nameLocation": "1497:6:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "1444:59:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(contract Proposal => mapping(address => bool))"
            },
            "typeName": {
              "id": 9684,
              "keyType": {
                "id": 9680,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9679,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10943,
                  "src": "1452:8:30"
                },
                "referencedDeclaration": 10943,
                "src": "1452:8:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Proposal_$10943",
                  "typeString": "contract Proposal"
                }
              },
              "nodeType": "Mapping",
              "src": "1444:45:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(contract Proposal => mapping(address => bool))"
              },
              "valueType": {
                "id": 9683,
                "keyType": {
                  "id": 9681,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1472:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1464:24:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 9682,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1483:4:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9686,
              "nodeType": "StructuredDocumentation",
              "src": "1510:176:30",
              "text": "The set of proposals under consideration.\n maps from addresses of proposals to structs containing with info and\n the staking data (struct defined above)"
            },
            "functionSelector": "3341b445",
            "id": 9692,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "1724:9:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "1691:42:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
              "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop)"
            },
            "typeName": {
              "id": 9691,
              "keyType": {
                "id": 9688,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9687,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10943,
                  "src": "1699:8:30"
                },
                "referencedDeclaration": 10943,
                "src": "1699:8:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Proposal_$10943",
                  "typeString": "contract Proposal"
                }
              },
              "nodeType": "Mapping",
              "src": "1691:25:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop)"
              },
              "valueType": {
                "id": 9690,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9689,
                  "name": "Prop",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9678,
                  "src": "1711:4:30"
                },
                "referencedDeclaration": 9678,
                "src": "1711:4:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                  "typeString": "struct PolicyProposals.Prop"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9693,
              "nodeType": "StructuredDocumentation",
              "src": "1740:47:30",
              "text": "The total number of proposals made."
            },
            "functionSelector": "a78d80fc",
            "id": 9695,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "1807:14:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "1792:29:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9694,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1792:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9696,
              "nodeType": "StructuredDocumentation",
              "src": "1828:58:30",
              "text": "A list of the addresses of all proposals made."
            },
            "functionSelector": "938351b8",
            "id": 9700,
            "mutability": "mutable",
            "name": "allProposals",
            "nameLocation": "1909:12:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "1891:30:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage",
              "typeString": "contract Proposal[]"
            },
            "typeName": {
              "baseType": {
                "id": 9698,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9697,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10943,
                  "src": "1891:8:30"
                },
                "referencedDeclaration": 10943,
                "src": "1891:8:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Proposal_$10943",
                  "typeString": "contract Proposal"
                }
              },
              "id": 9699,
              "nodeType": "ArrayTypeName",
              "src": "1891:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage_ptr",
                "typeString": "contract Proposal[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9701,
              "nodeType": "StructuredDocumentation",
              "src": "1928:71:30",
              "text": "The duration of the proposal portion of the proposal phase."
            },
            "functionSelector": "af12645a",
            "id": 9704,
            "mutability": "constant",
            "name": "PROPOSAL_TIME",
            "nameLocation": "2028:13:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2004:50:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9702,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2004:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 9703,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2044:10:30",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9705,
              "nodeType": "StructuredDocumentation",
              "src": "2061:63:30",
              "text": "Whether or not a winning proposal has been selected"
            },
            "functionSelector": "3dc716f3",
            "id": 9707,
            "mutability": "mutable",
            "name": "proposalSelected",
            "nameLocation": "2141:16:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2129:28:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9706,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2129:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9708,
              "nodeType": "StructuredDocumentation",
              "src": "2164:66:30",
              "text": "selected proposal awaiting configuration before voting"
            },
            "functionSelector": "c3d2a0bc",
            "id": 9711,
            "mutability": "mutable",
            "name": "proposalToConfigure",
            "nameLocation": "2251:19:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2235:35:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Proposal_$10943",
              "typeString": "contract Proposal"
            },
            "typeName": {
              "id": 9710,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9709,
                "name": "Proposal",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10943,
                "src": "2235:8:30"
              },
              "referencedDeclaration": 10943,
              "src": "2235:8:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proposal_$10943",
                "typeString": "contract Proposal"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9712,
              "nodeType": "StructuredDocumentation",
              "src": "2277:52:30",
              "text": "The minimum cost to register a proposal."
            },
            "functionSelector": "8881a874",
            "id": 9715,
            "mutability": "constant",
            "name": "COST_REGISTER",
            "nameLocation": "2358:13:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2334:47:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9713,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2334:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030653138",
              "id": 9714,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2374:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              },
              "value": "1000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9716,
              "nodeType": "StructuredDocumentation",
              "src": "2388:68:30",
              "text": "The amount refunded if a proposal does not get selected."
            },
            "functionSelector": "762ec1e9",
            "id": 9719,
            "mutability": "constant",
            "name": "REFUND_IF_LOST",
            "nameLocation": "2485:14:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2461:47:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9717,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2461:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "383030653138",
              "id": 9718,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2502:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_800000000000000000000_by_1",
                "typeString": "int_const 800000000000000000000"
              },
              "value": "800e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9720,
              "nodeType": "StructuredDocumentation",
              "src": "2515:76:30",
              "text": "The percentage of total voting power required to push to a vote."
            },
            "functionSelector": "ec7f729c",
            "id": 9723,
            "mutability": "constant",
            "name": "SUPPORT_THRESHOLD",
            "nameLocation": "2620:17:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2596:46:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9721,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2596:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 9722,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2640:2:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9724,
              "nodeType": "StructuredDocumentation",
              "src": "2649:79:30",
              "text": "The divisor for the above constant, tracks the digits of precision."
            },
            "functionSelector": "81e53876",
            "id": 9727,
            "mutability": "constant",
            "name": "SUPPORT_THRESHOLD_DIVISOR",
            "nameLocation": "2757:25:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2733:55:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9725,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2733:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 9726,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2785:3:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9728,
              "nodeType": "StructuredDocumentation",
              "src": "2795:79:30",
              "text": "The time at which the proposal portion of the proposals phase ends."
            },
            "functionSelector": "376cf9bf",
            "id": 9730,
            "mutability": "mutable",
            "name": "proposalEnds",
            "nameLocation": "2894:12:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2879:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2879:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9731,
              "nodeType": "StructuredDocumentation",
              "src": "2913:102:30",
              "text": "The block number of the balance stores to use for staking in\n support of a proposal."
            },
            "functionSelector": "57e871e7",
            "id": 9733,
            "mutability": "mutable",
            "name": "blockNumber",
            "nameLocation": "3035:11:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "3020:26:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9732,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3020:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9734,
              "nodeType": "StructuredDocumentation",
              "src": "3053:96:30",
              "text": "The address of the `PolicyVotes` contract, to be cloned for the voting\n phase."
            },
            "functionSelector": "984db242",
            "id": 9737,
            "mutability": "mutable",
            "name": "policyVotesImpl",
            "nameLocation": "3173:15:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "3154:34:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PolicyVotes_$10915",
              "typeString": "contract PolicyVotes"
            },
            "typeName": {
              "id": 9736,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9735,
                "name": "PolicyVotes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10915,
                "src": "3154:11:30"
              },
              "referencedDeclaration": 10915,
              "src": "3154:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                "typeString": "contract PolicyVotes"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9738,
              "nodeType": "StructuredDocumentation",
              "src": "3195:158:30",
              "text": "An event indicating a proposal has been proposed\n @param proposalAddress The address of the Proposal contract instance that was added"
            },
            "id": 9745,
            "name": "Register",
            "nameLocation": "3364:8:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9740,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "3389:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9745,
                  "src": "3373:24:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9743,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3416:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9745,
                  "src": "3399:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9742,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9741,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "3399:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "3399:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3372:60:30"
            },
            "src": "3358:75:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9746,
              "nodeType": "StructuredDocumentation",
              "src": "3439:177:30",
              "text": "An event indicating that proposal have been supported by stake.\n @param proposalAddress The address of the Proposal contract instance that was supported"
            },
            "id": 9753,
            "name": "Support",
            "nameLocation": "3627:7:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9748,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "supporter",
                  "nameLocation": "3651:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9753,
                  "src": "3635:25:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9751,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3679:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9753,
                  "src": "3662:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9750,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9749,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "3662:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "3662:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:61:30"
            },
            "src": "3621:75:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9754,
              "nodeType": "StructuredDocumentation",
              "src": "3702:182:30",
              "text": "An event indicating that support has been removed from a proposal.\n @param proposalAddress The address of the Proposal contract instance that was unsupported"
            },
            "id": 9761,
            "name": "Unsupport",
            "nameLocation": "3895:9:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9756,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "unsupporter",
                  "nameLocation": "3930:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9761,
                  "src": "3914:27:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9759,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3968:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9761,
                  "src": "3951:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9758,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9757,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "3951:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "3951:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3904:85:30"
            },
            "src": "3889:101:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9762,
              "nodeType": "StructuredDocumentation",
              "src": "3996:160:30",
              "text": "An event indicating a proposal has reached its support threshold\n @param proposalAddress The address of the Proposal contract instance."
            },
            "id": 9767,
            "name": "SupportThresholdReached",
            "nameLocation": "4167:23:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9765,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "4208:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9767,
                  "src": "4191:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9764,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9763,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "4191:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "4191:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4190:34:30"
            },
            "src": "4161:64:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9768,
              "nodeType": "StructuredDocumentation",
              "src": "4231:163:30",
              "text": "An event indicating that a proposal has been accepted for voting\n @param contractAddress The address of the PolicyVotes contract instance."
            },
            "id": 9773,
            "name": "VoteStart",
            "nameLocation": "4405:9:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9771,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "4435:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9773,
                  "src": "4415:35:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                    "typeString": "contract PolicyVotes"
                  },
                  "typeName": {
                    "id": 9770,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9769,
                      "name": "PolicyVotes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10915,
                      "src": "4415:11:30"
                    },
                    "referencedDeclaration": 10915,
                    "src": "4415:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4414:37:30"
            },
            "src": "4399:53:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9774,
              "nodeType": "StructuredDocumentation",
              "src": "4458:150:30",
              "text": "An event indicating that proposal fee was partially refunded.\n @param proposer The address of the proposee which was refunded"
            },
            "id": 9781,
            "name": "ProposalRefund",
            "nameLocation": "4619:14:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9776,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "4659:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9781,
                  "src": "4643:24:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4643:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9779,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "4694:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9781,
                  "src": "4677:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9778,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9777,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "4677:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "4677:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4633:82:30"
            },
            "src": "4613:103:30"
          },
          {
            "body": {
              "id": 9806,
              "nodeType": "Block",
              "src": "5348:47:30",
              "statements": [
                {
                  "expression": {
                    "id": 9804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9802,
                      "name": "policyVotesImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9737,
                      "src": "5358:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9803,
                      "name": "_policyvotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9788,
                      "src": "5376:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      }
                    },
                    "src": "5358:30:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "id": 9805,
                  "nodeType": "ExpressionStatement",
                  "src": "5358:30:30"
                }
              ]
            },
            "documentation": {
              "id": 9782,
              "nodeType": "StructuredDocumentation",
              "src": "4722:457:30",
              "text": "Construct a new PolicyProposals instance using the provided supervising\n policy (root) and supporting contracts.\n @param _policy The address of the root policy contract.\n @param _policyvotes The address of the contract that will be cloned to\n                     oversee the voting phase.\n @param _ecoAddr The address of the ECO token contract.\n @param _ecoXAddr The address of the ECOx token contract."
            },
            "id": 9807,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9797,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9785,
                    "src": "5318:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  {
                    "id": 9798,
                    "name": "_ecoAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9791,
                    "src": "5327:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  {
                    "id": 9799,
                    "name": "_ecoXAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9794,
                    "src": "5337:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECOx_$3238",
                      "typeString": "contract ECOx"
                    }
                  }
                ],
                "id": 9800,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9796,
                  "name": "VotingPower",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11959,
                  "src": "5306:11:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "5306:41:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9785,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "5212:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "5205:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Policy_$12499",
                    "typeString": "contract Policy"
                  },
                  "typeName": {
                    "id": 9784,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9783,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12499,
                      "src": "5205:6:30"
                    },
                    "referencedDeclaration": 12499,
                    "src": "5205:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9788,
                  "mutability": "mutable",
                  "name": "_policyvotes",
                  "nameLocation": "5241:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "5229:24:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                    "typeString": "contract PolicyVotes"
                  },
                  "typeName": {
                    "id": 9787,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9786,
                      "name": "PolicyVotes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10915,
                      "src": "5229:11:30"
                    },
                    "referencedDeclaration": 10915,
                    "src": "5229:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9791,
                  "mutability": "mutable",
                  "name": "_ecoAddr",
                  "nameLocation": "5267:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "5263:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECO_$2497",
                    "typeString": "contract ECO"
                  },
                  "typeName": {
                    "id": 9790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9789,
                      "name": "ECO",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2497,
                      "src": "5263:3:30"
                    },
                    "referencedDeclaration": 2497,
                    "src": "5263:3:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9794,
                  "mutability": "mutable",
                  "name": "_ecoXAddr",
                  "nameLocation": "5290:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "5285:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECOx_$3238",
                    "typeString": "contract ECOx"
                  },
                  "typeName": {
                    "id": 9793,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9792,
                      "name": "ECOx",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3238,
                      "src": "5285:4:30"
                    },
                    "referencedDeclaration": 3238,
                    "src": "5285:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECOx_$3238",
                      "typeString": "contract ECOx"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5195:110:30"
            },
            "returnParameters": {
              "id": 9801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5348:0:30"
            },
            "scope": 10420,
            "src": "5184:211:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12250
            ],
            "body": {
              "id": 9842,
              "nodeType": "Block",
              "src": "5721:274:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9819,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9810,
                        "src": "5748:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9816,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5731:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyProposals_$10420_$",
                          "typeString": "type(contract super PolicyProposals)"
                        }
                      },
                      "id": 9818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12250,
                      "src": "5731:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:23:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9821,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:23:30"
                },
                {
                  "expression": {
                    "id": 9828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9822,
                      "name": "policyVotesImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9737,
                      "src": "5843:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 9824,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9810,
                              "src": "5877:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9823,
                            "name": "PolicyProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10420,
                            "src": "5861:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PolicyProposals_$10420_$",
                              "typeString": "type(contract PolicyProposals)"
                            }
                          },
                          "id": 9825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5861:22:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                            "typeString": "contract PolicyProposals"
                          }
                        },
                        "id": 9826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "policyVotesImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9737,
                        "src": "5861:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_PolicyVotes_$10915_$",
                          "typeString": "function () view external returns (contract PolicyVotes)"
                        }
                      },
                      "id": 9827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5861:40:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      }
                    },
                    "src": "5843:58:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "id": 9829,
                  "nodeType": "ExpressionStatement",
                  "src": "5843:58:30"
                },
                {
                  "expression": {
                    "id": 9835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9830,
                      "name": "proposalEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9730,
                      "src": "5912:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 9831,
                          "name": "getTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14761,
                          "src": "5927:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 9832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5927:9:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 9833,
                        "name": "PROPOSAL_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9704,
                        "src": "5939:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5927:25:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5912:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9836,
                  "nodeType": "ExpressionStatement",
                  "src": "5912:40:30"
                },
                {
                  "expression": {
                    "id": 9840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9837,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9733,
                      "src": "5962:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9838,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5976:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "5976:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5962:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9841,
                  "nodeType": "ExpressionStatement",
                  "src": "5962:26:30"
                }
              ]
            },
            "documentation": {
              "id": 9808,
              "nodeType": "StructuredDocumentation",
              "src": "5401:247:30",
              "text": "Initialize the storage context using parameters copied from the original\n contract (provided as _self).\n Can only be called once, during proxy initialization.\n @param _self The original contract address."
            },
            "functionSelector": "c4d66de8",
            "id": 9843,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9814,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9813,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12672,
                  "src": "5704:16:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "5704:16:30"
              }
            ],
            "name": "initialize",
            "nameLocation": "5662:10:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9812,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5695:8:30"
            },
            "parameters": {
              "id": 9811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9810,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "5681:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9843,
                  "src": "5673:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5673:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5672:15:30"
            },
            "returnParameters": {
              "id": 9815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5721:0:30"
            },
            "scope": 10420,
            "src": "5653:342:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9853,
              "nodeType": "Block",
              "src": "6135:36:30",
              "statements": [
                {
                  "expression": {
                    "id": 9851,
                    "name": "allProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9700,
                    "src": "6152:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage",
                      "typeString": "contract Proposal[] storage ref"
                    }
                  },
                  "functionReturnParameters": 9850,
                  "id": 9852,
                  "nodeType": "Return",
                  "src": "6145:19:30"
                }
              ]
            },
            "documentation": {
              "id": 9844,
              "nodeType": "StructuredDocumentation",
              "src": "6001:57:30",
              "text": "A list of addresses for all proposed policies"
            },
            "functionSelector": "b87341b8",
            "id": 9854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allProposalAddresses",
            "nameLocation": "6072:20:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6092:2:30"
            },
            "returnParameters": {
              "id": 9850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9854,
                  "src": "6116:17:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_memory_ptr",
                    "typeString": "contract Proposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9847,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9846,
                        "name": "Proposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10943,
                        "src": "6116:8:30"
                      },
                      "referencedDeclaration": 10943,
                      "src": "6116:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "id": 9848,
                    "nodeType": "ArrayTypeName",
                    "src": "6116:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage_ptr",
                      "typeString": "contract Proposal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6115:19:30"
            },
            "scope": 10420,
            "src": "6063:108:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9898,
              "nodeType": "Block",
              "src": "6288:245:30",
              "statements": [
                {
                  "assignments": [
                    9866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9866,
                      "mutability": "mutable",
                      "name": "proposalData",
                      "nameLocation": "6312:12:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 9898,
                      "src": "6298:26:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct PolicyProposals.Prop[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9864,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9863,
                            "name": "Prop",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9678,
                            "src": "6298:4:30"
                          },
                          "referencedDeclaration": 9678,
                          "src": "6298:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop"
                          }
                        },
                        "id": 9865,
                        "nodeType": "ArrayTypeName",
                        "src": "6298:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prop_$9678_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9873,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9871,
                        "name": "totalProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9695,
                        "src": "6338:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6327:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct PolicyProposals.Prop memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9868,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9867,
                            "name": "Prop",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9678,
                            "src": "6331:4:30"
                          },
                          "referencedDeclaration": 9678,
                          "src": "6331:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop"
                          }
                        },
                        "id": 9869,
                        "nodeType": "ArrayTypeName",
                        "src": "6331:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prop_$9678_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop[]"
                        }
                      }
                    },
                    "id": 9872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6327:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PolicyProposals.Prop memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6298:55:30"
                },
                {
                  "body": {
                    "id": 9894,
                    "nodeType": "Block",
                    "src": "6420:77:30",
                    "statements": [
                      {
                        "expression": {
                          "id": 9892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 9884,
                              "name": "proposalData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9866,
                              "src": "6434:12:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct PolicyProposals.Prop memory[] memory"
                              }
                            },
                            "id": 9886,
                            "indexExpression": {
                              "id": 9885,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9875,
                              "src": "6447:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6434:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_memory_ptr",
                              "typeString": "struct PolicyProposals.Prop memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 9887,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9692,
                              "src": "6456:9:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                                "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                              }
                            },
                            "id": 9891,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 9888,
                                "name": "allProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9700,
                                "src": "6466:12:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage",
                                  "typeString": "contract Proposal[] storage ref"
                                }
                              },
                              "id": 9890,
                              "indexExpression": {
                                "id": 9889,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9875,
                                "src": "6479:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6466:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6456:30:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_storage",
                              "typeString": "struct PolicyProposals.Prop storage ref"
                            }
                          },
                          "src": "6434:52:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_memory_ptr",
                            "typeString": "struct PolicyProposals.Prop memory"
                          }
                        },
                        "id": 9893,
                        "nodeType": "ExpressionStatement",
                        "src": "6434:52:30"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9878,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9875,
                      "src": "6387:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 9879,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "6395:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6387:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9895,
                  "initializationExpression": {
                    "assignments": [
                      9875
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9875,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "6376:5:30",
                        "nodeType": "VariableDeclaration",
                        "scope": 9895,
                        "src": "6368:13:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6368:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9877,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6384:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6368:17:30"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6411:7:30",
                      "subExpression": {
                        "id": 9881,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9875,
                        "src": "6411:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9883,
                    "nodeType": "ExpressionStatement",
                    "src": "6411:7:30"
                  },
                  "nodeType": "ForStatement",
                  "src": "6363:134:30"
                },
                {
                  "expression": {
                    "id": 9896,
                    "name": "proposalData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9866,
                    "src": "6514:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PolicyProposals.Prop memory[] memory"
                    }
                  },
                  "functionReturnParameters": 9861,
                  "id": 9897,
                  "nodeType": "Return",
                  "src": "6507:19:30"
                }
              ]
            },
            "documentation": {
              "id": 9855,
              "nodeType": "StructuredDocumentation",
              "src": "6177:43:30",
              "text": "A list of all proposed policies"
            },
            "functionSelector": "25f4627f",
            "id": 9899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allProposalData",
            "nameLocation": "6234:15:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6249:2:30"
            },
            "returnParameters": {
              "id": 9861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9860,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "6273:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PolicyProposals.Prop[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9858,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9857,
                        "name": "Prop",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9678,
                        "src": "6273:4:30"
                      },
                      "referencedDeclaration": 9678,
                      "src": "6273:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      }
                    },
                    "id": 9859,
                    "nodeType": "ArrayTypeName",
                    "src": "6273:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$9678_storage_$dyn_storage_ptr",
                      "typeString": "struct PolicyProposals.Prop[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6272:15:30"
            },
            "scope": 10420,
            "src": "6225:308:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10000,
              "nodeType": "Block",
              "src": "6980:971:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9911,
                              "name": "_prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9903,
                              "src": "7019:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 9910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7011:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9909,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7011:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7011:14:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7037:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7029:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9913,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7029:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7029:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7011:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "id": 9918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7053:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        },
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        }
                      ],
                      "id": 9908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6990:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6990:106:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9920,
                  "nodeType": "ExpressionStatement",
                  "src": "6990:106:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9922,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14761,
                              "src": "7128:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7128:9:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 9924,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9730,
                            "src": "7140:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7128:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 9927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7156:17:30",
                          "subExpression": {
                            "id": 9926,
                            "name": "proposalSelected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9707,
                            "src": "7157:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7128:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e676572206265207265676973746572656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 9929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7187:81:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85",
                          "typeString": "literal_string \"Proposals may no longer be registered because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be registered because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85",
                          "typeString": "literal_string \"Proposals may no longer be registered because the registration period has ended\""
                        }
                      ],
                      "id": 9921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7107:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7107:171:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9931,
                  "nodeType": "ExpressionStatement",
                  "src": "7107:171:30"
                },
                {
                  "assignments": [
                    9934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9934,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "7302:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10000,
                      "src": "7289:15:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 9933,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9932,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9678,
                          "src": "7289:4:30"
                        },
                        "referencedDeclaration": 9678,
                        "src": "7289:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9938,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9935,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9692,
                      "src": "7307:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                        "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 9937,
                    "indexExpression": {
                      "id": 9936,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9903,
                      "src": "7317:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7307:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$9678_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7289:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 9942,
                                "name": "_p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9934,
                                "src": "7363:2:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                                  "typeString": "struct PolicyProposals.Prop storage pointer"
                                }
                              },
                              "id": 9943,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9675,
                              "src": "7363:11:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 9941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7355:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9940,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7355:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7355:20:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7387:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7379:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9945,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7379:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7379:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7355:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c206d6179206f6e6c792062652072656769737465726564206f6e6365",
                        "id": 9950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7403:40:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115",
                          "typeString": "literal_string \"A proposal may only be registered once\""
                        },
                        "value": "A proposal may only be registered once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115",
                          "typeString": "literal_string \"A proposal may only be registered once\""
                        }
                      ],
                      "id": 9939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7334:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7334:119:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9952,
                  "nodeType": "ExpressionStatement",
                  "src": "7334:119:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 9956,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7506:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7506:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 9960,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7526:4:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                  "typeString": "contract PolicyProposals"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                  "typeString": "contract PolicyProposals"
                                }
                              ],
                              "id": 9959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7518:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9958,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7518:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7518:13:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 9962,
                            "name": "COST_REGISTER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9715,
                            "src": "7533:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 9954,
                            "name": "ecoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11848,
                            "src": "7484:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECO_$2497",
                              "typeString": "contract ECO"
                            }
                          },
                          "id": 9955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3458,
                          "src": "7484:21:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 9963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7484:63:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d75737420626520617070726f76656420746f207472616e73666572207072696f7220746f2063616c6c696e6720726567697374657250726f706f73616c",
                        "id": 9964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7561:95:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252",
                          "typeString": "literal_string \"The token cost of registration must be approved to transfer prior to calling registerProposal\""
                        },
                        "value": "The token cost of registration must be approved to transfer prior to calling registerProposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252",
                          "typeString": "literal_string \"The token cost of registration must be approved to transfer prior to calling registerProposal\""
                        }
                      ],
                      "id": 9953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7463:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7463:203:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9966,
                  "nodeType": "ExpressionStatement",
                  "src": "7463:203:30"
                },
                {
                  "expression": {
                    "id": 9971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9967,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9934,
                        "src": "7677:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 9969,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9675,
                      "src": "7677:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9970,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9903,
                      "src": "7691:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "src": "7677:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "id": 9972,
                  "nodeType": "ExpressionStatement",
                  "src": "7677:19:30"
                },
                {
                  "expression": {
                    "id": 9978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9973,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9934,
                        "src": "7706:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 9975,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9672,
                      "src": "7706:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9976,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7720:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7720:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7706:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9979,
                  "nodeType": "ExpressionStatement",
                  "src": "7706:24:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9983,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9903,
                        "src": "7759:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "expression": {
                        "id": 9980,
                        "name": "allProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9700,
                        "src": "7741:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage",
                          "typeString": "contract Proposal[] storage ref"
                        }
                      },
                      "id": 9982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7741:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Proposal_$10943_$dyn_storage_ptr_$_t_contract$_Proposal_$10943_$returns$__$bound_to$_t_array$_t_contract$_Proposal_$10943_$dyn_storage_ptr_$",
                        "typeString": "function (contract Proposal[] storage pointer,contract Proposal)"
                      }
                    },
                    "id": 9984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7741:24:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9985,
                  "nodeType": "ExpressionStatement",
                  "src": "7741:24:30"
                },
                {
                  "expression": {
                    "id": 9988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9986,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "7775:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 9987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7793:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7775:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9989,
                  "nodeType": "ExpressionStatement",
                  "src": "7775:19:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9991,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7819:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7819:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9993,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9903,
                        "src": "7831:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "id": 9990,
                      "name": "Register",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9745,
                      "src": "7810:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Proposal_$10943_$returns$__$",
                        "typeString": "function (address,contract Proposal)"
                      }
                    },
                    "id": 9994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7810:27:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9995,
                  "nodeType": "EmitStatement",
                  "src": "7805:32:30"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9996,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "7926:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 9997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7943:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7926:18:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9907,
                  "id": 9999,
                  "nodeType": "Return",
                  "src": "7919:25:30"
                }
              ]
            },
            "documentation": {
              "id": 9900,
              "nodeType": "StructuredDocumentation",
              "src": "6539:367:30",
              "text": "Submit a proposal.\n You must approve the policy proposals contract to withdraw the required\n fee from your account before calling this.\n Can only be called during the proposals portion of the proposals phase.\n Each proposal may only be submitted once.\n @param _prop The address of the proposal to submit."
            },
            "functionSelector": "dea64535",
            "id": 10001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerProposal",
            "nameLocation": "6920:16:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9903,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "6946:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6937:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9901,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "6937:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "6937:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6936:16:30"
            },
            "returnParameters": {
              "id": 9907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6971:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6971:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6970:9:30"
            },
            "scope": 10420,
            "src": "6911:1040:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10141,
              "nodeType": "Block",
              "src": "8278:1390:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10010,
                              "name": "ID_POLICY_PROPOSALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12150,
                              "src": "8319:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 10009,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12320,
                            "src": "8309:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 10011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8309:30:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10014,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "8351:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                "typeString": "contract PolicyProposals"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                "typeString": "contract PolicyProposals"
                              }
                            ],
                            "id": 10013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8343:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10012,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8343:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8343:13:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8309:47:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e67657220616374697665",
                        "id": 10017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8370:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        },
                        "value": "Proposal contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        }
                      ],
                      "id": 10008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8288:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8288:128:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10019,
                  "nodeType": "ExpressionStatement",
                  "src": "8288:128:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8434:17:30",
                        "subExpression": {
                          "id": 10021,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9707,
                          "src": "8435:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c6563746564",
                        "id": 10023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8453:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        },
                        "value": "A proposal has already been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        }
                      ],
                      "id": 10020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8426:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8426:66:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10025,
                  "nodeType": "ExpressionStatement",
                  "src": "8426:66:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10027,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14761,
                            "src": "8523:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8523:9:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10029,
                          "name": "proposalEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9730,
                          "src": "8535:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8523:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f7274656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 10031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8561:80:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be supported because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        }
                      ],
                      "id": 10026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8502:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8502:149:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10033,
                  "nodeType": "ExpressionStatement",
                  "src": "8502:149:30"
                },
                {
                  "assignments": [
                    10035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10035,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "8670:7:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10141,
                      "src": "8662:15:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10034,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8662:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10041,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10037,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8692:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8692:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10039,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "8704:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10036,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "8680:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 10040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8680:36:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8662:54:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10043,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10035,
                          "src": "8748:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8758:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8748:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e206f7264657220746f20737570706f727420612070726f706f73616c20796f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e74206f6620746f6b656e73",
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8773:75:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f",
                          "typeString": "literal_string \"In order to support a proposal you must stake a non-zero amount of tokens\""
                        },
                        "value": "In order to support a proposal you must stake a non-zero amount of tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f",
                          "typeString": "literal_string \"In order to support a proposal you must stake a non-zero amount of tokens\""
                        }
                      ],
                      "id": 10042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8727:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8727:131:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "8727:131:30"
                },
                {
                  "assignments": [
                    10051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10051,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "8882:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10141,
                      "src": "8869:15:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 10050,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10049,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9678,
                          "src": "8869:4:30"
                        },
                        "referencedDeclaration": 9678,
                        "src": "8869:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10055,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10052,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9692,
                      "src": "8887:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                        "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 10054,
                    "indexExpression": {
                      "id": 10053,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10005,
                      "src": "8897:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8887:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$9678_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8869:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10059,
                                "name": "_p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10051,
                                "src": "8943:2:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                                  "typeString": "struct PolicyProposals.Prop storage pointer"
                                }
                              },
                              "id": 10060,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9675,
                              "src": "8943:11:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 10058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8935:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10057,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8935:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8935:20:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8967:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8959:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10062,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8959:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8959:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8935:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520737570706f727465642070726f706f73616c206973206e6f742072656769737465726564",
                        "id": 10067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8983:42:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a",
                          "typeString": "literal_string \"The supported proposal is not registered\""
                        },
                        "value": "The supported proposal is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a",
                          "typeString": "literal_string \"The supported proposal is not registered\""
                        }
                      ],
                      "id": 10056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8914:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8914:121:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10069,
                  "nodeType": "ExpressionStatement",
                  "src": "8914:121:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9066:32:30",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 10071,
                              "name": "staked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9685,
                              "src": "9067:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(contract Proposal => mapping(address => bool))"
                              }
                            },
                            "id": 10074,
                            "indexExpression": {
                              "expression": {
                                "id": 10072,
                                "name": "_p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10051,
                                "src": "9074:2:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                                  "typeString": "struct PolicyProposals.Prop storage pointer"
                                }
                              },
                              "id": 10073,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9675,
                              "src": "9074:11:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9067:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 10077,
                          "indexExpression": {
                            "expression": {
                              "id": 10075,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9087:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9087:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9067:31:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d6179206e6f74207374616b6520696e20737570706f7274206f6620612070726f706f73616c207477696365",
                        "id": 10079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9112:50:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac",
                          "typeString": "literal_string \"You may not stake in support of a proposal twice\""
                        },
                        "value": "You may not stake in support of a proposal twice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac",
                          "typeString": "literal_string \"You may not stake in support of a proposal twice\""
                        }
                      ],
                      "id": 10070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9045:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9045:127:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10081,
                  "nodeType": "ExpressionStatement",
                  "src": "9045:127:30"
                },
                {
                  "expression": {
                    "id": 10089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10082,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10051,
                        "src": "9183:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 10084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9677,
                      "src": "9183:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10085,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10051,
                          "src": "9199:2:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 10086,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9677,
                        "src": "9199:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 10087,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "9215:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9199:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9183:39:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10090,
                  "nodeType": "ExpressionStatement",
                  "src": "9183:39:30"
                },
                {
                  "expression": {
                    "id": 10099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10091,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9685,
                          "src": "9232:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(contract Proposal => mapping(address => bool))"
                          }
                        },
                        "id": 10096,
                        "indexExpression": {
                          "expression": {
                            "id": 10092,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10051,
                            "src": "9239:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 10093,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9675,
                          "src": "9239:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9232:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10097,
                      "indexExpression": {
                        "expression": {
                          "id": 10094,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9252:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9252:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9232:31:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9266:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9232:38:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10100,
                  "nodeType": "ExpressionStatement",
                  "src": "9232:38:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9292:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9292:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10101,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11945,
                      "src": "9281:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9281:22:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10105,
                  "nodeType": "ExpressionStatement",
                  "src": "9281:22:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9326:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9326:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10109,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10005,
                        "src": "9338:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "id": 10106,
                      "name": "Support",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9753,
                      "src": "9318:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Proposal_$10943_$returns$__$",
                        "typeString": "function (address,contract Proposal)"
                      }
                    },
                    "id": 10110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9318:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10111,
                  "nodeType": "EmitStatement",
                  "src": "9313:31:30"
                },
                {
                  "assignments": [
                    10113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10113,
                      "mutability": "mutable",
                      "name": "_total",
                      "nameLocation": "9363:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10141,
                      "src": "9355:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10112,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9355:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10117,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10115,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "9389:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10114,
                      "name": "totalVotingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11902,
                      "src": "9372:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 10116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9372:29:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9355:46:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10118,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10051,
                        "src": "9429:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 10119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9677,
                      "src": "9429:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10120,
                              "name": "_total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10113,
                              "src": "9458:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 10121,
                              "name": "SUPPORT_THRESHOLD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9723,
                              "src": "9467:17:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9458:26:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 10123,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9457:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 10124,
                        "name": "SUPPORT_THRESHOLD_DIVISOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9727,
                        "src": "9488:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9457:56:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9429:84:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10140,
                  "nodeType": "IfStatement",
                  "src": "9412:250:30",
                  "trueBody": {
                    "id": 10139,
                    "nodeType": "Block",
                    "src": "9524:138:30",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 10128,
                              "name": "_prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10005,
                              "src": "9567:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 10127,
                            "name": "SupportThresholdReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9767,
                            "src": "9543:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Proposal_$10943_$returns$__$",
                              "typeString": "function (contract Proposal)"
                            }
                          },
                          "id": 10129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9543:30:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10130,
                        "nodeType": "EmitStatement",
                        "src": "9538:35:30"
                      },
                      {
                        "expression": {
                          "id": 10133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10131,
                            "name": "proposalSelected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9707,
                            "src": "9587:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 10132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9606:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9587:23:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10134,
                        "nodeType": "ExpressionStatement",
                        "src": "9587:23:30"
                      },
                      {
                        "expression": {
                          "id": 10137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10135,
                            "name": "proposalToConfigure",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9711,
                            "src": "9624:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Proposal_$10943",
                              "typeString": "contract Proposal"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10136,
                            "name": "_prop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10005,
                            "src": "9646:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Proposal_$10943",
                              "typeString": "contract Proposal"
                            }
                          },
                          "src": "9624:27:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "id": 10138,
                        "nodeType": "ExpressionStatement",
                        "src": "9624:27:30"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10002,
              "nodeType": "StructuredDocumentation",
              "src": "7957:274:30",
              "text": "Stake in support of an existing proposal.\n Can only be called during the staking portion of the proposals phase.\n Your voting strength is added to the supporting stake of the proposal.\n @param _prop The proposal to support."
            },
            "functionSelector": "e660cc08",
            "id": 10142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "support",
            "nameLocation": "8245:7:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10005,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "8262:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10142,
                  "src": "8253:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 10004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10003,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "8253:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "8253:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8252:16:30"
            },
            "returnParameters": {
              "id": 10007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8278:0:30"
            },
            "scope": 10420,
            "src": "8236:1432:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10225,
              "nodeType": "Block",
              "src": "9718:754:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10150,
                              "name": "ID_POLICY_PROPOSALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12150,
                              "src": "9759:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 10149,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12320,
                            "src": "9749:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 10151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9749:30:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10154,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "9791:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                "typeString": "contract PolicyProposals"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                "typeString": "contract PolicyProposals"
                              }
                            ],
                            "id": 10153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9783:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9783:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9783:13:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9749:47:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e67657220616374697665",
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9810:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        },
                        "value": "Proposal contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        }
                      ],
                      "id": 10148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9728:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9728:128:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10159,
                  "nodeType": "ExpressionStatement",
                  "src": "9728:128:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9874:17:30",
                        "subExpression": {
                          "id": 10161,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9707,
                          "src": "9875:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c6563746564",
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9893:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        },
                        "value": "A proposal has already been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        }
                      ],
                      "id": 10160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9866:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9866:66:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10165,
                  "nodeType": "ExpressionStatement",
                  "src": "9866:66:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10167,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14761,
                            "src": "9963:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9963:9:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10169,
                          "name": "proposalEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9730,
                          "src": "9975:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9963:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f7274656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 10171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10001:80:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be supported because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        }
                      ],
                      "id": 10166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9942:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9942:149:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10173,
                  "nodeType": "ExpressionStatement",
                  "src": "9942:149:30"
                },
                {
                  "assignments": [
                    10176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10176,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "10115:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10225,
                      "src": "10102:15:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 10175,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10174,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9678,
                          "src": "10102:4:30"
                        },
                        "referencedDeclaration": 9678,
                        "src": "10102:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10180,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10177,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9692,
                      "src": "10120:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                        "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 10179,
                    "indexExpression": {
                      "id": 10178,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10145,
                      "src": "10130:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10120:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$9678_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10102:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10182,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9685,
                            "src": "10168:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(contract Proposal => mapping(address => bool))"
                            }
                          },
                          "id": 10185,
                          "indexExpression": {
                            "expression": {
                              "id": 10183,
                              "name": "_p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10176,
                              "src": "10175:2:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                                "typeString": "struct PolicyProposals.Prop storage pointer"
                              }
                            },
                            "id": 10184,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9675,
                            "src": "10175:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Proposal_$10943",
                              "typeString": "contract Proposal"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10168:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10188,
                        "indexExpression": {
                          "expression": {
                            "id": 10186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10188:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10188:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10168:31:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206e6f74207374616b656420746869732070726f706f73616c",
                        "id": 10189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10213:35:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15",
                          "typeString": "literal_string \"You have not staked this proposal\""
                        },
                        "value": "You have not staked this proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15",
                          "typeString": "literal_string \"You have not staked this proposal\""
                        }
                      ],
                      "id": 10181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10147:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10147:111:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10191,
                  "nodeType": "ExpressionStatement",
                  "src": "10147:111:30"
                },
                {
                  "assignments": [
                    10193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10193,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "10277:7:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10225,
                      "src": "10269:15:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10269:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10199,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10299:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10299:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10197,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "10311:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10194,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "10287:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 10198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10287:36:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10269:54:30"
                },
                {
                  "expression": {
                    "id": 10207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10200,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10176,
                        "src": "10333:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 10202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9677,
                      "src": "10333:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10203,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10176,
                          "src": "10349:2:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 10204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9677,
                        "src": "10349:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10205,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10193,
                        "src": "10365:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10349:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10333:39:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10208,
                  "nodeType": "ExpressionStatement",
                  "src": "10333:39:30"
                },
                {
                  "expression": {
                    "id": 10217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10209,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9685,
                          "src": "10382:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(contract Proposal => mapping(address => bool))"
                          }
                        },
                        "id": 10214,
                        "indexExpression": {
                          "expression": {
                            "id": 10210,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10176,
                            "src": "10389:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 10211,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9675,
                          "src": "10389:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10382:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10215,
                      "indexExpression": {
                        "expression": {
                          "id": 10212,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10402:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10402:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10382:31:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10416:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10382:39:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10218,
                  "nodeType": "ExpressionStatement",
                  "src": "10382:39:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10447:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10447:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10222,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10145,
                        "src": "10459:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "id": 10219,
                      "name": "Unsupport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9761,
                      "src": "10437:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Proposal_$10943_$returns$__$",
                        "typeString": "function (address,contract Proposal)"
                      }
                    },
                    "id": 10223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10437:28:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10224,
                  "nodeType": "EmitStatement",
                  "src": "10432:33:30"
                }
              ]
            },
            "functionSelector": "3fc9d621",
            "id": 10226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsupport",
            "nameLocation": "9683:9:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10145,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "9702:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10226,
                  "src": "9693:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 10144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10143,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "9693:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "9693:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9692:16:30"
            },
            "returnParameters": {
              "id": 10147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9718:0:30"
            },
            "scope": 10420,
            "src": "9674:798:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10296,
              "nodeType": "Block",
              "src": "10519:585:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10230,
                        "name": "proposalSelected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9707,
                        "src": "10537:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f2070726f706f73616c20686173206265656e2073656c6563746564",
                        "id": 10231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10555:31:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf",
                          "typeString": "literal_string \"no proposal has been selected\""
                        },
                        "value": "no proposal has been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf",
                          "typeString": "literal_string \"no proposal has been selected\""
                        }
                      ],
                      "id": 10229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10529:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10529:58:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10233,
                  "nodeType": "ExpressionStatement",
                  "src": "10529:58:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10237,
                              "name": "proposalToConfigure",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9711,
                              "src": "10626:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 10236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10618:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10618:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10618:28:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10658:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10650:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10239,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10650:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10650:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10618:42:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e672068617320616c7265616479206265656e206465706c6f796564",
                        "id": 10244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10674:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844",
                          "typeString": "literal_string \"voting has already been deployed\""
                        },
                        "value": "voting has already been deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844",
                          "typeString": "literal_string \"voting has already been deployed\""
                        }
                      ],
                      "id": 10234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10597:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10597:121:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10246,
                  "nodeType": "ExpressionStatement",
                  "src": "10597:121:30"
                },
                {
                  "assignments": [
                    10249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10249,
                      "mutability": "mutable",
                      "name": "votingProposal",
                      "nameLocation": "10737:14:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10296,
                      "src": "10728:23:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      },
                      "typeName": {
                        "id": 10248,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10247,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10943,
                          "src": "10728:8:30"
                        },
                        "referencedDeclaration": 10943,
                        "src": "10728:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10251,
                  "initialValue": {
                    "id": 10250,
                    "name": "proposalToConfigure",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9711,
                    "src": "10754:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10728:45:30"
                },
                {
                  "expression": {
                    "id": 10253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10783:26:30",
                    "subExpression": {
                      "id": 10252,
                      "name": "proposalToConfigure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9711,
                      "src": "10790:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10254,
                  "nodeType": "ExpressionStatement",
                  "src": "10783:26:30"
                },
                {
                  "assignments": [
                    10257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10257,
                      "mutability": "mutable",
                      "name": "pv",
                      "nameLocation": "10832:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10296,
                      "src": "10820:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      },
                      "typeName": {
                        "id": 10256,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10255,
                          "name": "PolicyVotes",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10915,
                          "src": "10820:11:30"
                        },
                        "referencedDeclaration": 10915,
                        "src": "10820:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                          "typeString": "contract PolicyVotes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10263,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10259,
                            "name": "policyVotesImpl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9737,
                            "src": "10849:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                              "typeString": "contract PolicyVotes"
                            }
                          },
                          "id": 10260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clone",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12302,
                          "src": "10849:21:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () external returns (address)"
                          }
                        },
                        "id": 10261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10849:23:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10258,
                      "name": "PolicyVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10915,
                      "src": "10837:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PolicyVotes_$10915_$",
                        "typeString": "type(contract PolicyVotes)"
                      }
                    },
                    "id": 10262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10837:36:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10820:53:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10267,
                        "name": "votingProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10249,
                        "src": "10896:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      },
                      {
                        "id": 10268,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "10912:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10264,
                        "name": "pv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10257,
                        "src": "10883:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                          "typeString": "contract PolicyVotes"
                        }
                      },
                      "id": 10266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configure",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10797,
                      "src": "10883:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Proposal_$10943_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Proposal,uint256) external"
                      }
                    },
                    "id": 10269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10883:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10270,
                  "nodeType": "ExpressionStatement",
                  "src": "10883:41:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10274,
                        "name": "ID_POLICY_VOTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12153,
                        "src": "10951:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10277,
                            "name": "pv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10257,
                            "src": "10976:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                              "typeString": "contract PolicyVotes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                              "typeString": "contract PolicyVotes"
                            }
                          ],
                          "id": 10276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10968:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10968:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10968:11:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10271,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12039,
                        "src": "10934:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$12499",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 10273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPolicy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12457,
                      "src": "10934:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10934:46:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10280,
                  "nodeType": "ExpressionStatement",
                  "src": "10934:46:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10282,
                        "name": "pv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10257,
                        "src": "11006:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                          "typeString": "contract PolicyVotes"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                          "typeString": "contract PolicyVotes"
                        }
                      ],
                      "id": 10281,
                      "name": "VoteStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9773,
                      "src": "10996:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_PolicyVotes_$10915_$returns$__$",
                        "typeString": "function (contract PolicyVotes)"
                      }
                    },
                    "id": 10283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10996:13:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10284,
                  "nodeType": "EmitStatement",
                  "src": "10991:18:30"
                },
                {
                  "expression": {
                    "id": 10288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11020:32:30",
                    "subExpression": {
                      "baseExpression": {
                        "id": 10285,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9692,
                        "src": "11027:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                          "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                        }
                      },
                      "id": 10287,
                      "indexExpression": {
                        "id": 10286,
                        "name": "votingProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10249,
                        "src": "11037:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11027:25:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage",
                        "typeString": "struct PolicyProposals.Prop storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10289,
                  "nodeType": "ExpressionStatement",
                  "src": "11020:32:30"
                },
                {
                  "expression": {
                    "id": 10294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10290,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "11062:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10291,
                        "name": "totalProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9695,
                        "src": "11079:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 10292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11096:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "11079:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11062:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10295,
                  "nodeType": "ExpressionStatement",
                  "src": "11062:35:30"
                }
              ]
            },
            "functionSelector": "34f1020e",
            "id": 10297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployProposalVoting",
            "nameLocation": "10487:20:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10507:2:30"
            },
            "returnParameters": {
              "id": 10228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10519:0:30"
            },
            "scope": 10420,
            "src": "10478:626:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10372,
              "nodeType": "Block",
              "src": "11463:693:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10305,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9707,
                          "src": "11494:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10306,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14761,
                              "src": "11514:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 10307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11514:9:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 10308,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9730,
                            "src": "11526:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11514:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11494:44:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6473206d6179206e6f7420626520646973747269627574656420756e74696c2074686520706572696f64206973206f766572",
                        "id": 10311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11552:57:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc",
                          "typeString": "literal_string \"Refunds may not be distributed until the period is over\""
                        },
                        "value": "Refunds may not be distributed until the period is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc",
                          "typeString": "literal_string \"Refunds may not be distributed until the period is over\""
                        }
                      ],
                      "id": 10304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11473:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11473:146:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10313,
                  "nodeType": "ExpressionStatement",
                  "src": "11473:146:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10317,
                              "name": "_prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10301,
                              "src": "11659:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 10316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11651:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10315,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11651:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11651:14:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11677:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11669:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10319,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11669:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11669:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11651:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "id": 10324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11693:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        },
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        }
                      ],
                      "id": 10314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11630:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11630:106:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10326,
                  "nodeType": "ExpressionStatement",
                  "src": "11630:106:30"
                },
                {
                  "assignments": [
                    10329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10329,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "11760:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10372,
                      "src": "11747:15:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 10328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10327,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9678,
                          "src": "11747:4:30"
                        },
                        "referencedDeclaration": 9678,
                        "src": "11747:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10333,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10330,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9692,
                      "src": "11765:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                        "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 10332,
                    "indexExpression": {
                      "id": 10331,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10301,
                      "src": "11775:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11765:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$9678_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11747:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        },
                        "id": 10338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10335,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10329,
                            "src": "11812:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 10336,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9675,
                          "src": "11812:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10337,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10301,
                          "src": "11827:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "src": "11812:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f76696465642070726f706f73616c2061646472657373206973206e6f742076616c6964",
                        "id": 10339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11846:44:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327",
                          "typeString": "literal_string \"The provided proposal address is not valid\""
                        },
                        "value": "The provided proposal address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327",
                          "typeString": "literal_string \"The provided proposal address is not valid\""
                        }
                      ],
                      "id": 10334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11791:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11791:109:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10341,
                  "nodeType": "ExpressionStatement",
                  "src": "11791:109:30"
                },
                {
                  "assignments": [
                    10343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10343,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "11919:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10372,
                      "src": "11911:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10342,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11911:7:30",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10346,
                  "initialValue": {
                    "expression": {
                      "id": 10344,
                      "name": "_p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10329,
                      "src": "11930:2:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop storage pointer"
                      }
                    },
                    "id": 10345,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "proposer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9672,
                    "src": "11930:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11911:30:30"
                },
                {
                  "expression": {
                    "id": 10350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11952:23:30",
                    "subExpression": {
                      "baseExpression": {
                        "id": 10347,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9692,
                        "src": "11959:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                          "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                        }
                      },
                      "id": 10349,
                      "indexExpression": {
                        "id": 10348,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10301,
                        "src": "11969:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11959:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage",
                        "typeString": "struct PolicyProposals.Prop storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10351,
                  "nodeType": "ExpressionStatement",
                  "src": "11952:23:30"
                },
                {
                  "expression": {
                    "id": 10356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10352,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "11985:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10353,
                        "name": "totalProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9695,
                        "src": "12002:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 10354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12019:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "12002:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11985:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10357,
                  "nodeType": "ExpressionStatement",
                  "src": "11985:35:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10361,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10343,
                            "src": "12057:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10362,
                            "name": "REFUND_IF_LOST",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9719,
                            "src": "12067:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10359,
                            "name": "ecoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11848,
                            "src": "12039:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECO_$2497",
                              "typeString": "contract ECO"
                            }
                          },
                          "id": 10360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "12039:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12039:43:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "id": 10364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12084:17:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        },
                        "value": "Transfer Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        }
                      ],
                      "id": 10358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12031:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12031:71:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10366,
                  "nodeType": "ExpressionStatement",
                  "src": "12031:71:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10368,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10343,
                        "src": "12133:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10369,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10301,
                        "src": "12143:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "id": 10367,
                      "name": "ProposalRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9781,
                      "src": "12118:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Proposal_$10943_$returns$__$",
                        "typeString": "function (address,contract Proposal)"
                      }
                    },
                    "id": 10370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12118:31:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10371,
                  "nodeType": "EmitStatement",
                  "src": "12113:36:30"
                }
              ]
            },
            "documentation": {
              "id": 10298,
              "nodeType": "StructuredDocumentation",
              "src": "11110:307:30",
              "text": "Refund the fee for a proposal that was not selected.\n Returns a partial refund only, does not work on proposals that are\n on the ballot for the voting phase, and can only be called after the\n period is over.\n @param _prop The proposal to issue a refund for."
            },
            "functionSelector": "fa89401a",
            "id": 10373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "11431:6:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10301,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "11447:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10373,
                  "src": "11438:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 10300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10299,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "11438:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "11438:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11437:16:30"
            },
            "returnParameters": {
              "id": 10303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11463:0:30"
            },
            "scope": 10420,
            "src": "11422:734:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10418,
              "nodeType": "Block",
              "src": "12288:494:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10378,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9707,
                          "src": "12319:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10379,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14761,
                              "src": "12339:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 10380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12339:9:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 10381,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9730,
                            "src": "12351:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12339:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12319:44:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920626520706572666f726d6564207768656e2074686520706572696f64206973206f766572",
                        "id": 10384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12377:70:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db",
                          "typeString": "literal_string \"The destruct operation can only be performed when the period is over\""
                        },
                        "value": "The destruct operation can only be performed when the period is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db",
                          "typeString": "literal_string \"The destruct operation can only be performed when the period is over\""
                        }
                      ],
                      "id": 10377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12298:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12298:159:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10386,
                  "nodeType": "ExpressionStatement",
                  "src": "12298:159:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10388,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9695,
                          "src": "12476:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12494:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12476:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420726566756e6420616c6c206d69737365642070726f706f73616c73206669727374",
                        "id": 10391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12497:40:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e",
                          "typeString": "literal_string \"Must refund all missed proposals first\""
                        },
                        "value": "Must refund all missed proposals first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e",
                          "typeString": "literal_string \"Must refund all missed proposals first\""
                        }
                      ],
                      "id": 10387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12468:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12468:70:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10393,
                  "nodeType": "ExpressionStatement",
                  "src": "12468:70:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10397,
                        "name": "ID_POLICY_PROPOSALS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12150,
                        "src": "12567:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 10394,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12039,
                        "src": "12549:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$12499",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 10396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeSelf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12417,
                      "src": "12549:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 10398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12549:38:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10399,
                  "nodeType": "ExpressionStatement",
                  "src": "12549:38:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10405,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12039,
                                "src": "12662:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              ],
                              "id": 10404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12654:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10403,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12654:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12654:15:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10411,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "12714:4:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                      "typeString": "contract PolicyProposals"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                      "typeString": "contract PolicyProposals"
                                    }
                                  ],
                                  "id": 10410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12706:7:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10409,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12706:7:30",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12706:13:30",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10407,
                                "name": "ecoToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11848,
                                "src": "12687:8:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ECO_$2497",
                                  "typeString": "contract ECO"
                                }
                              },
                              "id": 10408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3975,
                              "src": "12687:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 10413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12687:33:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10401,
                            "name": "ecoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11848,
                            "src": "12619:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECO_$2497",
                              "typeString": "contract ECO"
                            }
                          },
                          "id": 10402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "12619:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12619:115:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "id": 10415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12748:17:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        },
                        "value": "Transfer Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        }
                      ],
                      "id": 10400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12598:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12598:177:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10417,
                  "nodeType": "ExpressionStatement",
                  "src": "12598:177:30"
                }
              ]
            },
            "documentation": {
              "id": 10374,
              "nodeType": "StructuredDocumentation",
              "src": "12162:92:30",
              "text": "Reclaim tokens after end time\n only callable if all proposals are refunded"
            },
            "functionSelector": "2b68b9c6",
            "id": 10419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destruct",
            "nameLocation": "12268:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12276:2:30"
            },
            "returnParameters": {
              "id": 10376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12288:0:30"
            },
            "scope": 10420,
            "src": "12259:523:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10421,
        "src": "935:11849:30",
        "usedErrors": []
      }
    ],
    "src": "32:12753:30"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/governance/PolicyProposals.sol",
    "exportedSymbols": {
      "CloneFactory": [
        2207
      ],
      "CurrencyTimer": [
        8401
      ],
      "ECO": [
        2497
      ],
      "ECOx": [
        3238
      ],
      "ECOxLockup": [
        8688
      ],
      "ERC1820Client": [
        12017
      ],
      "ERC20": [
        3785
      ],
      "ForwardTarget": [
        12742
      ],
      "IECO": [
        3826
      ],
      "IERC1820Implementer": [
        218
      ],
      "IERC1820Registry": [
        308
      ],
      "IERC20": [
        182
      ],
      "IGeneration": [
        8696
      ],
      "ILockups": [
        8714
      ],
      "Lockup": [
        9655
      ],
      "Policed": [
        12119
      ],
      "PolicedUtils": [
        12321
      ],
      "Policy": [
        12499
      ],
      "PolicyProposals": [
        10420
      ],
      "PolicyVotes": [
        10915
      ],
      "Proposal": [
        10943
      ],
      "StringPacker": [
        14748
      ],
      "TimeUtils": [
        14762
      ],
      "VoteCheckpoints": [
        6922
      ],
      "VotingPower": [
        11959
      ]
    },
    "id": 10421,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9657,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:30"
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 9658,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 12500,
        "src": "57:30:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/IECO.sol",
        "file": "../currency/IECO.sol",
        "id": 9659,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 3827,
        "src": "88:30:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 9660,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 12322,
        "src": "119:36:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Proposal.sol",
        "file": "./Proposal.sol",
        "id": 9661,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 10944,
        "src": "156:24:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/PolicyVotes.sol",
        "file": "./PolicyVotes.sol",
        "id": 9662,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 10916,
        "src": "181:27:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/VotingPower.sol",
        "file": "./VotingPower.sol",
        "id": 9663,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 11960,
        "src": "209:27:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 9664,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 14763,
        "src": "237:32:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 9665,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10421,
        "sourceUnit": 183,
        "src": "270:56:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9667,
              "name": "VotingPower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11959,
              "src": "963:11:30"
            },
            "id": 9668,
            "nodeType": "InheritanceSpecifier",
            "src": "963:11:30"
          },
          {
            "baseName": {
              "id": 9669,
              "name": "TimeUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14762,
              "src": "976:9:30"
            },
            "id": 9670,
            "nodeType": "InheritanceSpecifier",
            "src": "976:9:30"
          }
        ],
        "canonicalName": "PolicyProposals",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9666,
          "nodeType": "StructuredDocumentation",
          "src": "328:606:30",
          "text": "@title PolicyProposals\n `PolicyProposals` oversees the proposals phase of the policy decision\n process. Proposals can be submitted by anyone willing to put forth funds, and\n submitted proposals can be supported by anyone\n First, during the proposals portion of the proposals phase, proposals can be\n submitted (for a fee). This is parallelized with a signal voting process where\n support can be distributed and redistributed to proposals after they are submitted.\n A proposal that makes it to support above 30% of the total possible support ends this\n phase and starts a vote."
        },
        "fullyImplemented": true,
        "id": 10420,
        "linearizedBaseContracts": [
          10420,
          14762,
          11959,
          12321,
          12017,
          2207,
          12119,
          218,
          12742
        ],
        "name": "PolicyProposals",
        "nameLocation": "944:15:30",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PolicyProposals.Prop",
            "id": 9678,
            "members": [
              {
                "constant": false,
                "id": 9672,
                "mutability": "mutable",
                "name": "proposer",
                "nameLocation": "1136:8:30",
                "nodeType": "VariableDeclaration",
                "scope": 9678,
                "src": "1128:16:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9671,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1128:7:30",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9675,
                "mutability": "mutable",
                "name": "proposal",
                "nameLocation": "1224:8:30",
                "nodeType": "VariableDeclaration",
                "scope": 9678,
                "src": "1215:17:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Proposal_$10943",
                  "typeString": "contract Proposal"
                },
                "typeName": {
                  "id": 9674,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 9673,
                    "name": "Proposal",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 10943,
                    "src": "1215:8:30"
                  },
                  "referencedDeclaration": 10943,
                  "src": "1215:8:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9677,
                "mutability": "mutable",
                "name": "totalStake",
                "nameLocation": "1330:10:30",
                "nodeType": "VariableDeclaration",
                "scope": 9678,
                "src": "1322:18:30",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9676,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1322:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Prop",
            "nameLocation": "1052:4:30",
            "nodeType": "StructDefinition",
            "scope": 10420,
            "src": "1045:302:30",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c6d3afc9",
            "id": 9685,
            "mutability": "mutable",
            "name": "staked",
            "nameLocation": "1497:6:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "1444:59:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(contract Proposal => mapping(address => bool))"
            },
            "typeName": {
              "id": 9684,
              "keyType": {
                "id": 9680,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9679,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10943,
                  "src": "1452:8:30"
                },
                "referencedDeclaration": 10943,
                "src": "1452:8:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Proposal_$10943",
                  "typeString": "contract Proposal"
                }
              },
              "nodeType": "Mapping",
              "src": "1444:45:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(contract Proposal => mapping(address => bool))"
              },
              "valueType": {
                "id": 9683,
                "keyType": {
                  "id": 9681,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1472:7:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1464:24:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 9682,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1483:4:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9686,
              "nodeType": "StructuredDocumentation",
              "src": "1510:176:30",
              "text": "The set of proposals under consideration.\n maps from addresses of proposals to structs containing with info and\n the staking data (struct defined above)"
            },
            "functionSelector": "3341b445",
            "id": 9692,
            "mutability": "mutable",
            "name": "proposals",
            "nameLocation": "1724:9:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "1691:42:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
              "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop)"
            },
            "typeName": {
              "id": 9691,
              "keyType": {
                "id": 9688,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9687,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10943,
                  "src": "1699:8:30"
                },
                "referencedDeclaration": 10943,
                "src": "1699:8:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Proposal_$10943",
                  "typeString": "contract Proposal"
                }
              },
              "nodeType": "Mapping",
              "src": "1691:25:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop)"
              },
              "valueType": {
                "id": 9690,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9689,
                  "name": "Prop",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9678,
                  "src": "1711:4:30"
                },
                "referencedDeclaration": 9678,
                "src": "1711:4:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                  "typeString": "struct PolicyProposals.Prop"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9693,
              "nodeType": "StructuredDocumentation",
              "src": "1740:47:30",
              "text": "The total number of proposals made."
            },
            "functionSelector": "a78d80fc",
            "id": 9695,
            "mutability": "mutable",
            "name": "totalProposals",
            "nameLocation": "1807:14:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "1792:29:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9694,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1792:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9696,
              "nodeType": "StructuredDocumentation",
              "src": "1828:58:30",
              "text": "A list of the addresses of all proposals made."
            },
            "functionSelector": "938351b8",
            "id": 9700,
            "mutability": "mutable",
            "name": "allProposals",
            "nameLocation": "1909:12:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "1891:30:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage",
              "typeString": "contract Proposal[]"
            },
            "typeName": {
              "baseType": {
                "id": 9698,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 9697,
                  "name": "Proposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10943,
                  "src": "1891:8:30"
                },
                "referencedDeclaration": 10943,
                "src": "1891:8:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Proposal_$10943",
                  "typeString": "contract Proposal"
                }
              },
              "id": 9699,
              "nodeType": "ArrayTypeName",
              "src": "1891:10:30",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage_ptr",
                "typeString": "contract Proposal[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9701,
              "nodeType": "StructuredDocumentation",
              "src": "1928:71:30",
              "text": "The duration of the proposal portion of the proposal phase."
            },
            "functionSelector": "af12645a",
            "id": 9704,
            "mutability": "constant",
            "name": "PROPOSAL_TIME",
            "nameLocation": "2028:13:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2004:50:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9702,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2004:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 9703,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2044:10:30",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_600_by_1",
                "typeString": "int_const 600"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9705,
              "nodeType": "StructuredDocumentation",
              "src": "2061:63:30",
              "text": "Whether or not a winning proposal has been selected"
            },
            "functionSelector": "3dc716f3",
            "id": 9707,
            "mutability": "mutable",
            "name": "proposalSelected",
            "nameLocation": "2141:16:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2129:28:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9706,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2129:4:30",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9708,
              "nodeType": "StructuredDocumentation",
              "src": "2164:66:30",
              "text": "selected proposal awaiting configuration before voting"
            },
            "functionSelector": "c3d2a0bc",
            "id": 9711,
            "mutability": "mutable",
            "name": "proposalToConfigure",
            "nameLocation": "2251:19:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2235:35:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Proposal_$10943",
              "typeString": "contract Proposal"
            },
            "typeName": {
              "id": 9710,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9709,
                "name": "Proposal",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10943,
                "src": "2235:8:30"
              },
              "referencedDeclaration": 10943,
              "src": "2235:8:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proposal_$10943",
                "typeString": "contract Proposal"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9712,
              "nodeType": "StructuredDocumentation",
              "src": "2277:52:30",
              "text": "The minimum cost to register a proposal."
            },
            "functionSelector": "8881a874",
            "id": 9715,
            "mutability": "constant",
            "name": "COST_REGISTER",
            "nameLocation": "2358:13:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2334:47:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9713,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2334:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030653138",
              "id": 9714,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2374:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000000"
              },
              "value": "1000e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9716,
              "nodeType": "StructuredDocumentation",
              "src": "2388:68:30",
              "text": "The amount refunded if a proposal does not get selected."
            },
            "functionSelector": "762ec1e9",
            "id": 9719,
            "mutability": "constant",
            "name": "REFUND_IF_LOST",
            "nameLocation": "2485:14:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2461:47:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9717,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2461:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "383030653138",
              "id": 9718,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2502:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_800000000000000000000_by_1",
                "typeString": "int_const 800000000000000000000"
              },
              "value": "800e18"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9720,
              "nodeType": "StructuredDocumentation",
              "src": "2515:76:30",
              "text": "The percentage of total voting power required to push to a vote."
            },
            "functionSelector": "ec7f729c",
            "id": 9723,
            "mutability": "constant",
            "name": "SUPPORT_THRESHOLD",
            "nameLocation": "2620:17:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2596:46:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9721,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2596:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330",
              "id": 9722,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2640:2:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30_by_1",
                "typeString": "int_const 30"
              },
              "value": "30"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 9724,
              "nodeType": "StructuredDocumentation",
              "src": "2649:79:30",
              "text": "The divisor for the above constant, tracks the digits of precision."
            },
            "functionSelector": "81e53876",
            "id": 9727,
            "mutability": "constant",
            "name": "SUPPORT_THRESHOLD_DIVISOR",
            "nameLocation": "2757:25:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2733:55:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9725,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2733:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030",
              "id": 9726,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2785:3:30",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100_by_1",
                "typeString": "int_const 100"
              },
              "value": "100"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9728,
              "nodeType": "StructuredDocumentation",
              "src": "2795:79:30",
              "text": "The time at which the proposal portion of the proposals phase ends."
            },
            "functionSelector": "376cf9bf",
            "id": 9730,
            "mutability": "mutable",
            "name": "proposalEnds",
            "nameLocation": "2894:12:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "2879:27:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9729,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2879:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9731,
              "nodeType": "StructuredDocumentation",
              "src": "2913:102:30",
              "text": "The block number of the balance stores to use for staking in\n support of a proposal."
            },
            "functionSelector": "57e871e7",
            "id": 9733,
            "mutability": "mutable",
            "name": "blockNumber",
            "nameLocation": "3035:11:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "3020:26:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9732,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3020:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 9734,
              "nodeType": "StructuredDocumentation",
              "src": "3053:96:30",
              "text": "The address of the `PolicyVotes` contract, to be cloned for the voting\n phase."
            },
            "functionSelector": "984db242",
            "id": 9737,
            "mutability": "mutable",
            "name": "policyVotesImpl",
            "nameLocation": "3173:15:30",
            "nodeType": "VariableDeclaration",
            "scope": 10420,
            "src": "3154:34:30",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PolicyVotes_$10915",
              "typeString": "contract PolicyVotes"
            },
            "typeName": {
              "id": 9736,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9735,
                "name": "PolicyVotes",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10915,
                "src": "3154:11:30"
              },
              "referencedDeclaration": 10915,
              "src": "3154:11:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                "typeString": "contract PolicyVotes"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9738,
              "nodeType": "StructuredDocumentation",
              "src": "3195:158:30",
              "text": "An event indicating a proposal has been proposed\n @param proposalAddress The address of the Proposal contract instance that was added"
            },
            "id": 9745,
            "name": "Register",
            "nameLocation": "3364:8:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9740,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "3389:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9745,
                  "src": "3373:24:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9743,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3416:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9745,
                  "src": "3399:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9742,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9741,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "3399:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "3399:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3372:60:30"
            },
            "src": "3358:75:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9746,
              "nodeType": "StructuredDocumentation",
              "src": "3439:177:30",
              "text": "An event indicating that proposal have been supported by stake.\n @param proposalAddress The address of the Proposal contract instance that was supported"
            },
            "id": 9753,
            "name": "Support",
            "nameLocation": "3627:7:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9748,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "supporter",
                  "nameLocation": "3651:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9753,
                  "src": "3635:25:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9751,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3679:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9753,
                  "src": "3662:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9750,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9749,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "3662:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "3662:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:61:30"
            },
            "src": "3621:75:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9754,
              "nodeType": "StructuredDocumentation",
              "src": "3702:182:30",
              "text": "An event indicating that support has been removed from a proposal.\n @param proposalAddress The address of the Proposal contract instance that was unsupported"
            },
            "id": 9761,
            "name": "Unsupport",
            "nameLocation": "3895:9:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9756,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "unsupporter",
                  "nameLocation": "3930:11:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9761,
                  "src": "3914:27:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3914:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9759,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "3968:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9761,
                  "src": "3951:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9758,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9757,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "3951:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "3951:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3904:85:30"
            },
            "src": "3889:101:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9762,
              "nodeType": "StructuredDocumentation",
              "src": "3996:160:30",
              "text": "An event indicating a proposal has reached its support threshold\n @param proposalAddress The address of the Proposal contract instance."
            },
            "id": 9767,
            "name": "SupportThresholdReached",
            "nameLocation": "4167:23:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9765,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "4208:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9767,
                  "src": "4191:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9764,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9763,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "4191:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "4191:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4190:34:30"
            },
            "src": "4161:64:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9768,
              "nodeType": "StructuredDocumentation",
              "src": "4231:163:30",
              "text": "An event indicating that a proposal has been accepted for voting\n @param contractAddress The address of the PolicyVotes contract instance."
            },
            "id": 9773,
            "name": "VoteStart",
            "nameLocation": "4405:9:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9771,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "4435:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9773,
                  "src": "4415:35:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                    "typeString": "contract PolicyVotes"
                  },
                  "typeName": {
                    "id": 9770,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9769,
                      "name": "PolicyVotes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10915,
                      "src": "4415:11:30"
                    },
                    "referencedDeclaration": 10915,
                    "src": "4415:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4414:37:30"
            },
            "src": "4399:53:30"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9774,
              "nodeType": "StructuredDocumentation",
              "src": "4458:150:30",
              "text": "An event indicating that proposal fee was partially refunded.\n @param proposer The address of the proposee which was refunded"
            },
            "id": 9781,
            "name": "ProposalRefund",
            "nameLocation": "4619:14:30",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9776,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposer",
                  "nameLocation": "4659:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9781,
                  "src": "4643:24:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4643:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9779,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "proposalAddress",
                  "nameLocation": "4694:15:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9781,
                  "src": "4677:32:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9778,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9777,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "4677:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "4677:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4633:82:30"
            },
            "src": "4613:103:30"
          },
          {
            "body": {
              "id": 9806,
              "nodeType": "Block",
              "src": "5348:47:30",
              "statements": [
                {
                  "expression": {
                    "id": 9804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9802,
                      "name": "policyVotesImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9737,
                      "src": "5358:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9803,
                      "name": "_policyvotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9788,
                      "src": "5376:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      }
                    },
                    "src": "5358:30:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "id": 9805,
                  "nodeType": "ExpressionStatement",
                  "src": "5358:30:30"
                }
              ]
            },
            "documentation": {
              "id": 9782,
              "nodeType": "StructuredDocumentation",
              "src": "4722:457:30",
              "text": "Construct a new PolicyProposals instance using the provided supervising\n policy (root) and supporting contracts.\n @param _policy The address of the root policy contract.\n @param _policyvotes The address of the contract that will be cloned to\n                     oversee the voting phase.\n @param _ecoAddr The address of the ECO token contract.\n @param _ecoXAddr The address of the ECOx token contract."
            },
            "id": 9807,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9797,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9785,
                    "src": "5318:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  {
                    "id": 9798,
                    "name": "_ecoAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9791,
                    "src": "5327:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  {
                    "id": 9799,
                    "name": "_ecoXAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9794,
                    "src": "5337:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECOx_$3238",
                      "typeString": "contract ECOx"
                    }
                  }
                ],
                "id": 9800,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9796,
                  "name": "VotingPower",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11959,
                  "src": "5306:11:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "5306:41:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9785,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "5212:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "5205:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Policy_$12499",
                    "typeString": "contract Policy"
                  },
                  "typeName": {
                    "id": 9784,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9783,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12499,
                      "src": "5205:6:30"
                    },
                    "referencedDeclaration": 12499,
                    "src": "5205:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9788,
                  "mutability": "mutable",
                  "name": "_policyvotes",
                  "nameLocation": "5241:12:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "5229:24:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                    "typeString": "contract PolicyVotes"
                  },
                  "typeName": {
                    "id": 9787,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9786,
                      "name": "PolicyVotes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10915,
                      "src": "5229:11:30"
                    },
                    "referencedDeclaration": 10915,
                    "src": "5229:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9791,
                  "mutability": "mutable",
                  "name": "_ecoAddr",
                  "nameLocation": "5267:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "5263:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECO_$2497",
                    "typeString": "contract ECO"
                  },
                  "typeName": {
                    "id": 9790,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9789,
                      "name": "ECO",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2497,
                      "src": "5263:3:30"
                    },
                    "referencedDeclaration": 2497,
                    "src": "5263:3:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9794,
                  "mutability": "mutable",
                  "name": "_ecoXAddr",
                  "nameLocation": "5290:9:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9807,
                  "src": "5285:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECOx_$3238",
                    "typeString": "contract ECOx"
                  },
                  "typeName": {
                    "id": 9793,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9792,
                      "name": "ECOx",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3238,
                      "src": "5285:4:30"
                    },
                    "referencedDeclaration": 3238,
                    "src": "5285:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECOx_$3238",
                      "typeString": "contract ECOx"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5195:110:30"
            },
            "returnParameters": {
              "id": 9801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5348:0:30"
            },
            "scope": 10420,
            "src": "5184:211:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12250
            ],
            "body": {
              "id": 9842,
              "nodeType": "Block",
              "src": "5721:274:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9819,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9810,
                        "src": "5748:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 9816,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5731:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyProposals_$10420_$",
                          "typeString": "type(contract super PolicyProposals)"
                        }
                      },
                      "id": 9818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12250,
                      "src": "5731:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:23:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9821,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:23:30"
                },
                {
                  "expression": {
                    "id": 9828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9822,
                      "name": "policyVotesImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9737,
                      "src": "5843:15:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 9824,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9810,
                              "src": "5877:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9823,
                            "name": "PolicyProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10420,
                            "src": "5861:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PolicyProposals_$10420_$",
                              "typeString": "type(contract PolicyProposals)"
                            }
                          },
                          "id": 9825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5861:22:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                            "typeString": "contract PolicyProposals"
                          }
                        },
                        "id": 9826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "policyVotesImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9737,
                        "src": "5861:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_PolicyVotes_$10915_$",
                          "typeString": "function () view external returns (contract PolicyVotes)"
                        }
                      },
                      "id": 9827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5861:40:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      }
                    },
                    "src": "5843:58:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "id": 9829,
                  "nodeType": "ExpressionStatement",
                  "src": "5843:58:30"
                },
                {
                  "expression": {
                    "id": 9835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9830,
                      "name": "proposalEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9730,
                      "src": "5912:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 9834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 9831,
                          "name": "getTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14761,
                          "src": "5927:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 9832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5927:9:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 9833,
                        "name": "PROPOSAL_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9704,
                        "src": "5939:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5927:25:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5912:40:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9836,
                  "nodeType": "ExpressionStatement",
                  "src": "5912:40:30"
                },
                {
                  "expression": {
                    "id": 9840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9837,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9733,
                      "src": "5962:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9838,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "5976:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 9839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "5976:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5962:26:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9841,
                  "nodeType": "ExpressionStatement",
                  "src": "5962:26:30"
                }
              ]
            },
            "documentation": {
              "id": 9808,
              "nodeType": "StructuredDocumentation",
              "src": "5401:247:30",
              "text": "Initialize the storage context using parameters copied from the original\n contract (provided as _self).\n Can only be called once, during proxy initialization.\n @param _self The original contract address."
            },
            "functionSelector": "c4d66de8",
            "id": 9843,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9814,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9813,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12672,
                  "src": "5704:16:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "5704:16:30"
              }
            ],
            "name": "initialize",
            "nameLocation": "5662:10:30",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9812,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5695:8:30"
            },
            "parameters": {
              "id": 9811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9810,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "5681:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 9843,
                  "src": "5673:13:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5673:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5672:15:30"
            },
            "returnParameters": {
              "id": 9815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5721:0:30"
            },
            "scope": 10420,
            "src": "5653:342:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9853,
              "nodeType": "Block",
              "src": "6135:36:30",
              "statements": [
                {
                  "expression": {
                    "id": 9851,
                    "name": "allProposals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9700,
                    "src": "6152:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage",
                      "typeString": "contract Proposal[] storage ref"
                    }
                  },
                  "functionReturnParameters": 9850,
                  "id": 9852,
                  "nodeType": "Return",
                  "src": "6145:19:30"
                }
              ]
            },
            "documentation": {
              "id": 9844,
              "nodeType": "StructuredDocumentation",
              "src": "6001:57:30",
              "text": "A list of addresses for all proposed policies"
            },
            "functionSelector": "b87341b8",
            "id": 9854,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allProposalAddresses",
            "nameLocation": "6072:20:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6092:2:30"
            },
            "returnParameters": {
              "id": 9850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9854,
                  "src": "6116:17:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_memory_ptr",
                    "typeString": "contract Proposal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9847,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9846,
                        "name": "Proposal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 10943,
                        "src": "6116:8:30"
                      },
                      "referencedDeclaration": 10943,
                      "src": "6116:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "id": 9848,
                    "nodeType": "ArrayTypeName",
                    "src": "6116:10:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage_ptr",
                      "typeString": "contract Proposal[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6115:19:30"
            },
            "scope": 10420,
            "src": "6063:108:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9898,
              "nodeType": "Block",
              "src": "6288:245:30",
              "statements": [
                {
                  "assignments": [
                    9866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9866,
                      "mutability": "mutable",
                      "name": "proposalData",
                      "nameLocation": "6312:12:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 9898,
                      "src": "6298:26:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct PolicyProposals.Prop[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9864,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9863,
                            "name": "Prop",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9678,
                            "src": "6298:4:30"
                          },
                          "referencedDeclaration": 9678,
                          "src": "6298:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop"
                          }
                        },
                        "id": 9865,
                        "nodeType": "ArrayTypeName",
                        "src": "6298:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prop_$9678_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9873,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 9871,
                        "name": "totalProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9695,
                        "src": "6338:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6327:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct PolicyProposals.Prop memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 9868,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 9867,
                            "name": "Prop",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 9678,
                            "src": "6331:4:30"
                          },
                          "referencedDeclaration": 9678,
                          "src": "6331:4:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop"
                          }
                        },
                        "id": 9869,
                        "nodeType": "ArrayTypeName",
                        "src": "6331:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Prop_$9678_storage_$dyn_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop[]"
                        }
                      }
                    },
                    "id": 9872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6327:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PolicyProposals.Prop memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6298:55:30"
                },
                {
                  "body": {
                    "id": 9894,
                    "nodeType": "Block",
                    "src": "6420:77:30",
                    "statements": [
                      {
                        "expression": {
                          "id": 9892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 9884,
                              "name": "proposalData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9866,
                              "src": "6434:12:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct PolicyProposals.Prop memory[] memory"
                              }
                            },
                            "id": 9886,
                            "indexExpression": {
                              "id": 9885,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9875,
                              "src": "6447:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6434:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_memory_ptr",
                              "typeString": "struct PolicyProposals.Prop memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 9887,
                              "name": "proposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9692,
                              "src": "6456:9:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                                "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                              }
                            },
                            "id": 9891,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 9888,
                                "name": "allProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9700,
                                "src": "6466:12:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage",
                                  "typeString": "contract Proposal[] storage ref"
                                }
                              },
                              "id": 9890,
                              "indexExpression": {
                                "id": 9889,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9875,
                                "src": "6479:5:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6466:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6456:30:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_storage",
                              "typeString": "struct PolicyProposals.Prop storage ref"
                            }
                          },
                          "src": "6434:52:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_memory_ptr",
                            "typeString": "struct PolicyProposals.Prop memory"
                          }
                        },
                        "id": 9893,
                        "nodeType": "ExpressionStatement",
                        "src": "6434:52:30"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9878,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9875,
                      "src": "6387:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 9879,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "6395:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6387:22:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9895,
                  "initializationExpression": {
                    "assignments": [
                      9875
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9875,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "6376:5:30",
                        "nodeType": "VariableDeclaration",
                        "scope": 9895,
                        "src": "6368:13:30",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6368:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 9877,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 9876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6384:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6368:17:30"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 9882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6411:7:30",
                      "subExpression": {
                        "id": 9881,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9875,
                        "src": "6411:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9883,
                    "nodeType": "ExpressionStatement",
                    "src": "6411:7:30"
                  },
                  "nodeType": "ForStatement",
                  "src": "6363:134:30"
                },
                {
                  "expression": {
                    "id": 9896,
                    "name": "proposalData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9866,
                    "src": "6514:12:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PolicyProposals.Prop memory[] memory"
                    }
                  },
                  "functionReturnParameters": 9861,
                  "id": 9897,
                  "nodeType": "Return",
                  "src": "6507:19:30"
                }
              ]
            },
            "documentation": {
              "id": 9855,
              "nodeType": "StructuredDocumentation",
              "src": "6177:43:30",
              "text": "A list of all proposed policies"
            },
            "functionSelector": "25f4627f",
            "id": 9899,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allProposalData",
            "nameLocation": "6234:15:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9856,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6249:2:30"
            },
            "returnParameters": {
              "id": 9861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9860,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9899,
                  "src": "6273:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Prop_$9678_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct PolicyProposals.Prop[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9858,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9857,
                        "name": "Prop",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 9678,
                        "src": "6273:4:30"
                      },
                      "referencedDeclaration": 9678,
                      "src": "6273:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      }
                    },
                    "id": 9859,
                    "nodeType": "ArrayTypeName",
                    "src": "6273:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Prop_$9678_storage_$dyn_storage_ptr",
                      "typeString": "struct PolicyProposals.Prop[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6272:15:30"
            },
            "scope": 10420,
            "src": "6225:308:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10000,
              "nodeType": "Block",
              "src": "6980:971:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 9911,
                              "name": "_prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9903,
                              "src": "7019:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 9910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7011:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9909,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7011:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7011:14:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7037:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7029:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9913,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7029:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7029:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7011:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "id": 9918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7053:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        },
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        }
                      ],
                      "id": 9908,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6990:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6990:106:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9920,
                  "nodeType": "ExpressionStatement",
                  "src": "6990:106:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 9922,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14761,
                              "src": "7128:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 9923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7128:9:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 9924,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9730,
                            "src": "7140:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7128:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 9927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7156:17:30",
                          "subExpression": {
                            "id": 9926,
                            "name": "proposalSelected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9707,
                            "src": "7157:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7128:45:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e676572206265207265676973746572656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 9929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7187:81:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85",
                          "typeString": "literal_string \"Proposals may no longer be registered because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be registered because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a41b9be29f464ca0018d13d46fc8e4c3f042221d315a03c45b18c95341987c85",
                          "typeString": "literal_string \"Proposals may no longer be registered because the registration period has ended\""
                        }
                      ],
                      "id": 9921,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7107:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7107:171:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9931,
                  "nodeType": "ExpressionStatement",
                  "src": "7107:171:30"
                },
                {
                  "assignments": [
                    9934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9934,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "7302:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10000,
                      "src": "7289:15:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 9933,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 9932,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9678,
                          "src": "7289:4:30"
                        },
                        "referencedDeclaration": 9678,
                        "src": "7289:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9938,
                  "initialValue": {
                    "baseExpression": {
                      "id": 9935,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9692,
                      "src": "7307:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                        "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 9937,
                    "indexExpression": {
                      "id": 9936,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9903,
                      "src": "7317:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7307:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$9678_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7289:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 9949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 9942,
                                "name": "_p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9934,
                                "src": "7363:2:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                                  "typeString": "struct PolicyProposals.Prop storage pointer"
                                }
                              },
                              "id": 9943,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9675,
                              "src": "7363:11:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 9941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7355:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9940,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7355:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7355:20:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 9947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7387:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 9946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7379:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 9945,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7379:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 9948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7379:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7355:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c206d6179206f6e6c792062652072656769737465726564206f6e6365",
                        "id": 9950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7403:40:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115",
                          "typeString": "literal_string \"A proposal may only be registered once\""
                        },
                        "value": "A proposal may only be registered once"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_936b086d4783ff00a807fcbdd06d1af958f6d33b700ca81b6f822dcc45459115",
                          "typeString": "literal_string \"A proposal may only be registered once\""
                        }
                      ],
                      "id": 9939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7334:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7334:119:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9952,
                  "nodeType": "ExpressionStatement",
                  "src": "7334:119:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 9956,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7506:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 9957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7506:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 9960,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "7526:4:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                  "typeString": "contract PolicyProposals"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                  "typeString": "contract PolicyProposals"
                                }
                              ],
                              "id": 9959,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7518:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 9958,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7518:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 9961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7518:13:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 9962,
                            "name": "COST_REGISTER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9715,
                            "src": "7533:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 9954,
                            "name": "ecoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11848,
                            "src": "7484:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECO_$2497",
                              "typeString": "contract ECO"
                            }
                          },
                          "id": 9955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3458,
                          "src": "7484:21:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 9963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7484:63:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520746f6b656e20636f7374206f6620726567697374726174696f6e206d75737420626520617070726f76656420746f207472616e73666572207072696f7220746f2063616c6c696e6720726567697374657250726f706f73616c",
                        "id": 9964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7561:95:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252",
                          "typeString": "literal_string \"The token cost of registration must be approved to transfer prior to calling registerProposal\""
                        },
                        "value": "The token cost of registration must be approved to transfer prior to calling registerProposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6685582cb42e46a72fd4ec05e21e8f2b0e7291035143ad8a47b7136801915252",
                          "typeString": "literal_string \"The token cost of registration must be approved to transfer prior to calling registerProposal\""
                        }
                      ],
                      "id": 9953,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7463:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7463:203:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9966,
                  "nodeType": "ExpressionStatement",
                  "src": "7463:203:30"
                },
                {
                  "expression": {
                    "id": 9971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9967,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9934,
                        "src": "7677:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 9969,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9675,
                      "src": "7677:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9970,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9903,
                      "src": "7691:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "src": "7677:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "id": 9972,
                  "nodeType": "ExpressionStatement",
                  "src": "7677:19:30"
                },
                {
                  "expression": {
                    "id": 9978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 9973,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9934,
                        "src": "7706:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 9975,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "proposer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9672,
                      "src": "7706:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 9976,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7720:3:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7720:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7706:24:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9979,
                  "nodeType": "ExpressionStatement",
                  "src": "7706:24:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9983,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9903,
                        "src": "7759:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "expression": {
                        "id": 9980,
                        "name": "allProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9700,
                        "src": "7741:12:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Proposal_$10943_$dyn_storage",
                          "typeString": "contract Proposal[] storage ref"
                        }
                      },
                      "id": 9982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7741:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Proposal_$10943_$dyn_storage_ptr_$_t_contract$_Proposal_$10943_$returns$__$bound_to$_t_array$_t_contract$_Proposal_$10943_$dyn_storage_ptr_$",
                        "typeString": "function (contract Proposal[] storage pointer,contract Proposal)"
                      }
                    },
                    "id": 9984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7741:24:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9985,
                  "nodeType": "ExpressionStatement",
                  "src": "7741:24:30"
                },
                {
                  "expression": {
                    "id": 9988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9986,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "7775:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 9987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7793:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7775:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9989,
                  "nodeType": "ExpressionStatement",
                  "src": "7775:19:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 9991,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7819:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7819:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9993,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9903,
                        "src": "7831:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "id": 9990,
                      "name": "Register",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9745,
                      "src": "7810:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Proposal_$10943_$returns$__$",
                        "typeString": "function (address,contract Proposal)"
                      }
                    },
                    "id": 9994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7810:27:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9995,
                  "nodeType": "EmitStatement",
                  "src": "7805:32:30"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9996,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "7926:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 9997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7943:1:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7926:18:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9907,
                  "id": 9999,
                  "nodeType": "Return",
                  "src": "7919:25:30"
                }
              ]
            },
            "documentation": {
              "id": 9900,
              "nodeType": "StructuredDocumentation",
              "src": "6539:367:30",
              "text": "Submit a proposal.\n You must approve the policy proposals contract to withdraw the required\n fee from your account before calling this.\n Can only be called during the proposals portion of the proposals phase.\n Each proposal may only be submitted once.\n @param _prop The address of the proposal to submit."
            },
            "functionSelector": "dea64535",
            "id": 10001,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerProposal",
            "nameLocation": "6920:16:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9903,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "6946:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6937:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 9902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9901,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "6937:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "6937:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6936:16:30"
            },
            "returnParameters": {
              "id": 9907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10001,
                  "src": "6971:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6971:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6970:9:30"
            },
            "scope": 10420,
            "src": "6911:1040:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10141,
              "nodeType": "Block",
              "src": "8278:1390:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10010,
                              "name": "ID_POLICY_PROPOSALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12150,
                              "src": "8319:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 10009,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12320,
                            "src": "8309:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 10011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8309:30:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10014,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "8351:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                "typeString": "contract PolicyProposals"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                "typeString": "contract PolicyProposals"
                              }
                            ],
                            "id": 10013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8343:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10012,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8343:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8343:13:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8309:47:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e67657220616374697665",
                        "id": 10017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8370:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        },
                        "value": "Proposal contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        }
                      ],
                      "id": 10008,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8288:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8288:128:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10019,
                  "nodeType": "ExpressionStatement",
                  "src": "8288:128:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8434:17:30",
                        "subExpression": {
                          "id": 10021,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9707,
                          "src": "8435:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c6563746564",
                        "id": 10023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8453:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        },
                        "value": "A proposal has already been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        }
                      ],
                      "id": 10020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8426:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8426:66:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10025,
                  "nodeType": "ExpressionStatement",
                  "src": "8426:66:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10027,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14761,
                            "src": "8523:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8523:9:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10029,
                          "name": "proposalEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9730,
                          "src": "8535:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8523:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f7274656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 10031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8561:80:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be supported because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        }
                      ],
                      "id": 10026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8502:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8502:149:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10033,
                  "nodeType": "ExpressionStatement",
                  "src": "8502:149:30"
                },
                {
                  "assignments": [
                    10035
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10035,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "8670:7:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10141,
                      "src": "8662:15:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10034,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8662:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10041,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10037,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8692:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8692:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10039,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "8704:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10036,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "8680:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 10040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8680:36:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8662:54:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10043,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10035,
                          "src": "8748:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8758:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8748:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e206f7264657220746f20737570706f727420612070726f706f73616c20796f75206d757374207374616b652061206e6f6e2d7a65726f20616d6f756e74206f6620746f6b656e73",
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8773:75:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f",
                          "typeString": "literal_string \"In order to support a proposal you must stake a non-zero amount of tokens\""
                        },
                        "value": "In order to support a proposal you must stake a non-zero amount of tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c86273bbdc435624e80db7a89bea1639fb633c48cb33cdb5c71fa7068585a98f",
                          "typeString": "literal_string \"In order to support a proposal you must stake a non-zero amount of tokens\""
                        }
                      ],
                      "id": 10042,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8727:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8727:131:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "8727:131:30"
                },
                {
                  "assignments": [
                    10051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10051,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "8882:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10141,
                      "src": "8869:15:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 10050,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10049,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9678,
                          "src": "8869:4:30"
                        },
                        "referencedDeclaration": 9678,
                        "src": "8869:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10055,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10052,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9692,
                      "src": "8887:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                        "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 10054,
                    "indexExpression": {
                      "id": 10053,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10005,
                      "src": "8897:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8887:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$9678_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8869:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10059,
                                "name": "_p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10051,
                                "src": "8943:2:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                                  "typeString": "struct PolicyProposals.Prop storage pointer"
                                }
                              },
                              "id": 10060,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9675,
                              "src": "8943:11:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 10058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8935:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10057,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8935:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8935:20:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8967:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8959:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10062,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8959:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8959:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8935:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520737570706f727465642070726f706f73616c206973206e6f742072656769737465726564",
                        "id": 10067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8983:42:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a",
                          "typeString": "literal_string \"The supported proposal is not registered\""
                        },
                        "value": "The supported proposal is not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de96625017fdcd12128f7e7d2178e4fda3025c4eccf7e6a3cf4562b03fbcd84a",
                          "typeString": "literal_string \"The supported proposal is not registered\""
                        }
                      ],
                      "id": 10056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8914:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8914:121:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10069,
                  "nodeType": "ExpressionStatement",
                  "src": "8914:121:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9066:32:30",
                        "subExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 10071,
                              "name": "staked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9685,
                              "src": "9067:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                                "typeString": "mapping(contract Proposal => mapping(address => bool))"
                              }
                            },
                            "id": 10074,
                            "indexExpression": {
                              "expression": {
                                "id": 10072,
                                "name": "_p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10051,
                                "src": "9074:2:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                                  "typeString": "struct PolicyProposals.Prop storage pointer"
                                }
                              },
                              "id": 10073,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 9675,
                              "src": "9074:11:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9067:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 10077,
                          "indexExpression": {
                            "expression": {
                              "id": 10075,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9087:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 10076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9087:10:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9067:31:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d6179206e6f74207374616b6520696e20737570706f7274206f6620612070726f706f73616c207477696365",
                        "id": 10079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9112:50:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac",
                          "typeString": "literal_string \"You may not stake in support of a proposal twice\""
                        },
                        "value": "You may not stake in support of a proposal twice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a3d7ce14d8cef6289e5328da3be5574ec520935da7dc397c599029317d7deac",
                          "typeString": "literal_string \"You may not stake in support of a proposal twice\""
                        }
                      ],
                      "id": 10070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9045:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9045:127:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10081,
                  "nodeType": "ExpressionStatement",
                  "src": "9045:127:30"
                },
                {
                  "expression": {
                    "id": 10089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10082,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10051,
                        "src": "9183:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 10084,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9677,
                      "src": "9183:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10085,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10051,
                          "src": "9199:2:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 10086,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9677,
                        "src": "9199:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 10087,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10035,
                        "src": "9215:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9199:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9183:39:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10090,
                  "nodeType": "ExpressionStatement",
                  "src": "9183:39:30"
                },
                {
                  "expression": {
                    "id": 10099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10091,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9685,
                          "src": "9232:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(contract Proposal => mapping(address => bool))"
                          }
                        },
                        "id": 10096,
                        "indexExpression": {
                          "expression": {
                            "id": 10092,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10051,
                            "src": "9239:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 10093,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9675,
                          "src": "9239:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9232:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10097,
                      "indexExpression": {
                        "expression": {
                          "id": 10094,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9252:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9252:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9232:31:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9266:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9232:38:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10100,
                  "nodeType": "ExpressionStatement",
                  "src": "9232:38:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10102,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9292:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9292:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10101,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11945,
                      "src": "9281:10:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9281:22:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10105,
                  "nodeType": "ExpressionStatement",
                  "src": "9281:22:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10107,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9326:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9326:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10109,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10005,
                        "src": "9338:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "id": 10106,
                      "name": "Support",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9753,
                      "src": "9318:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Proposal_$10943_$returns$__$",
                        "typeString": "function (address,contract Proposal)"
                      }
                    },
                    "id": 10110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9318:26:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10111,
                  "nodeType": "EmitStatement",
                  "src": "9313:31:30"
                },
                {
                  "assignments": [
                    10113
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10113,
                      "mutability": "mutable",
                      "name": "_total",
                      "nameLocation": "9363:6:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10141,
                      "src": "9355:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10112,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9355:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10117,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10115,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "9389:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10114,
                      "name": "totalVotingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11902,
                      "src": "9372:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 10116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9372:29:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9355:46:30"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10118,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10051,
                        "src": "9429:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 10119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "totalStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9677,
                      "src": "9429:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10120,
                              "name": "_total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10113,
                              "src": "9458:6:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 10121,
                              "name": "SUPPORT_THRESHOLD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9723,
                              "src": "9467:17:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9458:26:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 10123,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9457:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 10124,
                        "name": "SUPPORT_THRESHOLD_DIVISOR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9727,
                        "src": "9488:25:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9457:56:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9429:84:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10140,
                  "nodeType": "IfStatement",
                  "src": "9412:250:30",
                  "trueBody": {
                    "id": 10139,
                    "nodeType": "Block",
                    "src": "9524:138:30",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 10128,
                              "name": "_prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10005,
                              "src": "9567:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 10127,
                            "name": "SupportThresholdReached",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9767,
                            "src": "9543:23:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Proposal_$10943_$returns$__$",
                              "typeString": "function (contract Proposal)"
                            }
                          },
                          "id": 10129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9543:30:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10130,
                        "nodeType": "EmitStatement",
                        "src": "9538:35:30"
                      },
                      {
                        "expression": {
                          "id": 10133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10131,
                            "name": "proposalSelected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9707,
                            "src": "9587:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 10132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9606:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9587:23:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10134,
                        "nodeType": "ExpressionStatement",
                        "src": "9587:23:30"
                      },
                      {
                        "expression": {
                          "id": 10137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10135,
                            "name": "proposalToConfigure",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9711,
                            "src": "9624:19:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Proposal_$10943",
                              "typeString": "contract Proposal"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10136,
                            "name": "_prop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10005,
                            "src": "9646:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Proposal_$10943",
                              "typeString": "contract Proposal"
                            }
                          },
                          "src": "9624:27:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "id": 10138,
                        "nodeType": "ExpressionStatement",
                        "src": "9624:27:30"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10002,
              "nodeType": "StructuredDocumentation",
              "src": "7957:274:30",
              "text": "Stake in support of an existing proposal.\n Can only be called during the staking portion of the proposals phase.\n Your voting strength is added to the supporting stake of the proposal.\n @param _prop The proposal to support."
            },
            "functionSelector": "e660cc08",
            "id": 10142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "support",
            "nameLocation": "8245:7:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10005,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "8262:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10142,
                  "src": "8253:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 10004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10003,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "8253:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "8253:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8252:16:30"
            },
            "returnParameters": {
              "id": 10007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8278:0:30"
            },
            "scope": 10420,
            "src": "8236:1432:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10225,
              "nodeType": "Block",
              "src": "9718:754:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10150,
                              "name": "ID_POLICY_PROPOSALS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12150,
                              "src": "9759:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 10149,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12320,
                            "src": "9749:9:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 10151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9749:30:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10154,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "9791:4:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                "typeString": "contract PolicyProposals"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                "typeString": "contract PolicyProposals"
                              }
                            ],
                            "id": 10153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9783:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9783:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9783:13:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9749:47:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20636f6e7472616374206e6f206c6f6e67657220616374697665",
                        "id": 10157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9810:36:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        },
                        "value": "Proposal contract no longer active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6a69b0615d4cdd1c22003d83eeda424a8dd909eb91440cdf28d0f76bbdf0b92",
                          "typeString": "literal_string \"Proposal contract no longer active\""
                        }
                      ],
                      "id": 10148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9728:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9728:128:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10159,
                  "nodeType": "ExpressionStatement",
                  "src": "9728:128:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9874:17:30",
                        "subExpression": {
                          "id": 10161,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9707,
                          "src": "9875:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "412070726f706f73616c2068617320616c7265616479206265656e2073656c6563746564",
                        "id": 10163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9893:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        },
                        "value": "A proposal has already been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba806f8682c420b3b9ce36c77374e9875d8a3a0e0c2942267a312a35ddd7a91",
                          "typeString": "literal_string \"A proposal has already been selected\""
                        }
                      ],
                      "id": 10160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9866:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9866:66:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10165,
                  "nodeType": "ExpressionStatement",
                  "src": "9866:66:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10167,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14761,
                            "src": "9963:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9963:9:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10169,
                          "name": "proposalEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9730,
                          "src": "9975:12:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9963:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c73206d6179206e6f206c6f6e67657220626520737570706f7274656420626563617573652074686520726567697374726174696f6e20706572696f642068617320656e646564",
                        "id": 10171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10001:80:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        },
                        "value": "Proposals may no longer be supported because the registration period has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdcfff6b363cd9b4a88c168bb6136a106e024e5dbc2519f85493f5ceec9fa4ba",
                          "typeString": "literal_string \"Proposals may no longer be supported because the registration period has ended\""
                        }
                      ],
                      "id": 10166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9942:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9942:149:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10173,
                  "nodeType": "ExpressionStatement",
                  "src": "9942:149:30"
                },
                {
                  "assignments": [
                    10176
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10176,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "10115:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10225,
                      "src": "10102:15:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 10175,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10174,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9678,
                          "src": "10102:4:30"
                        },
                        "referencedDeclaration": 9678,
                        "src": "10102:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10180,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10177,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9692,
                      "src": "10120:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                        "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 10179,
                    "indexExpression": {
                      "id": 10178,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10145,
                      "src": "10130:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10120:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$9678_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10102:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 10182,
                            "name": "staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9685,
                            "src": "10168:6:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                              "typeString": "mapping(contract Proposal => mapping(address => bool))"
                            }
                          },
                          "id": 10185,
                          "indexExpression": {
                            "expression": {
                              "id": 10183,
                              "name": "_p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10176,
                              "src": "10175:2:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                                "typeString": "struct PolicyProposals.Prop storage pointer"
                              }
                            },
                            "id": 10184,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "proposal",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9675,
                            "src": "10175:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Proposal_$10943",
                              "typeString": "contract Proposal"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10168:19:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10188,
                        "indexExpression": {
                          "expression": {
                            "id": 10186,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "10188:3:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10188:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10168:31:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206e6f74207374616b656420746869732070726f706f73616c",
                        "id": 10189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10213:35:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15",
                          "typeString": "literal_string \"You have not staked this proposal\""
                        },
                        "value": "You have not staked this proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13d492bf3461b2828d4d1f06ddce62927117c532b00d1ca2c17e0d4c49032a15",
                          "typeString": "literal_string \"You have not staked this proposal\""
                        }
                      ],
                      "id": 10181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10147:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10147:111:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10191,
                  "nodeType": "ExpressionStatement",
                  "src": "10147:111:30"
                },
                {
                  "assignments": [
                    10193
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10193,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "10277:7:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10225,
                      "src": "10269:15:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10192,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10269:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10199,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10299:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10299:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10197,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "10311:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10194,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "10287:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 10198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10287:36:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10269:54:30"
                },
                {
                  "expression": {
                    "id": 10207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 10200,
                        "name": "_p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10176,
                        "src": "10333:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop storage pointer"
                        }
                      },
                      "id": 10202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "totalStake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9677,
                      "src": "10333:13:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 10203,
                          "name": "_p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10176,
                          "src": "10349:2:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                            "typeString": "struct PolicyProposals.Prop storage pointer"
                          }
                        },
                        "id": 10204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalStake",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9677,
                        "src": "10349:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10205,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10193,
                        "src": "10365:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10349:23:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10333:39:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10208,
                  "nodeType": "ExpressionStatement",
                  "src": "10333:39:30"
                },
                {
                  "expression": {
                    "id": 10217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 10209,
                          "name": "staked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9685,
                          "src": "10382:6:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(contract Proposal => mapping(address => bool))"
                          }
                        },
                        "id": 10214,
                        "indexExpression": {
                          "expression": {
                            "id": 10210,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10176,
                            "src": "10389:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 10211,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9675,
                          "src": "10389:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10382:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10215,
                      "indexExpression": {
                        "expression": {
                          "id": 10212,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10402:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10402:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10382:31:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10416:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10382:39:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10218,
                  "nodeType": "ExpressionStatement",
                  "src": "10382:39:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10220,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "10447:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10447:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10222,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10145,
                        "src": "10459:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "id": 10219,
                      "name": "Unsupport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9761,
                      "src": "10437:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Proposal_$10943_$returns$__$",
                        "typeString": "function (address,contract Proposal)"
                      }
                    },
                    "id": 10223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10437:28:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10224,
                  "nodeType": "EmitStatement",
                  "src": "10432:33:30"
                }
              ]
            },
            "functionSelector": "3fc9d621",
            "id": 10226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unsupport",
            "nameLocation": "9683:9:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10145,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "9702:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10226,
                  "src": "9693:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 10144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10143,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "9693:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "9693:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9692:16:30"
            },
            "returnParameters": {
              "id": 10147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9718:0:30"
            },
            "scope": 10420,
            "src": "9674:798:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10296,
              "nodeType": "Block",
              "src": "10519:585:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10230,
                        "name": "proposalSelected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9707,
                        "src": "10537:16:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f2070726f706f73616c20686173206265656e2073656c6563746564",
                        "id": 10231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10555:31:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf",
                          "typeString": "literal_string \"no proposal has been selected\""
                        },
                        "value": "no proposal has been selected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d44521d445e8779e072eebb65c287b92b7c1ebf9b5173ea8f43446eebe8ef3cf",
                          "typeString": "literal_string \"no proposal has been selected\""
                        }
                      ],
                      "id": 10229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10529:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10529:58:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10233,
                  "nodeType": "ExpressionStatement",
                  "src": "10529:58:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10237,
                              "name": "proposalToConfigure",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9711,
                              "src": "10626:19:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 10236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10618:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10235,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10618:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10618:28:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10658:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10650:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10239,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10650:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10650:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10618:42:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f74696e672068617320616c7265616479206265656e206465706c6f796564",
                        "id": 10244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10674:34:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844",
                          "typeString": "literal_string \"voting has already been deployed\""
                        },
                        "value": "voting has already been deployed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f815f5f9a4a94298462319074e1b472e119158dcd7745e45b3ad72fe4baeb844",
                          "typeString": "literal_string \"voting has already been deployed\""
                        }
                      ],
                      "id": 10234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10597:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10597:121:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10246,
                  "nodeType": "ExpressionStatement",
                  "src": "10597:121:30"
                },
                {
                  "assignments": [
                    10249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10249,
                      "mutability": "mutable",
                      "name": "votingProposal",
                      "nameLocation": "10737:14:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10296,
                      "src": "10728:23:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      },
                      "typeName": {
                        "id": 10248,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10247,
                          "name": "Proposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10943,
                          "src": "10728:8:30"
                        },
                        "referencedDeclaration": 10943,
                        "src": "10728:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10251,
                  "initialValue": {
                    "id": 10250,
                    "name": "proposalToConfigure",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9711,
                    "src": "10754:19:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10728:45:30"
                },
                {
                  "expression": {
                    "id": 10253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10783:26:30",
                    "subExpression": {
                      "id": 10252,
                      "name": "proposalToConfigure",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9711,
                      "src": "10790:19:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10254,
                  "nodeType": "ExpressionStatement",
                  "src": "10783:26:30"
                },
                {
                  "assignments": [
                    10257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10257,
                      "mutability": "mutable",
                      "name": "pv",
                      "nameLocation": "10832:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10296,
                      "src": "10820:14:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                        "typeString": "contract PolicyVotes"
                      },
                      "typeName": {
                        "id": 10256,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10255,
                          "name": "PolicyVotes",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10915,
                          "src": "10820:11:30"
                        },
                        "referencedDeclaration": 10915,
                        "src": "10820:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                          "typeString": "contract PolicyVotes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10263,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 10259,
                            "name": "policyVotesImpl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9737,
                            "src": "10849:15:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                              "typeString": "contract PolicyVotes"
                            }
                          },
                          "id": 10260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "clone",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12302,
                          "src": "10849:21:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () external returns (address)"
                          }
                        },
                        "id": 10261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10849:23:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10258,
                      "name": "PolicyVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10915,
                      "src": "10837:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PolicyVotes_$10915_$",
                        "typeString": "type(contract PolicyVotes)"
                      }
                    },
                    "id": 10262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10837:36:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                      "typeString": "contract PolicyVotes"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10820:53:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10267,
                        "name": "votingProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10249,
                        "src": "10896:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      },
                      {
                        "id": 10268,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9733,
                        "src": "10912:11:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10264,
                        "name": "pv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10257,
                        "src": "10883:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                          "typeString": "contract PolicyVotes"
                        }
                      },
                      "id": 10266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configure",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10797,
                      "src": "10883:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_Proposal_$10943_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Proposal,uint256) external"
                      }
                    },
                    "id": 10269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10883:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10270,
                  "nodeType": "ExpressionStatement",
                  "src": "10883:41:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10274,
                        "name": "ID_POLICY_VOTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12153,
                        "src": "10951:15:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10277,
                            "name": "pv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10257,
                            "src": "10976:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                              "typeString": "contract PolicyVotes"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                              "typeString": "contract PolicyVotes"
                            }
                          ],
                          "id": 10276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10968:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10968:7:30",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10968:11:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10271,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12039,
                        "src": "10934:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$12499",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 10273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPolicy",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12457,
                      "src": "10934:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 10279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10934:46:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10280,
                  "nodeType": "ExpressionStatement",
                  "src": "10934:46:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10282,
                        "name": "pv",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10257,
                        "src": "11006:2:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                          "typeString": "contract PolicyVotes"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                          "typeString": "contract PolicyVotes"
                        }
                      ],
                      "id": 10281,
                      "name": "VoteStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9773,
                      "src": "10996:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_PolicyVotes_$10915_$returns$__$",
                        "typeString": "function (contract PolicyVotes)"
                      }
                    },
                    "id": 10283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10996:13:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10284,
                  "nodeType": "EmitStatement",
                  "src": "10991:18:30"
                },
                {
                  "expression": {
                    "id": 10288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11020:32:30",
                    "subExpression": {
                      "baseExpression": {
                        "id": 10285,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9692,
                        "src": "11027:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                          "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                        }
                      },
                      "id": 10287,
                      "indexExpression": {
                        "id": 10286,
                        "name": "votingProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10249,
                        "src": "11037:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11027:25:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage",
                        "typeString": "struct PolicyProposals.Prop storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10289,
                  "nodeType": "ExpressionStatement",
                  "src": "11020:32:30"
                },
                {
                  "expression": {
                    "id": 10294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10290,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "11062:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10291,
                        "name": "totalProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9695,
                        "src": "11079:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 10292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11096:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "11079:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11062:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10295,
                  "nodeType": "ExpressionStatement",
                  "src": "11062:35:30"
                }
              ]
            },
            "functionSelector": "34f1020e",
            "id": 10297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployProposalVoting",
            "nameLocation": "10487:20:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10507:2:30"
            },
            "returnParameters": {
              "id": 10228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10519:0:30"
            },
            "scope": 10420,
            "src": "10478:626:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10372,
              "nodeType": "Block",
              "src": "11463:693:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10305,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9707,
                          "src": "11494:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10306,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14761,
                              "src": "11514:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 10307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11514:9:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 10308,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9730,
                            "src": "11526:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11514:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11494:44:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e6473206d6179206e6f7420626520646973747269627574656420756e74696c2074686520706572696f64206973206f766572",
                        "id": 10311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11552:57:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc",
                          "typeString": "literal_string \"Refunds may not be distributed until the period is over\""
                        },
                        "value": "Refunds may not be distributed until the period is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8711f3dbd3968651368cb7521a2f43496a8a49304b272ebcc5ed2dd1bdf644cc",
                          "typeString": "literal_string \"Refunds may not be distributed until the period is over\""
                        }
                      ],
                      "id": 10304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11473:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11473:146:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10313,
                  "nodeType": "ExpressionStatement",
                  "src": "11473:146:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10317,
                              "name": "_prop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10301,
                              "src": "11659:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Proposal_$10943",
                                "typeString": "contract Proposal"
                              }
                            ],
                            "id": 10316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11651:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10315,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11651:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11651:14:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 10321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11677:1:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 10320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11669:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10319,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11669:7:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11669:10:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11651:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f706f73616c20616464726573732063616e27742062652030",
                        "id": 10324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11693:33:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        },
                        "value": "The proposal address can't be 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_306bf5532beafb7145837a348acdabac247cdd26732fb90b28a074a81cfe7ec7",
                          "typeString": "literal_string \"The proposal address can't be 0\""
                        }
                      ],
                      "id": 10314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11630:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11630:106:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10326,
                  "nodeType": "ExpressionStatement",
                  "src": "11630:106:30"
                },
                {
                  "assignments": [
                    10329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10329,
                      "mutability": "mutable",
                      "name": "_p",
                      "nameLocation": "11760:2:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10372,
                      "src": "11747:15:30",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop"
                      },
                      "typeName": {
                        "id": 10328,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10327,
                          "name": "Prop",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 9678,
                          "src": "11747:4:30"
                        },
                        "referencedDeclaration": 9678,
                        "src": "11747:4:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                          "typeString": "struct PolicyProposals.Prop"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10333,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10330,
                      "name": "proposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9692,
                      "src": "11765:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                        "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                      }
                    },
                    "id": 10332,
                    "indexExpression": {
                      "id": 10331,
                      "name": "_prop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10301,
                      "src": "11775:5:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11765:16:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Prop_$9678_storage",
                      "typeString": "struct PolicyProposals.Prop storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11747:34:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        },
                        "id": 10338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10335,
                            "name": "_p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10329,
                            "src": "11812:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                              "typeString": "struct PolicyProposals.Prop storage pointer"
                            }
                          },
                          "id": 10336,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "proposal",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9675,
                          "src": "11812:11:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10337,
                          "name": "_prop",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10301,
                          "src": "11827:5:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Proposal_$10943",
                            "typeString": "contract Proposal"
                          }
                        },
                        "src": "11812:20:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f76696465642070726f706f73616c2061646472657373206973206e6f742076616c6964",
                        "id": 10339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11846:44:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327",
                          "typeString": "literal_string \"The provided proposal address is not valid\""
                        },
                        "value": "The provided proposal address is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_851134a009cb4767a9979c57a23e73a5bdd348814ae6ba40a93e0e22f942a327",
                          "typeString": "literal_string \"The provided proposal address is not valid\""
                        }
                      ],
                      "id": 10334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11791:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11791:109:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10341,
                  "nodeType": "ExpressionStatement",
                  "src": "11791:109:30"
                },
                {
                  "assignments": [
                    10343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10343,
                      "mutability": "mutable",
                      "name": "receiver",
                      "nameLocation": "11919:8:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 10372,
                      "src": "11911:16:30",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 10342,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11911:7:30",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10346,
                  "initialValue": {
                    "expression": {
                      "id": 10344,
                      "name": "_p",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10329,
                      "src": "11930:2:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage_ptr",
                        "typeString": "struct PolicyProposals.Prop storage pointer"
                      }
                    },
                    "id": 10345,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "proposer",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 9672,
                    "src": "11930:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11911:30:30"
                },
                {
                  "expression": {
                    "id": 10350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11952:23:30",
                    "subExpression": {
                      "baseExpression": {
                        "id": 10347,
                        "name": "proposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9692,
                        "src": "11959:9:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_Proposal_$10943_$_t_struct$_Prop_$9678_storage_$",
                          "typeString": "mapping(contract Proposal => struct PolicyProposals.Prop storage ref)"
                        }
                      },
                      "id": 10349,
                      "indexExpression": {
                        "id": 10348,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10301,
                        "src": "11969:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11959:16:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Prop_$9678_storage",
                        "typeString": "struct PolicyProposals.Prop storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10351,
                  "nodeType": "ExpressionStatement",
                  "src": "11952:23:30"
                },
                {
                  "expression": {
                    "id": 10356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10352,
                      "name": "totalProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9695,
                      "src": "11985:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10353,
                        "name": "totalProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9695,
                        "src": "12002:14:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 10354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12019:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "12002:18:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11985:35:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10357,
                  "nodeType": "ExpressionStatement",
                  "src": "11985:35:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10361,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10343,
                            "src": "12057:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 10362,
                            "name": "REFUND_IF_LOST",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9719,
                            "src": "12067:14:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10359,
                            "name": "ecoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11848,
                            "src": "12039:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECO_$2497",
                              "typeString": "contract ECO"
                            }
                          },
                          "id": 10360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "12039:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12039:43:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "id": 10364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12084:17:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        },
                        "value": "Transfer Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        }
                      ],
                      "id": 10358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12031:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12031:71:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10366,
                  "nodeType": "ExpressionStatement",
                  "src": "12031:71:30"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10368,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10343,
                        "src": "12133:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10369,
                        "name": "_prop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10301,
                        "src": "12143:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_Proposal_$10943",
                          "typeString": "contract Proposal"
                        }
                      ],
                      "id": 10367,
                      "name": "ProposalRefund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9781,
                      "src": "12118:14:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_Proposal_$10943_$returns$__$",
                        "typeString": "function (address,contract Proposal)"
                      }
                    },
                    "id": 10370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12118:31:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10371,
                  "nodeType": "EmitStatement",
                  "src": "12113:36:30"
                }
              ]
            },
            "documentation": {
              "id": 10298,
              "nodeType": "StructuredDocumentation",
              "src": "11110:307:30",
              "text": "Refund the fee for a proposal that was not selected.\n Returns a partial refund only, does not work on proposals that are\n on the ballot for the voting phase, and can only be called after the\n period is over.\n @param _prop The proposal to issue a refund for."
            },
            "functionSelector": "fa89401a",
            "id": 10373,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "refund",
            "nameLocation": "11431:6:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10301,
                  "mutability": "mutable",
                  "name": "_prop",
                  "nameLocation": "11447:5:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 10373,
                  "src": "11438:14:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 10300,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10299,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "11438:8:30"
                    },
                    "referencedDeclaration": 10943,
                    "src": "11438:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11437:16:30"
            },
            "returnParameters": {
              "id": 10303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11463:0:30"
            },
            "scope": 10420,
            "src": "11422:734:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10418,
              "nodeType": "Block",
              "src": "12288:494:30",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10378,
                          "name": "proposalSelected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9707,
                          "src": "12319:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10379,
                              "name": "getTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14761,
                              "src": "12339:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 10380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12339:9:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 10381,
                            "name": "proposalEnds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9730,
                            "src": "12351:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12339:24:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12319:44:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546865206465737472756374206f7065726174696f6e2063616e206f6e6c7920626520706572666f726d6564207768656e2074686520706572696f64206973206f766572",
                        "id": 10384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12377:70:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db",
                          "typeString": "literal_string \"The destruct operation can only be performed when the period is over\""
                        },
                        "value": "The destruct operation can only be performed when the period is over"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f3e6ec26daee172e11e75a6840d76c48e81bea0c0f5860c96212be3b1aa75db",
                          "typeString": "literal_string \"The destruct operation can only be performed when the period is over\""
                        }
                      ],
                      "id": 10377,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12298:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12298:159:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10386,
                  "nodeType": "ExpressionStatement",
                  "src": "12298:159:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10388,
                          "name": "totalProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9695,
                          "src": "12476:14:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12494:1:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12476:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420726566756e6420616c6c206d69737365642070726f706f73616c73206669727374",
                        "id": 10391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12497:40:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e",
                          "typeString": "literal_string \"Must refund all missed proposals first\""
                        },
                        "value": "Must refund all missed proposals first"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00f5a24dc123171684d1bf99f75cd26e0674307918ab98f296a2eee828d3c75e",
                          "typeString": "literal_string \"Must refund all missed proposals first\""
                        }
                      ],
                      "id": 10387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12468:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12468:70:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10393,
                  "nodeType": "ExpressionStatement",
                  "src": "12468:70:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10397,
                        "name": "ID_POLICY_PROPOSALS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12150,
                        "src": "12567:19:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 10394,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12039,
                        "src": "12549:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$12499",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 10396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeSelf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12417,
                      "src": "12549:17:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 10398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12549:38:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10399,
                  "nodeType": "ExpressionStatement",
                  "src": "12549:38:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10405,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12039,
                                "src": "12662:6:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              ],
                              "id": 10404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12654:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10403,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12654:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12654:15:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10411,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "12714:4:30",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                      "typeString": "contract PolicyProposals"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyProposals_$10420",
                                      "typeString": "contract PolicyProposals"
                                    }
                                  ],
                                  "id": 10410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12706:7:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10409,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12706:7:30",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12706:13:30",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10407,
                                "name": "ecoToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11848,
                                "src": "12687:8:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ECO_$2497",
                                  "typeString": "contract ECO"
                                }
                              },
                              "id": 10408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3975,
                              "src": "12687:18:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 10413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12687:33:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10401,
                            "name": "ecoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11848,
                            "src": "12619:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECO_$2497",
                              "typeString": "contract ECO"
                            }
                          },
                          "id": 10402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "12619:17:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12619:115:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "id": 10415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12748:17:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        },
                        "value": "Transfer Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        }
                      ],
                      "id": 10400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12598:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12598:177:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10417,
                  "nodeType": "ExpressionStatement",
                  "src": "12598:177:30"
                }
              ]
            },
            "documentation": {
              "id": 10374,
              "nodeType": "StructuredDocumentation",
              "src": "12162:92:30",
              "text": "Reclaim tokens after end time\n only callable if all proposals are refunded"
            },
            "functionSelector": "2b68b9c6",
            "id": 10419,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "destruct",
            "nameLocation": "12268:8:30",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12276:2:30"
            },
            "returnParameters": {
              "id": 10376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12288:0:30"
            },
            "scope": 10420,
            "src": "12259:523:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10421,
        "src": "935:11849:30",
        "usedErrors": []
      }
    ],
    "src": "32:12753:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-07-01T19:00:50.564Z",
  "devdoc": {
    "events": {
      "ProposalRefund(address,address)": {
        "params": {
          "proposer": "The address of the proposee which was refunded"
        }
      },
      "Register(address,address)": {
        "params": {
          "proposalAddress": "The address of the Proposal contract instance that was added"
        }
      },
      "Support(address,address)": {
        "params": {
          "proposalAddress": "The address of the Proposal contract instance that was supported"
        }
      },
      "SupportThresholdReached(address)": {
        "params": {
          "proposalAddress": "The address of the Proposal contract instance."
        }
      },
      "Unsupport(address,address)": {
        "params": {
          "proposalAddress": "The address of the Proposal contract instance that was unsupported"
        }
      },
      "VoteStart(address)": {
        "params": {
          "contractAddress": "The address of the PolicyVotes contract instance."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "params": {
          "_addr": "The address of the contract we might act on behalf of."
        }
      },
      "constructor": {
        "params": {
          "_ecoAddr": "The address of the ECO token contract.",
          "_ecoXAddr": "The address of the ECOx token contract.",
          "_policy": "The address of the root policy contract.",
          "_policyvotes": "The address of the contract that will be cloned to                     oversee the voting phase."
        }
      },
      "initialize(address)": {
        "params": {
          "_self": "The original contract address."
        }
      },
      "policyCommand(address,bytes)": {
        "params": {
          "_data": "The call message/data to execute on.",
          "_delegate": "The address of the contract to delegate execution to."
        }
      },
      "refund(address)": {
        "params": {
          "_prop": "The proposal to issue a refund for."
        }
      },
      "registerProposal(address)": {
        "params": {
          "_prop": "The address of the proposal to submit."
        }
      },
      "support(address)": {
        "params": {
          "_prop": "The proposal to support."
        }
      }
    },
    "title": "PolicyProposals `PolicyProposals` oversees the proposals phase of the policy decision process. Proposals can be submitted by anyone willing to put forth funds, and submitted proposals can be supported by anyone First, during the proposals portion of the proposals phase, proposals can be submitted (for a fee). This is parallelized with a signal voting process where support can be distributed and redistributed to proposals after they are submitted. A proposal that makes it to support above 30% of the total possible support ends this phase and starts a vote.",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ProposalRefund(address,address)": {
        "notice": "An event indicating that proposal fee was partially refunded."
      },
      "Register(address,address)": {
        "notice": "An event indicating a proposal has been proposed"
      },
      "Support(address,address)": {
        "notice": "An event indicating that proposal have been supported by stake."
      },
      "SupportThresholdReached(address)": {
        "notice": "An event indicating a proposal has reached its support threshold"
      },
      "Unsupport(address,address)": {
        "notice": "An event indicating that support has been removed from a proposal."
      },
      "VoteStart(address)": {
        "notice": "An event indicating that a proposal has been accepted for voting"
      }
    },
    "kind": "user",
    "methods": {
      "COST_REGISTER()": {
        "notice": "The minimum cost to register a proposal."
      },
      "PROPOSAL_TIME()": {
        "notice": "The duration of the proposal portion of the proposal phase."
      },
      "REFUND_IF_LOST()": {
        "notice": "The amount refunded if a proposal does not get selected."
      },
      "SUPPORT_THRESHOLD()": {
        "notice": "The percentage of total voting power required to push to a vote."
      },
      "SUPPORT_THRESHOLD_DIVISOR()": {
        "notice": "The divisor for the above constant, tracks the digits of precision."
      },
      "allProposalAddresses()": {
        "notice": "A list of addresses for all proposed policies"
      },
      "allProposalData()": {
        "notice": "A list of all proposed policies"
      },
      "allProposals(uint256)": {
        "notice": "A list of the addresses of all proposals made."
      },
      "blockNumber()": {
        "notice": "The block number of the balance stores to use for staking in support of a proposal."
      },
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "ERC1820 permissioning interface"
      },
      "clone()": {
        "notice": "Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract."
      },
      "constructor": {
        "notice": "Construct a new PolicyProposals instance using the provided supervising policy (root) and supporting contracts."
      },
      "destruct()": {
        "notice": "Reclaim tokens after end time only callable if all proposals are refunded"
      },
      "implementation()": {
        "notice": "Get the address of the proxy target contract."
      },
      "initialize(address)": {
        "notice": "Initialize the storage context using parameters copied from the original contract (provided as _self). Can only be called once, during proxy initialization."
      },
      "policy()": {
        "notice": "The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy."
      },
      "policyCommand(address,bytes)": {
        "notice": "Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space."
      },
      "policyVotesImpl()": {
        "notice": "The address of the `PolicyVotes` contract, to be cloned for the voting phase."
      },
      "proposalEnds()": {
        "notice": "The time at which the proposal portion of the proposals phase ends."
      },
      "proposalSelected()": {
        "notice": "Whether or not a winning proposal has been selected"
      },
      "proposalToConfigure()": {
        "notice": "selected proposal awaiting configuration before voting"
      },
      "proposals(address)": {
        "notice": "The set of proposals under consideration. maps from addresses of proposals to structs containing with info and the staking data (struct defined above)"
      },
      "refund(address)": {
        "notice": "Refund the fee for a proposal that was not selected. Returns a partial refund only, does not work on proposals that are on the ballot for the voting phase, and can only be called after the period is over."
      },
      "registerProposal(address)": {
        "notice": "Submit a proposal. You must approve the policy proposals contract to withdraw the required fee from your account before calling this. Can only be called during the proposals portion of the proposals phase. Each proposal may only be submitted once."
      },
      "setExpectedInterfaceSet(address)": {
        "notice": "Set the expected interface set"
      },
      "support(address)": {
        "notice": "Stake in support of an existing proposal. Can only be called during the staking portion of the proposals phase. Your voting strength is added to the supporting stake of the proposal."
      },
      "totalProposals()": {
        "notice": "The total number of proposals made."
      }
    },
    "version": 1
  }
}