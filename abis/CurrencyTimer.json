{
  "contractName": "CurrencyTimer",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Policy",
          "name": "_policy",
          "type": "address"
        },
        {
          "internalType": "contract CurrencyGovernance",
          "name": "_borda",
          "type": "address"
        },
        {
          "internalType": "contract Inflation",
          "name": "_inflation",
          "type": "address"
        },
        {
          "internalType": "contract Lockup",
          "name": "_lockup",
          "type": "address"
        },
        {
          "internalType": "contract InflationRootHashProposal",
          "name": "_inflationRootHashProposal",
          "type": "address"
        },
        {
          "internalType": "contract ECO",
          "name": "_ecoAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract CurrencyGovernance",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "NewCurrencyGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Inflation",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "NewInflation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract InflationRootHashProposal",
          "name": "inflationRootHashProposalContract",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "generation",
          "type": "uint256"
        }
      ],
      "name": "NewInflationRootHashProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract Lockup",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "NewLockup",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "bordaImpl",
      "outputs": [
        {
          "internalType": "contract CurrencyGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clone",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentGeneration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ecoToken",
      "outputs": [
        {
          "internalType": "contract ECO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inflationImpl",
      "outputs": [
        {
          "internalType": "contract Inflation",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inflationRootHashProposalImpl",
      "outputs": [
        {
          "internalType": "contract InflationRootHashProposal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isLockup",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockupImpl",
      "outputs": [
        {
          "internalType": "contract Lockup",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lockups",
      "outputs": [
        {
          "internalType": "contract Lockup",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "contract Policy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "policyCommand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rootHashAddressPerGeneration",
      "outputs": [
        {
          "internalType": "contract InflationRootHashProposal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setExpectedInterfaceSet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_self",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "notifyGenerationIncrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_withdrawer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_penalty",
          "type": "bool"
        }
      ],
      "name": "lockupWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Policy\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"contract CurrencyGovernance\",\"name\":\"_borda\",\"type\":\"address\"},{\"internalType\":\"contract Inflation\",\"name\":\"_inflation\",\"type\":\"address\"},{\"internalType\":\"contract Lockup\",\"name\":\"_lockup\",\"type\":\"address\"},{\"internalType\":\"contract InflationRootHashProposal\",\"name\":\"_inflationRootHashProposal\",\"type\":\"address\"},{\"internalType\":\"contract ECO\",\"name\":\"_ecoAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract CurrencyGovernance\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"NewCurrencyGovernance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Inflation\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"NewInflation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract InflationRootHashProposal\",\"name\":\"inflationRootHashProposalContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"generation\",\"type\":\"uint256\"}],\"name\":\"NewInflationRootHashProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract Lockup\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"NewLockup\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"bordaImpl\",\"outputs\":[{\"internalType\":\"contract CurrencyGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentGeneration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecoToken\",\"outputs\":[{\"internalType\":\"contract ECO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inflationImpl\",\"outputs\":[{\"internalType\":\"contract Inflation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inflationRootHashProposalImpl\",\"outputs\":[{\"internalType\":\"contract InflationRootHashProposal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLockup\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockupImpl\",\"outputs\":[{\"internalType\":\"contract Lockup\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_penalty\",\"type\":\"bool\"}],\"name\":\"lockupWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockups\",\"outputs\":[{\"internalType\":\"contract Lockup\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifyGenerationIncrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"contract Policy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"policyCommand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rootHashAddressPerGeneration\",\"outputs\":[{\"internalType\":\"contract InflationRootHashProposal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setExpectedInterfaceSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"params\":{\"_addr\":\"The address of the contract we might act on behalf of.\"}},\"initialize(address)\":{\"params\":{\"_self\":\"The address of the original contract deployment (as opposed              to the address of the proxy contract, which takes the place              of `this`).\"}},\"policyCommand(address,bytes)\":{\"params\":{\"_data\":\"The call message/data to execute on.\",\"_delegate\":\"The address of the contract to delegate execution to.\"}}},\"title\":\"TimedPolicies Oversees the time-based recurring processes that allow governance of the Eco currency.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bordaImpl()\":{\"notice\":\"The on-chain address for the currency voting contract. This contract is cloned for each new currency vote.\"},\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"ERC1820 permissioning interface\"},\"clone()\":{\"notice\":\"Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract.\"},\"implementation()\":{\"notice\":\"Get the address of the proxy target contract.\"},\"initialize(address)\":{\"notice\":\"Initialize the contract (replaces constructor) See documentation for Policed for an explanation.\"},\"policy()\":{\"notice\":\"The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy.\"},\"policyCommand(address,bytes)\":{\"notice\":\"Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space.\"},\"setExpectedInterfaceSet(address)\":{\"notice\":\"Set the expected interface set\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/CurrencyTimer.sol\":\"CurrencyTimer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xc94f9b84096deaf9d2ba5681db62455e3f2d5f0a61341f68a6f576f32a6e60be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74465bbd80d2e8cfb900bf00c69940822d59bfee20d3a9725fbd74e26413319b\",\"dweb:/ipfs/QmYLEg43ZBYBsjx6qDiHK21P4YjVYLzQcUMhadrdqmA5ZL\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x1e34ab6382525e2c48a01d9edbcfeab024072e8fa80332d48fb7011ebdf59562\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d4c3a1cacb1b5ce5681edac3dc3034a9e6ea6b9e4ef338564ca70b9b6ea2fd7\",\"dweb:/ipfs/QmXwhPvgGK4envqERyjh5W7CtrH72geAE7fh1EFcVerviw\"]},\"project:/contracts/VDF/BigNumber.sol\":{\"keccak256\":\"0x34d951601236edb052216f0bc19d97ae87b0027c04cbcc03df5783b60efe925a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f32735389846ecd7f74b610365e5cfac957fee19b87638e4a8b1da2a11a9378c\",\"dweb:/ipfs/QmbUZzmMWsRP5pqRcGdqRKsnTWz9zHrygzaXFturbaFzog\"]},\"project:/contracts/VDF/IsPrime.sol\":{\"keccak256\":\"0x92b6298ae541b196d5262c703d8382b4faa006441435caa09a8a483256dd76d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b288dbaa70d20b1cb37b5c56e96d8e98a693285ea9ee38b53b20c04a246c59f8\",\"dweb:/ipfs/QmXZYBBrQNeL4tofwXvwumpSNQ5Fv6fwvjCavFxXuuKp81\"]},\"project:/contracts/VDF/VDFVerifier.sol\":{\"keccak256\":\"0xbf72a376305be00235eee04b66ac2d2f88f7a9fe2fa02f8b80318bef5fdd1de0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96dc0debb3e1760ca04ecb0457d6fef9de71ac58e005ed1dee88701a8f377581\",\"dweb:/ipfs/QmVtUphFUGreXdPxycbnWq8Qvd7jcuCbkmz8bz1GsDH2h4\"]},\"project:/contracts/clone/CloneFactory.sol\":{\"keccak256\":\"0xfe4d4a9e72693d4cc3cd16d1d84b4405ae7b61d8a2a932696ec44fdb29a7e2a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19534495f562093202e3d5a7284ff1f9ccccdcbebdbcd6009f4f5d5a87d0e274\",\"dweb:/ipfs/QmY2PTpJTxCZhGQtoMxY6w8kT5SqgXpZ2B7MNJkrEkMmaU\"]},\"project:/contracts/currency/ECO.sol\":{\"keccak256\":\"0x0b67dc11f4bfafd55a9f53f5d30ad34c2dcf440e9f2139183a4fa623fc8847a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915e8ce2d086c4b0c4ea5e5741d5d061ea0799fcce06b8247bff5cb9762bc4a9\",\"dweb:/ipfs/QmNxLrFAdVmNEmF6CHU4pZNn9JQ5ScjGehKbjdFdTTR9EU\"]},\"project:/contracts/currency/ECOx.sol\":{\"keccak256\":\"0x05239e594b73c24f40a57efdace61ff2ce5454a250493d99d53875ffabaaeeb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d1ed04c26c587ffc8dbe10feff1b3e4f8b4e7abc132d4eb63ed0f377609bb3b\",\"dweb:/ipfs/QmYqYWEKV1eypWQEM74ffS8TVn62b4rqZqYt65cvR9zXKD\"]},\"project:/contracts/currency/ERC20.sol\":{\"keccak256\":\"0x04f4fab4b58b24157c167f18845dd6f9662eb0b23046b2f16b72ae39751943da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8b998b10f4b7ff52f378b4b3472a62a3817f1d1137b8c1b77dee8f7fbfeb84f\",\"dweb:/ipfs/QmTBmFDAWPAztp9vSm4PxE65xdzNNb4unq3mbdGXjhqhzA\"]},\"project:/contracts/currency/IECO.sol\":{\"keccak256\":\"0x39421a11c92c9919b75e41fd5bef469121615a9c78f499a1b94d60e6ea52e723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3956164c417c573f9b7aaef45c34c7a63bc4cc8ccaab96c9d4f0f671fe6375c1\",\"dweb:/ipfs/QmZoKZggRqTamBu9cpbT1oW2Cn3K9FQkQgLfoiQCS7fwgj\"]},\"project:/contracts/currency/InflationCheckpoints.sol\":{\"keccak256\":\"0xf8fe3d431088c349283763034cd3ade89c10e04025d233c9c9a63406e1a82a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2664cab77d37515c6eb3512c15131338e4b1667da98c6cbb8c522aceb2debf16\",\"dweb:/ipfs/QmPWrkmA2NCtQbr9oLiP7DtJpcw13JfZZ5qe5V6zamZzzw\"]},\"project:/contracts/currency/InflationRootHashProposal.sol\":{\"keccak256\":\"0x41bbb2a0328a937ce4bece7bbae128226e6e9d92f2e7148a00b2b80a62a0c6cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252280b652372a14a0b0ca2c1f202fcb4e44364f82aa9ef0359ae0f7d9af4db7\",\"dweb:/ipfs/QmatZn4DcjHdTvdUJUaV8SfYst3g7YJZ9D9N5ysG2zLn8Z\"]},\"project:/contracts/currency/VoteCheckpoints.sol\":{\"keccak256\":\"0x00299bd0dafb41177ab16b8de0c25dceb501cf00766b66d891fa7fde334cf545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffce57c05b306dceb3c3da29bc8501334b5ae90cd0daa7f3f8bfa5a0e909e032\",\"dweb:/ipfs/QmTquBdUymBZG9GnNe4R6obRtFiZwko4RXbn18yU6ciHit\"]},\"project:/contracts/governance/CurrencyGovernance.sol\":{\"keccak256\":\"0xf3f9fa62813b328dac9fb6a3093cf0a049a971a3a2faaa3ffffcb84abdee3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47149b9db0aa58d84f85411bef6282bd990120efa6755b40c335b4c322f9909d\",\"dweb:/ipfs/QmYqVPxWqDxxpX56i4Hi2YYhyLXwiKYt5zNnMByR5X9uyU\"]},\"project:/contracts/governance/CurrencyTimer.sol\":{\"keccak256\":\"0x2916f5a33e3f1a34dd7def2626a5f59b74ced7fe4cf4ac71612bf5662064378c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51aa30923e8dcb02d8fbd0aca32ad262861564cc70917c1cd6116ffa307b9fa1\",\"dweb:/ipfs/QmWziQkpGEzVRByVDfHBzjg3bhy9xd6xf5q7U9FHkaaRLK\"]},\"project:/contracts/governance/ECOxLockup.sol\":{\"keccak256\":\"0xcbbc8b3a923afeb6c414869123c1010783022e1fe27f480e882e1f835b60aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f40e18c91bc3f1b37980f11541eb981d2860af2c8adde5fda3303c624a7a8a59\",\"dweb:/ipfs/QmWChpUrYk97GUpcjCmkf6xpiZvKudRCXNy5gCSu1vbknt\"]},\"project:/contracts/governance/IGeneration.sol\":{\"keccak256\":\"0x43adc6aca3058f0f21c0f4ad390158b9104327030109faf012955c6433cb4a62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://926098535fc6c8e8aaa6c85f7d67bd329262a6aae7f67c37577d908e4844e7d1\",\"dweb:/ipfs/QmbnE43jCzbgJ52kT3tDR7BAS9W1CH35A2adEkRctDxm3S\"]},\"project:/contracts/governance/IGenerationIncrease.sol\":{\"keccak256\":\"0x45ec21c86ff3ca31c5aef0bced8f01960e3c7292019938f1613916ff142e0a2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://793dfdb9f8eb72e9a391a176667b775fb300cfae5331b896c4458bf14f27ef20\",\"dweb:/ipfs/QmXuUoWw6eoTJfBUhtdGvuZqBcCHaPayRPP6vs9qnn2ff3\"]},\"project:/contracts/governance/ILockups.sol\":{\"keccak256\":\"0x05500a2bd766460d10f294ed5b533cbb269d8183351e4fa0080fa633cc37c428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bdb96d4380906693d2b041150203169527a03094523876b16b741da1edaeb1a\",\"dweb:/ipfs/QmXvkJNhcYSD7j1isisXeUReJsqrobNKw9MK2XExBXQQTd\"]},\"project:/contracts/governance/Inflation.sol\":{\"keccak256\":\"0x392a8bb76be0873ade520c01dcb37605ee06e543c153cff230d65437b3a8ebdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86e926890755439dec7f5a39c8cff198de362a027297da0e0beacb057e8daeb2\",\"dweb:/ipfs/QmVM1jGPD74aEdzcMmJacbQjexgoaZ747eBzhsXTCYAec4\"]},\"project:/contracts/governance/Lockup.sol\":{\"keccak256\":\"0xd26c83f0aee4b4db05264163df633bd31e698c3e30accc6c24ca47ef1717449e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://330b75fabc16445157763f9e0699add46ddca534b396931b1cd6a316edde64a6\",\"dweb:/ipfs/QmZaSxnvpmKEZQ6BoqNAr4WgdHzcMTCh8N8XBhVXu6s8Eo\"]},\"project:/contracts/governance/PolicyProposals.sol\":{\"keccak256\":\"0xb80a24d7b51539534b56780c33d5745786588e9ea7120d8f05076e9fd67701a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9062149cca82b70bfddf84e50be077aa3c444821d28c4e8dfdef2dc2dc2df2e6\",\"dweb:/ipfs/QmVxKjeDSkK1AxiMY2kxvZiVXULzmx2Dyj3vUGuARHojFV\"]},\"project:/contracts/governance/PolicyVotes.sol\":{\"keccak256\":\"0x28203ad203d2b19adfbd307d0880404b8b48435e3a40d13a8a8b2795a677beb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84172604ceb4b3f2afe6a0bbfcff662cdd114cd7ae22d8500020dab8bbfb8ad4\",\"dweb:/ipfs/QmRHqah9HHiiHsE23ydyZpCB76NEBMcFxFNKy35fjcVjvA\"]},\"project:/contracts/governance/Proposal.sol\":{\"keccak256\":\"0x54644b5204b10eb6f97290eef1fefb633f108c7facb3feb12b2d0a7847a95333\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04eb89925c361e4058a0d7ce181f7bd54f1b6fe06cf659307ace3c76de6ede23\",\"dweb:/ipfs/QmezPJo7PEZt4qrPeq8YC5aaFzfLa9aQNU4f3Kt77Ud6ZN\"]},\"project:/contracts/governance/TrustedNodes.sol\":{\"keccak256\":\"0x6d9e40412ed80217e3c0c798895ffa9ea3c8b05d49766003d68db3a54100b338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ae4bfdf5eccd451ae0190b3a39df0b2d48c50659a914c9605b6676810f33ade\",\"dweb:/ipfs/QmcneByJ6s5XWECKTdTz1pRaPF52WjpicKZiUj9YR6YccP\"]},\"project:/contracts/governance/VotingPower.sol\":{\"keccak256\":\"0x7bce6064a03d7c576e58bc7b67a3d191723d8b5f3fa0f6e9fc7430fb278f5db8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79e196e5efbca8e5d2161e2b1552e432c3b7b7b74d66bd9e00b1fe8478e1fc77\",\"dweb:/ipfs/QmXDZVQtBipAS1hzjLrzawJJkcCqRyNvSKaaNcW4uQkFkU\"]},\"project:/contracts/policy/ERC1820Client.sol\":{\"keccak256\":\"0x3a82b9d79edd1e418d3f166af46654217f207dd519a3b26673e7e01d85797649\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0818990811db9adffdee91aa1a3c28f2adcb318f7b4d04bcb82a857f0ae6a14b\",\"dweb:/ipfs/QmdcRjsdk3HCo7BXvAViCmFwrfSuxCMotXXcFDX1enTq9o\"]},\"project:/contracts/policy/Policed.sol\":{\"keccak256\":\"0xac0ccec0cafcf4d0e6dd2fcff84b4ab9c2eb70e449cc335c4131c7cda4305bea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d338c84e3286ee1d8c507221a9db515b0644c7a0d76364c9231e391691e1fa15\",\"dweb:/ipfs/QmbFwDftaHeNB1eHjKGxcjcTYMb23iVHAxR1Gi9AhsY8cw\"]},\"project:/contracts/policy/PolicedUtils.sol\":{\"keccak256\":\"0xcb4a275e06c9b8ae68ccf1c5b07e472d7441e5d50de84a0fb3e707cd66c59300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://437f054d74f49621530e7e02a440fd67681249f482f91126544d44ed135c2a83\",\"dweb:/ipfs/QmeKAoXxLhXtFx4UX9ohYF4YyfiUqRdsA6TYyj1dGPKMr8\"]},\"project:/contracts/policy/Policy.sol\":{\"keccak256\":\"0xe3e1d9e85b325b1b10cdddc805934f782c6afd48c31c842c4fdc31facf738e54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bd44653112a8399dafb826ac7dffe030019aba0a4125eaab36a8b0c49ca3b98\",\"dweb:/ipfs/Qmc78KixAw9VD9xd9RR1EFDxZoJ52pgNo8DDPNtJgF91Y6\"]},\"project:/contracts/proxy/ForwardTarget.sol\":{\"keccak256\":\"0xc2b17e83877e14d1f32faaca4010f65cf8515c009dbf0ee09e73912ef1e1a4c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f3713b39edb3d06fbda57f7bab8fbd36e286a327ad36f8651c5b1877386667\",\"dweb:/ipfs/QmdF4oaYgLjEcpRqbAjdHXEdQRzZWPk7LqgqHS5SBwN8t5\"]},\"project:/contracts/utils/StringPacker.sol\":{\"keccak256\":\"0x65a6869487c2ea25893715a3f26d5db0aa68a933894e2bfeaf8a6cfdee0df731\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ae1a06e1a4bddbb446d61f19ed25a6fe8a91f02ca05e0361b3b497af28c897a\",\"dweb:/ipfs/QmXqeBvyzr5QwLioWEiS2MXBZZe9hdszsDwn91gR3wpgHU\"]},\"project:/contracts/utils/TimeUtils.sol\":{\"keccak256\":\"0x774aeda81c9cb23eb02c5ec60bc1af8cb915627ae9fbc78862d3c4eadf560d1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d619e69a1e3063ccf6a38b44e8a8d1d4e86161668134dc414f3c7d75125d6cf7\",\"dweb:/ipfs/QmU2dS1MFr9Sgq9iD6mYkpTjuVV17Xq19aho5NGZcuZkAZ\"]}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b5060405162001e9338038062001e938339810160408190526200003491620001c3565b8580620000413062000119565b6001600160a01b03908116608052604051635df8122f60e01b81523060048201529082166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b158015620000a457600080fd5b505af1158015620000b9573d6000803e3d6000fd5b5050600180546001600160a01b03199081166001600160a01b039a8b1617909155600280548216988a16989098179097555050600380548616948716949094179093556004805490941691851691909117909255501660a0525062000257565b6001600160a01b0381166200013b60008051602062001e738339815191525490565b6001600160a01b03161415620001975760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e6700604482015260640160405180910390fd5b60008051602062001e7383398151915255565b6001600160a01b0381168114620001c057600080fd5b50565b60008060008060008060c08789031215620001dd57600080fd5b8651620001ea81620001aa565b6020880151909650620001fd81620001aa565b60408801519095506200021081620001aa565b60608801519094506200022381620001aa565b60808801519093506200023681620001aa565b60a08801519092506200024981620001aa565b809150509295509295509295565b60805160a051611bb7620002bc600039600081816101d201528181610cdc0152818161107e01526110fd015260008181610120015281816102ff015281816104a101528181610a7201528181610f410152818161148d01526115d60152611bb76000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638ddb428a116100a2578063a3ff3e7611610071578063a3ff3e761461025f578063b39572f014610288578063c4d66de81461029b578063d3565c4c146102ae578063fefa7d1c146102c157600080fd5b80638ddb428a146102075780638e6f4fb7146102105780639d6103e714610239578063a35b7c6a1461024c57600080fd5b806335bbc7fe116100e957806335bbc7fe1461019d57806339634e0c146101a55780635c60da1b146101b8578063705d5304146101cd5780638aae9c88146101f457600080fd5b80630505c8c91461011b57806309d7f23b1461015f57806309ed460714610174578063249cb3fa1461017c575b600080fd5b6101427f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61017261016d3660046118f3565b6102f4565b005b6101426103b2565b61018f61018a3660046119b7565b61049d565b604051908152602001610156565b6101726105a8565b6101726101b33660046119e7565b610f36565b600080516020611b6283398151915254610142565b6101427f000000000000000000000000000000000000000000000000000000000000000081565b600254610142906001600160a01b031681565b61018f60065481565b61014261021e366004611a0b565b6007602052600090815260409020546001600160a01b031681565b600454610142906001600160a01b031681565b600154610142906001600160a01b031681565b61014261026d366004611a0b565b6005602052600090815260409020546001600160a01b031681565b610172610296366004611a32565b610fe7565b6101726102a93660046119e7565b61112c565b600354610142906001600160a01b031681565b6102e46102cf3660046119e7565b60086020526000908152604090205460ff1681565b6040519015158152602001610156565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103885760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e8180156103a657816000f35b816000fd5b5050505050565b6000306103cb600080516020611b628339815191525490565b6001600160a01b0316146104305760405162461bcd60e51b815260206004820152602660248201527f54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20604482015265636c6f6e657360d01b606482015260840161037f565b600061043b3061140d565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561047f57600080fd5b505af1158015610493573d6000803e3d6000fd5b5092949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614806104ec57506000546001600160a01b038381169116145b61055e5760405162461bcd60e51b815260206004820152603c60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f74726163742063616e207365742074686520696e746572666163652e00000000606482015260840161037f565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b60065460006105d67fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b19611476565b6001600160a01b031663172195226040518163ffffffff1660e01b815260040160206040518083038186803b15801561060e57600080fd5b505afa158015610622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106469190611a74565b9050818114156106985760405162461bcd60e51b815260206004820152601c60248201527f47656e65726174696f6e20686173206e6f7420696e6372656173656400000000604482015260640161037f565b600681905560006106c87fe4ee44a5d338a8b2452cc9552ec014656668eaacb55683101b7e1c2b167e5225611476565b905060008080806001600160a01b038516156109ac576003856001600160a01b031663c040e6b86040518163ffffffff1660e01b815260040160206040518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190611a8d565b600481111561076257610762611aae565b60ff1610156107bf57846001600160a01b031663c062f5786040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107a657600080fd5b505af11580156107ba573d6000803e3d6000fd5b505050505b846001600160a01b031663c040e6b86040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f857600080fd5b505afa15801561080c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108309190611a8d565b600481111561084157610841611aae565b60ff16600314156108a057846001600160a01b0316631a43c3386040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561088757600080fd5b505af115801561089b573d6000803e3d6000fd5b505050505b6000856001600160a01b031663dfbf53ae6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108db57600080fd5b505afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190611ac4565b90506001600160a01b038116156109aa57604051633341b44560e01b81526001600160a01b038281166004830152871690633341b4459060240160c06040518083038186803b15801561096557600080fd5b505afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190611ae1565b5092985090965094509250505b505b600154604080516309ed460760e01b815290516000926001600160a01b0316916309ed460791600480830192602092919082900301818787803b1580156109f257600080fd5b505af1158015610a06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2a9190611ac4565b6040516343c8dfc160e11b81527fe4ee44a5d338a8b2452cc9552ec014656668eaacb55683101b7e1c2b167e522560048201526001600160a01b0380831660248301529192507f000000000000000000000000000000000000000000000000000000000000000090911690638791bf8290604401600060405180830381600087803b158015610ab857600080fd5b505af1158015610acc573d6000803e3d6000fd5b50506040516001600160a01b03841692507fc8eb0807f29c19b6e62a59d50366b51bb80db9e416bf2da72a9e2ba62ced5c539150600090a25060048054604080516309ed460760e01b815290516001600160a01b03909216926309ed46079282820192602092908290030181600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b819190611ac4565b6000888152600560205260409081902080546001600160a01b0319166001600160a01b0393909316928317905551630f592f0560e11b8152436004820152631eb25e0a90602401600060405180830381600087803b158015610be257600080fd5b505af1158015610bf6573d6000803e3d6000fd5b5050506000888152600560205260408082205490518a93506001600160a01b03909116917f0a3629586ef6a0798366c51fcd43da8ba2b23d884d78a61f1c69b48139c4e07c91a3600084118015610c4d5750600083115b15610e1957600254604080516309ed460760e01b815290516000926001600160a01b0316916309ed460791600480830192602092919082900301818787803b158015610c9857600080fd5b505af1158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd09190611ac4565b90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166340c10f1982610d0c8789611b34565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610d6a57600080fd5b505af1158015610d7e573d6000803e3d6000fd5b505060405163d7f5938f60e01b815260048101889052602481018790526001600160a01b038416925063d7f5938f9150604401600060405180830381600087803b158015610dcb57600080fd5b505af1158015610ddf573d6000803e3d6000fd5b50506040516001600160a01b03841692507fff48288c21e2e06ac506925900264a71dee49de84c7530e0b1a2d8770d967ddc9150600090a2505b600082118015610e295750600081115b15610f2d5760035460405163442dbdc360e01b815260048101849052602481018390526000916001600160a01b03169063442dbdc390604401602060405180830381600087803b158015610e7c57600080fd5b505af1158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190611ac4565b6040519091506001600160a01b038216907fd1d86750540c7c58007ae3b2e9f614bb14361dbe04299875ebca9adc014841cf90600090a2600087815260076020908152604080832080546001600160a01b039095166001600160a01b0319909516851790559282526008905220805460ff191660011790555b50505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fc55760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b606482015260840161037f565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526008602052604090205460ff166110525760405162461bcd60e51b8152602060048201526024808201527f4e6f7420617574686f72697a656420746f2063616c6c20746869732066756e636044820152633a34b7b760e11b606482015260840161037f565b80156110d757604051632770a7eb60e21b81526001600160a01b038481166004830152602482018490527f00000000000000000000000000000000000000000000000000000000000000001690639dc29fac906044015b600060405180830381600087803b1580156110c357600080fd5b505af1158015610f2d573d6000803e3d6000fd5b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f19906044016110a9565b6000611144600080516020611b628339815191525490565b6001600160a01b0316146111ab5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161037f565b6111b481611531565b806001600160a01b031663a35b7c6a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ed57600080fd5b505afa158015611201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112259190611ac4565b600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b0316638aae9c886040518163ffffffff1660e01b815260040160206040518083038186803b15801561128457600080fd5b505afa158015611298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bc9190611ac4565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b031663d3565c4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561131b57600080fd5b505afa15801561132f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113539190611ac4565b600360006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b0316639d6103e76040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ea9190611ac4565b600480546001600160a01b0319166001600160a01b039290921691909117905550565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b60405163555ddc6560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b1580156114f357600080fd5b505afa158015611507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152b9190611ac4565b92915050565b6000611549600080516020611b628339815191525490565b6001600160a01b0316146115b05760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161037f565b6115b981611648565b604051635df8122f60e01b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b15801561163457600080fd5b505af11580156103ab573d6000803e3d6000fd5b6000611660600080516020611b628339815191525490565b6001600160a01b0316146116c75760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161037f565b6116d0816116d3565b50565b60006116eb600080516020611b628339815191525490565b6001600160a01b0316146117525760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161037f565b6000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561178d57600080fd5b505afa1580156117a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c59190611ac4565b90506001600160a01b0381166118325760405162461bcd60e51b815260206004820152602c60248201527f696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e672060448201526b1d1bc81a5b5c1b195b595b9d60a21b606482015260840161037f565b61183b8161183f565b5050565b806001600160a01b031661185f600080516020611b628339815191525490565b6001600160a01b031614156118b65760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e6700604482015260640161037f565b600080516020611b6283398151915255565b6001600160a01b03811681146116d057600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561190657600080fd5b8235611911816118c8565b9150602083013567ffffffffffffffff8082111561192e57600080fd5b818501915085601f83011261194257600080fd5b813581811115611954576119546118dd565b604051601f8201601f19908116603f0116810190838211818310171561197c5761197c6118dd565b8160405282815288602084870101111561199557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156119ca57600080fd5b8235915060208301356119dc816118c8565b809150509250929050565b6000602082840312156119f957600080fd5b8135611a04816118c8565b9392505050565b600060208284031215611a1d57600080fd5b5035919050565b80151581146116d057600080fd5b600080600060608486031215611a4757600080fd5b8335611a52816118c8565b9250602084013591506040840135611a6981611a24565b809150509250925092565b600060208284031215611a8657600080fd5b5051919050565b600060208284031215611a9f57600080fd5b815160058110611a0457600080fd5b634e487b7160e01b600052602160045260246000fd5b600060208284031215611ad657600080fd5b8151611a04816118c8565b60008060008060008060c08789031215611afa57600080fd5b8651611b0581611a24565b6020880151604089015160608a015160808b015160a0909b0151939c929b509099909850965090945092505050565b6000816000190483118215151615611b5c57634e487b7160e01b600052601160045260246000fd5b50029056fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220faf8b11fcec92d70ffd99f4b4d161107d0d3e2d4600abd4efedff7f4e5432e0264736f6c63430008090033f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80638ddb428a116100a2578063a3ff3e7611610071578063a3ff3e761461025f578063b39572f014610288578063c4d66de81461029b578063d3565c4c146102ae578063fefa7d1c146102c157600080fd5b80638ddb428a146102075780638e6f4fb7146102105780639d6103e714610239578063a35b7c6a1461024c57600080fd5b806335bbc7fe116100e957806335bbc7fe1461019d57806339634e0c146101a55780635c60da1b146101b8578063705d5304146101cd5780638aae9c88146101f457600080fd5b80630505c8c91461011b57806309d7f23b1461015f57806309ed460714610174578063249cb3fa1461017c575b600080fd5b6101427f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61017261016d3660046118f3565b6102f4565b005b6101426103b2565b61018f61018a3660046119b7565b61049d565b604051908152602001610156565b6101726105a8565b6101726101b33660046119e7565b610f36565b600080516020611b6283398151915254610142565b6101427f000000000000000000000000000000000000000000000000000000000000000081565b600254610142906001600160a01b031681565b61018f60065481565b61014261021e366004611a0b565b6007602052600090815260409020546001600160a01b031681565b600454610142906001600160a01b031681565b600154610142906001600160a01b031681565b61014261026d366004611a0b565b6005602052600090815260409020546001600160a01b031681565b610172610296366004611a32565b610fe7565b6101726102a93660046119e7565b61112c565b600354610142906001600160a01b031681565b6102e46102cf3660046119e7565b60086020526000908152604090205460ff1681565b6040519015158152602001610156565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103885760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e8180156103a657816000f35b816000fd5b5050505050565b6000306103cb600080516020611b628339815191525490565b6001600160a01b0316146104305760405162461bcd60e51b815260206004820152602660248201527f54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20604482015265636c6f6e657360d01b606482015260840161037f565b600061043b3061140d565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561047f57600080fd5b505af1158015610493573d6000803e3d6000fd5b5092949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614806104ec57506000546001600160a01b038381169116145b61055e5760405162461bcd60e51b815260206004820152603c60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f74726163742063616e207365742074686520696e746572666163652e00000000606482015260840161037f565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b60065460006105d67fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b19611476565b6001600160a01b031663172195226040518163ffffffff1660e01b815260040160206040518083038186803b15801561060e57600080fd5b505afa158015610622573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106469190611a74565b9050818114156106985760405162461bcd60e51b815260206004820152601c60248201527f47656e65726174696f6e20686173206e6f7420696e6372656173656400000000604482015260640161037f565b600681905560006106c87fe4ee44a5d338a8b2452cc9552ec014656668eaacb55683101b7e1c2b167e5225611476565b905060008080806001600160a01b038516156109ac576003856001600160a01b031663c040e6b86040518163ffffffff1660e01b815260040160206040518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107519190611a8d565b600481111561076257610762611aae565b60ff1610156107bf57846001600160a01b031663c062f5786040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107a657600080fd5b505af11580156107ba573d6000803e3d6000fd5b505050505b846001600160a01b031663c040e6b86040518163ffffffff1660e01b815260040160206040518083038186803b1580156107f857600080fd5b505afa15801561080c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108309190611a8d565b600481111561084157610841611aae565b60ff16600314156108a057846001600160a01b0316631a43c3386040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561088757600080fd5b505af115801561089b573d6000803e3d6000fd5b505050505b6000856001600160a01b031663dfbf53ae6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108db57600080fd5b505afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109139190611ac4565b90506001600160a01b038116156109aa57604051633341b44560e01b81526001600160a01b038281166004830152871690633341b4459060240160c06040518083038186803b15801561096557600080fd5b505afa158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d9190611ae1565b5092985090965094509250505b505b600154604080516309ed460760e01b815290516000926001600160a01b0316916309ed460791600480830192602092919082900301818787803b1580156109f257600080fd5b505af1158015610a06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2a9190611ac4565b6040516343c8dfc160e11b81527fe4ee44a5d338a8b2452cc9552ec014656668eaacb55683101b7e1c2b167e522560048201526001600160a01b0380831660248301529192507f000000000000000000000000000000000000000000000000000000000000000090911690638791bf8290604401600060405180830381600087803b158015610ab857600080fd5b505af1158015610acc573d6000803e3d6000fd5b50506040516001600160a01b03841692507fc8eb0807f29c19b6e62a59d50366b51bb80db9e416bf2da72a9e2ba62ced5c539150600090a25060048054604080516309ed460760e01b815290516001600160a01b03909216926309ed46079282820192602092908290030181600087803b158015610b4957600080fd5b505af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b819190611ac4565b6000888152600560205260409081902080546001600160a01b0319166001600160a01b0393909316928317905551630f592f0560e11b8152436004820152631eb25e0a90602401600060405180830381600087803b158015610be257600080fd5b505af1158015610bf6573d6000803e3d6000fd5b5050506000888152600560205260408082205490518a93506001600160a01b03909116917f0a3629586ef6a0798366c51fcd43da8ba2b23d884d78a61f1c69b48139c4e07c91a3600084118015610c4d5750600083115b15610e1957600254604080516309ed460760e01b815290516000926001600160a01b0316916309ed460791600480830192602092919082900301818787803b158015610c9857600080fd5b505af1158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd09190611ac4565b90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166340c10f1982610d0c8789611b34565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b158015610d6a57600080fd5b505af1158015610d7e573d6000803e3d6000fd5b505060405163d7f5938f60e01b815260048101889052602481018790526001600160a01b038416925063d7f5938f9150604401600060405180830381600087803b158015610dcb57600080fd5b505af1158015610ddf573d6000803e3d6000fd5b50506040516001600160a01b03841692507fff48288c21e2e06ac506925900264a71dee49de84c7530e0b1a2d8770d967ddc9150600090a2505b600082118015610e295750600081115b15610f2d5760035460405163442dbdc360e01b815260048101849052602481018390526000916001600160a01b03169063442dbdc390604401602060405180830381600087803b158015610e7c57600080fd5b505af1158015610e90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb49190611ac4565b6040519091506001600160a01b038216907fd1d86750540c7c58007ae3b2e9f614bb14361dbe04299875ebca9adc014841cf90600090a2600087815260076020908152604080832080546001600160a01b039095166001600160a01b0319909516851790559282526008905220805460ff191660011790555b50505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fc55760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b606482015260840161037f565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526008602052604090205460ff166110525760405162461bcd60e51b8152602060048201526024808201527f4e6f7420617574686f72697a656420746f2063616c6c20746869732066756e636044820152633a34b7b760e11b606482015260840161037f565b80156110d757604051632770a7eb60e21b81526001600160a01b038481166004830152602482018490527f00000000000000000000000000000000000000000000000000000000000000001690639dc29fac906044015b600060405180830381600087803b1580156110c357600080fd5b505af1158015610f2d573d6000803e3d6000fd5b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f19906044016110a9565b6000611144600080516020611b628339815191525490565b6001600160a01b0316146111ab5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161037f565b6111b481611531565b806001600160a01b031663a35b7c6a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111ed57600080fd5b505afa158015611201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112259190611ac4565b600160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b0316638aae9c886040518163ffffffff1660e01b815260040160206040518083038186803b15801561128457600080fd5b505afa158015611298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112bc9190611ac4565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b031663d3565c4c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561131b57600080fd5b505afa15801561132f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113539190611ac4565b600360006101000a8154816001600160a01b0302191690836001600160a01b03160217905550806001600160a01b0316639d6103e76040518163ffffffff1660e01b815260040160206040518083038186803b1580156113b257600080fd5b505afa1580156113c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ea9190611ac4565b600480546001600160a01b0319166001600160a01b039290921691909117905550565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b60405163555ddc6560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b1580156114f357600080fd5b505afa158015611507573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152b9190611ac4565b92915050565b6000611549600080516020611b628339815191525490565b6001600160a01b0316146115b05760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161037f565b6115b981611648565b604051635df8122f60e01b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b15801561163457600080fd5b505af11580156103ab573d6000803e3d6000fd5b6000611660600080516020611b628339815191525490565b6001600160a01b0316146116c75760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161037f565b6116d0816116d3565b50565b60006116eb600080516020611b628339815191525490565b6001600160a01b0316146117525760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b606482015260840161037f565b6000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561178d57600080fd5b505afa1580156117a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c59190611ac4565b90506001600160a01b0381166118325760405162461bcd60e51b815260206004820152602c60248201527f696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e672060448201526b1d1bc81a5b5c1b195b595b9d60a21b606482015260840161037f565b61183b8161183f565b5050565b806001600160a01b031661185f600080516020611b628339815191525490565b6001600160a01b031614156118b65760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e6700604482015260640161037f565b600080516020611b6283398151915255565b6001600160a01b03811681146116d057600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561190657600080fd5b8235611911816118c8565b9150602083013567ffffffffffffffff8082111561192e57600080fd5b818501915085601f83011261194257600080fd5b813581811115611954576119546118dd565b604051601f8201601f19908116603f0116810190838211818310171561197c5761197c6118dd565b8160405282815288602084870101111561199557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156119ca57600080fd5b8235915060208301356119dc816118c8565b809150509250929050565b6000602082840312156119f957600080fd5b8135611a04816118c8565b9392505050565b600060208284031215611a1d57600080fd5b5035919050565b80151581146116d057600080fd5b600080600060608486031215611a4757600080fd5b8335611a52816118c8565b9250602084013591506040840135611a6981611a24565b809150509250925092565b600060208284031215611a8657600080fd5b5051919050565b600060208284031215611a9f57600080fd5b815160058110611a0457600080fd5b634e487b7160e01b600052602160045260246000fd5b600060208284031215611ad657600080fd5b8151611a04816118c8565b60008060008060008060c08789031215611afa57600080fd5b8651611b0581611a24565b6020880151604089015160608a015160808b015160a0909b0151939c929b509099909850965090945092505050565b6000816000190483118215151615611b5c57634e487b7160e01b600052601160045260246000fd5b50029056fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220faf8b11fcec92d70ffd99f4b4d161107d0d3e2d4600abd4efedff7f4e5432e0264736f6c63430008090033",
  "immutableReferences": {
    "7983": [
      {
        "length": 32,
        "start": 466
      },
      {
        "length": 32,
        "start": 3292
      },
      {
        "length": 32,
        "start": 4222
      },
      {
        "length": 32,
        "start": 4349
      }
    ],
    "12039": [
      {
        "length": 32,
        "start": 288
      },
      {
        "length": 32,
        "start": 767
      },
      {
        "length": 32,
        "start": 1185
      },
      {
        "length": 32,
        "start": 2674
      },
      {
        "length": 32,
        "start": 3905
      },
      {
        "length": 32,
        "start": 5261
      },
      {
        "length": 32,
        "start": 5590
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1923:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:86:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "131:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "140:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "143:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "133:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "133:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "133:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:66"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "116:3:66",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "121:1:66",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:66"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:11:66"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "125:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:19:66"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:31:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:42:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:50:66"
                  },
                  "nodeType": "YulIf",
                  "src": "77:70:66"
                }
              ]
            },
            "name": "validator_revert_contract_Policy",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "56:5:66",
                "type": ""
              }
            ],
            "src": "14:139:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "446:806:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "493:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "502:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "505:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "495:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "495:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "495:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "467:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "476:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "463:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "463:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "488:3:66",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "459:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "459:33:66"
                  },
                  "nodeType": "YulIf",
                  "src": "456:53:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "518:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "537:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "531:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "531:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "522:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "589:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "556:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:39:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:39:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "604:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "614:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "604:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "628:40:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "653:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "664:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "649:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "649:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "643:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "643:25:66"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "632:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "710:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "677:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "677:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "677:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "727:17:66",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "737:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "727:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "753:40:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "778:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "789:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "774:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "774:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "768:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:25:66"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "757:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "835:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "802:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "802:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "802:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "852:17:66",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "862:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "852:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "878:40:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "903:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "914:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "899:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "899:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "893:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "893:25:66"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "882:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "960:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "927:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "927:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "927:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "977:17:66",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "987:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "977:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1003:41:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1028:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1039:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1024:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1024:19:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1018:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:26:66"
                  },
                  "variables": [
                    {
                      "name": "value_4",
                      "nodeType": "YulTypedName",
                      "src": "1007:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_4",
                        "nodeType": "YulIdentifier",
                        "src": "1086:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "1053:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1053:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1103:17:66",
                  "value": {
                    "name": "value_4",
                    "nodeType": "YulIdentifier",
                    "src": "1113:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1103:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1129:41:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1154:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1165:3:66",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1150:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1150:19:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1144:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1144:26:66"
                  },
                  "variables": [
                    {
                      "name": "value_5",
                      "nodeType": "YulTypedName",
                      "src": "1133:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_5",
                        "nodeType": "YulIdentifier",
                        "src": "1212:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "1179:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1179:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1179:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1229:17:66",
                  "value": {
                    "name": "value_5",
                    "nodeType": "YulIdentifier",
                    "src": "1239:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1229:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Policy_$12499t_contract$_CurrencyGovernance_$7946t_contract$_Inflation_$9306t_contract$_Lockup_$9655t_contract$_InflationRootHashProposal_$5838t_contract$_ECO_$2497_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "372:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "383:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "395:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "403:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "411:6:66",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "419:6:66",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "427:6:66",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "435:6:66",
                "type": ""
              }
            ],
            "src": "158:1094:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1386:175:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1396:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1408:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1419:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1404:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1404:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1396:4:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1431:29:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1449:3:66",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1454:1:66",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1445:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1445:11:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1458:1:66",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1441:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1441:19:66"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1435:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1476:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1491:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1499:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1487:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1469:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1469:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1469:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1523:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1534:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1519:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1519:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1543:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1551:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1539:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1539:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1512:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1512:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1512:43:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1347:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1358:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1366:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1377:4:66",
                "type": ""
              }
            ],
            "src": "1257:304:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1740:181:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1757:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1768:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1750:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1750:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1791:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1802:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1787:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1787:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1807:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1780:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1780:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1780:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1830:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1841:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1826:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1826:18:66"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1846:33:66",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1819:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1819:61:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1819:61:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1889:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1901:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1912:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1897:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1897:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1889:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1717:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1731:4:66",
                "type": ""
              }
            ],
            "src": "1566:355:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_Policy(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_Policy_$12499t_contract$_CurrencyGovernance_$7946t_contract$_Inflation_$9306t_contract$_Lockup_$9655t_contract$_InflationRootHashProposal_$5838t_contract$_ECO_$2497_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_Policy(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_Policy(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_Policy(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_contract_Policy(value_3)\n        value3 := value_3\n        let value_4 := mload(add(headStart, 128))\n        validator_revert_contract_Policy(value_4)\n        value4 := value_4\n        let value_5 := mload(add(headStart, 160))\n        validator_revert_contract_Policy(value_5)\n        value5 := value_5\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12754:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "131:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "141:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "153:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "164:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "149:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "149:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "141:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "183:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "198:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "194:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "194:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "176:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "176:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Policy_$12499__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "100:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "111:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "122:4:66",
                "type": ""
              }
            ],
            "src": "14:242:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:109:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "393:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "402:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "405:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "395:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "395:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "395:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "329:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "340:5:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "347:42:66",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "336:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "336:54:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "326:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "326:65:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "319:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "319:73:66"
                  },
                  "nodeType": "YulIf",
                  "src": "316:93:66"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "295:5:66",
                "type": ""
              }
            ],
            "src": "261:154:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "452:95:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "469:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "476:3:66",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "481:10:66",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "472:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "472:20:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "462:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "462:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "462:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "509:1:66",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:4:66",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "502:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "502:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "502:15:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "533:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "536:4:66",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "526:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "526:15:66"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "420:127:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "648:960:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "694:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "703:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "706:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "696:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "696:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "696:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "669:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "678:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "665:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "690:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "661:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "658:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "719:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "745:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "732:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "732:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "723:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "789:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "764:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "764:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "804:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "814:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "804:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "828:46:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "859:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "870:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "842:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:32:66"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "832:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "883:28:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "893:18:66",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "887:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "938:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "947:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "950:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "940:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "940:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "940:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "926:6:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "934:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "923:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:14:66"
                  },
                  "nodeType": "YulIf",
                  "src": "920:34:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "963:32:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "977:9:66"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "988:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "973:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:22:66"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "967:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1043:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1052:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1055:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1045:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1045:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1045:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1022:2:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1026:4:66",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1018:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1018:13:66"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1033:7:66"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1014:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1014:27:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1007:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1007:35:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1004:55:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1068:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1091:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1078:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1078:16:66"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1072:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1117:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1119:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1119:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1119:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1109:2:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1113:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1106:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:10:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1103:36:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1148:17:66",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1162:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1158:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1158:7:66"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1152:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1174:23:66",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1194:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1188:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1188:9:66"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1178:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1206:71:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1228:6:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1252:2:66"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1256:4:66",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1248:3:66"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1248:13:66"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1263:2:66"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1244:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1244:22:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1268:2:66",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1240:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1240:31:66"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1273:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1236:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:40:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1224:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:53:66"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1210:10:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1336:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1338:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1338:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1338:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1295:10:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1307:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1292:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1292:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1315:10:66"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1327:6:66"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1312:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1312:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1289:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:46:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1286:72:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1374:2:66",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1378:10:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1367:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:22:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1367:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1405:6:66"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1413:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1398:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:18:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1398:18:66"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1462:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1471:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1474:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1464:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1464:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1464:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1439:2:66"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1443:2:66"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1435:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1435:11:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1448:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1431:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1431:20:66"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1453:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1428:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:33:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1425:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1504:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1512:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1500:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1500:15:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1521:2:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1525:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1517:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1517:11:66"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1530:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1487:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:46:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1487:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1557:6:66"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1565:2:66"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1553:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1553:15:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1570:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1549:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1549:24:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:1:66",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1542:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1542:35:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1542:35:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1586:16:66",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1596:6:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1586:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "606:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "617:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "629:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "637:6:66",
                "type": ""
              }
            ],
            "src": "552:1056:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1714:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1724:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1736:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1747:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1732:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1724:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1766:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1781:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1789:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1777:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1777:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1759:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1759:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1759:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1683:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1694:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1705:4:66",
                "type": ""
              }
            ],
            "src": "1613:226:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1931:228:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1977:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1986:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1989:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1979:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1979:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1979:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1952:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1961:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1948:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1948:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1973:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1944:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1944:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1941:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2002:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2025:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2012:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2012:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2002:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2044:45:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2074:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2085:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2070:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2070:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2057:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2057:32:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2048:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2123:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2098:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2098:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2138:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2148:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2138:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1889:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1900:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1912:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1920:6:66",
                "type": ""
              }
            ],
            "src": "1844:315:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2265:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2275:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2287:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2298:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2283:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2283:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2275:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2317:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2328:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2310:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2310:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2234:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2245:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2256:4:66",
                "type": ""
              }
            ],
            "src": "2164:177:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2416:177:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2462:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2471:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2474:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2464:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2464:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2464:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2437:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2446:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2433:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2433:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2458:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2429:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2429:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "2426:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2487:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2513:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2500:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2500:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2491:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2557:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2532:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2532:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2572:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2582:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2572:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2382:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2393:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2405:6:66",
                "type": ""
              }
            ],
            "src": "2346:247:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2711:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2721:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2733:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2744:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2729:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2729:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2721:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2763:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2778:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2786:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2774:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2774:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2756:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2756:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ECO_$2497__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2680:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2691:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2702:4:66",
                "type": ""
              }
            ],
            "src": "2598:238:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2960:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2970:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2982:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2993:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2978:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2978:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2970:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3012:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3027:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3035:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3023:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3023:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3005:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3005:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3005:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Inflation_$9306__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2929:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2940:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2951:4:66",
                "type": ""
              }
            ],
            "src": "2841:244:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3191:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3201:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3213:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3224:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3209:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3209:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3201:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3243:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3254:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3236:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3236:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3236:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3160:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3171:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3182:4:66",
                "type": ""
              }
            ],
            "src": "3090:177:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3342:110:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3388:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3397:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3400:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3390:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3390:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3390:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3363:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3372:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3359:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3359:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3384:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3355:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3355:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "3352:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3413:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3436:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3423:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3423:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3413:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3308:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3319:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3331:6:66",
                "type": ""
              }
            ],
            "src": "3272:180:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3573:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3583:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3595:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3606:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3591:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3591:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3583:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3625:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3640:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3648:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3636:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3636:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3618:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3618:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3618:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Lockup_$9655__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3542:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3553:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3564:4:66",
                "type": ""
              }
            ],
            "src": "3457:241:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3838:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3848:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3860:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3871:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3856:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3856:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3848:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3890:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3905:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3913:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3901:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3901:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3883:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3883:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3883:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_InflationRootHashProposal_$5838__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3807:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3818:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3829:4:66",
                "type": ""
              }
            ],
            "src": "3703:260:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4096:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4106:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4118:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4129:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4114:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4114:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4106:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4148:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4163:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4171:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4159:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4159:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4141:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4141:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4141:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_CurrencyGovernance_$7946__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4065:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4076:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4087:4:66",
                "type": ""
              }
            ],
            "src": "3968:253:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4268:76:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4322:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4331:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4334:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4324:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4324:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4324:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4291:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4312:5:66"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4305:6:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4305:13:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4298:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4298:21:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4288:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4288:32:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4281:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4281:40:66"
                  },
                  "nodeType": "YulIf",
                  "src": "4278:60:66"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4257:5:66",
                "type": ""
              }
            ],
            "src": "4226:118:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4450:349:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4496:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4505:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4508:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4498:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4498:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4498:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4471:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4480:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4467:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4467:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4492:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4463:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4463:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "4460:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4521:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4547:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4534:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4534:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4525:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4591:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4566:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4566:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4566:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4606:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4616:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4606:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4630:42:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4657:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4668:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4653:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4653:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4640:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4640:32:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4630:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4681:47:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4713:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4724:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4709:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4709:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4696:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4696:32:66"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4685:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4759:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4737:21:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4737:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4737:30:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4776:17:66",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4786:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4776:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4400:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4411:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4423:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4431:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4439:6:66",
                "type": ""
              }
            ],
            "src": "4349:450:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4899:92:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4909:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4921:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4932:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4917:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4917:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4909:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4951:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4976:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4969:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4969:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4962:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4962:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4944:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4944:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4944:41:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4868:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4879:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4890:4:66",
                "type": ""
              }
            ],
            "src": "4804:187:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5170:236:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5187:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5198:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5180:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5180:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5180:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5221:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5232:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5217:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5217:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5237:2:66",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5210:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5210:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5210:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5260:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5271:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5256:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5256:18:66"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5276:34:66",
                        "type": "",
                        "value": "Only the policy contract may cal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5249:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5249:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5249:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5331:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5342:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5327:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5327:18:66"
                      },
                      {
                        "hexValue": "6c2074686973206d6574686f642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5347:16:66",
                        "type": "",
                        "value": "l this method."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5320:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:44:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5320:44:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5373:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5385:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5396:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5381:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5381:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5373:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5147:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5161:4:66",
                "type": ""
              }
            ],
            "src": "4996:410:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5585:228:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5602:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5613:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5595:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5595:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5595:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5636:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5647:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5632:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5632:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5652:2:66",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5625:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5625:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5625:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5675:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5686:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5671:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5671:18:66"
                      },
                      {
                        "hexValue": "54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5691:34:66",
                        "type": "",
                        "value": "This method cannot be called on "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5664:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5664:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5664:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5746:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5757:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5742:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5742:18:66"
                      },
                      {
                        "hexValue": "636c6f6e6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5762:8:66",
                        "type": "",
                        "value": "clones"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5735:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5735:36:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5735:36:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5780:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5792:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5803:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5788:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5788:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5780:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a35c1fe0fe1ed6afe3c9bc1734c4f5109aadfc21beb8ed8e518da672f582600b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5562:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5576:4:66",
                "type": ""
              }
            ],
            "src": "5411:402:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5992:250:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6009:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6020:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6002:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6002:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6002:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6043:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6054:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6039:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6039:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6059:2:66",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6032:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6032:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6032:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6082:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6093:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6078:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6078:18:66"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6098:34:66",
                        "type": "",
                        "value": "Only the policy or interface con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6071:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6071:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6071:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6153:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6164:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6149:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6149:18:66"
                      },
                      {
                        "hexValue": "74726163742063616e207365742074686520696e746572666163652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6169:30:66",
                        "type": "",
                        "value": "tract can set the interface."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6142:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6142:58:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6142:58:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6209:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6221:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6232:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6217:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6217:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6209:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08d278b1488142cbb27880a3aec0587d5b0d682f7907703765895f131b608af0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5969:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5983:4:66",
                "type": ""
              }
            ],
            "src": "5818:424:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6439:79:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6456:3:66"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6461:22:66",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6449:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6449:35:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6449:35:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6493:19:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6504:3:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6509:2:66",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6500:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6500:12:66"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6493:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6423:3:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6431:3:66",
                "type": ""
              }
            ],
            "src": "6247:271:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6604:103:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6650:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6659:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6662:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6652:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6652:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6652:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6625:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6634:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6621:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6621:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6646:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6617:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6617:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "6614:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6675:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6691:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6685:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6685:16:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6675:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6570:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6581:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6593:6:66",
                "type": ""
              }
            ],
            "src": "6523:184:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6886:178:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6903:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6914:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6896:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6896:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6896:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6937:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6948:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6933:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6933:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6953:2:66",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6926:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6926:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6926:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6976:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6987:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6972:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6972:18:66"
                      },
                      {
                        "hexValue": "47656e65726174696f6e20686173206e6f7420696e63726561736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6992:30:66",
                        "type": "",
                        "value": "Generation has not increased"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6965:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6965:58:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6965:58:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7032:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7044:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7055:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7040:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7040:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7032:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_80178df5becde5dcb483d92a0e9685b12db003cd7d91902e613196fa8f331dc7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6863:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6877:4:66",
                "type": ""
              }
            ],
            "src": "6712:352:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7161:179:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7207:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7216:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7219:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7209:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7209:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7209:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7182:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7191:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7178:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7178:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7203:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7174:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7174:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "7171:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7232:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7251:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7245:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7245:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7236:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7294:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7303:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7306:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7296:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7296:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7296:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7283:5:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7290:1:66",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7280:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7280:12:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7273:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7273:20:66"
                  },
                  "nodeType": "YulIf",
                  "src": "7270:40:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7319:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7329:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7319:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Stages_$7355_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7127:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7138:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7150:6:66",
                "type": ""
              }
            ],
            "src": "7069:271:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7377:95:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7394:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7401:3:66",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7406:10:66",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7397:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7397:20:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7387:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7387:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7387:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7434:1:66",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7437:4:66",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7427:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7427:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7427:15:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7458:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7461:4:66",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7451:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7451:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7451:15:66"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "7345:127:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7558:170:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7604:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7613:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7616:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7606:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7606:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7606:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7579:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7588:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7575:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7575:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7600:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7571:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7571:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "7568:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7629:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7648:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7642:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7642:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7633:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7692:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7667:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7667:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7667:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7707:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7717:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7707:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7524:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7535:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7547:6:66",
                "type": ""
              }
            ],
            "src": "7477:251:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7896:390:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7943:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7952:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7955:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7945:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7945:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7945:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7917:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7926:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7913:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7913:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7938:3:66",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7909:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7909:33:66"
                  },
                  "nodeType": "YulIf",
                  "src": "7906:53:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7968:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7987:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7981:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7981:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7972:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8028:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "8006:21:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8006:28:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8006:28:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8043:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8053:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8043:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8067:35:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8087:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8098:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8083:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8083:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8077:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8077:25:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "8067:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8111:35:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8131:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8142:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8127:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8127:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8121:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8121:25:66"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "8111:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8155:35:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8175:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8186:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8171:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8171:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8165:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8165:25:66"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "8155:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8199:36:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8219:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8230:3:66",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8215:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8215:19:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8209:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8209:26:66"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "8199:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8244:36:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8264:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8275:3:66",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8260:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8260:19:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8254:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8254:26:66"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "8244:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_boolt_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7822:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7833:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7845:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7853:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7861:6:66",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7869:6:66",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7877:6:66",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "7885:6:66",
                "type": ""
              }
            ],
            "src": "7733:553:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8420:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8430:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8442:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8453:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8438:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8438:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8430:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8472:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8483:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8465:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8465:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8465:25:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8510:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8521:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8506:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8506:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8530:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8538:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8526:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8526:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8499:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8499:83:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8499:83:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8381:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8392:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8400:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8411:4:66",
                "type": ""
              }
            ],
            "src": "8291:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8645:213:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8712:111:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8733:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8740:3:66",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8745:10:66",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8736:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8736:20:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8726:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8726:31:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8726:31:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8777:1:66",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8780:4:66",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8770:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8770:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8770:15:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8805:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8808:4:66",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8798:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8798:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8798:15:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8676:1:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8669:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8669:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8662:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8662:17:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8684:1:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8695:1:66",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8691:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8691:6:66"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8699:1:66"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8687:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8687:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8681:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8681:21:66"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8658:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8658:45:66"
                  },
                  "nodeType": "YulIf",
                  "src": "8655:168:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8832:20:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8847:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8850:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8843:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8843:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8832:7:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8624:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8627:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8633:7:66",
                "type": ""
              }
            ],
            "src": "8593:265:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8992:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9002:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9014:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9025:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9010:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9010:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9002:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9044:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9059:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9067:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9055:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9055:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9037:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9037:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9037:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9131:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9142:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9127:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9127:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9147:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9120:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9120:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9120:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8953:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8964:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8972:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8983:4:66",
                "type": ""
              }
            ],
            "src": "8863:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9294:119:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9304:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9316:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9327:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9312:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9312:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9304:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9346:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9357:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9339:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9339:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9339:25:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9384:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9395:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9380:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9380:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9400:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9373:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9373:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9373:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9255:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9266:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9274:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9285:4:66",
                "type": ""
              }
            ],
            "src": "9165:248:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9592:226:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9609:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9620:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9602:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9602:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9602:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9643:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9654:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9639:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9639:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9659:2:66",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9632:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9632:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9632:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9682:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9693:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9678:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9678:18:66"
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f2063616c6c20746869732066756e63",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9698:34:66",
                        "type": "",
                        "value": "Not authorized to call this func"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9671:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9671:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9671:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9753:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9764:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9749:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9749:18:66"
                      },
                      {
                        "hexValue": "74696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9769:6:66",
                        "type": "",
                        "value": "tion"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9742:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9742:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9742:34:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9785:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9797:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9808:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9793:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9793:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9785:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_971b8e9d1c2ce10b87e29e5e867cf77e2f1d4b5d817589fb00f63e3f96c7d47c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9569:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9583:4:66",
                "type": ""
              }
            ],
            "src": "9418:400:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9997:230:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10014:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10025:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10007:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10007:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10007:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10048:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10059:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10044:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10044:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10064:2:66",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10037:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10037:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10037:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10087:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10098:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10083:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10083:18:66"
                      },
                      {
                        "hexValue": "43616e206f6e6c792062652063616c6c656420647572696e6720696e69746961",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10103:34:66",
                        "type": "",
                        "value": "Can only be called during initia"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10076:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10076:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10076:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10158:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10169:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10154:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10154:18:66"
                      },
                      {
                        "hexValue": "6c697a6174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10174:10:66",
                        "type": "",
                        "value": "lization"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10147:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10147:38:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10147:38:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10194:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10206:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10217:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10202:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10202:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10194:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9974:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9988:4:66",
                "type": ""
              }
            ],
            "src": "9823:404:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10340:170:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10386:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10395:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10398:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10388:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10388:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10388:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10361:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10370:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10357:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10357:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10382:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10353:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10353:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10350:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10411:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10430:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10424:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10424:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10415:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10474:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "10449:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10449:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10449:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10489:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10499:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10489:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_CurrencyGovernance_$7946_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10306:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10317:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10329:6:66",
                "type": ""
              }
            ],
            "src": "10232:278:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10614:170:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10660:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10669:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10672:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10662:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10662:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10662:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10635:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10644:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10631:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10631:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10656:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10627:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10627:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10624:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10685:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10704:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10698:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10698:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10689:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10748:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "10723:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10723:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10723:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10763:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10773:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10763:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Inflation_$9306_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10580:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10591:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10603:6:66",
                "type": ""
              }
            ],
            "src": "10515:269:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10885:170:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10931:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10940:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10943:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10933:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10933:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10933:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10906:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10915:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10902:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10902:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10927:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10898:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10898:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10895:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10956:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10975:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10969:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10969:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10960:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11019:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "10994:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10994:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10994:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11034:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11044:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11034:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Lockup_$9655_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10851:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10862:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10874:6:66",
                "type": ""
              }
            ],
            "src": "10789:266:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11175:170:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11221:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11230:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11233:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11223:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11223:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11223:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11196:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11205:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11192:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11192:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11217:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11188:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11188:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "11185:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11246:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11265:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11259:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11259:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11250:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11309:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "11284:24:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11284:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11284:31:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11324:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11334:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11324:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_InflationRootHashProposal_$5838_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11141:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11152:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11164:6:66",
                "type": ""
              }
            ],
            "src": "11060:285:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11479:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11489:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11501:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11512:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11497:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11497:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11489:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11531:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11546:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11554:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11542:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11542:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11524:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11524:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11524:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11618:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11629:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11614:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11614:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "11634:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11607:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11607:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11607:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11440:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11451:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11459:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11470:4:66",
                "type": ""
              }
            ],
            "src": "11350:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11781:198:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11791:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11803:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11814:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11799:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11799:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11791:4:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11826:52:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11836:42:66",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11830:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11894:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11909:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11917:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11905:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11905:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11887:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11887:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11887:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11941:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11952:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11937:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11937:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11961:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11969:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11957:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11957:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11930:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11930:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11930:43:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11742:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11753:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11761:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11772:4:66",
                "type": ""
              }
            ],
            "src": "11652:327:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12158:234:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12175:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12186:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12168:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12168:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12168:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12209:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12220:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12205:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12205:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12225:2:66",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12198:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12198:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12198:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12248:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12259:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12244:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12244:18:66"
                      },
                      {
                        "hexValue": "696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12264:34:66",
                        "type": "",
                        "value": "initialization failure: nothing "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12237:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12237:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12237:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12319:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12330:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12315:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12315:18:66"
                      },
                      {
                        "hexValue": "746f20696d706c656d656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12335:14:66",
                        "type": "",
                        "value": "to implement"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12308:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12308:42:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12308:42:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12359:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12371:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12382:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12367:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12367:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12359:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_358f0a69429e5f4475e97793c43ead4f9c0987f98e7591dc6c37d0e56b6bd527__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12135:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12149:4:66",
                "type": ""
              }
            ],
            "src": "11984:408:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12571:181:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12588:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12599:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12581:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12581:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12581:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12622:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12633:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12618:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12618:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12638:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12611:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12611:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12611:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12661:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12672:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12657:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12657:18:66"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12677:33:66",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12650:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12650:61:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12650:61:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12720:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12732:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12743:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12728:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12728:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12720:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12548:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12562:4:66",
                "type": ""
              }
            ],
            "src": "12397:355:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_Policy_$12499__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ECO_$2497__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_Inflation_$9306__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_Lockup_$9655__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_InflationRootHashProposal_$5838__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_CurrencyGovernance_$7946__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Only the policy contract may cal\")\n        mstore(add(headStart, 96), \"l this method.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a35c1fe0fe1ed6afe3c9bc1734c4f5109aadfc21beb8ed8e518da672f582600b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"This method cannot be called on \")\n        mstore(add(headStart, 96), \"clones\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_08d278b1488142cbb27880a3aec0587d5b0d682f7907703765895f131b608af0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Only the policy or interface con\")\n        mstore(add(headStart, 96), \"tract can set the interface.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_80178df5becde5dcb483d92a0e9685b12db003cd7d91902e613196fa8f331dc7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Generation has not increased\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_enum$_Stages_$7355_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 5)) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_boolt_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_971b8e9d1c2ce10b87e29e5e867cf77e2f1d4b5d817589fb00f63e3f96c7d47c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Not authorized to call this func\")\n        mstore(add(headStart, 96), \"tion\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Can only be called during initia\")\n        mstore(add(headStart, 96), \"lization\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_contract$_CurrencyGovernance_$7946_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_Inflation_$9306_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_Lockup_$9655_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_InflationRootHashProposal_$5838_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_358f0a69429e5f4475e97793c43ead4f9c0987f98e7591dc6c37d0e56b6bd527__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"initialization failure: nothing \")\n        mstore(add(headStart, 96), \"to implement\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "568:4939:23:-:0;;;1710:435;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1938:7;;670:32:44;696:4;670:17;:32::i;:::-;-1:-1:-1;;;;;1046:16:39;;;;;2402:59:40::1;::::0;-1:-1:-1;;;2402:59:40;;2437:4:::1;2402:59;::::0;::::1;1469:34:66::0;1539:15;;;1519:18;;;1512:43;303:42:38::1;::::0;2402:26:40::1;::::0;1404:18:66;;2402:59:40::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1957:9:23::1;:18:::0;;-1:-1:-1;;;;;;1957:18:23;;::::1;-1:-1:-1::0;;;;;1957:18:23;;::::1;;::::0;;;1985:13:::1;:26:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;2021:10:23::1;:20:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;2051:29:::1;:58:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;2119:19:23::1;;::::0;-1:-1:-1;568:4939:23;;1823:213:44;-1:-1:-1;;;;;1892:25:44;;:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;1892:16;-1:-1:-1;;;;;1892:25:44;;;1884:69;;;;-1:-1:-1;;;1884:69:44;;1768:2:66;1884:69:44;;;1750:21:66;1807:2;1787:18;;;1780:30;1846:33;1826:18;;;1819:61;1897:18;;1884:69:44;;;;;;;;-1:-1:-1;;;;;;;;;;;1986:34:44;1823:213::o;14:139:66:-;-1:-1:-1;;;;;97:31:66;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:1094::-;395:6;403;411;419;427;435;488:3;476:9;467:7;463:23;459:33;456:53;;;505:1;502;495:12;456:53;537:9;531:16;556:39;589:5;556:39;:::i;:::-;664:2;649:18;;643:25;614:5;;-1:-1:-1;677:41:66;643:25;677:41;:::i;:::-;789:2;774:18;;768:25;737:7;;-1:-1:-1;802:41:66;768:25;802:41;:::i;:::-;914:2;899:18;;893:25;862:7;;-1:-1:-1;927:41:66;893:25;927:41;:::i;:::-;1039:3;1024:19;;1018:26;987:7;;-1:-1:-1;1053:41:66;1018:26;1053:41;:::i;:::-;1165:3;1150:19;;1144:26;1113:7;;-1:-1:-1;1179:41:66;1144:26;1179:41;:::i;:::-;1239:7;1229:17;;;158:1094;;;;;;;;:::o;1566:355::-;568:4939:23;;;;;;;;;;;;;;",
  "deployedSourceMap": "568:4939:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:30:39;;;;;;;;-1:-1:-1;;;;;194:55:66;;;176:74;;164:2;149:18;720:30:39;;;;;;;;2733:1279;;;;;;:::i;:::-;;:::i;:::-;;4316:317:40;;;:::i;2604:360::-;;;;;;:::i;:::-;;:::i;:::-;;;2310:25:66;;;2298:2;2283:18;2604:360:40;2164:177:66;2631:2514:23;;;:::i;3569:111:40:-;;;;;;:::i;:::-;;:::i;1629:146:44:-;-1:-1:-1;;;;;;;;;;;1733:26:44;1629:146;;984:29:23;;;;;816:30;;;;;-1:-1:-1;;;;;816:30:23;;;1167:32;;;;;;1206:50;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1206:50:23;;;883:62;;;;;-1:-1:-1;;;;;883:62:23;;;774:35;;;;;-1:-1:-1;;;;;774:35:23;;;1020:89;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1020:89:23;;;5151:354;;;;;;:::i;:::-;;:::i;2151:474::-;;;;;;:::i;:::-;;:::i;852:24::-;;;;;-1:-1:-1;;;;;852:24:23;;;1262:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4969:14:66;;4962:22;4944:41;;4932:2;4917:18;1262:40:23;4804:187:66;2733:1279:39;883:10;-1:-1:-1;;;;;905:6:39;883:29;;862:122;;;;-1:-1:-1;;;862:122:39;;5198:2:66;862:122:39;;;5180:21:66;5237:2;5217:18;;;5210:30;5276:34;5256:18;;;5249:62;-1:-1:-1;;;5327:18:66;;;5320:44;5381:19;;862:122:39;;;;;;;;;3433:1:::1;3414::::0;3390:5:::1;3384:12;3361:4;3354:5;3350:16;3323:9;3300:5;3270:178;3625:16;3677:4;3674:1;3669:3:::0;3654:28:::1;3851:6:::0;3870:56;;::::1;;3977:4;3972:3;3965:17;3870:56;3907:4;3902:3;3895:17;3844:152;;;;2733:1279:::0;;:::o;4316:317:40:-;4357:7;4425:4;4397:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;4397:16:40;-1:-1:-1;;;;;4397:33:40;;4376:118;;;;-1:-1:-1;;;4376:118:40;;5613:2:66;4376:118:40;;;5595:21:66;5652:2;5632:18;;;5625:30;5691:34;5671:18;;;5664:62;-1:-1:-1;;;5742:18:66;;;5735:36;5788:19;;4376:118:40;5411:402:66;4376:118:40;4504:14;4521:26;4541:4;4521:11;:26::i;:::-;4557:46;;-1:-1:-1;;;4557:46:40;;4597:4;4557:46;;;176:74:66;4504:43:40;;-1:-1:-1;;;;;;4557:31:40;;;;;149:18:66;;4557:46:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4620:6:40;;4316:317;-1:-1:-1;;;;4316:317:40:o;2604:360::-;2733:7;2794:6;-1:-1:-1;;;;;2777:24:40;:5;-1:-1:-1;;;;;2777:24:40;;:57;;;-1:-1:-1;2814:20:40;;-1:-1:-1;;;;;2805:29:40;;;2814:20;;2805:29;2777:57;2756:164;;;;-1:-1:-1;;;2756:164:40;;6020:2:66;2756:164:40;;;6002:21:66;6059:2;6039:18;;;6032:30;6098:34;6078:18;;;6071:62;6169:30;6149:18;;;6142:58;6217:19;;2756:164:40;5818:424:66;2756:164:40;428:40:39;;6461:22:66;428:40:39;;;6449:35:66;6500:12;;428:40:39;;;;;;;;;;;;418:51;;;;;;2930:27:40;;2604:360;;;;:::o;2631:2514:23:-;2710:17;;2695:12;2764:28;972:66:40;2764:9:23;:28::i;:::-;-1:-1:-1;;;;;2752:52:23;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2737:69;;2832:4;2824;:12;;2816:53;;;;-1:-1:-1;;;2816:53:23;;6914:2:66;2816:53:23;;;6896:21:66;6953:2;6933:18;;;6926:30;6992;6972:18;;;6965:58;7040:18;;2816:53:23;6712:352:66;2816:53:23;2880:17;:24;;;2915:21;2971:33;1773:66:40;2971:9:23;:33::i;:::-;2915:99;-1:-1:-1;3025:27:23;;;;-1:-1:-1;;;;;3189:25:23;;;3185:555;;3254:1;3240:2;-1:-1:-1;;;;;3240:8:23;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3234:17;;;;;;;;:::i;:::-;:21;;;3230:76;;;3275:2;-1:-1:-1;;;;;3275:14:23;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3230:76;3329:2;-1:-1:-1;;;;;3329:8:23;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3323:17;;;;;;;;:::i;:::-;:22;;3344:1;3323:22;3319:73;;;3365:2;-1:-1:-1;;;;;3365:10:23;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3319:73;3405:14;3422:2;-1:-1:-1;;;;;3422:9:23;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3405:28;-1:-1:-1;;;;;;3451:20:23;;;3447:283;;3695:20;;-1:-1:-1;;;3695:20:23;;-1:-1:-1;;;;;194:55:66;;;3695:20:23;;;176:74:66;3695:12:23;;;;;149:18:66;;3695:20:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3491:224:23;;-1:-1:-1;3491:224:23;;-1:-1:-1;3491:224:23;-1:-1:-1;3491:224:23;-1:-1:-1;;3447:283:23;3216:524;3185:555;3811:9;;:17;;;-1:-1:-1;;;3811:17:23;;;;3764:25;;-1:-1:-1;;;;;3811:9:23;;:15;;:17;;;;;;;;;;;;;;3764:25;3811:9;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3843:57;;-1:-1:-1;;;3843:57:23;;1773:66:40;3843:57:23;;;8465:25:66;-1:-1:-1;;;;;8526:55:66;;;8506:18;;;8499:83;3764:65:23;;-1:-1:-1;3843:6:23;:16;;;;;;8438:18:66;;3843:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3919:29:23;;-1:-1:-1;;;;;3919:29:23;;;-1:-1:-1;3919:29:23;;-1:-1:-1;3919:29:23;;;-1:-1:-1;4160:29:23;;;:37;;;-1:-1:-1;;;4160:37:23;;;;-1:-1:-1;;;;;4160:29:23;;;;:35;;:37;;;;;;;;;;;;:29;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4084:34;;;;:28;:34;;;;;;;:123;;-1:-1:-1;;;;;;4084:123:23;-1:-1:-1;;;;;4084:123:23;;;;;;;;;4217:58;-1:-1:-1;;;4217:58:23;;4262:12;4217:58;;;2310:25:66;4217:44:23;;2283:18:66;;4217:58:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4333:34:23;;;;:28;:34;;;;;;;4291:104;;4381:4;;-1:-1:-1;;;;;;4333:34:23;;;;4291:104;;;4432:1;4410:19;:23;:53;;;;;4462:1;4437:22;:26;4410:53;4406:428;;;4546:13;;:21;;;-1:-1:-1;;;4546:21:23;;;;4517:16;;-1:-1:-1;;;;;4546:13:23;;:19;;:21;;;;;;;;;;;;;;4517:16;4546:13;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4517:51;-1:-1:-1;;;;;;4582:8:23;:13;;4517:51;4646:44;4668:22;4646:19;:44;:::i;:::-;4582:122;;;;;;;;;;-1:-1:-1;;;;;9055:55:66;;;4582:122:23;;;9037:74:66;9127:18;;;9120:34;9010:18;;4582:122:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4718:66:23;;-1:-1:-1;;;4718:66:23;;;;;9339:25:66;;;9380:18;;;9373:34;;;-1:-1:-1;;;;;4718:21:23;;;-1:-1:-1;4718:21:23;;-1:-1:-1;9312:18:66;;4718:66:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4803:20:23;;-1:-1:-1;;;;;4803:20:23;;;-1:-1:-1;4803:20:23;;-1:-1:-1;4803:20:23;;;4465:369;4406:428;4866:1;4848:15;:19;:42;;;;;4889:1;4871:15;:19;4848:42;4844:295;;;4946:10;;:50;;-1:-1:-1;;;4946:50:23;;;;;9339:25:66;;;9380:18;;;9373:34;;;4906:13:23;;-1:-1:-1;;;;;4946:10:23;;:16;;9312:18:66;;4946:50:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5029:17;;4906:104;;-1:-1:-1;;;;;;5029:17:23;;;;;;;;5060:13;;;;:7;:13;;;;;;;;:22;;-1:-1:-1;;;;;5060:22:23;;;-1:-1:-1;;;;;;5060:22:23;;;;;;;5096:25;;;:8;:25;;;:32;;-1:-1:-1;;5096:32:23;5060:22;5096:32;;;4844:295;2685:2460;;;;;;;2631:2514::o;3569:111:40:-;883:10:39;-1:-1:-1;;;;;905:6:39;883:29;;862:122;;;;-1:-1:-1;;;862:122:39;;5198:2:66;862:122:39;;;5180:21:66;5237:2;5217:18;;;5210:30;5276:34;5256:18;;;5249:62;-1:-1:-1;;;5327:18:66;;;5320:44;5381:19;;862:122:39;4996:410:66;862:122:39;3645:20:40::1;:28:::0;;-1:-1:-1;;;;;;3645:28:40::1;-1:-1:-1::0;;;;;3645:28:40;;;::::1;::::0;;;::::1;::::0;;3569:111::o;5151:354:23:-;5296:10;5287:20;;;;:8;:20;;;;;;;;5279:69;;;;-1:-1:-1;;;5279:69:23;;9620:2:66;5279:69:23;;;9602:21:66;9659:2;9639:18;;;9632:30;9698:34;9678:18;;;9671:62;-1:-1:-1;;;9749:18:66;;;9742:34;9793:19;;5279:69:23;9418:400:66;5279:69:23;5363:8;5359:140;;;5387:35;;-1:-1:-1;;;5387:35:23;;-1:-1:-1;;;;;9055:55:66;;;5387:35:23;;;9037:74:66;9127:18;;;9120:34;;;5387:8:23;:13;;;;9010:18:66;;5387:35:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5359:140;5453:35;;-1:-1:-1;;;5453:35:23;;-1:-1:-1;;;;;9055:55:66;;;5453:35:23;;;9037:74:66;9127:18;;;9120:34;;;5453:8:23;:13;;;;9010:18:66;;5453:35:23;8863:297:66;2151:474:23;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;10025:2:66;505:117:44;;;10007:21:66;10064:2;10044:18;;;10037:30;10103:34;10083:18;;;10076:62;-1:-1:-1;;;10154:18:66;;;10147:38;10202:19;;505:117:44;9823:404:66;505:117:44;2229:23:23::1;2246:5;2229:16;:23::i;:::-;2375:5;-1:-1:-1::0;;;;;2361:30:23::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2349:9;;:44;;;;;-1:-1:-1::0;;;;;2349:44:23::1;;;;;-1:-1:-1::0;;;;;2349:44:23::1;;;;;;2433:5;-1:-1:-1::0;;;;;2419:34:23::1;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2403:13;;:52;;;;;-1:-1:-1::0;;;;;2403:52:23::1;;;;;-1:-1:-1::0;;;;;2403:52:23::1;;;;;;2492:5;-1:-1:-1::0;;;;;2478:31:23::1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2465:10;;:46;;;;;-1:-1:-1::0;;;;;2465:46:23::1;;;;;-1:-1:-1::0;;;;;2465:46:23::1;;;;;;2567:5;-1:-1:-1::0;;;;;2553:63:23::1;;:65;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2521:29;:97:::0;;-1:-1:-1;;;;;;2521:97:23::1;-1:-1:-1::0;;;;;2521:97:23;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;2151:474:23:o;1352:577:8:-;1407:14;1433:19;1463:6;1455:15;;1433:37;;1522:4;1516:11;1587:66;1564:5;1540:127;1705:11;1698:4;1691:5;1687:16;1680:37;1788:66;1765:4;1758:5;1754:16;1730:138;1908:4;1901:5;1898:1;1891:22;1881:32;1352:577;-1:-1:-1;;;;1352:577:8:o;5210:149:40:-;5291:61;;-1:-1:-1;;;5291:61:40;;-1:-1:-1;;;;;5339:6:40;9055:55:66;5291:61:40;;;9037:74:66;9127:18;;;9120:34;;;5265:7:40;;303:42:38;;5291:39:40;;9010:18:66;;5291:61:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5284:68;5210:149;-1:-1:-1;;5210:149:40:o;3296:220::-;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;10025:2:66;505:117:44;;;10007:21:66;10064:2;10044:18;;;10037:30;10103:34;10083:18;;;10076:62;-1:-1:-1;;;10154:18:66;;;10147:38;10202:19;;505:117:44;9823:404:66;505:117:44;3418:23:40::1;3435:5;3418:16;:23::i;:::-;3451:58;::::0;-1:-1:-1;;;3451:58:40;;3486:4:::1;3451:58;::::0;::::1;11887:34:66::0;-1:-1:-1;;;;;3501:6:40::1;11957:15:66::0;11937:18;;;11930:43;303:42:38::1;::::0;3451:26:40::1;::::0;11799:18:66;;3451:58:40::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;2021:152:39::0;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;10025:2:66;505:117:44;;;10007:21:66;10064:2;10044:18;;;10037:30;10103:34;10083:18;;;10076:62;-1:-1:-1;;;10154:18:66;;;10147:38;10202:19;;505:117:44;9823:404:66;505:117:44;2143:23:39::1;2160:5;2143:16;:23::i;:::-;2021:152:::0;:::o;1240:321:44:-;554:1;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;10025:2:66;505:117:44;;;10007:21:66;10064:2;10044:18;;;10037:30;10103:34;10083:18;;;10076:62;-1:-1:-1;;;10154:18:66;;;10147:38;10202:19;;505:117:44;9823:404:66;505:117:44;1317:20:::1;1362:5;-1:-1:-1::0;;;;;1348:35:44::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1317:69:::0;-1:-1:-1;;;;;;1417:26:44;::::1;1396:117;;;::::0;-1:-1:-1;;;1396:117:44;;12186:2:66;1396:117:44::1;::::0;::::1;12168:21:66::0;12225:2;12205:18;;;12198:30;12264:34;12244:18;;;12237:62;-1:-1:-1;;;12315:18:66;;;12308:42;12367:19;;1396:117:44::1;11984:408:66::0;1396:117:44::1;1523:31;1541:12;1523:17;:31::i;:::-;1307:254;1240:321:::0;:::o;1823:213::-;1912:5;-1:-1:-1;;;;;1892:25:44;:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;1892:16;-1:-1:-1;;;;;1892:25:44;;;1884:69;;;;-1:-1:-1;;;1884:69:44;;12599:2:66;1884:69:44;;;12581:21:66;12638:2;12618:18;;;12611:30;12677:33;12657:18;;;12650:61;12728:18;;1884:69:44;12397:355:66;1884:69:44;-1:-1:-1;;;;;;;;;;;1986:34:44;1823:213::o;261:154:66:-;-1:-1:-1;;;;;340:5:66;336:54;329:5;326:65;316:93;;405:1;402;395:12;420:127;481:10;476:3;472:20;469:1;462:31;512:4;509:1;502:15;536:4;533:1;526:15;552:1056;629:6;637;690:2;678:9;669:7;665:23;661:32;658:52;;;706:1;703;696:12;658:52;745:9;732:23;764:31;789:5;764:31;:::i;:::-;814:5;-1:-1:-1;870:2:66;855:18;;842:32;893:18;923:14;;;920:34;;;950:1;947;940:12;920:34;988:6;977:9;973:22;963:32;;1033:7;1026:4;1022:2;1018:13;1014:27;1004:55;;1055:1;1052;1045:12;1004:55;1091:2;1078:16;1113:2;1109;1106:10;1103:36;;;1119:18;;:::i;:::-;1194:2;1188:9;1162:2;1248:13;;-1:-1:-1;;1244:22:66;;;1268:2;1240:31;1236:40;1224:53;;;1292:18;;;1312:22;;;1289:46;1286:72;;;1338:18;;:::i;:::-;1378:10;1374:2;1367:22;1413:2;1405:6;1398:18;1453:7;1448:2;1443;1439;1435:11;1431:20;1428:33;1425:53;;;1474:1;1471;1464:12;1425:53;1530:2;1525;1521;1517:11;1512:2;1504:6;1500:15;1487:46;1575:1;1570:2;1565;1557:6;1553:15;1549:24;1542:35;1596:6;1586:16;;;;;;;552:1056;;;;;:::o;1844:315::-;1912:6;1920;1973:2;1961:9;1952:7;1948:23;1944:32;1941:52;;;1989:1;1986;1979:12;1941:52;2025:9;2012:23;2002:33;;2085:2;2074:9;2070:18;2057:32;2098:31;2123:5;2098:31;:::i;:::-;2148:5;2138:15;;;1844:315;;;;;:::o;2346:247::-;2405:6;2458:2;2446:9;2437:7;2433:23;2429:32;2426:52;;;2474:1;2471;2464:12;2426:52;2513:9;2500:23;2532:31;2557:5;2532:31;:::i;:::-;2582:5;2346:247;-1:-1:-1;;;2346:247:66:o;3272:180::-;3331:6;3384:2;3372:9;3363:7;3359:23;3355:32;3352:52;;;3400:1;3397;3390:12;3352:52;-1:-1:-1;3423:23:66;;3272:180;-1:-1:-1;3272:180:66:o;4226:118::-;4312:5;4305:13;4298:21;4291:5;4288:32;4278:60;;4334:1;4331;4324:12;4349:450;4423:6;4431;4439;4492:2;4480:9;4471:7;4467:23;4463:32;4460:52;;;4508:1;4505;4498:12;4460:52;4547:9;4534:23;4566:31;4591:5;4566:31;:::i;:::-;4616:5;-1:-1:-1;4668:2:66;4653:18;;4640:32;;-1:-1:-1;4724:2:66;4709:18;;4696:32;4737:30;4696:32;4737:30;:::i;:::-;4786:7;4776:17;;;4349:450;;;;;:::o;6523:184::-;6593:6;6646:2;6634:9;6625:7;6621:23;6617:32;6614:52;;;6662:1;6659;6652:12;6614:52;-1:-1:-1;6685:16:66;;6523:184;-1:-1:-1;6523:184:66:o;7069:271::-;7150:6;7203:2;7191:9;7182:7;7178:23;7174:32;7171:52;;;7219:1;7216;7209:12;7171:52;7251:9;7245:16;7290:1;7283:5;7280:12;7270:40;;7306:1;7303;7296:12;7345:127;7406:10;7401:3;7397:20;7394:1;7387:31;7437:4;7434:1;7427:15;7461:4;7458:1;7451:15;7477:251;7547:6;7600:2;7588:9;7579:7;7575:23;7571:32;7568:52;;;7616:1;7613;7606:12;7568:52;7648:9;7642:16;7667:31;7692:5;7667:31;:::i;7733:553::-;7845:6;7853;7861;7869;7877;7885;7938:3;7926:9;7917:7;7913:23;7909:33;7906:53;;;7955:1;7952;7945:12;7906:53;7987:9;7981:16;8006:28;8028:5;8006:28;:::i;:::-;8098:2;8083:18;;8077:25;8142:2;8127:18;;8121:25;8186:2;8171:18;;8165:25;8230:3;8215:19;;8209:26;8275:3;8260:19;;;8254:26;8053:5;;8077:25;;-1:-1:-1;8121:25:66;;8165;;-1:-1:-1;8209:26:66;-1:-1:-1;8254:26:66;;-1:-1:-1;7733:553:66;-1:-1:-1;;;7733:553:66:o;8593:265::-;8633:7;8699:1;8695;8691:6;8687:14;8684:1;8681:21;8676:1;8669:9;8662:17;8658:45;8655:168;;;8745:10;8740:3;8736:20;8733:1;8726:31;8780:4;8777:1;8770:15;8808:4;8805:1;8798:15;8655:168;-1:-1:-1;8843:9:66;;8593:265::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../policy/PolicedUtils.sol\";\nimport \"../policy/Policy.sol\";\nimport \"./PolicyProposals.sol\";\nimport \"./CurrencyGovernance.sol\";\nimport \"../currency/InflationRootHashProposal.sol\";\nimport \"../utils/TimeUtils.sol\";\nimport \"./IGenerationIncrease.sol\";\nimport \"./IGeneration.sol\";\nimport \"./Lockup.sol\";\nimport \"./Inflation.sol\";\nimport \"./ILockups.sol\";\nimport \"../currency/ECO.sol\";\n\n/** @title TimedPolicies\n * Oversees the time-based recurring processes that allow governance of the\n * Eco currency.\n */\ncontract CurrencyTimer is PolicedUtils, IGenerationIncrease, ILockups {\n    /** The on-chain address for the currency voting contract. This contract is\n     * cloned for each new currency vote.\n     */\n    CurrencyGovernance public bordaImpl;\n\n    Inflation public inflationImpl;\n    Lockup public lockupImpl;\n\n    InflationRootHashProposal public inflationRootHashProposalImpl;\n\n    // the ECO contract address\n    ECO public immutable ecoToken;\n\n    mapping(uint256 => InflationRootHashProposal)\n        public rootHashAddressPerGeneration;\n\n    /* Current generation of the balance store. */\n    uint256 public currentGeneration;\n\n    mapping(uint256 => Lockup) public override lockups;\n    mapping(address => bool) public isLockup;\n\n    event NewInflation(Inflation indexed addr);\n    event NewLockup(Lockup indexed addr);\n    event NewCurrencyGovernance(CurrencyGovernance indexed addr);\n\n    /* Event to be emitted when InflationRootHashProposal contract spawned.\n     */\n    event NewInflationRootHashProposal(\n        InflationRootHashProposal indexed inflationRootHashProposalContract,\n        uint256 indexed generation\n    );\n\n    constructor(\n        Policy _policy,\n        CurrencyGovernance _borda,\n        Inflation _inflation,\n        Lockup _lockup,\n        InflationRootHashProposal _inflationRootHashProposal,\n        ECO _ecoAddr\n    ) PolicedUtils(_policy) {\n        bordaImpl = _borda;\n        inflationImpl = _inflation;\n        lockupImpl = _lockup;\n        inflationRootHashProposalImpl = _inflationRootHashProposal;\n        ecoToken = _ecoAddr;\n    }\n\n    function initialize(address _self) public override onlyConstruction {\n        super.initialize(_self);\n\n        // all of these values are better left mutable to allow for easier governance\n        bordaImpl = CurrencyTimer(_self).bordaImpl();\n        inflationImpl = CurrencyTimer(_self).inflationImpl();\n        lockupImpl = CurrencyTimer(_self).lockupImpl();\n        inflationRootHashProposalImpl = CurrencyTimer(_self)\n            .inflationRootHashProposalImpl();\n    }\n\n    function notifyGenerationIncrease() external override {\n        uint256 _old = currentGeneration;\n        uint256 _new = IGeneration(policyFor(ID_TIMED_POLICIES)).generation();\n        require(_new != _old, \"Generation has not increased\");\n\n        currentGeneration = _new;\n\n        CurrencyGovernance bg = CurrencyGovernance(\n            policyFor(ID_CURRENCY_GOVERNANCE)\n        );\n\n        uint256 _numberOfRecipients = 0;\n        uint256 _randomInflationReward = 0;\n        uint256 _lockupDuration = 0;\n        uint256 _lockupInterest = 0;\n\n        if (address(bg) != address(0)) {\n            if (uint8(bg.stage()) < 3) {\n                bg.updateStage();\n            }\n            if (uint8(bg.stage()) == 3) {\n                bg.compute();\n            }\n            address winner = bg.winner();\n            if (winner != address(0)) {\n                (\n                    ,\n                    _numberOfRecipients,\n                    _randomInflationReward,\n                    _lockupDuration,\n                    _lockupInterest,\n\n                ) = bg.proposals(winner);\n            }\n        }\n\n        {\n            CurrencyGovernance _clone = CurrencyGovernance(bordaImpl.clone());\n            policy.setPolicy(ID_CURRENCY_GOVERNANCE, address(_clone));\n            emit NewCurrencyGovernance(_clone);\n        }\n\n        // new root hash\n        // better tests could allow this to only need to be done in the next if statement\n        rootHashAddressPerGeneration[_old] = InflationRootHashProposal(\n            inflationRootHashProposalImpl.clone()\n        );\n        rootHashAddressPerGeneration[_old].configure(block.number);\n\n        emit NewInflationRootHashProposal(\n            rootHashAddressPerGeneration[_old],\n            _old\n        );\n\n        if (_numberOfRecipients > 0 && _randomInflationReward > 0) {\n            // new inflation contract\n            Inflation _clone = Inflation(inflationImpl.clone());\n            ecoToken.mint(\n                address(_clone),\n                _numberOfRecipients * _randomInflationReward\n            );\n            _clone.startInflation(_numberOfRecipients, _randomInflationReward);\n            emit NewInflation(_clone);\n        }\n\n        if (_lockupDuration > 0 && _lockupInterest > 0) {\n            Lockup lockup = Lockup(\n                lockupImpl.clone(_lockupDuration, _lockupInterest)\n            );\n            emit NewLockup(lockup);\n            lockups[_new] = lockup;\n            isLockup[address(lockup)] = true;\n        }\n    }\n\n    function lockupWithdrawal(\n        address _withdrawer,\n        uint256 _amount,\n        bool _penalty\n    ) external {\n        require(isLockup[msg.sender], \"Not authorized to call this function\");\n\n        if (_penalty) {\n            ecoToken.burn(_withdrawer, _amount);\n        } else {\n            ecoToken.mint(_withdrawer, _amount);\n        }\n    }\n}\n",
  "sourcePath": "/Users/dirksmac/dev/eco/currency/contracts/governance/CurrencyTimer.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/CurrencyTimer.sol",
    "exportedSymbols": {
      "BigNumber": [
        1416
      ],
      "CloneFactory": [
        2207
      ],
      "CurrencyGovernance": [
        7946
      ],
      "CurrencyTimer": [
        8401
      ],
      "ECO": [
        2497
      ],
      "ECOx": [
        3238
      ],
      "ECOxLockup": [
        8688
      ],
      "ERC1820Client": [
        12017
      ],
      "ERC20": [
        3785
      ],
      "ForwardTarget": [
        12742
      ],
      "IECO": [
        3826
      ],
      "IERC1820Implementer": [
        218
      ],
      "IERC1820Registry": [
        308
      ],
      "IERC20": [
        182
      ],
      "IGeneration": [
        8696
      ],
      "IGenerationIncrease": [
        8702
      ],
      "ILockups": [
        8714
      ],
      "Inflation": [
        9306
      ],
      "InflationRootHashProposal": [
        5838
      ],
      "IsPrime": [
        1601
      ],
      "Lockup": [
        9655
      ],
      "Policed": [
        12119
      ],
      "PolicedUtils": [
        12321
      ],
      "Policy": [
        12499
      ],
      "PolicyProposals": [
        10420
      ],
      "PolicyVotes": [
        10915
      ],
      "Proposal": [
        10943
      ],
      "StringPacker": [
        14748
      ],
      "TimeUtils": [
        14762
      ],
      "TrustedNodes": [
        11725
      ],
      "VDFVerifier": [
        2188
      ],
      "VoteCheckpoints": [
        6922
      ],
      "VotingPower": [
        11959
      ]
    },
    "id": 8402,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7948,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:23"
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 7949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 12322,
        "src": "57:36:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 7950,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 12500,
        "src": "94:30:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/PolicyProposals.sol",
        "file": "./PolicyProposals.sol",
        "id": 7951,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 10421,
        "src": "125:31:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/CurrencyGovernance.sol",
        "file": "./CurrencyGovernance.sol",
        "id": 7952,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 7947,
        "src": "157:34:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/InflationRootHashProposal.sol",
        "file": "../currency/InflationRootHashProposal.sol",
        "id": 7953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 5839,
        "src": "192:51:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 7954,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 14763,
        "src": "244:32:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/IGenerationIncrease.sol",
        "file": "./IGenerationIncrease.sol",
        "id": 7955,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 8703,
        "src": "277:35:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/IGeneration.sol",
        "file": "./IGeneration.sol",
        "id": 7956,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 8697,
        "src": "313:27:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Lockup.sol",
        "file": "./Lockup.sol",
        "id": 7957,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 9656,
        "src": "341:22:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Inflation.sol",
        "file": "./Inflation.sol",
        "id": 7958,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 9307,
        "src": "364:25:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/ILockups.sol",
        "file": "./ILockups.sol",
        "id": 7959,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 8715,
        "src": "390:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/ECO.sol",
        "file": "../currency/ECO.sol",
        "id": 7960,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 2498,
        "src": "415:29:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7962,
              "name": "PolicedUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12321,
              "src": "594:12:23"
            },
            "id": 7963,
            "nodeType": "InheritanceSpecifier",
            "src": "594:12:23"
          },
          {
            "baseName": {
              "id": 7964,
              "name": "IGenerationIncrease",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8702,
              "src": "608:19:23"
            },
            "id": 7965,
            "nodeType": "InheritanceSpecifier",
            "src": "608:19:23"
          },
          {
            "baseName": {
              "id": 7966,
              "name": "ILockups",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8714,
              "src": "629:8:23"
            },
            "id": 7967,
            "nodeType": "InheritanceSpecifier",
            "src": "629:8:23"
          }
        ],
        "canonicalName": "CurrencyTimer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7961,
          "nodeType": "StructuredDocumentation",
          "src": "446:121:23",
          "text": "@title TimedPolicies\n Oversees the time-based recurring processes that allow governance of the\n Eco currency."
        },
        "fullyImplemented": true,
        "id": 8401,
        "linearizedBaseContracts": [
          8401,
          8714,
          8702,
          12321,
          12017,
          2207,
          12119,
          218,
          12742
        ],
        "name": "CurrencyTimer",
        "nameLocation": "577:13:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 7968,
              "nodeType": "StructuredDocumentation",
              "src": "644:125:23",
              "text": "The on-chain address for the currency voting contract. This contract is\n cloned for each new currency vote."
            },
            "functionSelector": "a35b7c6a",
            "id": 7971,
            "mutability": "mutable",
            "name": "bordaImpl",
            "nameLocation": "800:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "774:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
              "typeString": "contract CurrencyGovernance"
            },
            "typeName": {
              "id": 7970,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7969,
                "name": "CurrencyGovernance",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7946,
                "src": "774:18:23"
              },
              "referencedDeclaration": 7946,
              "src": "774:18:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                "typeString": "contract CurrencyGovernance"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8aae9c88",
            "id": 7974,
            "mutability": "mutable",
            "name": "inflationImpl",
            "nameLocation": "833:13:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "816:30:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Inflation_$9306",
              "typeString": "contract Inflation"
            },
            "typeName": {
              "id": 7973,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7972,
                "name": "Inflation",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9306,
                "src": "816:9:23"
              },
              "referencedDeclaration": 9306,
              "src": "816:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Inflation_$9306",
                "typeString": "contract Inflation"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d3565c4c",
            "id": 7977,
            "mutability": "mutable",
            "name": "lockupImpl",
            "nameLocation": "866:10:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "852:24:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Lockup_$9655",
              "typeString": "contract Lockup"
            },
            "typeName": {
              "id": 7976,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7975,
                "name": "Lockup",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9655,
                "src": "852:6:23"
              },
              "referencedDeclaration": 9655,
              "src": "852:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockup_$9655",
                "typeString": "contract Lockup"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d6103e7",
            "id": 7980,
            "mutability": "mutable",
            "name": "inflationRootHashProposalImpl",
            "nameLocation": "916:29:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "883:62:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
              "typeString": "contract InflationRootHashProposal"
            },
            "typeName": {
              "id": 7979,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7978,
                "name": "InflationRootHashProposal",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5838,
                "src": "883:25:23"
              },
              "referencedDeclaration": 5838,
              "src": "883:25:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                "typeString": "contract InflationRootHashProposal"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "705d5304",
            "id": 7983,
            "mutability": "immutable",
            "name": "ecoToken",
            "nameLocation": "1005:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "984:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ECO_$2497",
              "typeString": "contract ECO"
            },
            "typeName": {
              "id": 7982,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7981,
                "name": "ECO",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2497,
                "src": "984:3:23"
              },
              "referencedDeclaration": 2497,
              "src": "984:3:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECO_$2497",
                "typeString": "contract ECO"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ff3e76",
            "id": 7988,
            "mutability": "mutable",
            "name": "rootHashAddressPerGeneration",
            "nameLocation": "1081:28:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "1020:89:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
              "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
            },
            "typeName": {
              "id": 7987,
              "keyType": {
                "id": 7984,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1028:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1020:45:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
                "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
              },
              "valueType": {
                "id": 7986,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7985,
                  "name": "InflationRootHashProposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5838,
                  "src": "1039:25:23"
                },
                "referencedDeclaration": 5838,
                "src": "1039:25:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                  "typeString": "contract InflationRootHashProposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ddb428a",
            "id": 7990,
            "mutability": "mutable",
            "name": "currentGeneration",
            "nameLocation": "1182:17:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "1167:32:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7989,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1167:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8713
            ],
            "constant": false,
            "functionSelector": "8e6f4fb7",
            "id": 7996,
            "mutability": "mutable",
            "name": "lockups",
            "nameLocation": "1249:7:23",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7995,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1240:8:23"
            },
            "scope": 8401,
            "src": "1206:50:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Lockup_$9655_$",
              "typeString": "mapping(uint256 => contract Lockup)"
            },
            "typeName": {
              "id": 7994,
              "keyType": {
                "id": 7991,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1214:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1206:26:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Lockup_$9655_$",
                "typeString": "mapping(uint256 => contract Lockup)"
              },
              "valueType": {
                "id": 7993,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7992,
                  "name": "Lockup",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9655,
                  "src": "1225:6:23"
                },
                "referencedDeclaration": 9655,
                "src": "1225:6:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Lockup_$9655",
                  "typeString": "contract Lockup"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fefa7d1c",
            "id": 8000,
            "mutability": "mutable",
            "name": "isLockup",
            "nameLocation": "1294:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "1262:40:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7999,
              "keyType": {
                "id": 7997,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1270:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1262:24:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7998,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1281:4:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8005,
            "name": "NewInflation",
            "nameLocation": "1315:12:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8003,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1346:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8005,
                  "src": "1328:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Inflation_$9306",
                    "typeString": "contract Inflation"
                  },
                  "typeName": {
                    "id": 8002,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8001,
                      "name": "Inflation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9306,
                      "src": "1328:9:23"
                    },
                    "referencedDeclaration": 9306,
                    "src": "1328:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Inflation_$9306",
                      "typeString": "contract Inflation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:24:23"
            },
            "src": "1309:43:23"
          },
          {
            "anonymous": false,
            "id": 8010,
            "name": "NewLockup",
            "nameLocation": "1363:9:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8008,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1388:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8010,
                  "src": "1373:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Lockup_$9655",
                    "typeString": "contract Lockup"
                  },
                  "typeName": {
                    "id": 8007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8006,
                      "name": "Lockup",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9655,
                      "src": "1373:6:23"
                    },
                    "referencedDeclaration": 9655,
                    "src": "1373:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Lockup_$9655",
                      "typeString": "contract Lockup"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:21:23"
            },
            "src": "1357:37:23"
          },
          {
            "anonymous": false,
            "id": 8015,
            "name": "NewCurrencyGovernance",
            "nameLocation": "1405:21:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8013,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1454:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8015,
                  "src": "1427:31:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                    "typeString": "contract CurrencyGovernance"
                  },
                  "typeName": {
                    "id": 8012,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8011,
                      "name": "CurrencyGovernance",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7946,
                      "src": "1427:18:23"
                    },
                    "referencedDeclaration": 7946,
                    "src": "1427:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:33:23"
            },
            "src": "1399:61:23"
          },
          {
            "anonymous": false,
            "id": 8022,
            "name": "NewInflationRootHashProposal",
            "nameLocation": "1556:28:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8018,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "inflationRootHashProposalContract",
                  "nameLocation": "1628:33:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8022,
                  "src": "1594:67:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                    "typeString": "contract InflationRootHashProposal"
                  },
                  "typeName": {
                    "id": 8017,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8016,
                      "name": "InflationRootHashProposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5838,
                      "src": "1594:25:23"
                    },
                    "referencedDeclaration": 5838,
                    "src": "1594:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "generation",
                  "nameLocation": "1687:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8022,
                  "src": "1671:26:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:119:23"
            },
            "src": "1550:154:23"
          },
          {
            "body": {
              "id": 8066,
              "nodeType": "Block",
              "src": "1947:198:23",
              "statements": [
                {
                  "expression": {
                    "id": 8048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8046,
                      "name": "bordaImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7971,
                      "src": "1957:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8047,
                      "name": "_borda",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8028,
                      "src": "1969:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      }
                    },
                    "src": "1957:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "id": 8049,
                  "nodeType": "ExpressionStatement",
                  "src": "1957:18:23"
                },
                {
                  "expression": {
                    "id": 8052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8050,
                      "name": "inflationImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7974,
                      "src": "1985:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Inflation_$9306",
                        "typeString": "contract Inflation"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8051,
                      "name": "_inflation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8031,
                      "src": "2001:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Inflation_$9306",
                        "typeString": "contract Inflation"
                      }
                    },
                    "src": "1985:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Inflation_$9306",
                      "typeString": "contract Inflation"
                    }
                  },
                  "id": 8053,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:26:23"
                },
                {
                  "expression": {
                    "id": 8056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8054,
                      "name": "lockupImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "2021:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Lockup_$9655",
                        "typeString": "contract Lockup"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8055,
                      "name": "_lockup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8034,
                      "src": "2034:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Lockup_$9655",
                        "typeString": "contract Lockup"
                      }
                    },
                    "src": "2021:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Lockup_$9655",
                      "typeString": "contract Lockup"
                    }
                  },
                  "id": 8057,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:20:23"
                },
                {
                  "expression": {
                    "id": 8060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8058,
                      "name": "inflationRootHashProposalImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7980,
                      "src": "2051:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8059,
                      "name": "_inflationRootHashProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8037,
                      "src": "2083:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "src": "2051:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "id": 8061,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:58:23"
                },
                {
                  "expression": {
                    "id": 8064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8062,
                      "name": "ecoToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7983,
                      "src": "2119:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ECO_$2497",
                        "typeString": "contract ECO"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8063,
                      "name": "_ecoAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8040,
                      "src": "2130:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ECO_$2497",
                        "typeString": "contract ECO"
                      }
                    },
                    "src": "2119:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  "id": 8065,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:19:23"
                }
              ]
            },
            "id": 8067,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8043,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8025,
                    "src": "1938:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  }
                ],
                "id": 8044,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8042,
                  "name": "PolicedUtils",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12321,
                  "src": "1925:12:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1925:21:23"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8025,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "1738:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1731:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Policy_$12499",
                    "typeString": "contract Policy"
                  },
                  "typeName": {
                    "id": 8024,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8023,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12499,
                      "src": "1731:6:23"
                    },
                    "referencedDeclaration": 12499,
                    "src": "1731:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8028,
                  "mutability": "mutable",
                  "name": "_borda",
                  "nameLocation": "1774:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1755:25:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                    "typeString": "contract CurrencyGovernance"
                  },
                  "typeName": {
                    "id": 8027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8026,
                      "name": "CurrencyGovernance",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7946,
                      "src": "1755:18:23"
                    },
                    "referencedDeclaration": 7946,
                    "src": "1755:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8031,
                  "mutability": "mutable",
                  "name": "_inflation",
                  "nameLocation": "1800:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1790:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Inflation_$9306",
                    "typeString": "contract Inflation"
                  },
                  "typeName": {
                    "id": 8030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8029,
                      "name": "Inflation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9306,
                      "src": "1790:9:23"
                    },
                    "referencedDeclaration": 9306,
                    "src": "1790:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Inflation_$9306",
                      "typeString": "contract Inflation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8034,
                  "mutability": "mutable",
                  "name": "_lockup",
                  "nameLocation": "1827:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1820:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Lockup_$9655",
                    "typeString": "contract Lockup"
                  },
                  "typeName": {
                    "id": 8033,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8032,
                      "name": "Lockup",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9655,
                      "src": "1820:6:23"
                    },
                    "referencedDeclaration": 9655,
                    "src": "1820:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Lockup_$9655",
                      "typeString": "contract Lockup"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8037,
                  "mutability": "mutable",
                  "name": "_inflationRootHashProposal",
                  "nameLocation": "1870:26:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1844:52:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                    "typeString": "contract InflationRootHashProposal"
                  },
                  "typeName": {
                    "id": 8036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8035,
                      "name": "InflationRootHashProposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5838,
                      "src": "1844:25:23"
                    },
                    "referencedDeclaration": 5838,
                    "src": "1844:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8040,
                  "mutability": "mutable",
                  "name": "_ecoAddr",
                  "nameLocation": "1910:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1906:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECO_$2497",
                    "typeString": "contract ECO"
                  },
                  "typeName": {
                    "id": 8039,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8038,
                      "name": "ECO",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2497,
                      "src": "1906:3:23"
                    },
                    "referencedDeclaration": 2497,
                    "src": "1906:3:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:203:23"
            },
            "returnParameters": {
              "id": 8045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1947:0:23"
            },
            "scope": 8401,
            "src": "1710:435:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12250
            ],
            "body": {
              "id": 8113,
              "nodeType": "Block",
              "src": "2219:406:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8078,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8069,
                        "src": "2246:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8075,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2229:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CurrencyTimer_$8401_$",
                          "typeString": "type(contract super CurrencyTimer)"
                        }
                      },
                      "id": 8077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12250,
                      "src": "2229:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8080,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:23:23"
                },
                {
                  "expression": {
                    "id": 8087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8081,
                      "name": "bordaImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7971,
                      "src": "2349:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8083,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "2375:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8082,
                            "name": "CurrencyTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8401,
                            "src": "2361:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CurrencyTimer_$8401_$",
                              "typeString": "type(contract CurrencyTimer)"
                            }
                          },
                          "id": 8084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2361:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyTimer_$8401",
                            "typeString": "contract CurrencyTimer"
                          }
                        },
                        "id": 8085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bordaImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7971,
                        "src": "2361:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_CurrencyGovernance_$7946_$",
                          "typeString": "function () view external returns (contract CurrencyGovernance)"
                        }
                      },
                      "id": 8086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2361:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      }
                    },
                    "src": "2349:44:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "id": 8088,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:44:23"
                },
                {
                  "expression": {
                    "id": 8095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8089,
                      "name": "inflationImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7974,
                      "src": "2403:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Inflation_$9306",
                        "typeString": "contract Inflation"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8091,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "2433:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8090,
                            "name": "CurrencyTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8401,
                            "src": "2419:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CurrencyTimer_$8401_$",
                              "typeString": "type(contract CurrencyTimer)"
                            }
                          },
                          "id": 8092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2419:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyTimer_$8401",
                            "typeString": "contract CurrencyTimer"
                          }
                        },
                        "id": 8093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inflationImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7974,
                        "src": "2419:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Inflation_$9306_$",
                          "typeString": "function () view external returns (contract Inflation)"
                        }
                      },
                      "id": 8094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2419:36:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Inflation_$9306",
                        "typeString": "contract Inflation"
                      }
                    },
                    "src": "2403:52:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Inflation_$9306",
                      "typeString": "contract Inflation"
                    }
                  },
                  "id": 8096,
                  "nodeType": "ExpressionStatement",
                  "src": "2403:52:23"
                },
                {
                  "expression": {
                    "id": 8103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8097,
                      "name": "lockupImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "2465:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Lockup_$9655",
                        "typeString": "contract Lockup"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8099,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "2492:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8098,
                            "name": "CurrencyTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8401,
                            "src": "2478:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CurrencyTimer_$8401_$",
                              "typeString": "type(contract CurrencyTimer)"
                            }
                          },
                          "id": 8100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2478:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyTimer_$8401",
                            "typeString": "contract CurrencyTimer"
                          }
                        },
                        "id": 8101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lockupImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7977,
                        "src": "2478:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Lockup_$9655_$",
                          "typeString": "function () view external returns (contract Lockup)"
                        }
                      },
                      "id": 8102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2478:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Lockup_$9655",
                        "typeString": "contract Lockup"
                      }
                    },
                    "src": "2465:46:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Lockup_$9655",
                      "typeString": "contract Lockup"
                    }
                  },
                  "id": 8104,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:46:23"
                },
                {
                  "expression": {
                    "id": 8111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8105,
                      "name": "inflationRootHashProposalImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7980,
                      "src": "2521:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8107,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "2567:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8106,
                            "name": "CurrencyTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8401,
                            "src": "2553:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CurrencyTimer_$8401_$",
                              "typeString": "type(contract CurrencyTimer)"
                            }
                          },
                          "id": 8108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2553:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyTimer_$8401",
                            "typeString": "contract CurrencyTimer"
                          }
                        },
                        "id": 8109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inflationRootHashProposalImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7980,
                        "src": "2553:63:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_InflationRootHashProposal_$5838_$",
                          "typeString": "function () view external returns (contract InflationRootHashProposal)"
                        }
                      },
                      "id": 8110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2553:65:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "src": "2521:97:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "id": 8112,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:97:23"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 8114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8073,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8072,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12672,
                  "src": "2202:16:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2202:16:23"
              }
            ],
            "name": "initialize",
            "nameLocation": "2160:10:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8071,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2193:8:23"
            },
            "parameters": {
              "id": 8070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8069,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "2179:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8114,
                  "src": "2171:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2170:15:23"
            },
            "returnParameters": {
              "id": 8074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2219:0:23"
            },
            "scope": 8401,
            "src": "2151:474:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8701
            ],
            "body": {
              "id": 8363,
              "nodeType": "Block",
              "src": "2685:2460:23",
              "statements": [
                {
                  "assignments": [
                    8119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8119,
                      "mutability": "mutable",
                      "name": "_old",
                      "nameLocation": "2703:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "2695:12:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8118,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2695:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8121,
                  "initialValue": {
                    "id": 8120,
                    "name": "currentGeneration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7990,
                    "src": "2710:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2695:32:23"
                },
                {
                  "assignments": [
                    8123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8123,
                      "mutability": "mutable",
                      "name": "_new",
                      "nameLocation": "2745:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "2737:12:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8122,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2737:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8131,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 8126,
                                "name": "ID_TIMED_POLICIES",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12144,
                                "src": "2774:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 8125,
                              "name": "policyFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12320,
                              "src": "2764:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                "typeString": "function (bytes32) view returns (address)"
                              }
                            },
                            "id": 8127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2764:28:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8124,
                          "name": "IGeneration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8696,
                          "src": "2752:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IGeneration_$8696_$",
                            "typeString": "type(contract IGeneration)"
                          }
                        },
                        "id": 8128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2752:41:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGeneration_$8696",
                          "typeString": "contract IGeneration"
                        }
                      },
                      "id": 8129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "generation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8695,
                      "src": "2752:52:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 8130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:54:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2737:69:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8133,
                          "name": "_new",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8123,
                          "src": "2824:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 8134,
                          "name": "_old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8119,
                          "src": "2832:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2824:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47656e65726174696f6e20686173206e6f7420696e63726561736564",
                        "id": 8136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2838:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80178df5becde5dcb483d92a0e9685b12db003cd7d91902e613196fa8f331dc7",
                          "typeString": "literal_string \"Generation has not increased\""
                        },
                        "value": "Generation has not increased"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80178df5becde5dcb483d92a0e9685b12db003cd7d91902e613196fa8f331dc7",
                          "typeString": "literal_string \"Generation has not increased\""
                        }
                      ],
                      "id": 8132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2816:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2816:53:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8138,
                  "nodeType": "ExpressionStatement",
                  "src": "2816:53:23"
                },
                {
                  "expression": {
                    "id": 8141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8139,
                      "name": "currentGeneration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7990,
                      "src": "2880:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8140,
                      "name": "_new",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8123,
                      "src": "2900:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2880:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8142,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:24:23"
                },
                {
                  "assignments": [
                    8145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8145,
                      "mutability": "mutable",
                      "name": "bg",
                      "nameLocation": "2934:2:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "2915:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      },
                      "typeName": {
                        "id": 8144,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8143,
                          "name": "CurrencyGovernance",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7946,
                          "src": "2915:18:23"
                        },
                        "referencedDeclaration": 7946,
                        "src": "2915:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                          "typeString": "contract CurrencyGovernance"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8151,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8148,
                            "name": "ID_CURRENCY_GOVERNANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12159,
                            "src": "2981:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 8147,
                          "name": "policyFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12320,
                          "src": "2971:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view returns (address)"
                          }
                        },
                        "id": 8149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2971:33:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8146,
                      "name": "CurrencyGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7946,
                      "src": "2939:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CurrencyGovernance_$7946_$",
                        "typeString": "type(contract CurrencyGovernance)"
                      }
                    },
                    "id": 8150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2939:75:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2915:99:23"
                },
                {
                  "assignments": [
                    8153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8153,
                      "mutability": "mutable",
                      "name": "_numberOfRecipients",
                      "nameLocation": "3033:19:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "3025:27:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3025:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8155,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3055:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3025:31:23"
                },
                {
                  "assignments": [
                    8157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8157,
                      "mutability": "mutable",
                      "name": "_randomInflationReward",
                      "nameLocation": "3074:22:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "3066:30:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8156,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3066:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8159,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3099:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3066:34:23"
                },
                {
                  "assignments": [
                    8161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8161,
                      "mutability": "mutable",
                      "name": "_lockupDuration",
                      "nameLocation": "3118:15:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "3110:23:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3110:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8163,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3136:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3110:27:23"
                },
                {
                  "assignments": [
                    8165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8165,
                      "mutability": "mutable",
                      "name": "_lockupInterest",
                      "nameLocation": "3155:15:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "3147:23:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3147:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8167,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3173:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3147:27:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 8170,
                          "name": "bg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8145,
                          "src": "3197:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                            "typeString": "contract CurrencyGovernance"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                            "typeString": "contract CurrencyGovernance"
                          }
                        ],
                        "id": 8169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3189:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3189:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3189:11:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3212:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3204:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3204:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3204:10:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3189:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8233,
                  "nodeType": "IfStatement",
                  "src": "3185:555:23",
                  "trueBody": {
                    "id": 8232,
                    "nodeType": "Block",
                    "src": "3216:524:23",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 8184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 8179,
                                    "name": "bg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8145,
                                    "src": "3240:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                      "typeString": "contract CurrencyGovernance"
                                    }
                                  },
                                  "id": 8180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7358,
                                  "src": "3240:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_Stages_$7355_$",
                                    "typeString": "function () view external returns (enum CurrencyGovernance.Stages)"
                                  }
                                },
                                "id": 8181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3240:10:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stages_$7355",
                                  "typeString": "enum CurrencyGovernance.Stages"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Stages_$7355",
                                  "typeString": "enum CurrencyGovernance.Stages"
                                }
                              ],
                              "id": 8178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3234:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 8177,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3234:5:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:17:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 8183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3254:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "3234:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8191,
                        "nodeType": "IfStatement",
                        "src": "3230:76:23",
                        "trueBody": {
                          "id": 8190,
                          "nodeType": "Block",
                          "src": "3257:49:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 8185,
                                    "name": "bg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8145,
                                    "src": "3275:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                      "typeString": "contract CurrencyGovernance"
                                    }
                                  },
                                  "id": 8187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "updateStage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7526,
                                  "src": "3275:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 8188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3275:16:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8189,
                              "nodeType": "ExpressionStatement",
                              "src": "3275:16:23"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 8199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 8194,
                                    "name": "bg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8145,
                                    "src": "3329:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                      "typeString": "contract CurrencyGovernance"
                                    }
                                  },
                                  "id": 8195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7358,
                                  "src": "3329:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_Stages_$7355_$",
                                    "typeString": "function () view external returns (enum CurrencyGovernance.Stages)"
                                  }
                                },
                                "id": 8196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3329:10:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stages_$7355",
                                  "typeString": "enum CurrencyGovernance.Stages"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Stages_$7355",
                                  "typeString": "enum CurrencyGovernance.Stages"
                                }
                              ],
                              "id": 8193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3323:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 8192,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3323:5:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3323:17:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 8198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3344:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "3323:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8206,
                        "nodeType": "IfStatement",
                        "src": "3319:73:23",
                        "trueBody": {
                          "id": 8205,
                          "nodeType": "Block",
                          "src": "3347:45:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 8200,
                                    "name": "bg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8145,
                                    "src": "3365:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                      "typeString": "contract CurrencyGovernance"
                                    }
                                  },
                                  "id": 8202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "compute",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7862,
                                  "src": "3365:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 8203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3365:12:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8204,
                              "nodeType": "ExpressionStatement",
                              "src": "3365:12:23"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          8208
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8208,
                            "mutability": "mutable",
                            "name": "winner",
                            "nameLocation": "3413:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 8232,
                            "src": "3405:14:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3405:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8212,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 8209,
                              "name": "bg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8145,
                              "src": "3422:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                "typeString": "contract CurrencyGovernance"
                              }
                            },
                            "id": 8210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7401,
                            "src": "3422:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 8211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3422:11:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3405:28:23"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8213,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8208,
                            "src": "3451:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 8216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3469:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 8215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3461:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8214,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3461:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3461:10:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3451:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8231,
                        "nodeType": "IfStatement",
                        "src": "3447:283:23",
                        "trueBody": {
                          "id": 8230,
                          "nodeType": "Block",
                          "src": "3473:257:23",
                          "statements": [
                            {
                              "expression": {
                                "id": 8228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    null,
                                    {
                                      "id": 8219,
                                      "name": "_numberOfRecipients",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8153,
                                      "src": "3535:19:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 8220,
                                      "name": "_randomInflationReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8157,
                                      "src": "3576:22:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 8221,
                                      "name": "_lockupDuration",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8161,
                                      "src": "3620:15:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 8222,
                                      "name": "_lockupInterest",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8165,
                                      "src": "3657:15:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    null
                                  ],
                                  "id": 8223,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "3491:201:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$__$",
                                    "typeString": "tuple(,uint256,uint256,uint256,uint256,)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 8226,
                                      "name": "winner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8208,
                                      "src": "3708:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 8224,
                                      "name": "bg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8145,
                                      "src": "3695:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                        "typeString": "contract CurrencyGovernance"
                                      }
                                    },
                                    "id": 8225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "proposals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7385,
                                    "src": "3695:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                      "typeString": "function (address) view external returns (bool,uint256,uint256,uint256,uint256,uint256)"
                                    }
                                  },
                                  "id": 8227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3695:20:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(bool,uint256,uint256,uint256,uint256,uint256)"
                                  }
                                },
                                "src": "3491:224:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8229,
                              "nodeType": "ExpressionStatement",
                              "src": "3491:224:23"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 8257,
                  "nodeType": "Block",
                  "src": "3750:209:23",
                  "statements": [
                    {
                      "assignments": [
                        8236
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 8236,
                          "mutability": "mutable",
                          "name": "_clone",
                          "nameLocation": "3783:6:23",
                          "nodeType": "VariableDeclaration",
                          "scope": 8257,
                          "src": "3764:25:23",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                            "typeString": "contract CurrencyGovernance"
                          },
                          "typeName": {
                            "id": 8235,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 8234,
                              "name": "CurrencyGovernance",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 7946,
                              "src": "3764:18:23"
                            },
                            "referencedDeclaration": 7946,
                            "src": "3764:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                              "typeString": "contract CurrencyGovernance"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 8242,
                      "initialValue": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 8238,
                                "name": "bordaImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7971,
                                "src": "3811:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                  "typeString": "contract CurrencyGovernance"
                                }
                              },
                              "id": 8239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "clone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12302,
                              "src": "3811:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                                "typeString": "function () external returns (address)"
                              }
                            },
                            "id": 8240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3811:17:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8237,
                          "name": "CurrencyGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "3792:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyGovernance_$7946_$",
                            "typeString": "type(contract CurrencyGovernance)"
                          }
                        },
                        "id": 8241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3792:37:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                          "typeString": "contract CurrencyGovernance"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3764:65:23"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 8246,
                            "name": "ID_CURRENCY_GOVERNANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12159,
                            "src": "3860:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 8249,
                                "name": "_clone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8236,
                                "src": "3892:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                  "typeString": "contract CurrencyGovernance"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                  "typeString": "contract CurrencyGovernance"
                                }
                              ],
                              "id": 8248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3884:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8247,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3884:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3884:15:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 8243,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12039,
                            "src": "3843:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Policy_$12499",
                              "typeString": "contract Policy"
                            }
                          },
                          "id": 8245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setPolicy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12457,
                          "src": "3843:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 8251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3843:57:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 8252,
                      "nodeType": "ExpressionStatement",
                      "src": "3843:57:23"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 8254,
                            "name": "_clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8236,
                            "src": "3941:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                              "typeString": "contract CurrencyGovernance"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                              "typeString": "contract CurrencyGovernance"
                            }
                          ],
                          "id": 8253,
                          "name": "NewCurrencyGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8015,
                          "src": "3919:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_contract$_CurrencyGovernance_$7946_$returns$__$",
                            "typeString": "function (contract CurrencyGovernance)"
                          }
                        },
                        "id": 8255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3919:29:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 8256,
                      "nodeType": "EmitStatement",
                      "src": "3914:34:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 8266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8258,
                        "name": "rootHashAddressPerGeneration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7988,
                        "src": "4084:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
                          "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
                        }
                      },
                      "id": 8260,
                      "indexExpression": {
                        "id": 8259,
                        "name": "_old",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8119,
                        "src": "4113:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4084:34:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 8262,
                              "name": "inflationRootHashProposalImpl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7980,
                              "src": "4160:29:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                                "typeString": "contract InflationRootHashProposal"
                              }
                            },
                            "id": 8263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "clone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12302,
                            "src": "4160:35:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () external returns (address)"
                            }
                          },
                          "id": 8264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4160:37:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8261,
                        "name": "InflationRootHashProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5838,
                        "src": "4121:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InflationRootHashProposal_$5838_$",
                          "typeString": "type(contract InflationRootHashProposal)"
                        }
                      },
                      "id": 8265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4121:86:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "src": "4084:123:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "id": 8267,
                  "nodeType": "ExpressionStatement",
                  "src": "4084:123:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8272,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4262:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "4262:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 8268,
                          "name": "rootHashAddressPerGeneration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7988,
                          "src": "4217:28:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
                            "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
                          }
                        },
                        "id": 8270,
                        "indexExpression": {
                          "id": 8269,
                          "name": "_old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8119,
                          "src": "4246:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4217:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                          "typeString": "contract InflationRootHashProposal"
                        }
                      },
                      "id": 8271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configure",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4520,
                      "src": "4217:44:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 8274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:58:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8275,
                  "nodeType": "ExpressionStatement",
                  "src": "4217:58:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 8277,
                          "name": "rootHashAddressPerGeneration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7988,
                          "src": "4333:28:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
                            "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
                          }
                        },
                        "id": 8279,
                        "indexExpression": {
                          "id": 8278,
                          "name": "_old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8119,
                          "src": "4362:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4333:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                          "typeString": "contract InflationRootHashProposal"
                        }
                      },
                      {
                        "id": 8280,
                        "name": "_old",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8119,
                        "src": "4381:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                          "typeString": "contract InflationRootHashProposal"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8276,
                      "name": "NewInflationRootHashProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8022,
                      "src": "4291:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_InflationRootHashProposal_$5838_$_t_uint256_$returns$__$",
                        "typeString": "function (contract InflationRootHashProposal,uint256)"
                      }
                    },
                    "id": 8281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4291:104:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8282,
                  "nodeType": "EmitStatement",
                  "src": "4286:109:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8283,
                        "name": "_numberOfRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8153,
                        "src": "4410:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4432:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4410:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8286,
                        "name": "_randomInflationReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8157,
                        "src": "4437:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4462:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4437:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4410:53:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8323,
                  "nodeType": "IfStatement",
                  "src": "4406:428:23",
                  "trueBody": {
                    "id": 8322,
                    "nodeType": "Block",
                    "src": "4465:369:23",
                    "statements": [
                      {
                        "assignments": [
                          8292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8292,
                            "mutability": "mutable",
                            "name": "_clone",
                            "nameLocation": "4527:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 8322,
                            "src": "4517:16:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Inflation_$9306",
                              "typeString": "contract Inflation"
                            },
                            "typeName": {
                              "id": 8291,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8290,
                                "name": "Inflation",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9306,
                                "src": "4517:9:23"
                              },
                              "referencedDeclaration": 9306,
                              "src": "4517:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Inflation_$9306",
                                "typeString": "contract Inflation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8298,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 8294,
                                  "name": "inflationImpl",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7974,
                                  "src": "4546:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Inflation_$9306",
                                    "typeString": "contract Inflation"
                                  }
                                },
                                "id": 8295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "clone",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12302,
                                "src": "4546:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                                  "typeString": "function () external returns (address)"
                                }
                              },
                              "id": 8296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4546:21:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8293,
                            "name": "Inflation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9306,
                            "src": "4536:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Inflation_$9306_$",
                              "typeString": "type(contract Inflation)"
                            }
                          },
                          "id": 8297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4536:32:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Inflation_$9306",
                            "typeString": "contract Inflation"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4517:51:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8304,
                                  "name": "_clone",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8292,
                                  "src": "4621:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Inflation_$9306",
                                    "typeString": "contract Inflation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Inflation_$9306",
                                    "typeString": "contract Inflation"
                                  }
                                ],
                                "id": 8303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4613:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8302,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4613:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4613:15:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8306,
                                "name": "_numberOfRecipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8153,
                                "src": "4646:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 8307,
                                "name": "_randomInflationReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8157,
                                "src": "4668:22:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4646:44:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8299,
                              "name": "ecoToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7983,
                              "src": "4582:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ECO_$2497",
                                "typeString": "contract ECO"
                              }
                            },
                            "id": 8301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2288,
                            "src": "4582:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4582:122:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8310,
                        "nodeType": "ExpressionStatement",
                        "src": "4582:122:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8314,
                              "name": "_numberOfRecipients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8153,
                              "src": "4740:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8315,
                              "name": "_randomInflationReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8157,
                              "src": "4761:22:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8311,
                              "name": "_clone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8292,
                              "src": "4718:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Inflation_$9306",
                                "typeString": "contract Inflation"
                              }
                            },
                            "id": 8313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startInflation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9095,
                            "src": "4718:21:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 8316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4718:66:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8317,
                        "nodeType": "ExpressionStatement",
                        "src": "4718:66:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 8319,
                              "name": "_clone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8292,
                              "src": "4816:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Inflation_$9306",
                                "typeString": "contract Inflation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Inflation_$9306",
                                "typeString": "contract Inflation"
                              }
                            ],
                            "id": 8318,
                            "name": "NewInflation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8005,
                            "src": "4803:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Inflation_$9306_$returns$__$",
                              "typeString": "function (contract Inflation)"
                            }
                          },
                          "id": 8320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4803:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8321,
                        "nodeType": "EmitStatement",
                        "src": "4798:25:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8324,
                        "name": "_lockupDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8161,
                        "src": "4848:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4866:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4848:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8327,
                        "name": "_lockupInterest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8165,
                        "src": "4871:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4889:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4871:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4848:42:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8362,
                  "nodeType": "IfStatement",
                  "src": "4844:295:23",
                  "trueBody": {
                    "id": 8361,
                    "nodeType": "Block",
                    "src": "4892:247:23",
                    "statements": [
                      {
                        "assignments": [
                          8333
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8333,
                            "mutability": "mutable",
                            "name": "lockup",
                            "nameLocation": "4913:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 8361,
                            "src": "4906:13:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lockup_$9655",
                              "typeString": "contract Lockup"
                            },
                            "typeName": {
                              "id": 8332,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8331,
                                "name": "Lockup",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9655,
                                "src": "4906:6:23"
                              },
                              "referencedDeclaration": 9655,
                              "src": "4906:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Lockup_$9655",
                                "typeString": "contract Lockup"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8341,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8337,
                                  "name": "_lockupDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8161,
                                  "src": "4963:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 8338,
                                  "name": "_lockupInterest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8165,
                                  "src": "4980:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 8335,
                                  "name": "lockupImpl",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7977,
                                  "src": "4946:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Lockup_$9655",
                                    "typeString": "contract Lockup"
                                  }
                                },
                                "id": 8336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "clone",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9452,
                                "src": "4946:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256,uint256) external returns (address)"
                                }
                              },
                              "id": 8339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4946:50:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8334,
                            "name": "Lockup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9655,
                            "src": "4922:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Lockup_$9655_$",
                              "typeString": "type(contract Lockup)"
                            }
                          },
                          "id": 8340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4922:88:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lockup_$9655",
                            "typeString": "contract Lockup"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4906:104:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 8343,
                              "name": "lockup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8333,
                              "src": "5039:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Lockup_$9655",
                                "typeString": "contract Lockup"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Lockup_$9655",
                                "typeString": "contract Lockup"
                              }
                            ],
                            "id": 8342,
                            "name": "NewLockup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8010,
                            "src": "5029:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Lockup_$9655_$returns$__$",
                              "typeString": "function (contract Lockup)"
                            }
                          },
                          "id": 8344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5029:17:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8345,
                        "nodeType": "EmitStatement",
                        "src": "5024:22:23"
                      },
                      {
                        "expression": {
                          "id": 8350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8346,
                              "name": "lockups",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7996,
                              "src": "5060:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Lockup_$9655_$",
                                "typeString": "mapping(uint256 => contract Lockup)"
                              }
                            },
                            "id": 8348,
                            "indexExpression": {
                              "id": 8347,
                              "name": "_new",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8123,
                              "src": "5068:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5060:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lockup_$9655",
                              "typeString": "contract Lockup"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 8349,
                            "name": "lockup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8333,
                            "src": "5076:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lockup_$9655",
                              "typeString": "contract Lockup"
                            }
                          },
                          "src": "5060:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lockup_$9655",
                            "typeString": "contract Lockup"
                          }
                        },
                        "id": 8351,
                        "nodeType": "ExpressionStatement",
                        "src": "5060:22:23"
                      },
                      {
                        "expression": {
                          "id": 8359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8352,
                              "name": "isLockup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8000,
                              "src": "5096:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 8357,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 8355,
                                  "name": "lockup",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8333,
                                  "src": "5113:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Lockup_$9655",
                                    "typeString": "contract Lockup"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Lockup_$9655",
                                    "typeString": "contract Lockup"
                                  }
                                ],
                                "id": 8354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5105:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8353,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5105:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5105:15:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5096:25:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 8358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5124:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5096:32:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8360,
                        "nodeType": "ExpressionStatement",
                        "src": "5096:32:23"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "35bbc7fe",
            "id": 8364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notifyGenerationIncrease",
            "nameLocation": "2640:24:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2676:8:23"
            },
            "parameters": {
              "id": 8115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:2:23"
            },
            "returnParameters": {
              "id": 8117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2685:0:23"
            },
            "scope": 8401,
            "src": "2631:2514:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8399,
              "nodeType": "Block",
              "src": "5269:236:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 8374,
                          "name": "isLockup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8000,
                          "src": "5287:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 8377,
                        "indexExpression": {
                          "expression": {
                            "id": 8375,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5296:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5296:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5287:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f2063616c6c20746869732066756e6374696f6e",
                        "id": 8378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5309:38:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_971b8e9d1c2ce10b87e29e5e867cf77e2f1d4b5d817589fb00f63e3f96c7d47c",
                          "typeString": "literal_string \"Not authorized to call this function\""
                        },
                        "value": "Not authorized to call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_971b8e9d1c2ce10b87e29e5e867cf77e2f1d4b5d817589fb00f63e3f96c7d47c",
                          "typeString": "literal_string \"Not authorized to call this function\""
                        }
                      ],
                      "id": 8373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5279:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:69:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8380,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:69:23"
                },
                {
                  "condition": {
                    "id": 8381,
                    "name": "_penalty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8370,
                    "src": "5363:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8397,
                    "nodeType": "Block",
                    "src": "5439:60:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8393,
                              "name": "_withdrawer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8366,
                              "src": "5467:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8394,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8368,
                              "src": "5480:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8390,
                              "name": "ecoToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7983,
                              "src": "5453:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ECO_$2497",
                                "typeString": "contract ECO"
                              }
                            },
                            "id": 8392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2288,
                            "src": "5453:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5453:35:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8396,
                        "nodeType": "ExpressionStatement",
                        "src": "5453:35:23"
                      }
                    ]
                  },
                  "id": 8398,
                  "nodeType": "IfStatement",
                  "src": "5359:140:23",
                  "trueBody": {
                    "id": 8389,
                    "nodeType": "Block",
                    "src": "5373:60:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8385,
                              "name": "_withdrawer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8366,
                              "src": "5401:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8386,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8368,
                              "src": "5414:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8382,
                              "name": "ecoToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7983,
                              "src": "5387:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ECO_$2497",
                                "typeString": "contract ECO"
                              }
                            },
                            "id": 8384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2316,
                            "src": "5387:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5387:35:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8388,
                        "nodeType": "ExpressionStatement",
                        "src": "5387:35:23"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b39572f0",
            "id": 8400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockupWithdrawal",
            "nameLocation": "5160:16:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8366,
                  "mutability": "mutable",
                  "name": "_withdrawer",
                  "nameLocation": "5194:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8400,
                  "src": "5186:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8368,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5223:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8400,
                  "src": "5215:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5215:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8370,
                  "mutability": "mutable",
                  "name": "_penalty",
                  "nameLocation": "5245:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8400,
                  "src": "5240:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5240:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5176:83:23"
            },
            "returnParameters": {
              "id": 8372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5269:0:23"
            },
            "scope": 8401,
            "src": "5151:354:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8402,
        "src": "568:4939:23",
        "usedErrors": []
      }
    ],
    "src": "32:5476:23"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/governance/CurrencyTimer.sol",
    "exportedSymbols": {
      "BigNumber": [
        1416
      ],
      "CloneFactory": [
        2207
      ],
      "CurrencyGovernance": [
        7946
      ],
      "CurrencyTimer": [
        8401
      ],
      "ECO": [
        2497
      ],
      "ECOx": [
        3238
      ],
      "ECOxLockup": [
        8688
      ],
      "ERC1820Client": [
        12017
      ],
      "ERC20": [
        3785
      ],
      "ForwardTarget": [
        12742
      ],
      "IECO": [
        3826
      ],
      "IERC1820Implementer": [
        218
      ],
      "IERC1820Registry": [
        308
      ],
      "IERC20": [
        182
      ],
      "IGeneration": [
        8696
      ],
      "IGenerationIncrease": [
        8702
      ],
      "ILockups": [
        8714
      ],
      "Inflation": [
        9306
      ],
      "InflationRootHashProposal": [
        5838
      ],
      "IsPrime": [
        1601
      ],
      "Lockup": [
        9655
      ],
      "Policed": [
        12119
      ],
      "PolicedUtils": [
        12321
      ],
      "Policy": [
        12499
      ],
      "PolicyProposals": [
        10420
      ],
      "PolicyVotes": [
        10915
      ],
      "Proposal": [
        10943
      ],
      "StringPacker": [
        14748
      ],
      "TimeUtils": [
        14762
      ],
      "TrustedNodes": [
        11725
      ],
      "VDFVerifier": [
        2188
      ],
      "VoteCheckpoints": [
        6922
      ],
      "VotingPower": [
        11959
      ]
    },
    "id": 8402,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7948,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:23"
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 7949,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 12322,
        "src": "57:36:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 7950,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 12500,
        "src": "94:30:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/PolicyProposals.sol",
        "file": "./PolicyProposals.sol",
        "id": 7951,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 10421,
        "src": "125:31:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/CurrencyGovernance.sol",
        "file": "./CurrencyGovernance.sol",
        "id": 7952,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 7947,
        "src": "157:34:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/InflationRootHashProposal.sol",
        "file": "../currency/InflationRootHashProposal.sol",
        "id": 7953,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 5839,
        "src": "192:51:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 7954,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 14763,
        "src": "244:32:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/IGenerationIncrease.sol",
        "file": "./IGenerationIncrease.sol",
        "id": 7955,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 8703,
        "src": "277:35:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/IGeneration.sol",
        "file": "./IGeneration.sol",
        "id": 7956,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 8697,
        "src": "313:27:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Lockup.sol",
        "file": "./Lockup.sol",
        "id": 7957,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 9656,
        "src": "341:22:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Inflation.sol",
        "file": "./Inflation.sol",
        "id": 7958,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 9307,
        "src": "364:25:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/ILockups.sol",
        "file": "./ILockups.sol",
        "id": 7959,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 8715,
        "src": "390:24:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/ECO.sol",
        "file": "../currency/ECO.sol",
        "id": 7960,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8402,
        "sourceUnit": 2498,
        "src": "415:29:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7962,
              "name": "PolicedUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12321,
              "src": "594:12:23"
            },
            "id": 7963,
            "nodeType": "InheritanceSpecifier",
            "src": "594:12:23"
          },
          {
            "baseName": {
              "id": 7964,
              "name": "IGenerationIncrease",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8702,
              "src": "608:19:23"
            },
            "id": 7965,
            "nodeType": "InheritanceSpecifier",
            "src": "608:19:23"
          },
          {
            "baseName": {
              "id": 7966,
              "name": "ILockups",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8714,
              "src": "629:8:23"
            },
            "id": 7967,
            "nodeType": "InheritanceSpecifier",
            "src": "629:8:23"
          }
        ],
        "canonicalName": "CurrencyTimer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7961,
          "nodeType": "StructuredDocumentation",
          "src": "446:121:23",
          "text": "@title TimedPolicies\n Oversees the time-based recurring processes that allow governance of the\n Eco currency."
        },
        "fullyImplemented": true,
        "id": 8401,
        "linearizedBaseContracts": [
          8401,
          8714,
          8702,
          12321,
          12017,
          2207,
          12119,
          218,
          12742
        ],
        "name": "CurrencyTimer",
        "nameLocation": "577:13:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 7968,
              "nodeType": "StructuredDocumentation",
              "src": "644:125:23",
              "text": "The on-chain address for the currency voting contract. This contract is\n cloned for each new currency vote."
            },
            "functionSelector": "a35b7c6a",
            "id": 7971,
            "mutability": "mutable",
            "name": "bordaImpl",
            "nameLocation": "800:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "774:35:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
              "typeString": "contract CurrencyGovernance"
            },
            "typeName": {
              "id": 7970,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7969,
                "name": "CurrencyGovernance",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7946,
                "src": "774:18:23"
              },
              "referencedDeclaration": 7946,
              "src": "774:18:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                "typeString": "contract CurrencyGovernance"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8aae9c88",
            "id": 7974,
            "mutability": "mutable",
            "name": "inflationImpl",
            "nameLocation": "833:13:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "816:30:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Inflation_$9306",
              "typeString": "contract Inflation"
            },
            "typeName": {
              "id": 7973,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7972,
                "name": "Inflation",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9306,
                "src": "816:9:23"
              },
              "referencedDeclaration": 9306,
              "src": "816:9:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Inflation_$9306",
                "typeString": "contract Inflation"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d3565c4c",
            "id": 7977,
            "mutability": "mutable",
            "name": "lockupImpl",
            "nameLocation": "866:10:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "852:24:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Lockup_$9655",
              "typeString": "contract Lockup"
            },
            "typeName": {
              "id": 7976,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7975,
                "name": "Lockup",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9655,
                "src": "852:6:23"
              },
              "referencedDeclaration": 9655,
              "src": "852:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockup_$9655",
                "typeString": "contract Lockup"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d6103e7",
            "id": 7980,
            "mutability": "mutable",
            "name": "inflationRootHashProposalImpl",
            "nameLocation": "916:29:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "883:62:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
              "typeString": "contract InflationRootHashProposal"
            },
            "typeName": {
              "id": 7979,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7978,
                "name": "InflationRootHashProposal",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5838,
                "src": "883:25:23"
              },
              "referencedDeclaration": 5838,
              "src": "883:25:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                "typeString": "contract InflationRootHashProposal"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "705d5304",
            "id": 7983,
            "mutability": "immutable",
            "name": "ecoToken",
            "nameLocation": "1005:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "984:29:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ECO_$2497",
              "typeString": "contract ECO"
            },
            "typeName": {
              "id": 7982,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7981,
                "name": "ECO",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2497,
                "src": "984:3:23"
              },
              "referencedDeclaration": 2497,
              "src": "984:3:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECO_$2497",
                "typeString": "contract ECO"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ff3e76",
            "id": 7988,
            "mutability": "mutable",
            "name": "rootHashAddressPerGeneration",
            "nameLocation": "1081:28:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "1020:89:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
              "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
            },
            "typeName": {
              "id": 7987,
              "keyType": {
                "id": 7984,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1028:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1020:45:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
                "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
              },
              "valueType": {
                "id": 7986,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7985,
                  "name": "InflationRootHashProposal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5838,
                  "src": "1039:25:23"
                },
                "referencedDeclaration": 5838,
                "src": "1039:25:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                  "typeString": "contract InflationRootHashProposal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ddb428a",
            "id": 7990,
            "mutability": "mutable",
            "name": "currentGeneration",
            "nameLocation": "1182:17:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "1167:32:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7989,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1167:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8713
            ],
            "constant": false,
            "functionSelector": "8e6f4fb7",
            "id": 7996,
            "mutability": "mutable",
            "name": "lockups",
            "nameLocation": "1249:7:23",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7995,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1240:8:23"
            },
            "scope": 8401,
            "src": "1206:50:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Lockup_$9655_$",
              "typeString": "mapping(uint256 => contract Lockup)"
            },
            "typeName": {
              "id": 7994,
              "keyType": {
                "id": 7991,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1214:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1206:26:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Lockup_$9655_$",
                "typeString": "mapping(uint256 => contract Lockup)"
              },
              "valueType": {
                "id": 7993,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 7992,
                  "name": "Lockup",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9655,
                  "src": "1225:6:23"
                },
                "referencedDeclaration": 9655,
                "src": "1225:6:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Lockup_$9655",
                  "typeString": "contract Lockup"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fefa7d1c",
            "id": 8000,
            "mutability": "mutable",
            "name": "isLockup",
            "nameLocation": "1294:8:23",
            "nodeType": "VariableDeclaration",
            "scope": 8401,
            "src": "1262:40:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 7999,
              "keyType": {
                "id": 7997,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1270:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1262:24:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 7998,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1281:4:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 8005,
            "name": "NewInflation",
            "nameLocation": "1315:12:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8003,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1346:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8005,
                  "src": "1328:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Inflation_$9306",
                    "typeString": "contract Inflation"
                  },
                  "typeName": {
                    "id": 8002,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8001,
                      "name": "Inflation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9306,
                      "src": "1328:9:23"
                    },
                    "referencedDeclaration": 9306,
                    "src": "1328:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Inflation_$9306",
                      "typeString": "contract Inflation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1327:24:23"
            },
            "src": "1309:43:23"
          },
          {
            "anonymous": false,
            "id": 8010,
            "name": "NewLockup",
            "nameLocation": "1363:9:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8008,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1388:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8010,
                  "src": "1373:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Lockup_$9655",
                    "typeString": "contract Lockup"
                  },
                  "typeName": {
                    "id": 8007,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8006,
                      "name": "Lockup",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9655,
                      "src": "1373:6:23"
                    },
                    "referencedDeclaration": 9655,
                    "src": "1373:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Lockup_$9655",
                      "typeString": "contract Lockup"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1372:21:23"
            },
            "src": "1357:37:23"
          },
          {
            "anonymous": false,
            "id": 8015,
            "name": "NewCurrencyGovernance",
            "nameLocation": "1405:21:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8013,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "1454:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8015,
                  "src": "1427:31:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                    "typeString": "contract CurrencyGovernance"
                  },
                  "typeName": {
                    "id": 8012,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8011,
                      "name": "CurrencyGovernance",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7946,
                      "src": "1427:18:23"
                    },
                    "referencedDeclaration": 7946,
                    "src": "1427:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:33:23"
            },
            "src": "1399:61:23"
          },
          {
            "anonymous": false,
            "id": 8022,
            "name": "NewInflationRootHashProposal",
            "nameLocation": "1556:28:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8018,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "inflationRootHashProposalContract",
                  "nameLocation": "1628:33:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8022,
                  "src": "1594:67:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                    "typeString": "contract InflationRootHashProposal"
                  },
                  "typeName": {
                    "id": 8017,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8016,
                      "name": "InflationRootHashProposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5838,
                      "src": "1594:25:23"
                    },
                    "referencedDeclaration": 5838,
                    "src": "1594:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "generation",
                  "nameLocation": "1687:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8022,
                  "src": "1671:26:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1671:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:119:23"
            },
            "src": "1550:154:23"
          },
          {
            "body": {
              "id": 8066,
              "nodeType": "Block",
              "src": "1947:198:23",
              "statements": [
                {
                  "expression": {
                    "id": 8048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8046,
                      "name": "bordaImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7971,
                      "src": "1957:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8047,
                      "name": "_borda",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8028,
                      "src": "1969:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      }
                    },
                    "src": "1957:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "id": 8049,
                  "nodeType": "ExpressionStatement",
                  "src": "1957:18:23"
                },
                {
                  "expression": {
                    "id": 8052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8050,
                      "name": "inflationImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7974,
                      "src": "1985:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Inflation_$9306",
                        "typeString": "contract Inflation"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8051,
                      "name": "_inflation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8031,
                      "src": "2001:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Inflation_$9306",
                        "typeString": "contract Inflation"
                      }
                    },
                    "src": "1985:26:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Inflation_$9306",
                      "typeString": "contract Inflation"
                    }
                  },
                  "id": 8053,
                  "nodeType": "ExpressionStatement",
                  "src": "1985:26:23"
                },
                {
                  "expression": {
                    "id": 8056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8054,
                      "name": "lockupImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "2021:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Lockup_$9655",
                        "typeString": "contract Lockup"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8055,
                      "name": "_lockup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8034,
                      "src": "2034:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Lockup_$9655",
                        "typeString": "contract Lockup"
                      }
                    },
                    "src": "2021:20:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Lockup_$9655",
                      "typeString": "contract Lockup"
                    }
                  },
                  "id": 8057,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:20:23"
                },
                {
                  "expression": {
                    "id": 8060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8058,
                      "name": "inflationRootHashProposalImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7980,
                      "src": "2051:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8059,
                      "name": "_inflationRootHashProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8037,
                      "src": "2083:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "src": "2051:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "id": 8061,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:58:23"
                },
                {
                  "expression": {
                    "id": 8064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8062,
                      "name": "ecoToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7983,
                      "src": "2119:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ECO_$2497",
                        "typeString": "contract ECO"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8063,
                      "name": "_ecoAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8040,
                      "src": "2130:8:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ECO_$2497",
                        "typeString": "contract ECO"
                      }
                    },
                    "src": "2119:19:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  "id": 8065,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:19:23"
                }
              ]
            },
            "id": 8067,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 8043,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8025,
                    "src": "1938:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  }
                ],
                "id": 8044,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8042,
                  "name": "PolicedUtils",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12321,
                  "src": "1925:12:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1925:21:23"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8025,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "1738:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1731:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Policy_$12499",
                    "typeString": "contract Policy"
                  },
                  "typeName": {
                    "id": 8024,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8023,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12499,
                      "src": "1731:6:23"
                    },
                    "referencedDeclaration": 12499,
                    "src": "1731:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8028,
                  "mutability": "mutable",
                  "name": "_borda",
                  "nameLocation": "1774:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1755:25:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                    "typeString": "contract CurrencyGovernance"
                  },
                  "typeName": {
                    "id": 8027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8026,
                      "name": "CurrencyGovernance",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7946,
                      "src": "1755:18:23"
                    },
                    "referencedDeclaration": 7946,
                    "src": "1755:18:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8031,
                  "mutability": "mutable",
                  "name": "_inflation",
                  "nameLocation": "1800:10:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1790:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Inflation_$9306",
                    "typeString": "contract Inflation"
                  },
                  "typeName": {
                    "id": 8030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8029,
                      "name": "Inflation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9306,
                      "src": "1790:9:23"
                    },
                    "referencedDeclaration": 9306,
                    "src": "1790:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Inflation_$9306",
                      "typeString": "contract Inflation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8034,
                  "mutability": "mutable",
                  "name": "_lockup",
                  "nameLocation": "1827:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1820:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Lockup_$9655",
                    "typeString": "contract Lockup"
                  },
                  "typeName": {
                    "id": 8033,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8032,
                      "name": "Lockup",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9655,
                      "src": "1820:6:23"
                    },
                    "referencedDeclaration": 9655,
                    "src": "1820:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Lockup_$9655",
                      "typeString": "contract Lockup"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8037,
                  "mutability": "mutable",
                  "name": "_inflationRootHashProposal",
                  "nameLocation": "1870:26:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1844:52:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                    "typeString": "contract InflationRootHashProposal"
                  },
                  "typeName": {
                    "id": 8036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8035,
                      "name": "InflationRootHashProposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5838,
                      "src": "1844:25:23"
                    },
                    "referencedDeclaration": 5838,
                    "src": "1844:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8040,
                  "mutability": "mutable",
                  "name": "_ecoAddr",
                  "nameLocation": "1910:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8067,
                  "src": "1906:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECO_$2497",
                    "typeString": "contract ECO"
                  },
                  "typeName": {
                    "id": 8039,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8038,
                      "name": "ECO",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2497,
                      "src": "1906:3:23"
                    },
                    "referencedDeclaration": 2497,
                    "src": "1906:3:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:203:23"
            },
            "returnParameters": {
              "id": 8045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1947:0:23"
            },
            "scope": 8401,
            "src": "1710:435:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12250
            ],
            "body": {
              "id": 8113,
              "nodeType": "Block",
              "src": "2219:406:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8078,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8069,
                        "src": "2246:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8075,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2229:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CurrencyTimer_$8401_$",
                          "typeString": "type(contract super CurrencyTimer)"
                        }
                      },
                      "id": 8077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12250,
                      "src": "2229:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8080,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:23:23"
                },
                {
                  "expression": {
                    "id": 8087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8081,
                      "name": "bordaImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7971,
                      "src": "2349:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8083,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "2375:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8082,
                            "name": "CurrencyTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8401,
                            "src": "2361:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CurrencyTimer_$8401_$",
                              "typeString": "type(contract CurrencyTimer)"
                            }
                          },
                          "id": 8084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2361:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyTimer_$8401",
                            "typeString": "contract CurrencyTimer"
                          }
                        },
                        "id": 8085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "bordaImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7971,
                        "src": "2361:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_CurrencyGovernance_$7946_$",
                          "typeString": "function () view external returns (contract CurrencyGovernance)"
                        }
                      },
                      "id": 8086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2361:32:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      }
                    },
                    "src": "2349:44:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "id": 8088,
                  "nodeType": "ExpressionStatement",
                  "src": "2349:44:23"
                },
                {
                  "expression": {
                    "id": 8095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8089,
                      "name": "inflationImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7974,
                      "src": "2403:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Inflation_$9306",
                        "typeString": "contract Inflation"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8091,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "2433:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8090,
                            "name": "CurrencyTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8401,
                            "src": "2419:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CurrencyTimer_$8401_$",
                              "typeString": "type(contract CurrencyTimer)"
                            }
                          },
                          "id": 8092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2419:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyTimer_$8401",
                            "typeString": "contract CurrencyTimer"
                          }
                        },
                        "id": 8093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inflationImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7974,
                        "src": "2419:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Inflation_$9306_$",
                          "typeString": "function () view external returns (contract Inflation)"
                        }
                      },
                      "id": 8094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2419:36:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Inflation_$9306",
                        "typeString": "contract Inflation"
                      }
                    },
                    "src": "2403:52:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Inflation_$9306",
                      "typeString": "contract Inflation"
                    }
                  },
                  "id": 8096,
                  "nodeType": "ExpressionStatement",
                  "src": "2403:52:23"
                },
                {
                  "expression": {
                    "id": 8103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8097,
                      "name": "lockupImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7977,
                      "src": "2465:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Lockup_$9655",
                        "typeString": "contract Lockup"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8099,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "2492:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8098,
                            "name": "CurrencyTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8401,
                            "src": "2478:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CurrencyTimer_$8401_$",
                              "typeString": "type(contract CurrencyTimer)"
                            }
                          },
                          "id": 8100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2478:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyTimer_$8401",
                            "typeString": "contract CurrencyTimer"
                          }
                        },
                        "id": 8101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lockupImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7977,
                        "src": "2478:31:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_Lockup_$9655_$",
                          "typeString": "function () view external returns (contract Lockup)"
                        }
                      },
                      "id": 8102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2478:33:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Lockup_$9655",
                        "typeString": "contract Lockup"
                      }
                    },
                    "src": "2465:46:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Lockup_$9655",
                      "typeString": "contract Lockup"
                    }
                  },
                  "id": 8104,
                  "nodeType": "ExpressionStatement",
                  "src": "2465:46:23"
                },
                {
                  "expression": {
                    "id": 8111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8105,
                      "name": "inflationRootHashProposalImpl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7980,
                      "src": "2521:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 8107,
                              "name": "_self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8069,
                              "src": "2567:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8106,
                            "name": "CurrencyTimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8401,
                            "src": "2553:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_CurrencyTimer_$8401_$",
                              "typeString": "type(contract CurrencyTimer)"
                            }
                          },
                          "id": 8108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2553:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyTimer_$8401",
                            "typeString": "contract CurrencyTimer"
                          }
                        },
                        "id": 8109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "inflationRootHashProposalImpl",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7980,
                        "src": "2553:63:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_InflationRootHashProposal_$5838_$",
                          "typeString": "function () view external returns (contract InflationRootHashProposal)"
                        }
                      },
                      "id": 8110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2553:65:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "src": "2521:97:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "id": 8112,
                  "nodeType": "ExpressionStatement",
                  "src": "2521:97:23"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 8114,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8073,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8072,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12672,
                  "src": "2202:16:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "2202:16:23"
              }
            ],
            "name": "initialize",
            "nameLocation": "2160:10:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8071,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2193:8:23"
            },
            "parameters": {
              "id": 8070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8069,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "2179:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8114,
                  "src": "2171:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2171:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2170:15:23"
            },
            "returnParameters": {
              "id": 8074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2219:0:23"
            },
            "scope": 8401,
            "src": "2151:474:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8701
            ],
            "body": {
              "id": 8363,
              "nodeType": "Block",
              "src": "2685:2460:23",
              "statements": [
                {
                  "assignments": [
                    8119
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8119,
                      "mutability": "mutable",
                      "name": "_old",
                      "nameLocation": "2703:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "2695:12:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8118,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2695:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8121,
                  "initialValue": {
                    "id": 8120,
                    "name": "currentGeneration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7990,
                    "src": "2710:17:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2695:32:23"
                },
                {
                  "assignments": [
                    8123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8123,
                      "mutability": "mutable",
                      "name": "_new",
                      "nameLocation": "2745:4:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "2737:12:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8122,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2737:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8131,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 8126,
                                "name": "ID_TIMED_POLICIES",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12144,
                                "src": "2774:17:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 8125,
                              "name": "policyFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12320,
                              "src": "2764:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                "typeString": "function (bytes32) view returns (address)"
                              }
                            },
                            "id": 8127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2764:28:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8124,
                          "name": "IGeneration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8696,
                          "src": "2752:11:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IGeneration_$8696_$",
                            "typeString": "type(contract IGeneration)"
                          }
                        },
                        "id": 8128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2752:41:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IGeneration_$8696",
                          "typeString": "contract IGeneration"
                        }
                      },
                      "id": 8129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "generation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8695,
                      "src": "2752:52:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 8130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2752:54:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2737:69:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8133,
                          "name": "_new",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8123,
                          "src": "2824:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 8134,
                          "name": "_old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8119,
                          "src": "2832:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2824:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "47656e65726174696f6e20686173206e6f7420696e63726561736564",
                        "id": 8136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2838:30:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80178df5becde5dcb483d92a0e9685b12db003cd7d91902e613196fa8f331dc7",
                          "typeString": "literal_string \"Generation has not increased\""
                        },
                        "value": "Generation has not increased"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80178df5becde5dcb483d92a0e9685b12db003cd7d91902e613196fa8f331dc7",
                          "typeString": "literal_string \"Generation has not increased\""
                        }
                      ],
                      "id": 8132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2816:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2816:53:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8138,
                  "nodeType": "ExpressionStatement",
                  "src": "2816:53:23"
                },
                {
                  "expression": {
                    "id": 8141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8139,
                      "name": "currentGeneration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7990,
                      "src": "2880:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8140,
                      "name": "_new",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8123,
                      "src": "2900:4:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2880:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8142,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:24:23"
                },
                {
                  "assignments": [
                    8145
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8145,
                      "mutability": "mutable",
                      "name": "bg",
                      "nameLocation": "2934:2:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "2915:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                        "typeString": "contract CurrencyGovernance"
                      },
                      "typeName": {
                        "id": 8144,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 8143,
                          "name": "CurrencyGovernance",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7946,
                          "src": "2915:18:23"
                        },
                        "referencedDeclaration": 7946,
                        "src": "2915:18:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                          "typeString": "contract CurrencyGovernance"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8151,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8148,
                            "name": "ID_CURRENCY_GOVERNANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12159,
                            "src": "2981:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 8147,
                          "name": "policyFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12320,
                          "src": "2971:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view returns (address)"
                          }
                        },
                        "id": 8149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2971:33:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8146,
                      "name": "CurrencyGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7946,
                      "src": "2939:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CurrencyGovernance_$7946_$",
                        "typeString": "type(contract CurrencyGovernance)"
                      }
                    },
                    "id": 8150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2939:75:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                      "typeString": "contract CurrencyGovernance"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2915:99:23"
                },
                {
                  "assignments": [
                    8153
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8153,
                      "mutability": "mutable",
                      "name": "_numberOfRecipients",
                      "nameLocation": "3033:19:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "3025:27:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8152,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3025:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8155,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3055:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3025:31:23"
                },
                {
                  "assignments": [
                    8157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8157,
                      "mutability": "mutable",
                      "name": "_randomInflationReward",
                      "nameLocation": "3074:22:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "3066:30:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8156,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3066:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8159,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3099:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3066:34:23"
                },
                {
                  "assignments": [
                    8161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8161,
                      "mutability": "mutable",
                      "name": "_lockupDuration",
                      "nameLocation": "3118:15:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "3110:23:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3110:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8163,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3136:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3110:27:23"
                },
                {
                  "assignments": [
                    8165
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8165,
                      "mutability": "mutable",
                      "name": "_lockupInterest",
                      "nameLocation": "3155:15:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8363,
                      "src": "3147:23:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8164,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3147:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8167,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 8166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3173:1:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3147:27:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 8176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 8170,
                          "name": "bg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8145,
                          "src": "3197:2:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                            "typeString": "contract CurrencyGovernance"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                            "typeString": "contract CurrencyGovernance"
                          }
                        ],
                        "id": 8169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3189:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8168,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3189:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3189:11:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 8174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3212:1:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 8173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3204:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 8172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3204:7:23",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 8175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3204:10:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3189:25:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8233,
                  "nodeType": "IfStatement",
                  "src": "3185:555:23",
                  "trueBody": {
                    "id": 8232,
                    "nodeType": "Block",
                    "src": "3216:524:23",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 8184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 8179,
                                    "name": "bg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8145,
                                    "src": "3240:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                      "typeString": "contract CurrencyGovernance"
                                    }
                                  },
                                  "id": 8180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7358,
                                  "src": "3240:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_Stages_$7355_$",
                                    "typeString": "function () view external returns (enum CurrencyGovernance.Stages)"
                                  }
                                },
                                "id": 8181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3240:10:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stages_$7355",
                                  "typeString": "enum CurrencyGovernance.Stages"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Stages_$7355",
                                  "typeString": "enum CurrencyGovernance.Stages"
                                }
                              ],
                              "id": 8178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3234:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 8177,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3234:5:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3234:17:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 8183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3254:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "3234:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8191,
                        "nodeType": "IfStatement",
                        "src": "3230:76:23",
                        "trueBody": {
                          "id": 8190,
                          "nodeType": "Block",
                          "src": "3257:49:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 8185,
                                    "name": "bg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8145,
                                    "src": "3275:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                      "typeString": "contract CurrencyGovernance"
                                    }
                                  },
                                  "id": 8187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "updateStage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7526,
                                  "src": "3275:14:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 8188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3275:16:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8189,
                              "nodeType": "ExpressionStatement",
                              "src": "3275:16:23"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 8199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 8194,
                                    "name": "bg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8145,
                                    "src": "3329:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                      "typeString": "contract CurrencyGovernance"
                                    }
                                  },
                                  "id": 8195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7358,
                                  "src": "3329:8:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_enum$_Stages_$7355_$",
                                    "typeString": "function () view external returns (enum CurrencyGovernance.Stages)"
                                  }
                                },
                                "id": 8196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3329:10:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stages_$7355",
                                  "typeString": "enum CurrencyGovernance.Stages"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Stages_$7355",
                                  "typeString": "enum CurrencyGovernance.Stages"
                                }
                              ],
                              "id": 8193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3323:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 8192,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "3323:5:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3323:17:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 8198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3344:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "3323:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8206,
                        "nodeType": "IfStatement",
                        "src": "3319:73:23",
                        "trueBody": {
                          "id": 8205,
                          "nodeType": "Block",
                          "src": "3347:45:23",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 8200,
                                    "name": "bg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8145,
                                    "src": "3365:2:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                      "typeString": "contract CurrencyGovernance"
                                    }
                                  },
                                  "id": 8202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "compute",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 7862,
                                  "src": "3365:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 8203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3365:12:23",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8204,
                              "nodeType": "ExpressionStatement",
                              "src": "3365:12:23"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          8208
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8208,
                            "mutability": "mutable",
                            "name": "winner",
                            "nameLocation": "3413:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 8232,
                            "src": "3405:14:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 8207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3405:7:23",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8212,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 8209,
                              "name": "bg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8145,
                              "src": "3422:2:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                "typeString": "contract CurrencyGovernance"
                              }
                            },
                            "id": 8210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "winner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7401,
                            "src": "3422:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 8211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3422:11:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3405:28:23"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8213,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8208,
                            "src": "3451:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 8216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3469:1:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 8215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3461:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8214,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3461:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3461:10:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3451:20:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8231,
                        "nodeType": "IfStatement",
                        "src": "3447:283:23",
                        "trueBody": {
                          "id": 8230,
                          "nodeType": "Block",
                          "src": "3473:257:23",
                          "statements": [
                            {
                              "expression": {
                                "id": 8228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    null,
                                    {
                                      "id": 8219,
                                      "name": "_numberOfRecipients",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8153,
                                      "src": "3535:19:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 8220,
                                      "name": "_randomInflationReward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8157,
                                      "src": "3576:22:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 8221,
                                      "name": "_lockupDuration",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8161,
                                      "src": "3620:15:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 8222,
                                      "name": "_lockupInterest",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8165,
                                      "src": "3657:15:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    null
                                  ],
                                  "id": 8223,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "3491:201:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$__$",
                                    "typeString": "tuple(,uint256,uint256,uint256,uint256,)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 8226,
                                      "name": "winner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8208,
                                      "src": "3708:6:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 8224,
                                      "name": "bg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 8145,
                                      "src": "3695:2:23",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                        "typeString": "contract CurrencyGovernance"
                                      }
                                    },
                                    "id": 8225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "proposals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 7385,
                                    "src": "3695:12:23",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                      "typeString": "function (address) view external returns (bool,uint256,uint256,uint256,uint256,uint256)"
                                    }
                                  },
                                  "id": 8227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3695:20:23",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                                    "typeString": "tuple(bool,uint256,uint256,uint256,uint256,uint256)"
                                  }
                                },
                                "src": "3491:224:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 8229,
                              "nodeType": "ExpressionStatement",
                              "src": "3491:224:23"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 8257,
                  "nodeType": "Block",
                  "src": "3750:209:23",
                  "statements": [
                    {
                      "assignments": [
                        8236
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 8236,
                          "mutability": "mutable",
                          "name": "_clone",
                          "nameLocation": "3783:6:23",
                          "nodeType": "VariableDeclaration",
                          "scope": 8257,
                          "src": "3764:25:23",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                            "typeString": "contract CurrencyGovernance"
                          },
                          "typeName": {
                            "id": 8235,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 8234,
                              "name": "CurrencyGovernance",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 7946,
                              "src": "3764:18:23"
                            },
                            "referencedDeclaration": 7946,
                            "src": "3764:18:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                              "typeString": "contract CurrencyGovernance"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 8242,
                      "initialValue": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 8238,
                                "name": "bordaImpl",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7971,
                                "src": "3811:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                  "typeString": "contract CurrencyGovernance"
                                }
                              },
                              "id": 8239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "clone",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12302,
                              "src": "3811:15:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                                "typeString": "function () external returns (address)"
                              }
                            },
                            "id": 8240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3811:17:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 8237,
                          "name": "CurrencyGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7946,
                          "src": "3792:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CurrencyGovernance_$7946_$",
                            "typeString": "type(contract CurrencyGovernance)"
                          }
                        },
                        "id": 8241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3792:37:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                          "typeString": "contract CurrencyGovernance"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3764:65:23"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 8246,
                            "name": "ID_CURRENCY_GOVERNANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12159,
                            "src": "3860:22:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 8249,
                                "name": "_clone",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8236,
                                "src": "3892:6:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                  "typeString": "contract CurrencyGovernance"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                                  "typeString": "contract CurrencyGovernance"
                                }
                              ],
                              "id": 8248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3884:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8247,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3884:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3884:15:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 8243,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12039,
                            "src": "3843:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Policy_$12499",
                              "typeString": "contract Policy"
                            }
                          },
                          "id": 8245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "setPolicy",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12457,
                          "src": "3843:16:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,address) external"
                          }
                        },
                        "id": 8251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3843:57:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 8252,
                      "nodeType": "ExpressionStatement",
                      "src": "3843:57:23"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 8254,
                            "name": "_clone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8236,
                            "src": "3941:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                              "typeString": "contract CurrencyGovernance"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CurrencyGovernance_$7946",
                              "typeString": "contract CurrencyGovernance"
                            }
                          ],
                          "id": 8253,
                          "name": "NewCurrencyGovernance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8015,
                          "src": "3919:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_contract$_CurrencyGovernance_$7946_$returns$__$",
                            "typeString": "function (contract CurrencyGovernance)"
                          }
                        },
                        "id": 8255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3919:29:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 8256,
                      "nodeType": "EmitStatement",
                      "src": "3914:34:23"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 8266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8258,
                        "name": "rootHashAddressPerGeneration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7988,
                        "src": "4084:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
                          "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
                        }
                      },
                      "id": 8260,
                      "indexExpression": {
                        "id": 8259,
                        "name": "_old",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8119,
                        "src": "4113:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4084:34:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 8262,
                              "name": "inflationRootHashProposalImpl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7980,
                              "src": "4160:29:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                                "typeString": "contract InflationRootHashProposal"
                              }
                            },
                            "id": 8263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "clone",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12302,
                            "src": "4160:35:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () external returns (address)"
                            }
                          },
                          "id": 8264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4160:37:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8261,
                        "name": "InflationRootHashProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5838,
                        "src": "4121:25:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InflationRootHashProposal_$5838_$",
                          "typeString": "type(contract InflationRootHashProposal)"
                        }
                      },
                      "id": 8265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4121:86:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                        "typeString": "contract InflationRootHashProposal"
                      }
                    },
                    "src": "4084:123:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                      "typeString": "contract InflationRootHashProposal"
                    }
                  },
                  "id": 8267,
                  "nodeType": "ExpressionStatement",
                  "src": "4084:123:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 8272,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4262:5:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 8273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "4262:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 8268,
                          "name": "rootHashAddressPerGeneration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7988,
                          "src": "4217:28:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
                            "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
                          }
                        },
                        "id": 8270,
                        "indexExpression": {
                          "id": 8269,
                          "name": "_old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8119,
                          "src": "4246:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4217:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                          "typeString": "contract InflationRootHashProposal"
                        }
                      },
                      "id": 8271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "configure",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4520,
                      "src": "4217:44:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 8274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:58:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8275,
                  "nodeType": "ExpressionStatement",
                  "src": "4217:58:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 8277,
                          "name": "rootHashAddressPerGeneration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7988,
                          "src": "4333:28:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_InflationRootHashProposal_$5838_$",
                            "typeString": "mapping(uint256 => contract InflationRootHashProposal)"
                          }
                        },
                        "id": 8279,
                        "indexExpression": {
                          "id": 8278,
                          "name": "_old",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8119,
                          "src": "4362:4:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4333:34:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                          "typeString": "contract InflationRootHashProposal"
                        }
                      },
                      {
                        "id": 8280,
                        "name": "_old",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8119,
                        "src": "4381:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_InflationRootHashProposal_$5838",
                          "typeString": "contract InflationRootHashProposal"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8276,
                      "name": "NewInflationRootHashProposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8022,
                      "src": "4291:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_InflationRootHashProposal_$5838_$_t_uint256_$returns$__$",
                        "typeString": "function (contract InflationRootHashProposal,uint256)"
                      }
                    },
                    "id": 8281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4291:104:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8282,
                  "nodeType": "EmitStatement",
                  "src": "4286:109:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8283,
                        "name": "_numberOfRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8153,
                        "src": "4410:19:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4432:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4410:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8286,
                        "name": "_randomInflationReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8157,
                        "src": "4437:22:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4462:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4437:26:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4410:53:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8323,
                  "nodeType": "IfStatement",
                  "src": "4406:428:23",
                  "trueBody": {
                    "id": 8322,
                    "nodeType": "Block",
                    "src": "4465:369:23",
                    "statements": [
                      {
                        "assignments": [
                          8292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8292,
                            "mutability": "mutable",
                            "name": "_clone",
                            "nameLocation": "4527:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 8322,
                            "src": "4517:16:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Inflation_$9306",
                              "typeString": "contract Inflation"
                            },
                            "typeName": {
                              "id": 8291,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8290,
                                "name": "Inflation",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9306,
                                "src": "4517:9:23"
                              },
                              "referencedDeclaration": 9306,
                              "src": "4517:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Inflation_$9306",
                                "typeString": "contract Inflation"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8298,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 8294,
                                  "name": "inflationImpl",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7974,
                                  "src": "4546:13:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Inflation_$9306",
                                    "typeString": "contract Inflation"
                                  }
                                },
                                "id": 8295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "clone",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 12302,
                                "src": "4546:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_address_$",
                                  "typeString": "function () external returns (address)"
                                }
                              },
                              "id": 8296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4546:21:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8293,
                            "name": "Inflation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9306,
                            "src": "4536:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Inflation_$9306_$",
                              "typeString": "type(contract Inflation)"
                            }
                          },
                          "id": 8297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4536:32:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Inflation_$9306",
                            "typeString": "contract Inflation"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4517:51:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8304,
                                  "name": "_clone",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8292,
                                  "src": "4621:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Inflation_$9306",
                                    "typeString": "contract Inflation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Inflation_$9306",
                                    "typeString": "contract Inflation"
                                  }
                                ],
                                "id": 8303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4613:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8302,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4613:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4613:15:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 8308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 8306,
                                "name": "_numberOfRecipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8153,
                                "src": "4646:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 8307,
                                "name": "_randomInflationReward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8157,
                                "src": "4668:22:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4646:44:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8299,
                              "name": "ecoToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7983,
                              "src": "4582:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ECO_$2497",
                                "typeString": "contract ECO"
                              }
                            },
                            "id": 8301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2288,
                            "src": "4582:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4582:122:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8310,
                        "nodeType": "ExpressionStatement",
                        "src": "4582:122:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8314,
                              "name": "_numberOfRecipients",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8153,
                              "src": "4740:19:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 8315,
                              "name": "_randomInflationReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8157,
                              "src": "4761:22:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8311,
                              "name": "_clone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8292,
                              "src": "4718:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Inflation_$9306",
                                "typeString": "contract Inflation"
                              }
                            },
                            "id": 8313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startInflation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9095,
                            "src": "4718:21:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 8316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4718:66:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8317,
                        "nodeType": "ExpressionStatement",
                        "src": "4718:66:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 8319,
                              "name": "_clone",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8292,
                              "src": "4816:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Inflation_$9306",
                                "typeString": "contract Inflation"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Inflation_$9306",
                                "typeString": "contract Inflation"
                              }
                            ],
                            "id": 8318,
                            "name": "NewInflation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8005,
                            "src": "4803:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Inflation_$9306_$returns$__$",
                              "typeString": "function (contract Inflation)"
                            }
                          },
                          "id": 8320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4803:20:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8321,
                        "nodeType": "EmitStatement",
                        "src": "4798:25:23"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 8330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8324,
                        "name": "_lockupDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8161,
                        "src": "4848:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4866:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4848:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 8329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 8327,
                        "name": "_lockupInterest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8165,
                        "src": "4871:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 8328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4889:1:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4871:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4848:42:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8362,
                  "nodeType": "IfStatement",
                  "src": "4844:295:23",
                  "trueBody": {
                    "id": 8361,
                    "nodeType": "Block",
                    "src": "4892:247:23",
                    "statements": [
                      {
                        "assignments": [
                          8333
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 8333,
                            "mutability": "mutable",
                            "name": "lockup",
                            "nameLocation": "4913:6:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 8361,
                            "src": "4906:13:23",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lockup_$9655",
                              "typeString": "contract Lockup"
                            },
                            "typeName": {
                              "id": 8332,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 8331,
                                "name": "Lockup",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 9655,
                                "src": "4906:6:23"
                              },
                              "referencedDeclaration": 9655,
                              "src": "4906:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Lockup_$9655",
                                "typeString": "contract Lockup"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 8341,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8337,
                                  "name": "_lockupDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8161,
                                  "src": "4963:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 8338,
                                  "name": "_lockupInterest",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8165,
                                  "src": "4980:15:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 8335,
                                  "name": "lockupImpl",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7977,
                                  "src": "4946:10:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Lockup_$9655",
                                    "typeString": "contract Lockup"
                                  }
                                },
                                "id": 8336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "clone",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 9452,
                                "src": "4946:16:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256,uint256) external returns (address)"
                                }
                              },
                              "id": 8339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4946:50:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8334,
                            "name": "Lockup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9655,
                            "src": "4922:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Lockup_$9655_$",
                              "typeString": "type(contract Lockup)"
                            }
                          },
                          "id": 8340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4922:88:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lockup_$9655",
                            "typeString": "contract Lockup"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4906:104:23"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 8343,
                              "name": "lockup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8333,
                              "src": "5039:6:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Lockup_$9655",
                                "typeString": "contract Lockup"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Lockup_$9655",
                                "typeString": "contract Lockup"
                              }
                            ],
                            "id": 8342,
                            "name": "NewLockup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8010,
                            "src": "5029:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Lockup_$9655_$returns$__$",
                              "typeString": "function (contract Lockup)"
                            }
                          },
                          "id": 8344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5029:17:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8345,
                        "nodeType": "EmitStatement",
                        "src": "5024:22:23"
                      },
                      {
                        "expression": {
                          "id": 8350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8346,
                              "name": "lockups",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7996,
                              "src": "5060:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_Lockup_$9655_$",
                                "typeString": "mapping(uint256 => contract Lockup)"
                              }
                            },
                            "id": 8348,
                            "indexExpression": {
                              "id": 8347,
                              "name": "_new",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8123,
                              "src": "5068:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5060:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lockup_$9655",
                              "typeString": "contract Lockup"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 8349,
                            "name": "lockup",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8333,
                            "src": "5076:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Lockup_$9655",
                              "typeString": "contract Lockup"
                            }
                          },
                          "src": "5060:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Lockup_$9655",
                            "typeString": "contract Lockup"
                          }
                        },
                        "id": 8351,
                        "nodeType": "ExpressionStatement",
                        "src": "5060:22:23"
                      },
                      {
                        "expression": {
                          "id": 8359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 8352,
                              "name": "isLockup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8000,
                              "src": "5096:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 8357,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 8355,
                                  "name": "lockup",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 8333,
                                  "src": "5113:6:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Lockup_$9655",
                                    "typeString": "contract Lockup"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Lockup_$9655",
                                    "typeString": "contract Lockup"
                                  }
                                ],
                                "id": 8354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5105:7:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 8353,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5105:7:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 8356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5105:15:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5096:25:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 8358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5124:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5096:32:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 8360,
                        "nodeType": "ExpressionStatement",
                        "src": "5096:32:23"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "35bbc7fe",
            "id": 8364,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notifyGenerationIncrease",
            "nameLocation": "2640:24:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2676:8:23"
            },
            "parameters": {
              "id": 8115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2664:2:23"
            },
            "returnParameters": {
              "id": 8117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2685:0:23"
            },
            "scope": 8401,
            "src": "2631:2514:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8399,
              "nodeType": "Block",
              "src": "5269:236:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 8374,
                          "name": "isLockup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8000,
                          "src": "5287:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 8377,
                        "indexExpression": {
                          "expression": {
                            "id": 8375,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5296:3:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5296:10:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5287:20:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420617574686f72697a656420746f2063616c6c20746869732066756e6374696f6e",
                        "id": 8378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5309:38:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_971b8e9d1c2ce10b87e29e5e867cf77e2f1d4b5d817589fb00f63e3f96c7d47c",
                          "typeString": "literal_string \"Not authorized to call this function\""
                        },
                        "value": "Not authorized to call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_971b8e9d1c2ce10b87e29e5e867cf77e2f1d4b5d817589fb00f63e3f96c7d47c",
                          "typeString": "literal_string \"Not authorized to call this function\""
                        }
                      ],
                      "id": 8373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5279:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5279:69:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8380,
                  "nodeType": "ExpressionStatement",
                  "src": "5279:69:23"
                },
                {
                  "condition": {
                    "id": 8381,
                    "name": "_penalty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8370,
                    "src": "5363:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 8397,
                    "nodeType": "Block",
                    "src": "5439:60:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8393,
                              "name": "_withdrawer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8366,
                              "src": "5467:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8394,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8368,
                              "src": "5480:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8390,
                              "name": "ecoToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7983,
                              "src": "5453:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ECO_$2497",
                                "typeString": "contract ECO"
                              }
                            },
                            "id": 8392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2288,
                            "src": "5453:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5453:35:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8396,
                        "nodeType": "ExpressionStatement",
                        "src": "5453:35:23"
                      }
                    ]
                  },
                  "id": 8398,
                  "nodeType": "IfStatement",
                  "src": "5359:140:23",
                  "trueBody": {
                    "id": 8389,
                    "nodeType": "Block",
                    "src": "5373:60:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 8385,
                              "name": "_withdrawer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8366,
                              "src": "5401:11:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 8386,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8368,
                              "src": "5414:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 8382,
                              "name": "ecoToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7983,
                              "src": "5387:8:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ECO_$2497",
                                "typeString": "contract ECO"
                              }
                            },
                            "id": 8384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2316,
                            "src": "5387:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 8387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5387:35:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8388,
                        "nodeType": "ExpressionStatement",
                        "src": "5387:35:23"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b39572f0",
            "id": 8400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lockupWithdrawal",
            "nameLocation": "5160:16:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8366,
                  "mutability": "mutable",
                  "name": "_withdrawer",
                  "nameLocation": "5194:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8400,
                  "src": "5186:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5186:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8368,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5223:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8400,
                  "src": "5215:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5215:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8370,
                  "mutability": "mutable",
                  "name": "_penalty",
                  "nameLocation": "5245:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8400,
                  "src": "5240:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5240:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5176:83:23"
            },
            "returnParameters": {
              "id": 8372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5269:0:23"
            },
            "scope": 8401,
            "src": "5151:354:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8402,
        "src": "568:4939:23",
        "usedErrors": []
      }
    ],
    "src": "32:5476:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-07-01T19:00:50.507Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "params": {
          "_addr": "The address of the contract we might act on behalf of."
        }
      },
      "initialize(address)": {
        "params": {
          "_self": "The address of the original contract deployment (as opposed              to the address of the proxy contract, which takes the place              of `this`)."
        }
      },
      "policyCommand(address,bytes)": {
        "params": {
          "_data": "The call message/data to execute on.",
          "_delegate": "The address of the contract to delegate execution to."
        }
      }
    },
    "title": "TimedPolicies Oversees the time-based recurring processes that allow governance of the Eco currency.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "bordaImpl()": {
        "notice": "The on-chain address for the currency voting contract. This contract is cloned for each new currency vote."
      },
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "ERC1820 permissioning interface"
      },
      "clone()": {
        "notice": "Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract."
      },
      "implementation()": {
        "notice": "Get the address of the proxy target contract."
      },
      "initialize(address)": {
        "notice": "Initialize the contract (replaces constructor) See documentation for Policed for an explanation."
      },
      "policy()": {
        "notice": "The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy."
      },
      "policyCommand(address,bytes)": {
        "notice": "Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space."
      },
      "setExpectedInterfaceSet(address)": {
        "notice": "Set the expected interface set"
      }
    },
    "version": 1
  }
}