{
  "abi": [
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidClaim",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidLockup",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidParams",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotVested",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Clawback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "amountAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amounts",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clawback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clawbackTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "staking",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockup",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "timestampAtIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timestamps",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unvested",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vested",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestedChunks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "vestedOn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingPeriods",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611adc806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063da919faa1161007c578063da919faa14610277578063e457c76d1461027f578063f2fde38b14610292578063fc0c546a146102a5578063fdc149ef146102ad578063fea5657c146102b557600080fd5b80638da5cb5b1461021b578063a694fc3a1461022c578063aba022351461023f578063b2b132d814610252578063c0ae7e541461025b578063c4d66de81461026457600080fd5b8063485cc95511610115578063485cc955146101c8578063491447a8146101db5780634e71d92d146101f05780635c19a95c146101f85780636beaeeae1461020b578063715018a61461021357600080fd5b806306490f47146101525780630ed2cb08146101825780632526d960146101a35780632e17de78146101ad57806338af3eed146101c0575b600080fd5b609954610165906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61019561019036600461179b565b6102bd565b604051908152602001610179565b6101ab6102e3565b005b6101956101bb36600461179b565b61038b565b6101656103ce565b6101ab6101d63660046117c9565b6103df565b6101e36104fd565b6040516101799190611802565b6101ab61052d565b6101ab610206366004611846565b61062c565b6101e3610670565b6101ab61067f565b6065546001600160a01b0316610165565b6101ab61023a36600461179b565b610691565b61019561024d36600461179b565b610764565b61019560985481565b61019560975481565b6101ab610272366004611846565b6108bd565b610195610a62565b61019561028d36600461179b565b610b5e565b6101ab6102a0366004611846565b610b96565b610165610ba7565b610195610bb3565b610195610bbf565b60006102dd6102cd836020611880565b6102d890604861189f565b610be3565b92915050565b6102eb610c05565b6099546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035891906118b7565b90506000610364610a62565b905061037d8183106103765781610c5f565b825b610c5f565b50610386610cfb565b50505b565b60006103956103ce565b6001600160a01b0316336001600160a01b0316146103c5576040516282b42960e81b815260040160405180910390fd5b6102dd82610c5f565b60006103da6014610d56565b905090565b600054610100900460ff16158080156103ff5750600054600160ff909116105b806104195750303b158015610419575060005460ff166001145b61043e5760405162461bcd60e51b8152600401610435906118d0565b60405180910390fd5b6000805460ff191660011790558015610461576000805461ff0019166101001790555b61046a83610d7b565b816001600160a01b0381166104925760405163f38bb1ad60e01b815260040160405180910390fd5b609980546001600160a01b0319166001600160a01b039290921691909117905580156104f8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60606103da61050a610bb3565b610515906020611880565b61052090604861189f565b610528610bb3565b610de5565b610535610ebd565b61053d6103ce565b6001600160a01b0316336001600160a01b03161461056d576040516282b42960e81b815260040160405180910390fd5b6000610577610bbf565b90508060000361059a57604051639225b94160e01b815260040160405180910390fd5b6105a381610f16565b6105c76105ae6103ce565b826105b7610ba7565b6001600160a01b03169190610fa1565b7ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd39926836105f06103ce565b6105f8610ba7565b604080516001600160a01b039384168152929091166020830152810183905260600160405180910390a15061038960018055565b6106346103ce565b6001600160a01b0316336001600160a01b031614610664576040516282b42960e81b815260040160405180910390fd5b61066d8161100a565b50565b60606103da6048610528610bb3565b610687610c05565b610389600061106c565b6106996103ce565b6001600160a01b0316336001600160a01b0316146106c9576040516282b42960e81b815260040160405180910390fd5b6106d1610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b91906118b7565b81111561075b5760405163162908e360e11b815260040160405180910390fd5b61066d816110be565b60405163e457c76d60e01b815260006004820181905290309063e457c76d90602401602060405180830381865afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c791906118b7565b8210156107d55760006102dd565b6099546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084191906118b7565b610849610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906118b7565b6102dd919061189f565b600054610100900460ff16158080156108dd5750600054600160ff909116105b806108f75750303b1580156108f7575060005460ff166001145b6109135760405162461bcd60e51b8152600401610435906118d0565b6000805460ff191660011790558015610936576000805461ff0019166101001790555b61093f82610d7b565b60006109496111d3565b90506001600160a01b0381166109725760405163f38bb1ad60e01b815260040160405180910390fd5b609980546001600160a01b0319166001600160a01b038316179055610a07610998610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0291906118b7565b6110be565b610a17610a126103ce565b61100a565b508015610386576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b6000610a6c610bbf565b610a74610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade91906118b7565b6099546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a91906118b7565b610b54919061189f565b6103da919061191e565b60006102dd610b6e836020611880565b610b76610bb3565b610b81906020611880565b610b8c90604861189f565b6102d8919061189f565b610b9e610c05565b61066d8161106c565b60006103da6000610d56565b60006103da6028610be3565b6097546000908015610bda57610bd481610764565b91505090565b610bd442610764565b600080610bfa600119368181013560f01c90030190565b929092013592915050565b6065546001600160a01b031633146103895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610435565b609954604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610ca657600080fd5b505af1158015610cba573d6000803e3d6000fd5b505050507f11725367022c3ff288940f4b5473aa61c2da6a24af7363a1128ee2401e8983b282604051610cef91815260200190565b60405180910390a15090565b610d03610c05565b426097556000610d11610a62565b9050610d2033826105b7610ba7565b6040518181527fc58da18b0a2173330a740fdbe082fd5ae6e49ea7024d773d85918a54ab81e37e9060200160405180910390a150565b600080610d6d600119368181013560f01c90030190565b929092013560601c92915050565b600054610100900460ff16610da25760405162461bcd60e51b815260040161043590611935565b600080610db0600019611310565b91509150610dbc610bb3565b8114610ddb57604051635435b28960e11b815260040160405180910390fd5b6104f88284611384565b60606000610dfd600119368181013560f01c90030190565b905060008367ffffffffffffffff1667ffffffffffffffff811115610e2457610e24611980565b604051908082528060200260200182016040528015610e4d578160200160208202803683370190505b50925060005b8467ffffffffffffffff168167ffffffffffffffff161015610eb457602081028684010135915081848267ffffffffffffffff1681518110610e9757610e97611996565b602090810291909101015280610eac816119ac565b915050610e53565b50505092915050565b600260015403610f0f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610435565b6002600155565b6000610f20610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8a91906118b7565b905081811015610386576104f8610378828461191e565b6040516001600160a01b0383166024820152604481018290526104f890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113c5565b60018055565b6099546040516317066a5760e21b81526001600160a01b03838116600483015290911690635c19a95c90602401600060405180830381600087803b15801561105157600080fd5b505af1158015611065573d6000803e3d6000fd5b5050505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6099546001600160a01b03166110d2610ba7565b60405163095ea7b360e01b81526001600160a01b03838116600483015260248201859052919091169063095ea7b3906044016020604051808303816000875af1158015611123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114791906119d3565b5060405163b6b55f2560e01b8152600481018390526001600160a01b0382169063b6b55f2590602401600060405180830381600087803b15801561118a57600080fd5b505af115801561119e573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca2782604051610a5691815260200190565b6000806111de610ba7565b6001600160a01b0316630505c8c96040518163ffffffff1660e01b81526004016020604051808303816000875af115801561121d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124191906119f5565b9050731820a4b7618bde71dce8cdc73aab6c95905fad246001600160a01b031663aabbb8ca82604051602001611288906a45434f785374616b696e6760a81b8152600b0190565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b81526004016112cf9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd491906119f5565b60008060008060985490505b611324610bb3565b8110156113705761133481610b5e565b851061135457611343816102bd565b61134d908361189f565b915061135e565b9094909350915050565b8061136881611a12565b91505061131c565b508061137a610bb3565b9250925050915091565b600054610100900460ff166113ab5760405162461bcd60e51b815260040161043590611935565b6113b3611497565b6113bc8161106c565b610386826114c7565b600061141a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115779092919063ffffffff16565b8051909150156104f8578080602001905181019061143891906119d3565b6104f85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610435565b600054610100900460ff166114be5760405162461bcd60e51b815260040161043590611935565b6103893361106c565b600054610100900460ff166114ee5760405162461bcd60e51b815260040161043590611935565b6114f661158e565b6000611500610ba7565b6001600160a01b03160361152757604051635435b28960e11b815260040160405180910390fd5b60006115316103ce565b6001600160a01b03160361155857604051635435b28960e11b815260040160405180910390fd5b61066d333083611566610ba7565b6001600160a01b03169291906115bd565b606061158684846000856115fb565b949350505050565b600054610100900460ff166115b55760405162461bcd60e51b815260040161043590611935565b6103896116d6565b6040516001600160a01b03808516602483015283166044820152606481018290526115f59085906323b872dd60e01b90608401610fcd565b50505050565b60608247101561165c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610435565b600080866001600160a01b031685876040516116789190611a57565b60006040518083038185875af1925050503d80600081146116b5576040519150601f19603f3d011682016040523d82523d6000602084013e6116ba565b606091505b50915091506116cb878383876116fd565b979650505050505050565b600054610100900460ff166110045760405162461bcd60e51b815260040161043590611935565b6060831561176c578251600003611765576001600160a01b0385163b6117655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610435565b5081611586565b61158683838151156117815781518083602001fd5b8060405162461bcd60e51b81526004016104359190611a73565b6000602082840312156117ad57600080fd5b5035919050565b6001600160a01b038116811461066d57600080fd5b600080604083850312156117dc57600080fd5b82356117e7816117b4565b915060208301356117f7816117b4565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561183a5783518352928401929184019160010161181e565b50909695505050505050565b60006020828403121561185857600080fd5b8135611863816117b4565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561189a5761189a61186a565b500290565b600082198211156118b2576118b261186a565b500190565b6000602082840312156118c957600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000828210156119305761193061186a565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600067ffffffffffffffff8083168181036119c9576119c961186a565b6001019392505050565b6000602082840312156119e557600080fd5b8151801515811461186357600080fd5b600060208284031215611a0757600080fd5b8151611863816117b4565b600060018201611a2457611a2461186a565b5060010190565b60005b83811015611a46578181015183820152602001611a2e565b838111156115f55750506000910152565b60008251611a69818460208701611a2b565b9190910192915050565b6020815260008251806020840152611a92816040850160208701611a2b565b601f01601f1916919091016040019291505056fea2646970667358221220465bcd40883db0cf618698bf80342a52d165b6923506b4eb26138165ce0a925164736f6c634300080f0033",
    "sourceMap": "733:1114:17:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063da919faa1161007c578063da919faa14610277578063e457c76d1461027f578063f2fde38b14610292578063fc0c546a146102a5578063fdc149ef146102ad578063fea5657c146102b557600080fd5b80638da5cb5b1461021b578063a694fc3a1461022c578063aba022351461023f578063b2b132d814610252578063c0ae7e541461025b578063c4d66de81461026457600080fd5b8063485cc95511610115578063485cc955146101c8578063491447a8146101db5780634e71d92d146101f05780635c19a95c146101f85780636beaeeae1461020b578063715018a61461021357600080fd5b806306490f47146101525780630ed2cb08146101825780632526d960146101a35780632e17de78146101ad57806338af3eed146101c0575b600080fd5b609954610165906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61019561019036600461179b565b6102bd565b604051908152602001610179565b6101ab6102e3565b005b6101956101bb36600461179b565b61038b565b6101656103ce565b6101ab6101d63660046117c9565b6103df565b6101e36104fd565b6040516101799190611802565b6101ab61052d565b6101ab610206366004611846565b61062c565b6101e3610670565b6101ab61067f565b6065546001600160a01b0316610165565b6101ab61023a36600461179b565b610691565b61019561024d36600461179b565b610764565b61019560985481565b61019560975481565b6101ab610272366004611846565b6108bd565b610195610a62565b61019561028d36600461179b565b610b5e565b6101ab6102a0366004611846565b610b96565b610165610ba7565b610195610bb3565b610195610bbf565b60006102dd6102cd836020611880565b6102d890604861189f565b610be3565b92915050565b6102eb610c05565b6099546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610334573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035891906118b7565b90506000610364610a62565b905061037d8183106103765781610c5f565b825b610c5f565b50610386610cfb565b50505b565b60006103956103ce565b6001600160a01b0316336001600160a01b0316146103c5576040516282b42960e81b815260040160405180910390fd5b6102dd82610c5f565b60006103da6014610d56565b905090565b600054610100900460ff16158080156103ff5750600054600160ff909116105b806104195750303b158015610419575060005460ff166001145b61043e5760405162461bcd60e51b8152600401610435906118d0565b60405180910390fd5b6000805460ff191660011790558015610461576000805461ff0019166101001790555b61046a83610d7b565b816001600160a01b0381166104925760405163f38bb1ad60e01b815260040160405180910390fd5b609980546001600160a01b0319166001600160a01b039290921691909117905580156104f8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b60606103da61050a610bb3565b610515906020611880565b61052090604861189f565b610528610bb3565b610de5565b610535610ebd565b61053d6103ce565b6001600160a01b0316336001600160a01b03161461056d576040516282b42960e81b815260040160405180910390fd5b6000610577610bbf565b90508060000361059a57604051639225b94160e01b815260040160405180910390fd5b6105a381610f16565b6105c76105ae6103ce565b826105b7610ba7565b6001600160a01b03169190610fa1565b7ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd39926836105f06103ce565b6105f8610ba7565b604080516001600160a01b039384168152929091166020830152810183905260600160405180910390a15061038960018055565b6106346103ce565b6001600160a01b0316336001600160a01b031614610664576040516282b42960e81b815260040160405180910390fd5b61066d8161100a565b50565b60606103da6048610528610bb3565b610687610c05565b610389600061106c565b6106996103ce565b6001600160a01b0316336001600160a01b0316146106c9576040516282b42960e81b815260040160405180910390fd5b6106d1610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073b91906118b7565b81111561075b5760405163162908e360e11b815260040160405180910390fd5b61066d816110be565b60405163e457c76d60e01b815260006004820181905290309063e457c76d90602401602060405180830381865afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c791906118b7565b8210156107d55760006102dd565b6099546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084191906118b7565b610849610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b391906118b7565b6102dd919061189f565b600054610100900460ff16158080156108dd5750600054600160ff909116105b806108f75750303b1580156108f7575060005460ff166001145b6109135760405162461bcd60e51b8152600401610435906118d0565b6000805460ff191660011790558015610936576000805461ff0019166101001790555b61093f82610d7b565b60006109496111d3565b90506001600160a01b0381166109725760405163f38bb1ad60e01b815260040160405180910390fd5b609980546001600160a01b0319166001600160a01b038316179055610a07610998610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0291906118b7565b6110be565b610a17610a126103ce565b61100a565b508015610386576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b6000610a6c610bbf565b610a74610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610aba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ade91906118b7565b6099546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a91906118b7565b610b54919061189f565b6103da919061191e565b60006102dd610b6e836020611880565b610b76610bb3565b610b81906020611880565b610b8c90604861189f565b6102d8919061189f565b610b9e610c05565b61066d8161106c565b60006103da6000610d56565b60006103da6028610be3565b6097546000908015610bda57610bd481610764565b91505090565b610bd442610764565b600080610bfa600119368181013560f01c90030190565b929092013592915050565b6065546001600160a01b031633146103895760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610435565b609954604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610ca657600080fd5b505af1158015610cba573d6000803e3d6000fd5b505050507f11725367022c3ff288940f4b5473aa61c2da6a24af7363a1128ee2401e8983b282604051610cef91815260200190565b60405180910390a15090565b610d03610c05565b426097556000610d11610a62565b9050610d2033826105b7610ba7565b6040518181527fc58da18b0a2173330a740fdbe082fd5ae6e49ea7024d773d85918a54ab81e37e9060200160405180910390a150565b600080610d6d600119368181013560f01c90030190565b929092013560601c92915050565b600054610100900460ff16610da25760405162461bcd60e51b815260040161043590611935565b600080610db0600019611310565b91509150610dbc610bb3565b8114610ddb57604051635435b28960e11b815260040160405180910390fd5b6104f88284611384565b60606000610dfd600119368181013560f01c90030190565b905060008367ffffffffffffffff1667ffffffffffffffff811115610e2457610e24611980565b604051908082528060200260200182016040528015610e4d578160200160208202803683370190505b50925060005b8467ffffffffffffffff168167ffffffffffffffff161015610eb457602081028684010135915081848267ffffffffffffffff1681518110610e9757610e97611996565b602090810291909101015280610eac816119ac565b915050610e53565b50505092915050565b600260015403610f0f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610435565b6002600155565b6000610f20610ba7565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610f66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8a91906118b7565b905081811015610386576104f8610378828461191e565b6040516001600160a01b0383166024820152604481018290526104f890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113c5565b60018055565b6099546040516317066a5760e21b81526001600160a01b03838116600483015290911690635c19a95c90602401600060405180830381600087803b15801561105157600080fd5b505af1158015611065573d6000803e3d6000fd5b5050505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6099546001600160a01b03166110d2610ba7565b60405163095ea7b360e01b81526001600160a01b03838116600483015260248201859052919091169063095ea7b3906044016020604051808303816000875af1158015611123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114791906119d3565b5060405163b6b55f2560e01b8152600481018390526001600160a01b0382169063b6b55f2590602401600060405180830381600087803b15801561118a57600080fd5b505af115801561119e573d6000803e3d6000fd5b505050507feebbaa86c348cb664e392b180fd0ff2e1998af9fa833ef69a778cb0b42d3ca2782604051610a5691815260200190565b6000806111de610ba7565b6001600160a01b0316630505c8c96040518163ffffffff1660e01b81526004016020604051808303816000875af115801561121d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124191906119f5565b9050731820a4b7618bde71dce8cdc73aab6c95905fad246001600160a01b031663aabbb8ca82604051602001611288906a45434f785374616b696e6760a81b8152600b0190565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b81526004016112cf9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156112ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd491906119f5565b60008060008060985490505b611324610bb3565b8110156113705761133481610b5e565b851061135457611343816102bd565b61134d908361189f565b915061135e565b9094909350915050565b8061136881611a12565b91505061131c565b508061137a610bb3565b9250925050915091565b600054610100900460ff166113ab5760405162461bcd60e51b815260040161043590611935565b6113b3611497565b6113bc8161106c565b610386826114c7565b600061141a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115779092919063ffffffff16565b8051909150156104f8578080602001905181019061143891906119d3565b6104f85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610435565b600054610100900460ff166114be5760405162461bcd60e51b815260040161043590611935565b6103893361106c565b600054610100900460ff166114ee5760405162461bcd60e51b815260040161043590611935565b6114f661158e565b6000611500610ba7565b6001600160a01b03160361152757604051635435b28960e11b815260040160405180910390fd5b60006115316103ce565b6001600160a01b03160361155857604051635435b28960e11b815260040160405180910390fd5b61066d333083611566610ba7565b6001600160a01b03169291906115bd565b606061158684846000856115fb565b949350505050565b600054610100900460ff166115b55760405162461bcd60e51b815260040161043590611935565b6103896116d6565b6040516001600160a01b03808516602483015283166044820152606481018290526115f59085906323b872dd60e01b90608401610fcd565b50505050565b60608247101561165c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610435565b600080866001600160a01b031685876040516116789190611a57565b60006040518083038185875af1925050503d80600081146116b5576040519150601f19603f3d011682016040523d82523d6000602084013e6116ba565b606091505b50915091506116cb878383876116fd565b979650505050505050565b600054610100900460ff166110045760405162461bcd60e51b815260040161043590611935565b6060831561176c578251600003611765576001600160a01b0385163b6117655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610435565b5081611586565b61158683838151156117815781518083602001fd5b8060405162461bcd60e51b81526004016104359190611a73565b6000602082840312156117ad57600080fd5b5035919050565b6001600160a01b038116811461066d57600080fd5b600080604083850312156117dc57600080fd5b82356117e7816117b4565b915060208301356117f7816117b4565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561183a5783518352928401929184019160010161181e565b50909695505050505050565b60006020828403121561185857600080fd5b8135611863816117b4565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561189a5761189a61186a565b500290565b600082198211156118b2576118b261186a565b500190565b6000602082840312156118c957600080fd5b5051919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000828210156119305761193061186a565b500390565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600067ffffffffffffffff8083168181036119c9576119c961186a565b6001019392505050565b6000602082840312156119e557600080fd5b8151801515811461186357600080fd5b600060208284031215611a0757600080fd5b8151611863816117b4565b600060018201611a2457611a2461186a565b5060010190565b60005b83811015611a46578181015183820152602001611a2e565b838111156115f55750506000910152565b60008251611a69818460208701611a2b565b9190910192915050565b6020815260008251806020840152611a92816040850160208701611a2b565b601f01601f1916919091016040019291505056fea2646970667358221220465bcd40883db0cf618698bf80342a52d165b6923506b4eb26138165ce0a925164736f6c634300080f0033",
    "sourceMap": "733:1114:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1363:21:19;;;;;-1:-1:-1;;;;;1363:21:19;;;;;;-1:-1:-1;;;;;178:32:23;;;160:51;;148:2;133:18;1363:21:19;;;;;;;;1924:125:14;;;;;;:::i;:::-;;:::i;:::-;;;553:25:23;;;541:2;526:18;1924:125:14;407:177:23;4539:265:19;;;:::i;:::-;;3883:164;;;;;;:::i;:::-;;:::i;1591:95:13:-;;;:::i;787:247:17:-;;;;;;:::i;:::-;;:::i;1470:182:14:-;;;:::i;:::-;;;;;;;:::i;2622:338:13:-;;;:::i;3269:135:19:-;;;;;;:::i;:::-;;:::i;969:131:14:-;;;:::i;2071:101:2:-;;;:::i;1441:85::-;1513:6;;-1:-1:-1;;;;;1513:6:2;1441:85;;2609:214:19;;;;;;:::i;:::-;;:::i;1247:236:17:-;;;;;;:::i;:::-;;:::i;1037:27:11:-;;;;;;942:32:12;;;;;;1528:341:19;;;;;;:::i;:::-;;:::i;4858:179::-;;;:::i;2345:154:14:-;;;;;;:::i;:::-;;:::i;2414:116:12:-;;;;;;:::i;:::-;;:::i;1246:117:13:-;;;:::i;500:199:14:-;;;:::i;1916:289:12:-;;;:::i;1924:125:14:-;1983:7;2009:33;2030:10;2035:5;2030:2;:10;:::i;:::-;2024:17;;:2;:17;:::i;:::-;2009:14;:33::i;:::-;2002:40;1924:125;-1:-1:-1;;1924:125:14:o;4539:265:19:-;1334:13:2;:11;:13::i;:::-;4632:6:19::1;::::0;4614:50:::1;::::0;-1:-1:-1;;;4614:50:19;;4658:4:::1;4614:50;::::0;::::1;160:51:23::0;4595:16:19::1;::::0;-1:-1:-1;;;;;4632:6:19::1;::::0;4614:35:::1;::::0;133:18:23;;4614:50:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4595:69;;4674:16;4693:10;:8;:10::i;:::-;4674:29;;4713:51;4733:8;4722;:19;:41;;4755:8;4713;:51::i;4722:41::-;4744:8;4722:41;4713:8;:51::i;:::-;;4781:16;:14;:16::i;:::-;4774:23;;1357:1:2;4539:265:19:o:0;3883:164::-;3934:7;3971:13;:11;:13::i;:::-;-1:-1:-1;;;;;3957:27:19;:10;-1:-1:-1;;;;;3957:27:19;;3953:54;;3993:14;;-1:-1:-1;;;3993:14:19;;;;;;;;;;;3953:54;4024:16;4033:6;4024:8;:16::i;1591:95:13:-;1635:7;1661:18;1676:2;1661:14;:18::i;:::-;1654:25;;1591:95;:::o;787:247:17:-;3268:19:3;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:3;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:3;1476:19:8;:23;;;3376:66:3;;-1:-1:-1;3425:12:3;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:3;;;;;;;:::i;:::-;;;;;;;;;3525:12;:16;;-1:-1:-1;;3525:16:3;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:3;;;;;3551:65;868:38:17::1;900:5;868:31;:38::i;:::-;935:7:::0;-1:-1:-1;;;;;956:21:17;::::1;952:49;;986:15;;-1:-1:-1::0;;;986:15:17::1;;;;;;;;;;;952:49;1011:6;:16:::0;;-1:-1:-1;;;;;;1011:16:17::1;-1:-1:-1::0;;;;;1011:16:17;;;::::1;::::0;;;::::1;::::0;;3636:99:3;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:3;;;3710:14;;-1:-1:-1;3434:36:23;;3710:14:3;;3422:2:23;3407:18;3710:14:3;;;;;;;3636:99;3258:483;787:247:17;;:::o;1470:182:14:-;1513:16;1548:97;1592:16;:14;:16::i;:::-;1587:21;;:2;:21;:::i;:::-;1581:28;;:2;:28;:::i;:::-;1618:16;:14;:16::i;:::-;1548:19;:97::i;2622:338:13:-;2490:21:4;:19;:21::i;:::-;1747:13:13::1;:11;:13::i;:::-;-1:-1:-1::0;;;;;1733:27:13::1;:10;-1:-1:-1::0;;;;;1733:27:13::1;;1729:79;;1783:14;;-1:-1:-1::0;;;1783:14:13::1;;;;;;;;;;;1729:79;2687:20:::2;2710:8;:6;:8::i;:::-;2687:31;;2732:12;2748:1;2732:17:::0;2728:66:::2;;2772:11;;-1:-1:-1::0;;;2772:11:13::2;;;;;;;;;;;2728:66;2804:21;2812:12;2804:7;:21::i;:::-;2835:49;2856:13;:11;:13::i;:::-;2871:12;2835:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;2835:20:13::2;::::0;:49;:20:::2;:49::i;:::-;2899:54;2907:13;:11;:13::i;:::-;2930:7;:5;:7::i;:::-;2899:54;::::0;;-1:-1:-1;;;;;3739:15:23;;;3721:34;;3791:15;;;;3786:2;3771:18;;3764:43;3823:18;;3816:34;;;3671:2;3656:18;2899:54:13::2;;;;;;;2677:283;2532:20:4::0;1772:1;3038:22;;2858:209;3269:135:19;3337:13;:11;:13::i;:::-;-1:-1:-1;;;;;3323:27:19;:10;-1:-1:-1;;;;;3323:27:19;;3319:54;;3359:14;;-1:-1:-1;;;3359:14:19;;;;;;;;;;;3319:54;3383:14;3393:3;3383:9;:14::i;:::-;3269:135;:::o;969:131:14:-;1009:16;1044:49;1064:2;1075:16;:14;:16::i;2071:101:2:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;2609:214:19:-:0;2677:13;:11;:13::i;:::-;-1:-1:-1;;;;;2663:27:19;:10;-1:-1:-1;;;;;2663:27:19;;2659:54;;2699:14;;-1:-1:-1;;;2699:14:19;;;;;;;;;;;2659:54;2736:7;:5;:7::i;:::-;:32;;-1:-1:-1;;;2736:32:19;;2762:4;2736:32;;;160:51:23;-1:-1:-1;;;;;2736:17:19;;;;;;;133:18:23;;2736:32:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2727:6;:41;2723:69;;;2777:15;;-1:-1:-1;;;2777:15:19;;;;;;;;;;;2723:69;2802:14;2809:6;2802;:14::i;1247:236:17:-;1360:24;;-1:-1:-1;;;1360:24:17;;1314:14;1360:24;;;553:25:23;;;1314:14:17;1360:4;;:21;;526:18:23;;1360:24:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1347:9;:37;;:129;;1475:1;1347:129;;;1440:6;;1422:50;;-1:-1:-1;;;1422:50:17;;1466:4;1422:50;;;160:51:23;-1:-1:-1;;;;;1440:6:17;;;;1422:35;;133:18:23;;1422:50:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:7;:5;:7::i;:::-;:32;;-1:-1:-1;;;1387:32:17;;1413:4;1387:32;;;160:51:23;-1:-1:-1;;;;;1387:17:17;;;;;;;133:18:23;;1387:32:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;1528:341:19:-;3268:19:3;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:3;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:3;1476:19:8;:23;;;3376:66:3;;-1:-1:-1;3425:12:3;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:3;;;;;;;:::i;:::-;3525:12;:16;;-1:-1:-1;;3525:16:3;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:3;;;;;3551:65;1609:38:19::1;1641:5;1609:31;:38::i;:::-;1658:15;1676:16;:14;:16::i;:::-;1658:34:::0;-1:-1:-1;;;;;;1706:21:19;::::1;1702:49;;1736:15;;-1:-1:-1::0;;;1736:15:19::1;;;;;;;;;;;1702:49;1761:6;:16:::0;;-1:-1:-1;;;;;;1761:16:19::1;-1:-1:-1::0;;;;;1761:16:19;::::1;;::::0;;1788:40:::1;1795:7;:5;:7::i;:::-;:32;::::0;-1:-1:-1;;;1795:32:19;;1821:4:::1;1795:32;::::0;::::1;160:51:23::0;-1:-1:-1;;;;;1795:17:19;;;::::1;::::0;::::1;::::0;133:18:23;;1795:32:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1788:6;:40::i;:::-;1838:24;1848:13;:11;:13::i;:::-;1838:9;:24::i;:::-;1599:270;3640:14:3::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:3;;;3710:14;;-1:-1:-1;3434:36:23;;3710:14:3;;3422:2:23;3407:18;3710:14:3;;;;;;;;3258:483;1528:341:19;:::o;4858:179::-;4908:7;5022:8;:6;:8::i;:::-;4987:7;:5;:7::i;:::-;:32;;-1:-1:-1;;;4987:32:19;;5013:4;4987:32;;;160:51:23;-1:-1:-1;;;;;4987:17:19;;;;;;;133:18:23;;4987:32:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4952:6;;4934:50;;-1:-1:-1;;;4934:50:19;;4978:4;4934:50;;;160:51:23;-1:-1:-1;;;;;4952:6:19;;;;4934:35;;133:18:23;;4934:50:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;;;:::i;:::-;:96;;;;:::i;2345:154:14:-;2407:7;2433:59;2480:10;2485:5;2480:2;:10;:::i;:::-;2459:16;:14;:16::i;:::-;2454:21;;:2;:21;:::i;:::-;2448:28;;:2;:28;:::i;:::-;:43;;;;:::i;2414:116:12:-;1334:13:2;:11;:13::i;:::-;2495:28:12::1;2514:8;2495:18;:28::i;1246:117:13:-:0;1284:17;1338;1353:1;1338:14;:17::i;500:199:14:-;547:7;674:18;689:2;674:14;:18::i;1916:289:12:-;2020:17;;1972:7;;2051:23;;2047:152;;2097:28;2106:18;2097:8;:28::i;:::-;2090:35;;;1916:289;:::o;2047:152::-;2163:25;2172:15;2163:8;:25::i;835:307:0:-;925:11;952:14;969:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;969:25;1103:22;;;;1090:36;;835:307;-1:-1:-1;;835:307:0:o;1599:130:2:-;1513:6;;-1:-1:-1;;;;;1513:6:2;929:10:9;1662:23:2;1654:68;;;;-1:-1:-1;;;1654:68:2;;4383:2:23;1654:68:2;;;4365:21:23;;;4402:18;;;4395:30;4461:34;4441:18;;;4434:62;4513:18;;1654:68:2;4181:356:23;4309:168:19;4392:6;;4380:36;;-1:-1:-1;;;4380:36:19;;;;;553:25:23;;;4361:7:19;;-1:-1:-1;;;;;4392:6:19;;4380:28;;526:18:23;;4380:36:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4431:16;4440:6;4431:16;;;;553:25:23;;541:2;526:18;;407:177;4431:16:19;;;;;;;;-1:-1:-1;4464:6:19;4309:168::o;1647:215:12:-;1334:13:2;:11;:13::i;:::-;1722:15:12::1;1702:17;:35:::0;1747:14:::1;1764:10;:8;:10::i;:::-;1747:27;;1784:40;1805:10;1817:6;1784:7;:5;:7::i;:40::-;1839:16;::::0;553:25:23;;;1839:16:12::1;::::0;541:2:23;526:18;1839:16:12::1;;;;;;;1692:170;1647:215::o:0;354:318:0:-;444:11;471:14;488:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;488:25;632:22;;;;619:36;613:4;609:47;;354:318;-1:-1:-1;;354:318:0:o;1803:389:11:-;5363:13:3;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:3;;;;;;;:::i;:::-;1951:14:11::1;1967::::0;1997:43:::1;-1:-1:-1::0;;1997:24:11::1;:43::i;:::-;1950:90;;;;2064:16;:14;:16::i;:::-;2054:6;:26;2050:79;;2103:15;;-1:-1:-1::0;;;2103:15:11::1;;;;;;;;;;;2050:79;2139:46;2171:6;2179:5;2139:31;:46::i;1366:492:0:-:0;1474:20;1508:14;1525:25;-1:-1:-1;;3120:14:0;3116:22;;;3103:36;3098:3;3094:46;3037:121;;;;2864:310;1525:25;1508:42;;1558:10;1596:6;1582:21;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1582:21:0;;1576:27;;1616:8;1611:223;1634:6;1630:10;;:1;:10;;;1611:223;;;1790:2;1787:1;1783:10;1771:9;1763:6;1759:22;1755:39;1742:53;1736:59;;1823:2;1814:3;1818:1;1814:6;;;;;;;;;;:::i;:::-;;;;;;;;;;:11;1642:3;;;;:::i;:::-;;;;1611:223;;;;1841:10;;1366:492;;;;:::o;2565:287:4:-;1815:1;2697:7;;:19;2689:63;;;;-1:-1:-1;;;2689:63:4;;5634:2:23;2689:63:4;;;5616:21:23;5673:2;5653:18;;;5646:30;5712:33;5692:18;;;5685:61;5763:18;;2689:63:4;5432:355:23;2689:63:4;1815:1;2827:7;:18;2565:287::o;1645:200:17:-;1706:15;1724:7;:5;:7::i;:::-;:32;;-1:-1:-1;;;1724:32:17;;1750:4;1724:32;;;160:51:23;-1:-1:-1;;;;;1724:17:17;;;;;;;133:18:23;;1724:32:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1706:50;;1780:6;1770:7;:16;1766:73;;;1802:26;1811:16;1820:7;1811:6;:16;:::i;818:216:7:-;968:58;;-1:-1:-1;;;;;5984:32:23;;968:58:7;;;5966:51:23;6033:18;;;6026:34;;;941:86:7;;961:5;;-1:-1:-1;;;991:23:7;5939:18:23;;968:58:7;;;;-1:-1:-1;;968:58:7;;;;;;;;;;;;;;-1:-1:-1;;;;;968:58:7;-1:-1:-1;;;;;;968:58:7;;;;;;;;;;941:19;:86::i;2858:209:4:-;1772:1;3038:22;;2858:209::o;3530:91:19:-;3593:6;;3581:33;;-1:-1:-1;;;3581:33:19;;-1:-1:-1;;;;;178:32:23;;;3581:33:19;;;160:51:23;3593:6:19;;;;3581:28;;133:18:23;;3581:33:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3530:91;:::o;2673:187:2:-;2765:6;;;-1:-1:-1;;;;;2781:17:2;;;-1:-1:-1;;;;;;2781:17:2;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2944:199:19:-;3013:6;;-1:-1:-1;;;;;3013:6:19;3029:7;:5;:7::i;:::-;:32;;-1:-1:-1;;;3029:32:19;;-1:-1:-1;;;;;5984:32:23;;;3029::19;;;5966:51:23;6033:18;;;6026:34;;;3029:15:19;;;;;;;5939:18:23;;3029:32:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3071:36:19;;-1:-1:-1;;;3071:36:19;;;;;553:25:23;;;-1:-1:-1;;;;;3071:28:19;;;;;526:18:23;;3071:36:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3122:14;3129:6;3122:14;;;;553:25:23;;541:2;526:18;;407:177;2300:188:19;2344:7;2363:14;2394:7;:5;:7::i;:::-;-1:-1:-1;;;;;2380:30:19;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2363:49;;1225:42;-1:-1:-1;;;;;2429:31:19;;2461:6;1324:31;;;;;;-1:-1:-1;;;6811:26:23;;6862:2;6853:12;;6609:262;1324:31:19;;;;;;;;;;;;;1314:42;;;;;;2429:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;5984:32:23;;;;5966:51;;6048:2;6033:18;;6026:34;5954:2;5939:18;;5792:274;2429:52:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3115:593:11:-;3215:14;3231;3261:13;3289:9;3301:12;;3289:24;;3284:376;3319:16;:14;:16::i;:::-;3315:1;:20;3284:376;;;3373:19;3390:1;3373:16;:19::i;:::-;3360:9;:32;3356:294;;3471:16;3485:1;3471:13;:16::i;:::-;3462:25;;;;:::i;:::-;;;3356:294;;;3626:5;;3633:1;;-1:-1:-1;3115:593:11;-1:-1:-1;;3115:593:11:o;3356:294::-;3337:3;;;;:::i;:::-;;;;3284:376;;;;3677:5;3684:16;:14;:16::i;:::-;3669:32;;;;;3115:593;;;:::o;1354:216:12:-;5363:13:3;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:3;;;;;;;:::i;:::-;1461:26:12::1;:24;:26::i;:::-;1497:25;1516:5;1497:18;:25::i;:::-;1532:31;1556:6;1532:23;:31::i;3868:717:7:-:0;4298:23;4324:69;4352:4;4324:69;;;;;;;;;;;;;;;;;4332:5;-1:-1:-1;;;;;4324:27:7;;;:69;;;;;:::i;:::-;4407:17;;4298:95;;-1:-1:-1;4407:21:7;4403:176;;4502:10;4491:30;;;;;;;;;;;;:::i;:::-;4483:85;;;;-1:-1:-1;;;4483:85:7;;7497:2:23;4483:85:7;;;7479:21:23;7536:2;7516:18;;;7509:30;7575:34;7555:18;;;7548:62;-1:-1:-1;;;7626:18:23;;;7619:40;7676:19;;4483:85:7;7295:406:23;1104:111:2;5363:13:3;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:3;;;;;;;:::i;:::-;1176:32:2::1;929:10:9::0;1176:18:2::1;:32::i;2137:430:13:-:0;5363:13:3;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:3;;;;;;;:::i;:::-;2217:51:13::1;:49;:51::i;:::-;2310:1;2290:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;2282:30:13::1;::::0;2278:83:::1;;2335:15;;-1:-1:-1::0;;;2335:15:13::1;;;;;;;;;;;2278:83;2399:1;2374:13;:11;:13::i;:::-;-1:-1:-1::0;;;;;2374:27:13::1;::::0;2370:80:::1;;2424:15;;-1:-1:-1::0;;;2424:15:13::1;;;;;;;;;;;2370:80;2460:100;2517:10;2537:4;2544:6;2478:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;2460:43:13::1;::::0;:100;;:43:::1;:100::i;3883:223:8:-:0;4016:12;4047:52;4069:6;4077:4;4083:1;4086:12;4047:21;:52::i;:::-;4040:59;3883:223;-1:-1:-1;;;;3883:223:8:o;1853:111:4:-;5363:13:3;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:3;;;;;;;:::i;:::-;1923:34:4::1;:32;:34::i;1040:252:7:-:0;1216:68;;-1:-1:-1;;;;;3739:15:23;;;1216:68:7;;;3721:34:23;3791:15;;3771:18;;;3764:43;3823:18;;;3816:34;;;1189:96:7;;1209:5;;-1:-1:-1;;;1239:27:7;3656:18:23;;1216:68:7;3481:375:23;1189:96:7;1040:252;;;;:::o;4970:446:8:-;5135:12;5192:5;5167:21;:30;;5159:81;;;;-1:-1:-1;;;5159:81:8;;7908:2:23;5159:81:8;;;7890:21:23;7947:2;7927:18;;;7920:30;7986:34;7966:18;;;7959:62;-1:-1:-1;;;8037:18:23;;;8030:36;8083:19;;5159:81:8;7706:402:23;5159:81:8;5251:12;5265:23;5292:6;-1:-1:-1;;;;;5292:11:8;5311:5;5318:4;5292:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5250:73;;;;5340:69;5367:6;5375:7;5384:10;5396:12;5340:26;:69::i;:::-;5333:76;4970:446;-1:-1:-1;;;;;;;4970:446:8:o;1970:109:4:-;5363:13:3;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:3;;;;;;;:::i;6588:628:8:-;6768:12;6796:7;6792:418;;;6823:10;:17;6844:1;6823:22;6819:286;;-1:-1:-1;;;;;1476:19:8;;;7030:60;;;;-1:-1:-1;;;7030:60:8;;8857:2:23;7030:60:8;;;8839:21:23;8896:2;8876:18;;;8869:30;8935:31;8915:18;;;8908:59;8984:18;;7030:60:8;8655:353:23;7030:60:8;-1:-1:-1;7125:10:8;7118:17;;6792:418;7166:33;7174:10;7186:12;7897:17;;:21;7893:379;;8125:10;8119:17;8181:15;8168:10;8164:2;8160:19;8153:44;7893:379;8248:12;8241:20;;-1:-1:-1;;;8241:20:8;;;;;;;;:::i;222:180:23:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:23;;222:180;-1:-1:-1;222:180:23:o;589:131::-;-1:-1:-1;;;;;664:31:23;;654:42;;644:70;;710:1;707;700:12;725:388;793:6;801;854:2;842:9;833:7;829:23;825:32;822:52;;;870:1;867;860:12;822:52;909:9;896:23;928:31;953:5;928:31;:::i;:::-;978:5;-1:-1:-1;1035:2:23;1020:18;;1007:32;1048:33;1007:32;1048:33;:::i;:::-;1100:7;1090:17;;;725:388;;;;;:::o;1118:632::-;1289:2;1341:21;;;1411:13;;1314:18;;;1433:22;;;1260:4;;1289:2;1512:15;;;;1486:2;1471:18;;;1260:4;1555:169;1569:6;1566:1;1563:13;1555:169;;;1630:13;;1618:26;;1699:15;;;;1664:12;;;;1591:1;1584:9;1555:169;;;-1:-1:-1;1741:3:23;;1118:632;-1:-1:-1;;;;;;1118:632:23:o;1755:247::-;1814:6;1867:2;1855:9;1846:7;1842:23;1838:32;1835:52;;;1883:1;1880;1873:12;1835:52;1922:9;1909:23;1941:31;1966:5;1941:31;:::i;:::-;1991:5;1755:247;-1:-1:-1;;;1755:247:23:o;2240:127::-;2301:10;2296:3;2292:20;2289:1;2282:31;2332:4;2329:1;2322:15;2356:4;2353:1;2346:15;2372:168;2412:7;2478:1;2474;2470:6;2466:14;2463:1;2460:21;2455:1;2448:9;2441:17;2437:45;2434:71;;;2485:18;;:::i;:::-;-1:-1:-1;2525:9:23;;2372:168::o;2545:128::-;2585:3;2616:1;2612:6;2609:1;2606:13;2603:39;;;2622:18;;:::i;:::-;-1:-1:-1;2658:9:23;;2545:128::o;2678:184::-;2748:6;2801:2;2789:9;2780:7;2776:23;2772:32;2769:52;;;2817:1;2814;2807:12;2769:52;-1:-1:-1;2840:16:23;;2678:184;-1:-1:-1;2678:184:23:o;2867:410::-;3069:2;3051:21;;;3108:2;3088:18;;;3081:30;3147:34;3142:2;3127:18;;3120:62;-1:-1:-1;;;3213:2:23;3198:18;;3191:44;3267:3;3252:19;;2867:410::o;4051:125::-;4091:4;4119:1;4116;4113:8;4110:34;;;4124:18;;:::i;:::-;-1:-1:-1;4161:9:23;;4051:125::o;4542:407::-;4744:2;4726:21;;;4783:2;4763:18;;;4756:30;4822:34;4817:2;4802:18;;4795:62;-1:-1:-1;;;4888:2:23;4873:18;;4866:41;4939:3;4924:19;;4542:407::o;4954:127::-;5015:10;5010:3;5006:20;5003:1;4996:31;5046:4;5043:1;5036:15;5070:4;5067:1;5060:15;5086:127;5147:10;5142:3;5138:20;5135:1;5128:31;5178:4;5175:1;5168:15;5202:4;5199:1;5192:15;5218:209;5256:3;5284:18;5337:2;5330:5;5326:14;5364:2;5355:7;5352:15;5349:41;;5370:18;;:::i;:::-;5419:1;5406:15;;5218:209;-1:-1:-1;;;5218:209:23:o;6071:277::-;6138:6;6191:2;6179:9;6170:7;6166:23;6162:32;6159:52;;;6207:1;6204;6197:12;6159:52;6239:9;6233:16;6292:5;6285:13;6278:21;6271:5;6268:32;6258:60;;6314:1;6311;6304:12;6353:251;6423:6;6476:2;6464:9;6455:7;6451:23;6447:32;6444:52;;;6492:1;6489;6482:12;6444:52;6524:9;6518:16;6543:31;6568:5;6543:31;:::i;7155:135::-;7194:3;7215:17;;;7212:43;;7235:18;;:::i;:::-;-1:-1:-1;7282:1:23;7271:13;;7155:135::o;8113:258::-;8185:1;8195:113;8209:6;8206:1;8203:13;8195:113;;;8285:11;;;8279:18;8266:11;;;8259:39;8231:2;8224:10;8195:113;;;8326:6;8323:1;8320:13;8317:48;;;-1:-1:-1;;8361:1:23;8343:16;;8336:27;8113:258::o;8376:274::-;8505:3;8543:6;8537:13;8559:53;8605:6;8600:3;8593:4;8585:6;8581:17;8559:53;:::i;:::-;8628:16;;;;;8376:274;-1:-1:-1;;8376:274:23:o;9013:383::-;9162:2;9151:9;9144:21;9125:4;9194:6;9188:13;9237:6;9232:2;9221:9;9217:18;9210:34;9253:66;9312:6;9307:2;9296:9;9292:18;9287:2;9279:6;9275:15;9253:66;:::i;:::-;9380:2;9359:15;-1:-1:-1;;9355:29:23;9340:45;;;;9387:2;9336:54;;9013:383;-1:-1:-1;;9013:383:23:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "amountAtIndex(uint256)": "0ed2cb08",
    "amounts()": "6beaeeae",
    "beneficiary()": "38af3eed",
    "claim()": "4e71d92d",
    "clawback()": "2526d960",
    "clawbackTimestamp()": "c0ae7e54",
    "delegate(address)": "5c19a95c",
    "initialize(address)": "c4d66de8",
    "initialize(address,address)": "485cc955",
    "lockup()": "06490f47",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "stake(uint256)": "a694fc3a",
    "timestampAtIndex(uint256)": "e457c76d",
    "timestamps()": "491447a8",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b",
    "unstake(uint256)": "2e17de78",
    "unvested()": "da919faa",
    "vested()": "fea5657c",
    "vestedChunks()": "b2b132d8",
    "vestedOn(uint256)": "aba02235",
    "vestingPeriods()": "fdc149ef"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidClaim\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLockup\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVested\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Clawback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"amountAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amounts\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clawback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clawbackTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"staking\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"timestampAtIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timestamps\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unvested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vested\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestedChunks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"vestedOn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingPeriods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"amountAtIndex(uint256)\":{\"details\":\"using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args\",\"returns\":{\"_0\":\"the amount to be vested at the given index\"}},\"amounts()\":{\"details\":\"using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args\",\"returns\":{\"_0\":\"the array of chunked amounts to be vested\"}},\"beneficiary()\":{\"details\":\"using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args\",\"returns\":{\"_0\":\"The beneficiary address\"}},\"delegate(address)\":{\"params\":{\"who\":\"The address to delegate to\"}},\"initialize(address)\":{\"details\":\"this pulls in the required ERC20 tokens from the sender to setup\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"params\":{\"amount\":\"The amount of ECOx to stake\"}},\"timestampAtIndex(uint256)\":{\"details\":\"using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args\",\"returns\":{\"_0\":\"the timestamp at which the given index chunk is vested\"}},\"timestamps()\":{\"details\":\"using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-argsThese are expected to be already sorted in timestamp order\",\"returns\":{\"_0\":\"the timestamps at which chunks of tokens are vested\"}},\"token()\":{\"details\":\"using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args\",\"returns\":{\"_0\":\"the token which is being vested\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`).\",\"params\":{\"newOwner\":\"The address to transfer ownership to Can only be called by the current owner.\"}},\"unstake(uint256)\":{\"details\":\"this allows users to vote with released tokens while still being able to claim lockedup tokens\",\"returns\":{\"_0\":\"The amount of ECOx unstaked\"}},\"unvested()\":{\"returns\":{\"_0\":\"amount of tokens that the are currently unvested\"}},\"vested()\":{\"returns\":{\"_0\":\"amount of tokens that are currently vested\"}},\"vestedOn(uint256)\":{\"params\":{\"timestamp\":\"The time for which vested tokens are being calculated\"},\"returns\":{\"amount\":\"of tokens vested at timestamp\"}},\"vestingPeriods()\":{\"details\":\"using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args\",\"returns\":{\"_0\":\"the token which is being vested\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAmount()\":[{\"notice\":\"Invalid staked amount\"}],\"InvalidClaim()\":[{\"notice\":\"attempts to claim an invalid amount\"}],\"InvalidLockup()\":[{\"notice\":\"Lockup address is invalid\"}],\"InvalidParams()\":[{\"notice\":\"Some parameters are invalid\"}],\"NotVested()\":[{\"notice\":\"No tokens are currently vested\"}],\"Unauthorized()\":[{\"notice\":\"A function is called by an unauthorized participant\"}]},\"kind\":\"user\",\"methods\":{\"amountAtIndex(uint256)\":{\"notice\":\"The amount to be vested at the given index\"},\"amounts()\":{\"notice\":\"The array of chunked amounts to be vested\"},\"beneficiary()\":{\"notice\":\"The address who the tokens are being vested to\"},\"claim()\":{\"notice\":\"Claims any currently vested tokens to the beneficiary\"},\"clawback()\":{\"notice\":\"return all unvested tokens to the admin\"},\"delegate(address)\":{\"notice\":\"Delegates staked ECOx to a chosen recipient\"},\"initialize(address)\":{\"notice\":\"Initializes the lockup vault\"},\"stake(uint256)\":{\"notice\":\"Stakes ECOx in the lockup contract\"},\"timestampAtIndex(uint256)\":{\"notice\":\"The timestamp at which the given index chunk is vested\"},\"timestamps()\":{\"notice\":\"The array of timestamps at which chunks of tokens are vested\"},\"token()\":{\"notice\":\"The token which is being vested\"},\"unstake(uint256)\":{\"notice\":\"Unstakes any lockedup staked ECOx that hasn't already been unstaked\"},\"unvested()\":{\"notice\":\"Returns the amount of tokens that are currently unvested\"},\"vested()\":{\"notice\":\"Returns the amount of tokens that are currently vested\"},\"vestedChunks()\":{\"notice\":\"The number of vesting chunks used up so far\"},\"vestedOn(uint256)\":{\"notice\":\"calculates tokens vested at a given timestamp\"},\"vestingPeriods()\":{\"notice\":\"The token which is being vested\"}},\"notice\":\"ECOxEmployeeLockup contract holds ECOx for employees until a cliff date has passed.  Notably it is initialized with only one timestamp (cliff date) and one initial token amount (0). As a result, the methods found in ChunkedVestingVaultArgs will not provide useful information and any methods referring to amounts, timestamps and chunks will reflect the fact that there is only one of each. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ECOxEmployeeLockup.sol\":\"ECOxEmployeeLockup\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/ds-test/src/\",\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/vesting/lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\",\":vesting/=lib/vesting/src/\"]},\"sources\":{\"lib/clones-with-immutable-args/src/Clone.sol\":{\"keccak256\":\"0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545\",\"license\":\"BSD\",\"urls\":[\"bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb\",\"dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x6c2b54ec184943843041ab77f61988b5060f6f03acbfe92cdc125f95f00891da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efc212a7612f6ea70f7aa1f68b9c26e7ceaa412333e23dcf66740f9d51fa689b\",\"dweb:/ipfs/QmTkcTYoF14eN12FxyX2GQRc9KwdhYfjoJ3XJt1yvJWcaB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xefe5b03cf4147c27e7e38a1b8ddb3e0dc7f0ba8f6be71627d962fa91c98943dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41b6359e78c5a2ce4c9d7697a876bcb307f05ddd9f4695831d70efcd425eebc\",\"dweb:/ipfs/QmbmbxDte15Thu4pWG4dNYRHVSbXZZEDRSWfg8haKNjNJp\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d\",\"dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b\",\"dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de\",\"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC1820RegistryUpgradeable.sol\":{\"keccak256\":\"0x24119abe4e149aaf3f06c6c3db6182f63533173c20ab110007bffefa7be62d5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc446abd2a5a4d19ca522915dd3a020cbe70aae579b85eb4721fffb8a84f37cf\",\"dweb:/ipfs/QmR8cHDj1ZTnHFo2QWnZ366hpkD7apHHEnaQdqhEZMpEoP\"]},\"lib/vesting/src/ChunkedVestingVault.sol\":{\"keccak256\":\"0x94cb1c1e104e31f9ac69623d6c05cd4e3bc1a8094a65e92b880af20cb31928ab\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d53aebb3d69a1dc3d81c50357f1fdd48e536a4f29b3a3cdecca2fb71f26452d2\",\"dweb:/ipfs/QmdFmiPzGyzddg4uwZszawX4Rw9sds2V2L31Tx4xTztGcC\"]},\"lib/vesting/src/ClawbackVestingVault.sol\":{\"keccak256\":\"0xe3df8e2c70a0447ab5d4b00b817cd0a19d13c75053af20eaa59e67f48fdbc6fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://03a6dd16c1679f820c38a5333102a27dfaf7d3611f1fbf09ce167f0a19dea29c\",\"dweb:/ipfs/QmQgPvBm1ZLPdxYY5iKyR12SGUgTtip86yQF23nGea9ten\"]},\"lib/vesting/src/VestingVault.sol\":{\"keccak256\":\"0x61a0832554effd88de053039767ff1ea0fbd25453cb5454732b009689e39c421\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b5c802aa2aa31ff3c4b9e687f4146f28747b1d85a6fb7ef61406365b1d164b90\",\"dweb:/ipfs/QmeeVa7rLiTqsqz5zBn2mewnbDj2Ax85j1AJ7qjkpFHhaA\"]},\"lib/vesting/src/helpers/ChunkedVestingVaultArgs.sol\":{\"keccak256\":\"0x3af784645a80bacd661148f9261333ef45f62ad3c5c9e9b6de0d7d828afafe8a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://92929ebc30f4f57340dbd3c44812da03f5e3b849cda501003aad8c541a60484f\",\"dweb:/ipfs/QmYX6AkDmvPY84QdrFizCQ1aT6SB9m9r5ymN7ibsULswfe\"]},\"lib/vesting/src/interfaces/IVestingVault.sol\":{\"keccak256\":\"0xab65511770eb08846546ee16816298b523495c24e394ce10adfa7546b3898090\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0d2e46bf276014bc98e879e6070dfde09a448b9af4c349d4998d0a3847cdba43\",\"dweb:/ipfs/Qmc3ngiN5mkxWLxXigxaLmzinJY3LNBvp2edrDtgAYLxBK\"]},\"src/ECOxEmployeeLockup.sol\":{\"keccak256\":\"0x6a2c7ab84d37de74f8ef6318519461a02544108d82cecadd10c4815f5b7bb6f4\",\"urls\":[\"bzz-raw://8f8c088e7e0ab4a15e34f781e0d99ea7c8c8f672bea22863947afb0fad3be368\",\"dweb:/ipfs/QmaeiGVPFQZU8WVo2y3KqZWpRM1TwTzNBKd43aFycmL6Ro\"]},\"src/ECOxLockupVault.sol\":{\"keccak256\":\"0x089d2778c090ca90b3e19a7955432f03eb2c655912e4752079004e6b802345d4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a33cdbb7c6940710485d5acab2240b76b11696f496a4f02b07d1caad5b62f7ad\",\"dweb:/ipfs/Qmcf4M4vBLfUXGmWqU8gFSWX2gxxetWzFS7N7iqtuSkdBF\"]},\"src/interfaces/IECOx.sol\":{\"keccak256\":\"0xc0b78741c4afd03bd9f9d1f98bbb53a25095cac0f4d414dd4ebfbd972ff88375\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e3d3e1c4fd0c531cce175abd1bb1f32ba851e32c91687c14a72993c7fc016493\",\"dweb:/ipfs/QmY19eSZjfRkPh3jkqEeMd8uVfGPFs2xXdkHPcbDnXuQP6\"]},\"src/interfaces/IECOxLockup.sol\":{\"keccak256\":\"0x297462c534e0425a0a5b3d7b9ac835ba21b9635e3bc4a47158bb58f2b3501ac9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://98ff94d7b843d1698ed5d22bedc77270fdfbee97e00c87e82a4a589a35527d07\",\"dweb:/ipfs/QmS4f6nBc9k5A2uupehQhbpmT8mpErKDkd3Cbp8zrgCoYV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidClaim"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidLockup"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotVested"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beneficiary",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Claimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Clawback",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Staked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstaked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "amountAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "amounts",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "beneficiary",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claim"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clawback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "clawbackTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "staking",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lockup",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "timestampAtIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "timestamps",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IERC20Upgradeable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unvested",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vested",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vestedChunks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "vestedOn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "vestingPeriods",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "amountAtIndex(uint256)": {
            "details": "using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args",
            "returns": {
              "_0": "the amount to be vested at the given index"
            }
          },
          "amounts()": {
            "details": "using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args",
            "returns": {
              "_0": "the array of chunked amounts to be vested"
            }
          },
          "beneficiary()": {
            "details": "using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args",
            "returns": {
              "_0": "The beneficiary address"
            }
          },
          "delegate(address)": {
            "params": {
              "who": "The address to delegate to"
            }
          },
          "initialize(address)": {
            "details": "this pulls in the required ERC20 tokens from the sender to setup"
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "stake(uint256)": {
            "params": {
              "amount": "The amount of ECOx to stake"
            }
          },
          "timestampAtIndex(uint256)": {
            "details": "using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args",
            "returns": {
              "_0": "the timestamp at which the given index chunk is vested"
            }
          },
          "timestamps()": {
            "details": "using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-argsThese are expected to be already sorted in timestamp order",
            "returns": {
              "_0": "the timestamps at which chunks of tokens are vested"
            }
          },
          "token()": {
            "details": "using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args",
            "returns": {
              "_0": "the token which is being vested"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`).",
            "params": {
              "newOwner": "The address to transfer ownership to Can only be called by the current owner."
            }
          },
          "unstake(uint256)": {
            "details": "this allows users to vote with released tokens while still being able to claim lockedup tokens",
            "returns": {
              "_0": "The amount of ECOx unstaked"
            }
          },
          "unvested()": {
            "returns": {
              "_0": "amount of tokens that the are currently unvested"
            }
          },
          "vested()": {
            "returns": {
              "_0": "amount of tokens that are currently vested"
            }
          },
          "vestedOn(uint256)": {
            "params": {
              "timestamp": "The time for which vested tokens are being calculated"
            },
            "returns": {
              "amount": "of tokens vested at timestamp"
            }
          },
          "vestingPeriods()": {
            "details": "using ClonesWithImmutableArgs pattern here to save gashttps://github.com/wighawag/clones-with-immutable-args",
            "returns": {
              "_0": "the token which is being vested"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "amountAtIndex(uint256)": {
            "notice": "The amount to be vested at the given index"
          },
          "amounts()": {
            "notice": "The array of chunked amounts to be vested"
          },
          "beneficiary()": {
            "notice": "The address who the tokens are being vested to"
          },
          "claim()": {
            "notice": "Claims any currently vested tokens to the beneficiary"
          },
          "clawback()": {
            "notice": "return all unvested tokens to the admin"
          },
          "delegate(address)": {
            "notice": "Delegates staked ECOx to a chosen recipient"
          },
          "initialize(address)": {
            "notice": "Initializes the lockup vault"
          },
          "stake(uint256)": {
            "notice": "Stakes ECOx in the lockup contract"
          },
          "timestampAtIndex(uint256)": {
            "notice": "The timestamp at which the given index chunk is vested"
          },
          "timestamps()": {
            "notice": "The array of timestamps at which chunks of tokens are vested"
          },
          "token()": {
            "notice": "The token which is being vested"
          },
          "unstake(uint256)": {
            "notice": "Unstakes any lockedup staked ECOx that hasn't already been unstaked"
          },
          "unvested()": {
            "notice": "Returns the amount of tokens that are currently unvested"
          },
          "vested()": {
            "notice": "Returns the amount of tokens that are currently vested"
          },
          "vestedChunks()": {
            "notice": "The number of vesting chunks used up so far"
          },
          "vestedOn(uint256)": {
            "notice": "calculates tokens vested at a given timestamp"
          },
          "vestingPeriods()": {
            "notice": "The token which is being vested"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/vesting/lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/",
        ":vesting/=lib/vesting/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ECOxEmployeeLockup.sol": "ECOxEmployeeLockup"
      },
      "libraries": {}
    },
    "sources": {
      "lib/clones-with-immutable-args/src/Clone.sol": {
        "keccak256": "0x958f183649832a994119e7484fea15a6b7b91c7e7b1ae4f3736104cd89ae7545",
        "urls": [
          "bzz-raw://2b4bbb61023cf315287406fee6086d2c6c5b85d6b1a141a8ee10295b663712bb",
          "dweb:/ipfs/QmaJP5pKF2WoBWsMCrAZssHhDZXvpufaWmg8oYfVgWMAHq"
        ],
        "license": "BSD"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x6c2b54ec184943843041ab77f61988b5060f6f03acbfe92cdc125f95f00891da",
        "urls": [
          "bzz-raw://efc212a7612f6ea70f7aa1f68b9c26e7ceaa412333e23dcf66740f9d51fa689b",
          "dweb:/ipfs/QmTkcTYoF14eN12FxyX2GQRc9KwdhYfjoJ3XJt1yvJWcaB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xefe5b03cf4147c27e7e38a1b8ddb3e0dc7f0ba8f6be71627d962fa91c98943dd",
        "urls": [
          "bzz-raw://d41b6359e78c5a2ce4c9d7697a876bcb307f05ddd9f4695831d70efcd425eebc",
          "dweb:/ipfs/QmbmbxDte15Thu4pWG4dNYRHVSbXZZEDRSWfg8haKNjNJp"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/draft-IERC20PermitUpgradeable.sol": {
        "keccak256": "0xcc70d8e2281fb3ff69e8ab242500f10142cd0a7fa8dd9e45882be270d4d09024",
        "urls": [
          "bzz-raw://17a4063bc918df0f7bb9cbf04c6f0bb4977afab3f2fc212bc138a178312a221d",
          "dweb:/ipfs/QmZMdvsHP5mDEAAdrK4bNeNh47TfmSFgN9qEBFTbie7zmm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0xf42efac0d704b136c4d85e970562d4dbc1160d726ee93b5133122eb14fe368df",
        "urls": [
          "bzz-raw://e814c30d43cef5501933b775f33a6d6f06cde8aa3b7ce3773cf2256169bb6a1b",
          "dweb:/ipfs/QmWMqHGc8MHDRgrPrtVyPqsYizr8dJsyFhnmwQV6aQwPKn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
        "urls": [
          "bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
          "dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC1820RegistryUpgradeable.sol": {
        "keccak256": "0x24119abe4e149aaf3f06c6c3db6182f63533173c20ab110007bffefa7be62d5e",
        "urls": [
          "bzz-raw://cc446abd2a5a4d19ca522915dd3a020cbe70aae579b85eb4721fffb8a84f37cf",
          "dweb:/ipfs/QmR8cHDj1ZTnHFo2QWnZ366hpkD7apHHEnaQdqhEZMpEoP"
        ],
        "license": "MIT"
      },
      "lib/vesting/src/ChunkedVestingVault.sol": {
        "keccak256": "0x94cb1c1e104e31f9ac69623d6c05cd4e3bc1a8094a65e92b880af20cb31928ab",
        "urls": [
          "bzz-raw://d53aebb3d69a1dc3d81c50357f1fdd48e536a4f29b3a3cdecca2fb71f26452d2",
          "dweb:/ipfs/QmdFmiPzGyzddg4uwZszawX4Rw9sds2V2L31Tx4xTztGcC"
        ],
        "license": "UNLICENSED"
      },
      "lib/vesting/src/ClawbackVestingVault.sol": {
        "keccak256": "0xe3df8e2c70a0447ab5d4b00b817cd0a19d13c75053af20eaa59e67f48fdbc6fc",
        "urls": [
          "bzz-raw://03a6dd16c1679f820c38a5333102a27dfaf7d3611f1fbf09ce167f0a19dea29c",
          "dweb:/ipfs/QmQgPvBm1ZLPdxYY5iKyR12SGUgTtip86yQF23nGea9ten"
        ],
        "license": "UNLICENSED"
      },
      "lib/vesting/src/VestingVault.sol": {
        "keccak256": "0x61a0832554effd88de053039767ff1ea0fbd25453cb5454732b009689e39c421",
        "urls": [
          "bzz-raw://b5c802aa2aa31ff3c4b9e687f4146f28747b1d85a6fb7ef61406365b1d164b90",
          "dweb:/ipfs/QmeeVa7rLiTqsqz5zBn2mewnbDj2Ax85j1AJ7qjkpFHhaA"
        ],
        "license": "UNLICENSED"
      },
      "lib/vesting/src/helpers/ChunkedVestingVaultArgs.sol": {
        "keccak256": "0x3af784645a80bacd661148f9261333ef45f62ad3c5c9e9b6de0d7d828afafe8a",
        "urls": [
          "bzz-raw://92929ebc30f4f57340dbd3c44812da03f5e3b849cda501003aad8c541a60484f",
          "dweb:/ipfs/QmYX6AkDmvPY84QdrFizCQ1aT6SB9m9r5ymN7ibsULswfe"
        ],
        "license": "UNLICENSED"
      },
      "lib/vesting/src/interfaces/IVestingVault.sol": {
        "keccak256": "0xab65511770eb08846546ee16816298b523495c24e394ce10adfa7546b3898090",
        "urls": [
          "bzz-raw://0d2e46bf276014bc98e879e6070dfde09a448b9af4c349d4998d0a3847cdba43",
          "dweb:/ipfs/Qmc3ngiN5mkxWLxXigxaLmzinJY3LNBvp2edrDtgAYLxBK"
        ],
        "license": "UNLICENSED"
      },
      "src/ECOxEmployeeLockup.sol": {
        "keccak256": "0x6a2c7ab84d37de74f8ef6318519461a02544108d82cecadd10c4815f5b7bb6f4",
        "urls": [
          "bzz-raw://8f8c088e7e0ab4a15e34f781e0d99ea7c8c8f672bea22863947afb0fad3be368",
          "dweb:/ipfs/QmaeiGVPFQZU8WVo2y3KqZWpRM1TwTzNBKd43aFycmL6Ro"
        ],
        "license": null
      },
      "src/ECOxLockupVault.sol": {
        "keccak256": "0x089d2778c090ca90b3e19a7955432f03eb2c655912e4752079004e6b802345d4",
        "urls": [
          "bzz-raw://a33cdbb7c6940710485d5acab2240b76b11696f496a4f02b07d1caad5b62f7ad",
          "dweb:/ipfs/Qmcf4M4vBLfUXGmWqU8gFSWX2gxxetWzFS7N7iqtuSkdBF"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IECOx.sol": {
        "keccak256": "0xc0b78741c4afd03bd9f9d1f98bbb53a25095cac0f4d414dd4ebfbd972ff88375",
        "urls": [
          "bzz-raw://e3d3e1c4fd0c531cce175abd1bb1f32ba851e32c91687c14a72993c7fc016493",
          "dweb:/ipfs/QmY19eSZjfRkPh3jkqEeMd8uVfGPFs2xXdkHPcbDnXuQP6"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IECOxLockup.sol": {
        "keccak256": "0x297462c534e0425a0a5b3d7b9ac835ba21b9635e3bc4a47158bb58f2b3501ac9",
        "urls": [
          "bzz-raw://98ff94d7b843d1698ed5d22bedc77270fdfbee97e00c87e82a4a589a35527d07",
          "dweb:/ipfs/QmS4f6nBc9k5A2uupehQhbpmT8mpErKDkd3Cbp8zrgCoYV"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ECOxEmployeeLockup.sol",
    "id": 2262,
    "exportedSymbols": {
      "ChunkedVestingVault": [
        1629
      ],
      "ECOxEmployeeLockup": [
        2261
      ],
      "ECOxLockupVault": [
        2749
      ],
      "IECOx": [
        2757
      ],
      "IERC20Upgradeable": [
        680
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1848:17",
    "nodes": [
      {
        "id": 2148,
        "nodeType": "PragmaDirective",
        "src": "0:23:17",
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 2150,
        "nodeType": "ImportDirective",
        "src": "25:54:17",
        "absolutePath": "src/ECOxLockupVault.sol",
        "file": "./ECOxLockupVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2262,
        "sourceUnit": 2750,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2149,
              "name": "ECOxLockupVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2749,
              "src": "33:15:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2152,
        "nodeType": "ImportDirective",
        "src": "80:45:17",
        "absolutePath": "src/interfaces/IECOx.sol",
        "file": "./interfaces/IECOx.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2262,
        "sourceUnit": 2758,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2151,
              "name": "IECOx",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2757,
              "src": "88:5:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2154,
        "nodeType": "ImportDirective",
        "src": "126:113:17",
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2262,
        "sourceUnit": 681,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2153,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 680,
              "src": "134:17:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2156,
        "nodeType": "ImportDirective",
        "src": "240:68:17",
        "absolutePath": "lib/vesting/src/ChunkedVestingVault.sol",
        "file": "vesting/ChunkedVestingVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2262,
        "sourceUnit": 1630,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2155,
              "name": "ChunkedVestingVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1629,
              "src": "248:19:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2261,
        "nodeType": "ContractDefinition",
        "src": "733:1114:17",
        "nodes": [
          {
            "id": 2193,
            "nodeType": "FunctionDefinition",
            "src": "787:247:17",
            "body": {
              "id": 2192,
              "nodeType": "Block",
              "src": "858:176:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2171,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2161,
                        "src": "900:5:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2168,
                        "name": "ChunkedVestingVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1629,
                        "src": "868:19:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ChunkedVestingVault_$1629_$",
                          "typeString": "type(contract ChunkedVestingVault)"
                        }
                      },
                      "id": 2170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1487,
                      "src": "868:31:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:38:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2173,
                  "nodeType": "ExpressionStatement",
                  "src": "868:38:17"
                },
                {
                  "assignments": [
                    2175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2175,
                      "mutability": "mutable",
                      "name": "_lockup",
                      "nameLocation": "925:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2192,
                      "src": "917:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2174,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "917:7:17",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2177,
                  "initialValue": {
                    "id": 2176,
                    "name": "staking",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2163,
                    "src": "935:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "917:25:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2178,
                      "name": "_lockup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "956:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "975:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "967:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "967:7:17",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "967:10:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "956:21:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2187,
                  "nodeType": "IfStatement",
                  "src": "952:49:17",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2184,
                        "name": "InvalidLockup",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2400,
                        "src": "986:13:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "986:15:17",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2186,
                    "nodeType": "RevertStatement",
                    "src": "979:22:17"
                  }
                },
                {
                  "expression": {
                    "id": 2190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2188,
                      "name": "lockup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2427,
                      "src": "1011:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2189,
                      "name": "_lockup",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2175,
                      "src": "1020:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1011:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2191,
                  "nodeType": "ExpressionStatement",
                  "src": "1011:16:17"
                }
              ]
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2166,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2165,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 431,
                  "src": "846:11:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "846:11:17"
              }
            ],
            "name": "initialize",
            "nameLocation": "796:10:17",
            "parameters": {
              "id": 2164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2161,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "815:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "807:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2160,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2163,
                  "mutability": "mutable",
                  "name": "staking",
                  "nameLocation": "830:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2193,
                  "src": "822:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "806:32:17"
            },
            "returnParameters": {
              "id": 2167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:0:17"
            },
            "scope": 2261,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2230,
            "nodeType": "FunctionDefinition",
            "src": "1247:236:17",
            "body": {
              "id": 2229,
              "nodeType": "Block",
              "src": "1330:153:17",
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 2202,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2196,
                        "src": "1347:9:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1382:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 2203,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1360:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECOxEmployeeLockup_$2261",
                              "typeString": "contract ECOxEmployeeLockup"
                            }
                          },
                          "id": 2204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestampAtIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2061,
                          "src": "1360:21:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) pure external returns (uint256)"
                          }
                        },
                        "id": 2206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1360:24:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1347:37:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 2226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1475:1:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1347:129:17",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2213,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1413:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ECOxEmployeeLockup_$2261",
                                  "typeString": "contract ECOxEmployeeLockup"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ECOxEmployeeLockup_$2261",
                                  "typeString": "contract ECOxEmployeeLockup"
                                }
                              ],
                              "id": 2212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1405:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2211,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1405:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1405:13:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2208,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1790,
                              "src": "1387:5:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IERC20Upgradeable_$680_$",
                                "typeString": "function () pure returns (contract IERC20Upgradeable)"
                              }
                            },
                            "id": 2209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1387:7:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$680",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          },
                          "id": 2210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 637,
                          "src": "1387:17:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1387:32:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2222,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1466:4:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ECOxEmployeeLockup_$2261",
                                  "typeString": "contract ECOxEmployeeLockup"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ECOxEmployeeLockup_$2261",
                                  "typeString": "contract ECOxEmployeeLockup"
                                }
                              ],
                              "id": 2221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1458:7:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2220,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1458:7:17",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1458:13:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2217,
                                "name": "lockup",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2427,
                                "src": "1440:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2216,
                              "name": "IERC20Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 680,
                              "src": "1422:17:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$680_$",
                                "typeString": "type(contract IERC20Upgradeable)"
                              }
                            },
                            "id": 2218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1422:25:17",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Upgradeable_$680",
                              "typeString": "contract IERC20Upgradeable"
                            }
                          },
                          "id": 2219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 637,
                          "src": "1422:35:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1422:50:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1387:85:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2201,
                  "id": 2228,
                  "nodeType": "Return",
                  "src": "1340:136:17"
                }
              ]
            },
            "baseFunctions": [
              1504
            ],
            "documentation": {
              "id": 2194,
              "nodeType": "StructuredDocumentation",
              "src": "1040:202:17",
              "text": " @notice calculates tokens vested at a given timestamp\n @param timestamp The time for which vested tokens are being calculated\n @return amount of tokens vested at timestamp"
            },
            "functionSelector": "aba02235",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vestedOn",
            "nameLocation": "1256:8:17",
            "overrides": {
              "id": 2198,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1296:8:17"
            },
            "parameters": {
              "id": 2197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2196,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1273:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "1265:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1264:19:17"
            },
            "returnParameters": {
              "id": 2201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2200,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1322:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "1314:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1314:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1313:16:17"
            },
            "scope": 2261,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2260,
            "nodeType": "FunctionDefinition",
            "src": "1645:200:17",
            "body": {
              "id": 2259,
              "nodeType": "Block",
              "src": "1696:149:17",
              "statements": [
                {
                  "assignments": [
                    2238
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2238,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "1714:7:17",
                      "nodeType": "VariableDeclaration",
                      "scope": 2259,
                      "src": "1706:15:17",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2237,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1706:7:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2247,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2244,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1750:4:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECOxEmployeeLockup_$2261",
                              "typeString": "contract ECOxEmployeeLockup"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ECOxEmployeeLockup_$2261",
                              "typeString": "contract ECOxEmployeeLockup"
                            }
                          ],
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1742:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2242,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1742:7:17",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1742:13:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2239,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1790,
                          "src": "1724:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_contract$_IERC20Upgradeable_$680_$",
                            "typeString": "function () pure returns (contract IERC20Upgradeable)"
                          }
                        },
                        "id": 2240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1724:7:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$680",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "id": 2241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 637,
                      "src": "1724:17:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1724:32:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1706:50:17"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2248,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2238,
                      "src": "1770:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2249,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2233,
                      "src": "1780:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1770:16:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2258,
                  "nodeType": "IfStatement",
                  "src": "1766:73:17",
                  "trueBody": {
                    "id": 2257,
                    "nodeType": "Block",
                    "src": "1788:51:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2252,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2233,
                                "src": "1811:6:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2253,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2238,
                                "src": "1820:7:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1811:16:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2251,
                            "name": "_unstake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2680,
                            "src": "1802:8:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1802:26:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2256,
                        "nodeType": "ExpressionStatement",
                        "src": "1802:26:17"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              2514
            ],
            "documentation": {
              "id": 2231,
              "nodeType": "StructuredDocumentation",
              "src": "1489:151:17",
              "text": " @notice helper function unstaking required tokens before they are claimed\n @param amount amount of vested tokens being claimed"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onClaim",
            "nameLocation": "1654:7:17",
            "overrides": {
              "id": 2235,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1687:8:17"
            },
            "parameters": {
              "id": 2234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2233,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1670:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 2260,
                  "src": "1662:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2232,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1661:16:17"
            },
            "returnParameters": {
              "id": 2236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:0:17"
            },
            "scope": 2261,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2158,
              "name": "ECOxLockupVault",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2749,
              "src": "764:15:17"
            },
            "id": 2159,
            "nodeType": "InheritanceSpecifier",
            "src": "764:15:17"
          }
        ],
        "canonicalName": "ECOxEmployeeLockup",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2157,
          "nodeType": "StructuredDocumentation",
          "src": "310:422:17",
          "text": " @notice ECOxEmployeeLockup contract holds ECOx for employees until a cliff date has passed. \n Notably it is initialized with only one timestamp (cliff date) and one initial token amount (0).\n As a result, the methods found in ChunkedVestingVaultArgs will not provide useful information\n and any methods referring to amounts, timestamps and chunks will reflect the fact that there is\n only one of each. "
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2261,
          2749,
          1629,
          2062,
          1753,
          360,
          1323,
          1961,
          2131,
          602,
          529,
          120
        ],
        "name": "ECOxEmployeeLockup",
        "nameLocation": "742:18:17",
        "scope": 2262,
        "usedErrors": [
          2084,
          2087,
          2090,
          2093,
          2400,
          2403
        ]
      }
    ]
  },
  "id": 17
}