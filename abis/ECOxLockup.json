{
  "contractName": "ECOxLockup",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ecoXAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toDelegate",
          "type": "address"
        }
      ],
      "name": "ChangeDelegate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "ChangeDelegateVotes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "source",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "checkpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "fromBlock",
          "type": "uint32"
        },
        {
          "internalType": "uint224",
          "name": "value",
          "type": "uint224"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clone",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentGeneration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "delegatee",
          "type": "address"
        }
      ],
      "name": "delegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ecoXToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getDelegate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getPastVotingGons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getVotingGons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "numCheckpoints",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "policyCommand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setExpectedInterfaceSet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "votingTracker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "votingECOx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalVotingECOx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        }
      ],
      "name": "recordVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_self",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "notifyGenerationIncrease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ecoXAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toDelegate\",\"type\":\"address\"}],\"name\":\"ChangeDelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"ChangeDelegateVotes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint224\",\"name\":\"value\",\"type\":\"uint224\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentGeneration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatee\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecoXToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDelegate\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getPastVotingGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotingGons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"notifyGenerationIncrease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"policyCommand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"}],\"name\":\"recordVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setExpectedInterfaceSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotingECOx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votingECOx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votingTracker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Deposit(address,uint256)\":{\"params\":{\"amount\":\"The amount of ECOx tokens deposited.\",\"source\":\"The address that a deposit certificate has been issued to.\"}},\"Withdrawal(address,uint256)\":{\"params\":{\"amount\":\"The amount in basic unit of 10^{-18} ECOx (weicoX) tokens withdrawn.\",\"destination\":\"The address that has made a withdrawal.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"canImplementInterfaceForAddress(bytes32,address)\":{\"params\":{\"_addr\":\"The address of the contract we might act on behalf of.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"delegate(address)\":{\"details\":\"Delegate votes from the sender to `delegatee`.\"},\"getDelegate(address)\":{\"details\":\"Get the address `account` is currently delegating to. Defaults to the account address itself if none specified\"},\"getPastTotalSupply(uint256)\":{\"details\":\"Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined\"},\"getPastVotes(address,uint256)\":{\"params\":{\"_blockNumber\":\"The block number to check the balance at the start                        of. Must be less than or equal to the present                        block number.\",\"_owner\":\"The account to check the balance of.\"}},\"getPastVotingGons(address,uint256)\":{\"details\":\"Retrieve the number of votes in gons for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined\"},\"getVotingGons(address)\":{\"details\":\"Gets the current votes balance in gons for `account`\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"initialize(address)\":{\"params\":{\"_self\":\"The address of the original contract deployment (as opposed              to the address of the proxy contract, which takes the place              of `this`).\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"numCheckpoints(address)\":{\"details\":\"Get number of checkpoints for `account`.\"},\"policyCommand(address,bytes)\":{\"params\":{\"_data\":\"The call message/data to execute on.\",\"_delegate\":\"The address of the contract to delegate execution to.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"title\":\"ECOxLockup\",\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256)\":{\"notice\":\"The Deposit event indicates that ECOx has been locked up, credited to a particular address in a particular amount.\"},\"Withdrawal(address,uint256)\":{\"notice\":\"The Withdrawal event indicates that a withdrawal has been made to a particular address in a particular amount.\"}},\"kind\":\"user\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"ERC1820 permissioning interface\"},\"clone()\":{\"notice\":\"Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract.\"},\"getPastVotes(address,uint256)\":{\"notice\":\"Return historical voting balance (includes delegation) at given block number. If the latest block number for the account is before the requested block then the most recent known balance is returned. Otherwise the exact block number requested is returned.\"},\"implementation()\":{\"notice\":\"Get the address of the proxy target contract.\"},\"initialize(address)\":{\"notice\":\"Initialize the contract (replaces constructor) See documentation for Policed for an explanation.\"},\"policy()\":{\"notice\":\"The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy.\"},\"policyCommand(address,bytes)\":{\"notice\":\"Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space.\"},\"setExpectedInterfaceSet(address)\":{\"notice\":\"Set the expected interface set\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Returns the total (inflation corrected) token supply at a specified block number\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/ECOxLockup.sol\":\"ECOxLockup\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xc94f9b84096deaf9d2ba5681db62455e3f2d5f0a61341f68a6f576f32a6e60be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74465bbd80d2e8cfb900bf00c69940822d59bfee20d3a9725fbd74e26413319b\",\"dweb:/ipfs/QmYLEg43ZBYBsjx6qDiHK21P4YjVYLzQcUMhadrdqmA5ZL\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x1e34ab6382525e2c48a01d9edbcfeab024072e8fa80332d48fb7011ebdf59562\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d4c3a1cacb1b5ce5681edac3dc3034a9e6ea6b9e4ef338564ca70b9b6ea2fd7\",\"dweb:/ipfs/QmXwhPvgGK4envqERyjh5W7CtrH72geAE7fh1EFcVerviw\"]},\"project:/contracts/VDF/BigNumber.sol\":{\"keccak256\":\"0x34d951601236edb052216f0bc19d97ae87b0027c04cbcc03df5783b60efe925a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f32735389846ecd7f74b610365e5cfac957fee19b87638e4a8b1da2a11a9378c\",\"dweb:/ipfs/QmbUZzmMWsRP5pqRcGdqRKsnTWz9zHrygzaXFturbaFzog\"]},\"project:/contracts/VDF/IsPrime.sol\":{\"keccak256\":\"0x92b6298ae541b196d5262c703d8382b4faa006441435caa09a8a483256dd76d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b288dbaa70d20b1cb37b5c56e96d8e98a693285ea9ee38b53b20c04a246c59f8\",\"dweb:/ipfs/QmXZYBBrQNeL4tofwXvwumpSNQ5Fv6fwvjCavFxXuuKp81\"]},\"project:/contracts/VDF/VDFVerifier.sol\":{\"keccak256\":\"0x034ec36f35cc508e167c79ec85a74535e030968278f16a58d0ceb90795162efc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d09b2d6d3ecab3450ffb5079d2e1ae32943573eacaf199ebba68bfdb8de28b5e\",\"dweb:/ipfs/QmbXqUDeYfqz1su4joQesWRBaTU7UG4Tx92o2gXRGtmnT6\"]},\"project:/contracts/clone/CloneFactory.sol\":{\"keccak256\":\"0xfe4d4a9e72693d4cc3cd16d1d84b4405ae7b61d8a2a932696ec44fdb29a7e2a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19534495f562093202e3d5a7284ff1f9ccccdcbebdbcd6009f4f5d5a87d0e274\",\"dweb:/ipfs/QmY2PTpJTxCZhGQtoMxY6w8kT5SqgXpZ2B7MNJkrEkMmaU\"]},\"project:/contracts/currency/ECOx.sol\":{\"keccak256\":\"0xd8e9f6eaaa7fd5ba60ed392c51a833c6ae89a381d12c49ce346dee0411198af5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fcf00c950140915a2cfc49b3bcf63d23b87d425632d3c221de99b7455e4e798\",\"dweb:/ipfs/Qme7GkdosDTq8FjVsqGDeLaahXeyCZZnaQZmE1j6vuN7yB\"]},\"project:/contracts/currency/ERC20.sol\":{\"keccak256\":\"0x79ce5d0fca327a1e347152ec8c3c7fce1b243e299e7470880694cf2754c94ad2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://460c757be6328394dfea9bb4672b1b21c6f1e516f5b1372b99fcb744fdcaed30\",\"dweb:/ipfs/QmeDwcnPQ3ytNNvi1JySAsevND7jELPLLfoLQFgpemsEjT\"]},\"project:/contracts/currency/IECO.sol\":{\"keccak256\":\"0x39421a11c92c9919b75e41fd5bef469121615a9c78f499a1b94d60e6ea52e723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3956164c417c573f9b7aaef45c34c7a63bc4cc8ccaab96c9d4f0f671fe6375c1\",\"dweb:/ipfs/QmZoKZggRqTamBu9cpbT1oW2Cn3K9FQkQgLfoiQCS7fwgj\"]},\"project:/contracts/currency/InflationRootHashProposal.sol\":{\"keccak256\":\"0x4e9370d74caa2d85dbaf2aa0e610ad2fddb7dd7a73b3e043b007ca43443740a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4961aa5955fbfa00358fce58a227c1cd569c250900447bef6c5a78385fa8c693\",\"dweb:/ipfs/QmYtrPP2pQErtZhEba5u9iqTZ3WpQMRbpPMWQG7tjRju3Y\"]},\"project:/contracts/currency/VoteCheckpoints.sol\":{\"keccak256\":\"0x3bd7e94234c1f20fdb3c0a79d5ff4909b9c71d082ddd80cd8fdb644051b546d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://337f666a2aca4d638afb542360173341820dccf0ad88c61c38d788acc110137e\",\"dweb:/ipfs/QmQKhx9UnerLvFDTdAWAddiy32j1m1WYaFadfJ71cc14aP\"]},\"project:/contracts/governance/CurrencyGovernance.sol\":{\"keccak256\":\"0xf87c3f86aa451f710b0c16a7441df796c475c4ca7224aad0c5ec27f8cda1f65c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e228b9094136be34966c04520c55106a8dbf4d016cdaa354831b252aa7f7df1b\",\"dweb:/ipfs/Qmb9SvSXs5rdfF1WC35j1jQdxetmrrYbH7EJLAe932bd2m\"]},\"project:/contracts/governance/CurrencyTimer.sol\":{\"keccak256\":\"0x7ca2e2d034d019056d212946d79f54014cb036b7455b790dd6c4c4372b17c538\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94d59ada8fb170552106fb659480f4ec0a628ef998dabfe106253e29b6e6024a\",\"dweb:/ipfs/QmPQvZpxDYmqkqfEAVFq66TppokLLPWBLA7fxoBeNeBE8k\"]},\"project:/contracts/governance/ECOxLockup.sol\":{\"keccak256\":\"0x62e841dd4dcf927dcc1a88edb67a6278554db62bb6de69cc8b2f97454d65a185\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39cd7a170f3cf703d8cf64afa3bbb1bc34067ebc573feaae7c6b8158e9371744\",\"dweb:/ipfs/QmYEx6taf5Qr8z6KfauxEjrJtYsphEsRLfxJbRSucNjhAk\"]},\"project:/contracts/governance/IGeneration.sol\":{\"keccak256\":\"0x43adc6aca3058f0f21c0f4ad390158b9104327030109faf012955c6433cb4a62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://926098535fc6c8e8aaa6c85f7d67bd329262a6aae7f67c37577d908e4844e7d1\",\"dweb:/ipfs/QmbnE43jCzbgJ52kT3tDR7BAS9W1CH35A2adEkRctDxm3S\"]},\"project:/contracts/governance/IGenerationIncrease.sol\":{\"keccak256\":\"0x45ec21c86ff3ca31c5aef0bced8f01960e3c7292019938f1613916ff142e0a2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://793dfdb9f8eb72e9a391a176667b775fb300cfae5331b896c4458bf14f27ef20\",\"dweb:/ipfs/QmXuUoWw6eoTJfBUhtdGvuZqBcCHaPayRPP6vs9qnn2ff3\"]},\"project:/contracts/governance/ILockups.sol\":{\"keccak256\":\"0x9b09e8d0c99f03f8004943379698edecb26b79de824193f12086a7071ac49c00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f58a898e80c9b337bbd874c956cec74f81e078ca74685c703a1a182059e6325e\",\"dweb:/ipfs/QmfHiTKLMGBGJmhnH8AjHRZgyaGDsWz6MRm5cyTTXHvHFL\"]},\"project:/contracts/governance/Inflation.sol\":{\"keccak256\":\"0x6f4d178e6207d92dd5da6a82c59be1ea9f0eb14cba68160e1773ebed88c83097\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c698a9bf8e7a2ed1a9e158f6b8216cef1e72939e29831ae841ce06c9408a9c0a\",\"dweb:/ipfs/QmPHzyaPQPgvPXrtEgHNYT7o5nBLm8sf6dyqVmMCxVXq54\"]},\"project:/contracts/governance/Lockup.sol\":{\"keccak256\":\"0xdfaf285be8a97a389a8a331b0f51dae72684e124b3332cce8d13482fb8e3dae9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa4b646100eeac08eb2c9a0c9e078ae9ce46576b25f10c64147f3c004174b61f\",\"dweb:/ipfs/QmXLS8keA8U4uavzgFwzwCxptUMDFfNDE1bzPdFCptm6Rq\"]},\"project:/contracts/governance/PolicyProposals.sol\":{\"keccak256\":\"0xab202059083e56ddd3b544875fa4dee8a9ab8a1c8db240f3d56143ed3b196fd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0793a0dfbc8567a09849a741fab3958d8f961e3fca1843897d017cf7e8ceaec9\",\"dweb:/ipfs/QmNcqTCbPAoSTQ8ZUvw61TMRRpq1vXZRxc55aSB83Tx54b\"]},\"project:/contracts/governance/PolicyVotes.sol\":{\"keccak256\":\"0x4f831c65f4a399d7d73f16635ed1463ef6187ed07f2a9d2ba23fd6592eada3ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f9fe8c34c7786318699297da62668b546778977adb0e8daf11f3490f17850f6\",\"dweb:/ipfs/QmVu2DLDMZRtYcXTBKaRQRZ61US1TKWhicUYnZQuFfzejh\"]},\"project:/contracts/governance/Proposal.sol\":{\"keccak256\":\"0x54644b5204b10eb6f97290eef1fefb633f108c7facb3feb12b2d0a7847a95333\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04eb89925c361e4058a0d7ce181f7bd54f1b6fe06cf659307ace3c76de6ede23\",\"dweb:/ipfs/QmezPJo7PEZt4qrPeq8YC5aaFzfLa9aQNU4f3Kt77Ud6ZN\"]},\"project:/contracts/governance/SimplePolicySetter.sol\":{\"keccak256\":\"0x83973d5f312022a8a2ae25aa5ce918ea6eab40050cbc77f54162d3e61d889783\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb7ef3b8aaee45244c4bc03af16eeccc18ffee363a8fa87062b72ace18d589be\",\"dweb:/ipfs/QmUM8VfaLYUxCGuNEKbEqJVUZu8TuJVzxvNZvyEzRULzLT\"]},\"project:/contracts/governance/TrustedNodes.sol\":{\"keccak256\":\"0xbbbac2ab7fb34cd3e312d59dd65649188a5e32ff693d2b40dd3eab053eff4140\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2b3c8a629decc202ea45acbc49a8866fd38d42b88f82db8e8396236baebb58d\",\"dweb:/ipfs/QmdEaZxgJjRhkbPm4cyHPpvSuCDc8u1ndedXjGV5CV7D4U\"]},\"project:/contracts/governance/VotingPower.sol\":{\"keccak256\":\"0xab85555d6c086f6d50041a2fbcae5b23766fabf102ca0ed39e90fde38f77a3c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c19c436c7b7ff7a7ec9fe9ffe5138775d93cb1a446bcb0754f107e5ba61685b\",\"dweb:/ipfs/QmUnoGboeHhKmiUUw4v58qhkp5CDu8oDYTU9BhLyASWDVx\"]},\"project:/contracts/policy/ERC1820Client.sol\":{\"keccak256\":\"0x3a82b9d79edd1e418d3f166af46654217f207dd519a3b26673e7e01d85797649\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0818990811db9adffdee91aa1a3c28f2adcb318f7b4d04bcb82a857f0ae6a14b\",\"dweb:/ipfs/QmdcRjsdk3HCo7BXvAViCmFwrfSuxCMotXXcFDX1enTq9o\"]},\"project:/contracts/policy/Policed.sol\":{\"keccak256\":\"0x684d594e9e7624910b51b6825e74efcffab142bc574a6e82cab62147abd7228c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ecfe1ae4464d35e3df8d4c06ad34154d276839274218b0a381d0b2a80c7be99\",\"dweb:/ipfs/QmR41Rmut18VBZmYuzxWHoHM5Q1VCD9dPTR8p2kSuSAzFe\"]},\"project:/contracts/policy/PolicedUtils.sol\":{\"keccak256\":\"0x3eb11d26eb4e4502d32ea686a68beb12b194e0dea064b019889835d1f192bd07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a64a823e0e48d18ee062fbf6cac784304d8f3e9516a24e117120a3eec1c43800\",\"dweb:/ipfs/QmejP6zc5hexhgcTCrEJyGJVhGQ1y3Lcj5wBV6NnvnihSR\"]},\"project:/contracts/policy/Policy.sol\":{\"keccak256\":\"0xdc1015693d17cde5ed2eeb8e2854c0dc76527827db1c5a6cb3c954065d67593f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8342716effe26178e00df21200fbd5456eafd7f896c184f9b4720bddc8cc369\",\"dweb:/ipfs/QmVeKQePdxq9uxxM8xhqEaqGdHKyvjMYyniKgidLQPw82n\"]},\"project:/contracts/proxy/ForwardTarget.sol\":{\"keccak256\":\"0xc2b17e83877e14d1f32faaca4010f65cf8515c009dbf0ee09e73912ef1e1a4c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f3713b39edb3d06fbda57f7bab8fbd36e286a327ad36f8651c5b1877386667\",\"dweb:/ipfs/QmdF4oaYgLjEcpRqbAjdHXEdQRzZWPk7LqgqHS5SBwN8t5\"]},\"project:/contracts/utils/StringPacker.sol\":{\"keccak256\":\"0x65a6869487c2ea25893715a3f26d5db0aa68a933894e2bfeaf8a6cfdee0df731\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ae1a06e1a4bddbb446d61f19ed25a6fe8a91f02ca05e0361b3b497af28c897a\",\"dweb:/ipfs/QmXqeBvyzr5QwLioWEiS2MXBZZe9hdszsDwn91gR3wpgHU\"]},\"project:/contracts/utils/TimeUtils.sol\":{\"keccak256\":\"0x774aeda81c9cb23eb02c5ec60bc1af8cb915627ae9fbc78862d3c4eadf560d1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d619e69a1e3063ccf6a38b44e8a8d1d4e86161668134dc414f3c7d75125d6cf7\",\"dweb:/ipfs/QmU2dS1MFr9Sgq9iD6mYkpTjuVV17Xq19aho5NGZcuZkAZ\"]}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b506040516200272c3803806200272c833981016040819052620000359162000218565b8180604051806040016040528060078152602001660a65a8ac6de5ab60cb1b815250604051806040016040528060058152602001640e68a869ef60db1b81525081816200008d826200015160201b620012d61760201c565b60808181525050620000aa816200015160201b620012d61760201c565b60a05250620000be9250309150506200016a565b6001600160a01b0390811660c052604051635df8122f60e01b81523060048201529082166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b1580156200012157600080fd5b505af115801562000136573d6000803e3d6000fd5b5050506001600160a01b0390921660e0525062000250915050565b600060208251106200016257600080fd5b50601f015190565b6001600160a01b0381166200018c6000805160206200270c8339815191525490565b6001600160a01b03161415620001e85760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e6700604482015260640160405180910390fd5b6000805160206200270c83398151915255565b80516001600160a01b03811681146200021357600080fd5b919050565b600080604083850312156200022c57600080fd5b6200023783620001fb565b91506200024760208401620001fb565b90509250929050565b60805160a05160c05160e051612451620002bb60003960008181610350015281816109aa0152611012015260008181610226015281816105a1015281816107d501528181610b9e015281816114ba015261187601526000610f300152600061055601526124516000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80635c19a95c11610125578063981b24d0116100ad578063bc52c82d1161007c578063bc52c82d146104d0578063c4d66de8146104f0578063cd3fd384146103a0578063dd62ed3e14610503578063e189cba61461053c57600080fd5b8063981b24d0146103c6578063a457c2d71461049c578063a9059cbb146104af578063b6b55f25146104bd57600080fd5b806370a08231116100f457806370a082311461043c5780638ddb428a146104655780638e539e8c1461046e57806392c1ff441461048157806395d89b411461049457600080fd5b80635c19a95c146103d95780635c60da1b146103ec5780636e684b9a146104015780636fcfff451461041457600080fd5b80632e1a7d4d116101a85780633950935111610177578063395093511461037a57806339634e0c1461038d5780633a46b1a8146103a0578063544d8564146103b35780635bb748ad146103c657600080fd5b80632e1a7d4d14610329578063313ce5671461033c57806333800bac1461034b57806335bbc7fe1461037257600080fd5b806309ed4607116101ef57806309ed4607146102b25780630cdfebfa146102ba57806318160ddd146102f157806323b872dd14610303578063249cb3fa1461031657600080fd5b80630505c8c91461022157806306fdde0314610265578063095ea7b31461027a57806309d7f23b1461029d575b600080fd5b6102487f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61026d61054f565b60405161025c9190612103565b61028d61028836600461216d565b61057f565b604051901515815260200161025c565b6102b06102ab3660046121af565b610596565b005b610248610654565b6102cd6102c836600461216d565b61073f565b6040805163ffffffff90931683526001600160e01b0390911660208301520161025c565b6002545b60405190815260200161025c565b61028d610311366004612273565b610786565b6102f56103243660046122b4565b6107d1565b6102b06103373660046122e4565b6108dc565b6040516012815260200161025c565b6102487f000000000000000000000000000000000000000000000000000000000000000081565b6102b0610ab9565b61028d61038836600461216d565b610b57565b6102b061039b3660046122fd565b610b93565b6102f56103ae36600461216d565b610c51565b6102486103c13660046122fd565b610c64565b6102f56103d43660046122e4565b610c94565b6102b06103e73660046122fd565b610c9f565b6000805160206123fc83398151915254610248565b6102f561040f36600461216d565b610cac565b6104276104223660046122fd565b610d2c565b60405163ffffffff909116815260200161025c565b6102f561044a3660046122fd565b6001600160a01b031660009081526020819052604090205490565b6102f560085481565b6102f561047c3660046122e4565b610dca565b6102b061048f3660046122fd565b610e33565b61026d610f29565b61028d6104aa36600461216d565b610f54565b61028d61031136600461216d565b6102b06104cb3660046122e4565b610fed565b6102f56104de3660046122fd565b60076020526000908152604090205481565b6102b06104fe3660046122fd565b611128565b6102f561051136600461231a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102f561054a3660046122fd565b61124f565b606061057a7f00000000000000000000000000000000000000000000000000000000000000006112ee565b905090565b600061058c338484611354565b5060015b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461062a5760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e81801561064857816000f35b816000fd5b5050505050565b60003061066d6000805160206123fc8339815191525490565b6001600160a01b0316146106d25760405162461bcd60e51b815260206004820152602660248201527f54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20604482015265636c6f6e657360d01b6064820152608401610621565b60006106dd30611416565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561072157600080fd5b505af1158015610735573d6000803e3d6000fd5b5092949350505050565b6004602052816000526040600020818154811061075b57600080fd5b60009182526020909120015463ffffffff8116925064010000000090046001600160e01b0316905082565b60405162461bcd60e51b815260206004820152601a60248201527f7345434f78206973206e6f6e2d7472616e736665727261626c650000000000006044820152600090606401610621565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061082057506006546001600160a01b038381169116145b6108925760405162461bcd60e51b815260206004820152603c60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f74726163742063616e207365742074686520696e746572666163652e000000006064820152608401610621565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b60085433906108ed9060019061235e565b6001600160a01b038216600090815260076020526040902054106109795760405162461bcd60e51b815260206004820152603860248201527f4d757374206e6f7420766f746520696e207468652067656e65726174696f6e2060448201527f6f6e206f72206265666f7265207769746864726177696e6700000000000000006064820152608401610621565b610983818361147f565b5060405163a9059cbb60e01b81526001600160a01b038281166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156109ee57600080fd5b505af1158015610a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a269190612375565b610a725760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572204661696c656400000000000000000000000000000000006044820152606401610621565b806001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6583604051610aad91815260200190565b60405180910390a25050565b610ae27fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b196114a3565b6001600160a01b031663172195226040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1a57600080fd5b505afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190612397565b600855565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161058c918590610b8e9086906123b0565b611354565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c225760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b6064820152608401610621565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000610c5d8383610cac565b9392505050565b6001600160a01b038082166000908152600360205260408120549091168015610c8d5780610c5d565b5090919050565b600061059082610dca565b610ca93382611558565b50565b600043821115610d0a5760405162461bcd60e51b8152602060048201526024808201527f566f7465436865636b706f696e74733a20626c6f636b206e6f7420796574206d6044820152631a5b995960e21b6064820152608401610621565b6001600160a01b0383166000908152600460205260409020610c5d90836115e1565b6001600160a01b03811660009081526004602052604081205463ffffffff1015610dae5760405162461bcd60e51b815260206004820152602d60248201527f6e756d626572206f6620636865636b706f696e74732063616e6e6f742062652060448201526c63617374656420736166656c7960981b6064820152608401610621565b506001600160a01b031660009081526004602052604090205490565b600043821115610e285760405162461bcd60e51b8152602060048201526024808201527f566f7465436865636b706f696e74733a20626c6f636b206e6f7420796574206d6044820152631a5b995960e21b6064820152608401610621565b6105906005836115e1565b610e5c7f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a6114a3565b6001600160a01b0316336001600160a01b03161480610eb45750610e9f7f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f6114a3565b6001600160a01b0316336001600160a01b0316145b610f0a5760405162461bcd60e51b815260206004820152602160248201527f4d757374206265206120766f74696e6720636f6e747261637420746f2063616c6044820152601b60fa1b6064820152608401610621565b6008546001600160a01b03909116600090815260076020526040902055565b606061057a7f00000000000000000000000000000000000000000000000000000000000000006112ee565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610fd65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610621565b610fe33385858403611354565b5060019392505050565b6040516323b872dd60e01b8152336004820181905230602483015260448201839052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561105e57600080fd5b505af1158015611072573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110969190612375565b6110e25760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610621565b6110ec8183611735565b50806001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c83604051610aad91815260200190565b60006111406000805160206123fc8339815191525490565b6001600160a01b0316146111a75760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610621565b6111b0816117d1565b6111d97fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b196114a3565b6001600160a01b031663172195226040518163ffffffff1660e01b815260040160206040518083038186803b15801561121157600080fd5b505afa158015611225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112499190612397565b60085550565b6001600160a01b03811660009081526004602052604081205480156112c3576001600160a01b038316600090815260046020526040902061129160018361235e565b815481106112a1576112a16123c8565b60009182526020909120015464010000000090046001600160e01b03166112c6565b60005b6001600160e01b03169392505050565b600060208251106112e657600080fd5b50601f015190565b606060f882901c6020811061130257600080fd5b8067ffffffffffffffff81111561131b5761131b612199565b6040519080825280601f01601f191660200182016040528015611345576020820181803683370190505b50915082601f83015250919050565b6001600160a01b0382166113b55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610621565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b600061148b83836118e8565b915061149b60056119e7846119f3565b509092915050565b60405163555ddc6560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b15801561152057600080fd5b505afa158015611534573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059091906123de565b600061156383610c64565b6001600160a01b03848116600081815260208181526040808320546003909252808320805473ffffffffffffffffffffffffffffffffffffffff1916958916958617905551949550937f203990235367b1c7cb4ad749a6c1bcf1b793c8824cdb000bfcf53817afb8a7ac9190a36115db828483611c4f565b50505050565b8154600090806115f5576000915050610590565b60008461160360018461235e565b81548110611613576116136123c8565b60009182526020918290206040805180820190915291015463ffffffff81168083526401000000009091046001600160e01b0316928201929092529150841061166c57602001516001600160e01b031691506105909050565b8160005b818110156116da5760006001611686838561235e565b611691911c836123b0565b9050868882815481106116a6576116a66123c8565b60009182526020909120015463ffffffff1611156116c6578092506116d4565b6116d18160016123b0565b91505b50611670565b811561171e57866116ec60018461235e565b815481106116fc576116fc6123c8565b60009182526020909120015464010000000090046001600160e01b0316611721565b60005b6001600160e01b0316979650505050505050565b60006117418383611d71565b6002549092506001600160e01b0310156117c35760405162461bcd60e51b815260206004820152603560248201527f566f7465436865636b706f696e74733a20746f74616c20737570706c7920726960448201527f736b73206f766572666c6f77696e6720766f74657300000000000000000000006064820152608401610621565b61149b6005611e5f846119f3565b60006117e96000805160206123fc8339815191525490565b6001600160a01b0316146118505760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610621565b61185981611e6b565b604051635df8122f60e01b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b1580156118d457600080fd5b505af115801561064d573d6000803e3d6000fd5b6001600160a01b03821660009081526020819052604081205482908181101561195e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610621565b6001600160a01b038516600090815260208190526040812083830390556002805484929061198d90849061235e565b90915550506040518481526000906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36119df85600084611ef3565b509392505050565b6000610c5d828461235e565b60006001600160e01b03821115611a565760405162461bcd60e51b815260206004820152602160248201527f6e65775765696768742063616e6e6f742062652063617374656420736166656c6044820152607960f81b6064820152608401610621565b63ffffffff431115611ab65760405162461bcd60e51b8152602060048201526024808201527f626c6f636b206e756d6265722063616e6e6f742062652063617374656420736160448201526366656c7960e01b6064820152608401610621565b835480611b145750506040805180820190915263ffffffff43811682526001600160e01b0380841660208085019182528754600181018955600089815291909120945191519092166401000000000292169190911791015580610c5d565b600085611b2260018461235e565b81548110611b3257611b326123c8565b60009182526020822001805490925064010000000090046001600160e01b031690611b61828763ffffffff8a16565b90506001600160e01b03811115611bc45760405162461bcd60e51b815260206004820152602160248201527f6e65775765696768742063616e6e6f742062652063617374656420736166656c6044820152607960f81b6064820152608401610621565b825463ffffffff16431415611bf457825463ffffffff166401000000006001600160e01b03831602178355611c44565b6040805180820190915263ffffffff43811682526001600160e01b0380841660208085019182528c54600181018e5560008e81529190912094519151909216640100000000029216919091179101555b979650505050505050565b816001600160a01b0316836001600160a01b031614158015611c715750600081115b15611d6c576001600160a01b03831615611cf1576001600160a01b0383166000908152600460205260408120611caa906119e7846119f3565b9050836001600160a01b03167f9e51f7a75849faf72867a9564c5b53a48e2f09829ff4133d76292dd8e3445f3182604051611ce791815260200190565b60405180910390a2505b6001600160a01b03821615611d6c576001600160a01b0382166000908152600460205260408120611d2590611e5f846119f3565b9050826001600160a01b03167f9e51f7a75849faf72867a9564c5b53a48e2f09829ff4133d76292dd8e3445f3182604051611d6291815260200190565b60405180910390a2505b505050565b60006001600160a01b038316611dc95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610621565b60008290508060026000828254611de091906123b0565b90915550506001600160a01b03841660009081526020819052604081208054839290611e0d9084906123b0565b90915550506040518381526001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610c5d60008583611ef3565b6000610c5d82846123b0565b6000611e836000805160206123fc8339815191525490565b6001600160a01b031614611eea5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610621565b610ca981611f0e565b611d6c611eff84610c64565b611f0884610c64565b83611c4f565b6000611f266000805160206123fc8339815191525490565b6001600160a01b031614611f8d5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610621565b6000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fc857600080fd5b505afa158015611fdc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200091906123de565b90506001600160a01b03811661206d5760405162461bcd60e51b815260206004820152602c60248201527f696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e672060448201526b1d1bc81a5b5c1b195b595b9d60a21b6064820152608401610621565b6120768161207a565b5050565b806001600160a01b031661209a6000805160206123fc8339815191525490565b6001600160a01b031614156120f15760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e67006044820152606401610621565b6000805160206123fc83398151915255565b600060208083528351808285015260005b8181101561213057858101830151858201604001528201612114565b81811115612142576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610ca957600080fd5b6000806040838503121561218057600080fd5b823561218b81612158565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156121c257600080fd5b82356121cd81612158565b9150602083013567ffffffffffffffff808211156121ea57600080fd5b818501915085601f8301126121fe57600080fd5b81358181111561221057612210612199565b604051601f8201601f19908116603f0116810190838211818310171561223857612238612199565b8160405282815288602084870101111561225157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060006060848603121561228857600080fd5b833561229381612158565b925060208401356122a381612158565b929592945050506040919091013590565b600080604083850312156122c757600080fd5b8235915060208301356122d981612158565b809150509250929050565b6000602082840312156122f657600080fd5b5035919050565b60006020828403121561230f57600080fd5b8135610c5d81612158565b6000806040838503121561232d57600080fd5b823561233881612158565b915060208301356122d981612158565b634e487b7160e01b600052601160045260246000fd5b60008282101561237057612370612348565b500390565b60006020828403121561238757600080fd5b81518015158114610c5d57600080fd5b6000602082840312156123a957600080fd5b5051919050565b600082198211156123c3576123c3612348565b500190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156123f057600080fd5b8151610c5d8161215856fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a26469706673582212201ec0e0195212edd99496fd4271124bfbcede71e33a2b525a2ab0c7c5f73c937e64736f6c63430008090033f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061021c5760003560e01c80635c19a95c11610125578063981b24d0116100ad578063bc52c82d1161007c578063bc52c82d146104d0578063c4d66de8146104f0578063cd3fd384146103a0578063dd62ed3e14610503578063e189cba61461053c57600080fd5b8063981b24d0146103c6578063a457c2d71461049c578063a9059cbb146104af578063b6b55f25146104bd57600080fd5b806370a08231116100f457806370a082311461043c5780638ddb428a146104655780638e539e8c1461046e57806392c1ff441461048157806395d89b411461049457600080fd5b80635c19a95c146103d95780635c60da1b146103ec5780636e684b9a146104015780636fcfff451461041457600080fd5b80632e1a7d4d116101a85780633950935111610177578063395093511461037a57806339634e0c1461038d5780633a46b1a8146103a0578063544d8564146103b35780635bb748ad146103c657600080fd5b80632e1a7d4d14610329578063313ce5671461033c57806333800bac1461034b57806335bbc7fe1461037257600080fd5b806309ed4607116101ef57806309ed4607146102b25780630cdfebfa146102ba57806318160ddd146102f157806323b872dd14610303578063249cb3fa1461031657600080fd5b80630505c8c91461022157806306fdde0314610265578063095ea7b31461027a57806309d7f23b1461029d575b600080fd5b6102487f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61026d61054f565b60405161025c9190612103565b61028d61028836600461216d565b61057f565b604051901515815260200161025c565b6102b06102ab3660046121af565b610596565b005b610248610654565b6102cd6102c836600461216d565b61073f565b6040805163ffffffff90931683526001600160e01b0390911660208301520161025c565b6002545b60405190815260200161025c565b61028d610311366004612273565b610786565b6102f56103243660046122b4565b6107d1565b6102b06103373660046122e4565b6108dc565b6040516012815260200161025c565b6102487f000000000000000000000000000000000000000000000000000000000000000081565b6102b0610ab9565b61028d61038836600461216d565b610b57565b6102b061039b3660046122fd565b610b93565b6102f56103ae36600461216d565b610c51565b6102486103c13660046122fd565b610c64565b6102f56103d43660046122e4565b610c94565b6102b06103e73660046122fd565b610c9f565b6000805160206123fc83398151915254610248565b6102f561040f36600461216d565b610cac565b6104276104223660046122fd565b610d2c565b60405163ffffffff909116815260200161025c565b6102f561044a3660046122fd565b6001600160a01b031660009081526020819052604090205490565b6102f560085481565b6102f561047c3660046122e4565b610dca565b6102b061048f3660046122fd565b610e33565b61026d610f29565b61028d6104aa36600461216d565b610f54565b61028d61031136600461216d565b6102b06104cb3660046122e4565b610fed565b6102f56104de3660046122fd565b60076020526000908152604090205481565b6102b06104fe3660046122fd565b611128565b6102f561051136600461231a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102f561054a3660046122fd565b61124f565b606061057a7f00000000000000000000000000000000000000000000000000000000000000006112ee565b905090565b600061058c338484611354565b5060015b92915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461062a5760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e81801561064857816000f35b816000fd5b5050505050565b60003061066d6000805160206123fc8339815191525490565b6001600160a01b0316146106d25760405162461bcd60e51b815260206004820152602660248201527f54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20604482015265636c6f6e657360d01b6064820152608401610621565b60006106dd30611416565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561072157600080fd5b505af1158015610735573d6000803e3d6000fd5b5092949350505050565b6004602052816000526040600020818154811061075b57600080fd5b60009182526020909120015463ffffffff8116925064010000000090046001600160e01b0316905082565b60405162461bcd60e51b815260206004820152601a60248201527f7345434f78206973206e6f6e2d7472616e736665727261626c650000000000006044820152600090606401610621565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061082057506006546001600160a01b038381169116145b6108925760405162461bcd60e51b815260206004820152603c60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f74726163742063616e207365742074686520696e746572666163652e000000006064820152608401610621565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b60085433906108ed9060019061235e565b6001600160a01b038216600090815260076020526040902054106109795760405162461bcd60e51b815260206004820152603860248201527f4d757374206e6f7420766f746520696e207468652067656e65726174696f6e2060448201527f6f6e206f72206265666f7265207769746864726177696e6700000000000000006064820152608401610621565b610983818361147f565b5060405163a9059cbb60e01b81526001600160a01b038281166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb90604401602060405180830381600087803b1580156109ee57600080fd5b505af1158015610a02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a269190612375565b610a725760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572204661696c656400000000000000000000000000000000006044820152606401610621565b806001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6583604051610aad91815260200190565b60405180910390a25050565b610ae27fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b196114a3565b6001600160a01b031663172195226040518163ffffffff1660e01b815260040160206040518083038186803b158015610b1a57600080fd5b505afa158015610b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b529190612397565b600855565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161058c918590610b8e9086906123b0565b611354565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c225760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b6064820152608401610621565b6006805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000610c5d8383610cac565b9392505050565b6001600160a01b038082166000908152600360205260408120549091168015610c8d5780610c5d565b5090919050565b600061059082610dca565b610ca93382611558565b50565b600043821115610d0a5760405162461bcd60e51b8152602060048201526024808201527f566f7465436865636b706f696e74733a20626c6f636b206e6f7420796574206d6044820152631a5b995960e21b6064820152608401610621565b6001600160a01b0383166000908152600460205260409020610c5d90836115e1565b6001600160a01b03811660009081526004602052604081205463ffffffff1015610dae5760405162461bcd60e51b815260206004820152602d60248201527f6e756d626572206f6620636865636b706f696e74732063616e6e6f742062652060448201526c63617374656420736166656c7960981b6064820152608401610621565b506001600160a01b031660009081526004602052604090205490565b600043821115610e285760405162461bcd60e51b8152602060048201526024808201527f566f7465436865636b706f696e74733a20626c6f636b206e6f7420796574206d6044820152631a5b995960e21b6064820152608401610621565b6105906005836115e1565b610e5c7f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a6114a3565b6001600160a01b0316336001600160a01b03161480610eb45750610e9f7f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f6114a3565b6001600160a01b0316336001600160a01b0316145b610f0a5760405162461bcd60e51b815260206004820152602160248201527f4d757374206265206120766f74696e6720636f6e747261637420746f2063616c6044820152601b60fa1b6064820152608401610621565b6008546001600160a01b03909116600090815260076020526040902055565b606061057a7f00000000000000000000000000000000000000000000000000000000000000006112ee565b3360009081526001602090815260408083206001600160a01b038616845290915281205482811015610fd65760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610621565b610fe33385858403611354565b5060019392505050565b6040516323b872dd60e01b8152336004820181905230602483015260448201839052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561105e57600080fd5b505af1158015611072573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110969190612375565b6110e25760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152606401610621565b6110ec8183611735565b50806001600160a01b03167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c83604051610aad91815260200190565b60006111406000805160206123fc8339815191525490565b6001600160a01b0316146111a75760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610621565b6111b0816117d1565b6111d97fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b196114a3565b6001600160a01b031663172195226040518163ffffffff1660e01b815260040160206040518083038186803b15801561121157600080fd5b505afa158015611225573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112499190612397565b60085550565b6001600160a01b03811660009081526004602052604081205480156112c3576001600160a01b038316600090815260046020526040902061129160018361235e565b815481106112a1576112a16123c8565b60009182526020909120015464010000000090046001600160e01b03166112c6565b60005b6001600160e01b03169392505050565b600060208251106112e657600080fd5b50601f015190565b606060f882901c6020811061130257600080fd5b8067ffffffffffffffff81111561131b5761131b612199565b6040519080825280601f01601f191660200182016040528015611345576020820181803683370190505b50915082601f83015250919050565b6001600160a01b0382166113b55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610621565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b600061148b83836118e8565b915061149b60056119e7846119f3565b509092915050565b60405163555ddc6560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b15801561152057600080fd5b505afa158015611534573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059091906123de565b600061156383610c64565b6001600160a01b03848116600081815260208181526040808320546003909252808320805473ffffffffffffffffffffffffffffffffffffffff1916958916958617905551949550937f203990235367b1c7cb4ad749a6c1bcf1b793c8824cdb000bfcf53817afb8a7ac9190a36115db828483611c4f565b50505050565b8154600090806115f5576000915050610590565b60008461160360018461235e565b81548110611613576116136123c8565b60009182526020918290206040805180820190915291015463ffffffff81168083526401000000009091046001600160e01b0316928201929092529150841061166c57602001516001600160e01b031691506105909050565b8160005b818110156116da5760006001611686838561235e565b611691911c836123b0565b9050868882815481106116a6576116a66123c8565b60009182526020909120015463ffffffff1611156116c6578092506116d4565b6116d18160016123b0565b91505b50611670565b811561171e57866116ec60018461235e565b815481106116fc576116fc6123c8565b60009182526020909120015464010000000090046001600160e01b0316611721565b60005b6001600160e01b0316979650505050505050565b60006117418383611d71565b6002549092506001600160e01b0310156117c35760405162461bcd60e51b815260206004820152603560248201527f566f7465436865636b706f696e74733a20746f74616c20737570706c7920726960448201527f736b73206f766572666c6f77696e6720766f74657300000000000000000000006064820152608401610621565b61149b6005611e5f846119f3565b60006117e96000805160206123fc8339815191525490565b6001600160a01b0316146118505760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610621565b61185981611e6b565b604051635df8122f60e01b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b1580156118d457600080fd5b505af115801561064d573d6000803e3d6000fd5b6001600160a01b03821660009081526020819052604081205482908181101561195e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610621565b6001600160a01b038516600090815260208190526040812083830390556002805484929061198d90849061235e565b90915550506040518481526000906001600160a01b038716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a36119df85600084611ef3565b509392505050565b6000610c5d828461235e565b60006001600160e01b03821115611a565760405162461bcd60e51b815260206004820152602160248201527f6e65775765696768742063616e6e6f742062652063617374656420736166656c6044820152607960f81b6064820152608401610621565b63ffffffff431115611ab65760405162461bcd60e51b8152602060048201526024808201527f626c6f636b206e756d6265722063616e6e6f742062652063617374656420736160448201526366656c7960e01b6064820152608401610621565b835480611b145750506040805180820190915263ffffffff43811682526001600160e01b0380841660208085019182528754600181018955600089815291909120945191519092166401000000000292169190911791015580610c5d565b600085611b2260018461235e565b81548110611b3257611b326123c8565b60009182526020822001805490925064010000000090046001600160e01b031690611b61828763ffffffff8a16565b90506001600160e01b03811115611bc45760405162461bcd60e51b815260206004820152602160248201527f6e65775765696768742063616e6e6f742062652063617374656420736166656c6044820152607960f81b6064820152608401610621565b825463ffffffff16431415611bf457825463ffffffff166401000000006001600160e01b03831602178355611c44565b6040805180820190915263ffffffff43811682526001600160e01b0380841660208085019182528c54600181018e5560008e81529190912094519151909216640100000000029216919091179101555b979650505050505050565b816001600160a01b0316836001600160a01b031614158015611c715750600081115b15611d6c576001600160a01b03831615611cf1576001600160a01b0383166000908152600460205260408120611caa906119e7846119f3565b9050836001600160a01b03167f9e51f7a75849faf72867a9564c5b53a48e2f09829ff4133d76292dd8e3445f3182604051611ce791815260200190565b60405180910390a2505b6001600160a01b03821615611d6c576001600160a01b0382166000908152600460205260408120611d2590611e5f846119f3565b9050826001600160a01b03167f9e51f7a75849faf72867a9564c5b53a48e2f09829ff4133d76292dd8e3445f3182604051611d6291815260200190565b60405180910390a2505b505050565b60006001600160a01b038316611dc95760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610621565b60008290508060026000828254611de091906123b0565b90915550506001600160a01b03841660009081526020819052604081208054839290611e0d9084906123b0565b90915550506040518381526001600160a01b038516906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3610c5d60008583611ef3565b6000610c5d82846123b0565b6000611e836000805160206123fc8339815191525490565b6001600160a01b031614611eea5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610621565b610ca981611f0e565b611d6c611eff84610c64565b611f0884610c64565b83611c4f565b6000611f266000805160206123fc8339815191525490565b6001600160a01b031614611f8d5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b6064820152608401610621565b6000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fc857600080fd5b505afa158015611fdc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200091906123de565b90506001600160a01b03811661206d5760405162461bcd60e51b815260206004820152602c60248201527f696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e672060448201526b1d1bc81a5b5c1b195b595b9d60a21b6064820152608401610621565b6120768161207a565b5050565b806001600160a01b031661209a6000805160206123fc8339815191525490565b6001600160a01b031614156120f15760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e67006044820152606401610621565b6000805160206123fc83398151915255565b600060208083528351808285015260005b8181101561213057858101830151858201604001528201612114565b81811115612142576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610ca957600080fd5b6000806040838503121561218057600080fd5b823561218b81612158565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156121c257600080fd5b82356121cd81612158565b9150602083013567ffffffffffffffff808211156121ea57600080fd5b818501915085601f8301126121fe57600080fd5b81358181111561221057612210612199565b604051601f8201601f19908116603f0116810190838211818310171561223857612238612199565b8160405282815288602084870101111561225157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060006060848603121561228857600080fd5b833561229381612158565b925060208401356122a381612158565b929592945050506040919091013590565b600080604083850312156122c757600080fd5b8235915060208301356122d981612158565b809150509250929050565b6000602082840312156122f657600080fd5b5035919050565b60006020828403121561230f57600080fd5b8135610c5d81612158565b6000806040838503121561232d57600080fd5b823561233881612158565b915060208301356122d981612158565b634e487b7160e01b600052601160045260246000fd5b60008282101561237057612370612348565b500390565b60006020828403121561238757600080fd5b81518015158114610c5d57600080fd5b6000602082840312156123a957600080fd5b5051919050565b600082198211156123c3576123c3612348565b500190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156123f057600080fd5b8151610c5d8161215856fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a26469706673582212201ec0e0195212edd99496fd4271124bfbcede71e33a2b525a2ab0c7c5f73c937e64736f6c63430008090033",
  "immutableReferences": {
    "3270": [
      {
        "length": 32,
        "start": 1366
      }
    ],
    "3272": [
      {
        "length": 32,
        "start": 3888
      }
    ],
    "7999": [
      {
        "length": 32,
        "start": 848
      },
      {
        "length": 32,
        "start": 2474
      },
      {
        "length": 32,
        "start": 4114
      }
    ],
    "11624": [
      {
        "length": 32,
        "start": 550
      },
      {
        "length": 32,
        "start": 1441
      },
      {
        "length": 32,
        "start": 2005
      },
      {
        "length": 32,
        "start": 2974
      },
      {
        "length": 32,
        "start": 5306
      },
      {
        "length": 32,
        "start": 6262
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1160:53",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:53",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:53"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:53"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:53",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:53",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:53"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:53"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:53",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:53"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:53"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:53",
                "type": ""
              }
            ],
            "src": "14:177:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:195:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:59:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "479:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "434:29:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:49:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:53",
                "type": ""
              }
            ],
            "src": "196:293:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "623:175:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "633:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "645:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "656:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "641:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "641:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "633:4:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "668:29:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "686:3:53",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "691:1:53",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "682:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "682:11:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "695:1:53",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "678:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "678:19:53"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "672:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "713:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "728:6:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "736:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "724:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "724:15:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "706:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "706:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "706:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "760:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "771:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "756:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "756:18:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "780:6:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "788:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "776:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "776:15:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "749:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "749:43:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "749:43:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "584:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "595:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "603:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "614:4:53",
                "type": ""
              }
            ],
            "src": "494:304:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "977:181:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "994:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1005:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "987:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "987:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "987:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1028:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1039:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1024:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1024:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1044:2:53",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1017:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1017:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1067:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1078:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1063:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1063:18:53"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1083:33:53",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1056:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1056:61:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1056:61:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1126:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1138:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1149:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1134:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1126:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "954:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "968:4:53",
                "type": ""
              }
            ],
            "src": "803:355:53"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:16439:53",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:53",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:53",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:53",
                "type": ""
              }
            ],
            "src": "14:226:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "366:476:53",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "376:12:53",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "386:2:53",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "380:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "404:9:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "415:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "397:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "397:21:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "427:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "447:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "441:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "441:13:53"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "431:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "474:9:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "485:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "470:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "470:18:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "490:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "463:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "463:34:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "506:10:53",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "515:1:53",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "510:1:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "575:90:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "604:9:53"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "615:1:53"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "600:3:53"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "600:17:53"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "619:2:53",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "596:3:53"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "596:26:53"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "638:6:53"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "646:1:53"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "634:3:53"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "634:14:53"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "650:2:53"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "630:3:53"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "630:23:53"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "624:5:53"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "624:30:53"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "589:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "589:66:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "589:66:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "536:1:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "539:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "533:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "533:13:53"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "547:19:53",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "549:15:53",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "558:1:53"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "561:2:53"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "554:3:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "554:10:53"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "549:1:53"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "529:3:53",
                    "statements": []
                  },
                  "src": "525:140:53"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "699:66:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "728:9:53"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "739:6:53"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "724:3:53"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "724:22:53"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "748:2:53",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "720:3:53"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "720:31:53"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "753:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "713:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "713:42:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "713:42:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "680:1:53"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "683:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "677:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "677:13:53"
                  },
                  "nodeType": "YulIf",
                  "src": "674:91:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "774:62:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "790:9:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "809:6:53"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "817:2:53",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "805:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "805:15:53"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "826:2:53",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "822:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "822:7:53"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "801:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "801:29:53"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:45:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "782:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "782:54:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "774:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "335:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "346:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "357:4:53",
                "type": ""
              }
            ],
            "src": "245:597:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "892:109:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "979:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "988:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "991:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "981:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "981:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "981:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "915:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "926:5:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "933:42:53",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "922:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "922:54:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "912:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "912:65:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "905:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:73:53"
                  },
                  "nodeType": "YulIf",
                  "src": "902:93:53"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "881:5:53",
                "type": ""
              }
            ],
            "src": "847:154:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1093:228:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1139:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1148:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1151:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1141:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1141:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1141:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1114:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1123:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1110:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1110:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1135:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1106:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1106:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1103:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1164:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1190:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1177:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1177:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1168:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1234:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1209:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1209:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1209:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1249:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1259:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1249:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1273:42:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1300:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1311:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1296:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1296:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1283:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1283:32:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1273:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1051:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1062:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1074:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1082:6:53",
                "type": ""
              }
            ],
            "src": "1006:315:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1421:92:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1431:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1443:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1439:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1439:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1431:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1473:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1498:6:53"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1491:6:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1491:14:53"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1484:6:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:22:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1466:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1466:41:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1466:41:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1390:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1401:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1412:4:53",
                "type": ""
              }
            ],
            "src": "1326:187:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1550:95:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1567:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1574:3:53",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1579:10:53",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1570:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1570:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1560:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1560:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1560:31:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1607:1:53",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1610:4:53",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1600:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1600:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1600:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1631:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1634:4:53",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1624:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1624:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1624:15:53"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1518:127:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1746:960:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1792:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1801:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1804:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1794:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1794:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1794:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1767:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1776:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1763:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1763:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1788:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1759:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1759:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "1756:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1817:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1843:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1830:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1830:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1821:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1887:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1862:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1862:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1862:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1902:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1912:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1902:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1926:46:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1957:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1968:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1953:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1953:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1940:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1940:32:53"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1930:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1981:28:53",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1991:18:53",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1985:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2036:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2045:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2048:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2038:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2038:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2038:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2024:6:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2032:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2021:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:14:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2018:34:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2061:32:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2075:9:53"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2086:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2071:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2071:22:53"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2065:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2141:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2150:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2153:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2143:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2143:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2143:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2120:2:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2124:4:53",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2116:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2116:13:53"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2131:7:53"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2112:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:27:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2105:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:35:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2102:55:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2166:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2189:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2176:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2176:16:53"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2170:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2215:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2217:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2217:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2217:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2207:2:53"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2211:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2204:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2204:10:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2201:36:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2246:17:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2260:2:53",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2256:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2256:7:53"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2250:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2272:23:53",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2292:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2286:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:9:53"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "2276:6:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2304:71:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2326:6:53"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "2350:2:53"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2354:4:53",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2346:3:53"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2346:13:53"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2361:2:53"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2342:3:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2342:22:53"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2366:2:53",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2338:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2338:31:53"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2371:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2334:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2334:40:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2322:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2322:53:53"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "2308:10:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2434:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "2436:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2436:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2436:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2393:10:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2405:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2390:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2390:18:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2413:10:53"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2425:6:53"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2410:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2410:22:53"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "2387:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2387:46:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2384:72:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2472:2:53",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "2476:10:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2465:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2465:22:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2465:22:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2503:6:53"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2511:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2496:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2496:18:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2496:18:53"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2560:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2569:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2572:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2562:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2562:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2562:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2537:2:53"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2541:2:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2533:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2533:11:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2546:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2529:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2529:20:53"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2551:7:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2526:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2526:33:53"
                  },
                  "nodeType": "YulIf",
                  "src": "2523:53:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2602:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2610:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2598:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2598:15:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2619:2:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2623:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2615:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2615:11:53"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2628:2:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "2585:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2585:46:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2585:46:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2655:6:53"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2663:2:53"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2651:3:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2651:15:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2668:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2647:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2647:24:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2673:1:53",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2640:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2640:35:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2640:35:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2684:16:53",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "2694:6:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2684:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1704:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1715:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1727:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1735:6:53",
                "type": ""
              }
            ],
            "src": "1650:1056:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2838:201:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2848:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2860:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2871:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2856:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2856:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2848:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2890:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2905:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2913:10:53",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2901:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2901:23:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2883:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2883:42:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2883:42:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2945:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2956:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2941:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2941:18:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2965:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2973:58:53",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2961:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2961:71:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2934:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2934:99:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2934:99:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32_t_uint224__to_t_uint32_t_uint224__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2799:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2810:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2818:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2829:4:53",
                "type": ""
              }
            ],
            "src": "2711:328:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3145:76:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3155:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3167:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3178:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3163:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3163:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3155:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3197:9:53"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3208:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3190:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:25:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3190:25:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3114:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3125:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3136:4:53",
                "type": ""
              }
            ],
            "src": "3044:177:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3330:352:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3376:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3385:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3388:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3378:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3378:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3378:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3351:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3360:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3347:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3347:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3372:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3343:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3343:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "3340:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3401:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3427:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3414:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3414:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3405:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3471:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3446:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3446:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3446:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3486:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3496:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3486:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3510:47:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3542:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3553:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3538:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3538:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3525:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3525:32:53"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3514:7:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3591:7:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3566:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3566:33:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3566:33:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3608:17:53",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3618:7:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3608:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3634:42:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3661:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3657:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3657:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3644:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:32:53"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3634:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3280:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3291:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3303:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3311:6:53",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3319:6:53",
                "type": ""
              }
            ],
            "src": "3226:456:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3774:228:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3820:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3829:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3832:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3822:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3822:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3822:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3795:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3804:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3791:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3791:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3816:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3787:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3787:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "3784:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3845:33:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3868:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3855:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3855:23:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3845:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3887:45:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3917:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3928:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3913:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3913:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3900:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3900:32:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3891:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3966:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3941:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3941:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3941:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3981:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3991:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3981:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3732:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3743:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3755:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3763:6:53",
                "type": ""
              }
            ],
            "src": "3687:315:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4108:76:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4118:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4130:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4141:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4126:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4126:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4118:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4160:9:53"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4171:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4153:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4153:25:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4153:25:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4077:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4088:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4099:4:53",
                "type": ""
              }
            ],
            "src": "4007:177:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4259:110:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4305:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4314:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4317:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4307:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4307:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4307:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4280:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4289:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4276:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4276:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4301:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4272:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4272:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "4269:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4330:33:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4353:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4340:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4340:23:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4330:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4225:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4236:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4248:6:53",
                "type": ""
              }
            ],
            "src": "4189:180:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4471:87:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4481:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4493:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4504:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4489:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4489:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4481:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4523:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4538:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4546:4:53",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4534:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4534:17:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4516:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4516:36:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4516:36:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4440:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4451:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4462:4:53",
                "type": ""
              }
            ],
            "src": "4374:184:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4678:125:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4688:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4700:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4711:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4696:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4696:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4688:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4730:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4745:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4753:42:53",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4741:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4741:55:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4723:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4723:74:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4723:74:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4647:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4658:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4669:4:53",
                "type": ""
              }
            ],
            "src": "4563:240:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4878:177:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4924:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4933:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4936:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4926:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4926:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4926:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4899:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4908:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4895:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4895:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4920:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4891:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4891:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "4888:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4949:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4975:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4962:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4962:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4953:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5019:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4994:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4994:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4994:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5034:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5044:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5034:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4844:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4855:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4867:6:53",
                "type": ""
              }
            ],
            "src": "4808:247:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5159:93:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5169:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5181:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5192:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5177:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5177:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5169:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5211:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5226:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5234:10:53",
                            "type": "",
                            "value": "0xffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5222:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5222:23:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5204:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5204:42:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5204:42:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5128:9:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5139:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5150:4:53",
                "type": ""
              }
            ],
            "src": "5060:192:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5344:301:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5390:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5399:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5402:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5392:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5392:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5392:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5365:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5374:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5361:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5361:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5386:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5357:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5357:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "5354:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5415:36:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5441:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5428:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5428:23:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5419:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5485:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5460:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5460:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5460:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5500:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5510:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5500:6:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5524:47:53",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5556:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5567:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5552:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5552:18:53"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5539:12:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5539:32:53"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "5528:7:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "5605:7:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5580:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5580:33:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5580:33:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5622:17:53",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "5632:7:53"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "5622:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5302:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5313:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5325:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5333:6:53",
                "type": ""
              }
            ],
            "src": "5257:388:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5824:236:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5841:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5852:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5834:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5834:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5834:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5875:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5886:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5871:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5871:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5891:2:53",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5864:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5864:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5864:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5914:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5925:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5910:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5910:18:53"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5930:34:53",
                        "type": "",
                        "value": "Only the policy contract may cal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5903:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5903:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5903:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5985:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5996:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5981:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5981:18:53"
                      },
                      {
                        "hexValue": "6c2074686973206d6574686f642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6001:16:53",
                        "type": "",
                        "value": "l this method."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5974:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5974:44:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5974:44:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6027:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6039:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6050:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6035:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6035:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6027:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5801:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5815:4:53",
                "type": ""
              }
            ],
            "src": "5650:410:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6239:228:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6256:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6267:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6249:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6249:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6249:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6290:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6301:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6286:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6286:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6306:2:53",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6279:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6279:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6279:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6329:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6340:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6325:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6325:18:53"
                      },
                      {
                        "hexValue": "54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6345:34:53",
                        "type": "",
                        "value": "This method cannot be called on "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6318:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6318:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6318:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6400:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6411:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6396:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6396:18:53"
                      },
                      {
                        "hexValue": "636c6f6e6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6416:8:53",
                        "type": "",
                        "value": "clones"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6389:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6389:36:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6389:36:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6434:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6446:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6457:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6442:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6442:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6434:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a35c1fe0fe1ed6afe3c9bc1734c4f5109aadfc21beb8ed8e518da672f582600b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6216:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6230:4:53",
                "type": ""
              }
            ],
            "src": "6065:402:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6646:176:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6663:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6674:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6656:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6656:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6656:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6697:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6708:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6693:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6693:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6713:2:53",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6686:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6686:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6686:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6736:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6747:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6732:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6732:18:53"
                      },
                      {
                        "hexValue": "7345434f78206973206e6f6e2d7472616e736665727261626c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6752:28:53",
                        "type": "",
                        "value": "sECOx is non-transferrable"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6725:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6725:56:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6725:56:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6790:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6802:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6813:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6798:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6798:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6790:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6623:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6637:4:53",
                "type": ""
              }
            ],
            "src": "6472:350:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7001:250:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7018:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7029:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7011:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7011:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7011:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7052:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7063:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7048:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7048:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7068:2:53",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7041:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7041:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7041:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7091:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7102:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7087:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7087:18:53"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7107:34:53",
                        "type": "",
                        "value": "Only the policy or interface con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7080:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7080:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7080:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7162:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7173:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7158:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7158:18:53"
                      },
                      {
                        "hexValue": "74726163742063616e207365742074686520696e746572666163652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7178:30:53",
                        "type": "",
                        "value": "tract can set the interface."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7151:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7151:58:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7151:58:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7218:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7230:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7241:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7226:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7226:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7218:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08d278b1488142cbb27880a3aec0587d5b0d682f7907703765895f131b608af0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6978:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6992:4:53",
                "type": ""
              }
            ],
            "src": "6827:424:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7448:79:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7465:3:53"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7470:22:53",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7458:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7458:35:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7458:35:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7502:19:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7513:3:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7518:2:53",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7509:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7509:12:53"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7502:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7432:3:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7440:3:53",
                "type": ""
              }
            ],
            "src": "7256:271:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7564:95:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7581:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7588:3:53",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7593:10:53",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7584:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7584:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7574:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7574:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7574:31:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7621:1:53",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7624:4:53",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7614:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7614:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7614:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7645:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7648:4:53",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7638:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7638:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7638:15:53"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7532:127:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7713:76:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7735:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7737:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7737:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7737:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7729:1:53"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7732:1:53"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7726:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7726:8:53"
                  },
                  "nodeType": "YulIf",
                  "src": "7723:34:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7766:17:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7778:1:53"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7781:1:53"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7774:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7774:9:53"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7766:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7695:1:53",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7698:1:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7704:4:53",
                "type": ""
              }
            ],
            "src": "7664:125:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7968:246:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7985:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7996:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7978:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7978:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7978:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8019:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8030:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8015:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8015:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8035:2:53",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8008:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8008:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8008:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8058:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8069:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8054:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8054:18:53"
                      },
                      {
                        "hexValue": "4d757374206e6f7420766f746520696e207468652067656e65726174696f6e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8074:34:53",
                        "type": "",
                        "value": "Must not vote in the generation "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8047:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8047:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8047:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8129:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8140:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8125:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8125:18:53"
                      },
                      {
                        "hexValue": "6f6e206f72206265666f7265207769746864726177696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8145:26:53",
                        "type": "",
                        "value": "on or before withdrawing"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8118:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8118:54:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8118:54:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8181:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8193:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8204:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8189:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8189:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8181:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e2e61238b2df1699214e2f69fd1babdd9d7bb04fe721942c9005a324ef6796b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7945:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7959:4:53",
                "type": ""
              }
            ],
            "src": "7794:420:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8348:168:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8358:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8370:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8381:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8366:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8366:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8358:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8400:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8415:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8423:42:53",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8411:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8411:55:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8393:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8393:74:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8393:74:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8487:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8498:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8483:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8483:18:53"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8503:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8476:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8476:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8476:34:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8309:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8320:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8328:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8339:4:53",
                "type": ""
              }
            ],
            "src": "8219:297:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8599:199:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8645:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8654:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8657:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8647:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8647:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8647:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8620:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8629:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8616:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8616:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8641:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8612:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8612:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "8609:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8670:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8689:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8683:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8683:16:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8674:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8752:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8761:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8764:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8754:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8754:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8754:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8721:5:53"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "8742:5:53"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "8735:6:53"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8735:13:53"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8728:6:53"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8728:21:53"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8718:2:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8718:32:53"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8711:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8711:40:53"
                  },
                  "nodeType": "YulIf",
                  "src": "8708:60:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8777:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8787:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8777:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8565:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8576:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8588:6:53",
                "type": ""
              }
            ],
            "src": "8521:277:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8977:165:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8994:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9005:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8987:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8987:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8987:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9028:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9039:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9024:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9024:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9044:2:53",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9017:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9017:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9017:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9067:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9078:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9063:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9063:18:53"
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9083:17:53",
                        "type": "",
                        "value": "Transfer Failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9056:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9056:45:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9056:45:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9110:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9122:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9133:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9118:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9118:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9110:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8954:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8968:4:53",
                "type": ""
              }
            ],
            "src": "8803:339:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9228:103:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9274:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9283:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9286:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9276:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9276:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9276:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9249:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9258:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9245:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9245:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9270:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9241:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9241:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "9238:52:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9299:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9315:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9309:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9309:16:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9299:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9194:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9205:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9217:6:53",
                "type": ""
              }
            ],
            "src": "9147:184:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9384:80:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9411:22:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9413:16:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9413:18:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9413:18:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9400:1:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9407:1:53"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9403:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9403:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9397:2:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9397:13:53"
                  },
                  "nodeType": "YulIf",
                  "src": "9394:39:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9442:16:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9453:1:53"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9456:1:53"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9449:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9449:9:53"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "9442:3:53"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9367:1:53",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9370:1:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "9376:3:53",
                "type": ""
              }
            ],
            "src": "9336:128:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9643:226:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9660:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9671:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9653:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9653:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9653:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9694:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9705:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9690:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9690:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9710:2:53",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9683:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9683:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9683:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9733:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9744:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9729:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9729:18:53"
                      },
                      {
                        "hexValue": "566f7465436865636b706f696e74733a20626c6f636b206e6f7420796574206d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9749:34:53",
                        "type": "",
                        "value": "VoteCheckpoints: block not yet m"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9722:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9722:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9722:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9804:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9815:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9800:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9800:18:53"
                      },
                      {
                        "hexValue": "696e6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9820:6:53",
                        "type": "",
                        "value": "ined"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9793:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9793:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9793:34:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9836:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9848:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9859:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9844:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9844:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9836:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2bf5b7799bf9b5d0262161c573599fbe6b806c77ef8f1d99ccf58dfaf8fe101d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9620:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9634:4:53",
                "type": ""
              }
            ],
            "src": "9469:400:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10048:235:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10065:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10076:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10058:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10058:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10058:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10099:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10110:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10095:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10095:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10115:2:53",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10088:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10088:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10088:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10138:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10149:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10134:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10134:18:53"
                      },
                      {
                        "hexValue": "6e756d626572206f6620636865636b706f696e74732063616e6e6f7420626520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10154:34:53",
                        "type": "",
                        "value": "number of checkpoints cannot be "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10127:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10127:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10127:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10209:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10220:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10205:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10205:18:53"
                      },
                      {
                        "hexValue": "63617374656420736166656c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10225:15:53",
                        "type": "",
                        "value": "casted safely"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10198:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10198:43:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10198:43:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10250:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10262:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10273:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10258:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10258:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10250:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_77e5bab928f9ce004531c0b630f4af8a34fb5361fe739108463f1afae2d72097__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10025:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10039:4:53",
                "type": ""
              }
            ],
            "src": "9874:409:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10462:223:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10479:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10490:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10472:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10472:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10472:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10513:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10524:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10509:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10509:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10529:2:53",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10502:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10502:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10502:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10552:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10563:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10548:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10548:18:53"
                      },
                      {
                        "hexValue": "4d757374206265206120766f74696e6720636f6e747261637420746f2063616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10568:34:53",
                        "type": "",
                        "value": "Must be a voting contract to cal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10541:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10541:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10541:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10623:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10634:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10619:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10619:18:53"
                      },
                      {
                        "hexValue": "6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10639:3:53",
                        "type": "",
                        "value": "l"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10612:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10612:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10612:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10652:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10664:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10675:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10660:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10660:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10652:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e78bd6b12628a997ff5e861794cf975dab930291bdd32f685dff0db0c7a027e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10439:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10453:4:53",
                "type": ""
              }
            ],
            "src": "10288:397:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10864:227:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10881:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10892:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10874:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10874:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10874:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10915:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10926:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10911:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10911:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10931:2:53",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10904:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10904:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10904:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10954:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10965:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10950:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10950:18:53"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10970:34:53",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10943:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10943:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10943:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11025:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11036:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11021:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11021:18:53"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11041:7:53",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11014:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11014:35:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11014:35:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11058:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11070:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11081:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11066:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11066:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11058:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10841:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10855:4:53",
                "type": ""
              }
            ],
            "src": "10690:401:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11253:241:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11263:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11275:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11286:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11271:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11271:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11263:4:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11298:52:53",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11308:42:53",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11302:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11366:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11381:6:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11389:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11377:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11377:15:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11359:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11359:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11359:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11413:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11424:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11409:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11409:18:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11433:6:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11441:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11429:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11429:15:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11402:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11402:43:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11402:43:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11465:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11476:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11461:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11461:18:53"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "11481:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11454:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11454:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11454:34:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11206:9:53",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11217:6:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11225:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11233:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11244:4:53",
                "type": ""
              }
            ],
            "src": "11096:398:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11673:165:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11690:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11701:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11683:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11683:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11683:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11724:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11735:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11720:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11720:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11740:2:53",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11713:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11713:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11713:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11763:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11774:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11759:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11759:18:53"
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11779:17:53",
                        "type": "",
                        "value": "Transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11752:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11752:45:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11752:45:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11806:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11818:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11829:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11814:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11814:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11806:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11650:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11664:4:53",
                "type": ""
              }
            ],
            "src": "11499:339:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12017:230:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12034:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12045:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12027:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12027:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12027:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12068:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12079:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12064:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12064:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12084:2:53",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12057:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12057:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12057:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12107:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12118:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12103:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12103:18:53"
                      },
                      {
                        "hexValue": "43616e206f6e6c792062652063616c6c656420647572696e6720696e69746961",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12123:34:53",
                        "type": "",
                        "value": "Can only be called during initia"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12096:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12096:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12096:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12178:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12189:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12174:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12174:18:53"
                      },
                      {
                        "hexValue": "6c697a6174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12194:10:53",
                        "type": "",
                        "value": "lization"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12167:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12167:38:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12167:38:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12214:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12226:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12237:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12222:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12222:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12214:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11994:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12008:4:53",
                "type": ""
              }
            ],
            "src": "11843:404:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12284:95:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12301:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12308:3:53",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12313:10:53",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12304:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12304:20:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12294:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12294:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12294:31:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12341:1:53",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12344:4:53",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12334:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12334:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12334:15:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12365:1:53",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12368:4:53",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "12358:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12358:15:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12358:15:53"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "12252:127:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12558:224:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12575:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12586:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12568:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12568:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12568:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12609:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12620:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12605:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12605:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12625:2:53",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12598:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12598:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12598:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12648:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12659:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12644:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12644:18:53"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12664:34:53",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12637:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12637:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12637:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12719:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12730:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12715:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12715:18:53"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12735:4:53",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12708:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12708:32:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12708:32:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12749:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12761:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12772:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12757:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12757:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12749:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12535:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12549:4:53",
                "type": ""
              }
            ],
            "src": "12384:398:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12916:168:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12926:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12938:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12949:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12934:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12934:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12926:4:53"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12968:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12983:6:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12991:42:53",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12979:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12979:55:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12961:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12961:74:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12961:74:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13055:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13066:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13051:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13051:18:53"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13071:6:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13044:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13044:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13044:34:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12877:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12888:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12896:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12907:4:53",
                "type": ""
              }
            ],
            "src": "12787:297:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13170:170:53",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13216:16:53",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13225:1:53",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13228:1:53",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13218:6:53"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13218:12:53"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13218:12:53"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13191:7:53"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13200:9:53"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13187:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13187:23:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13212:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13183:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13183:32:53"
                  },
                  "nodeType": "YulIf",
                  "src": "13180:52:53"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13241:29:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13260:9:53"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13254:5:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13254:16:53"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13245:5:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13304:5:53"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "13279:24:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13279:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13279:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13319:15:53",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13329:5:53"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13319:6:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13136:9:53",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13147:7:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13159:6:53",
                "type": ""
              }
            ],
            "src": "13089:251:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13519:243:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13536:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13547:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13529:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13529:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13529:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13570:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13581:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13566:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13566:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13586:2:53",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13559:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13559:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13559:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13609:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13620:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13605:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13605:18:53"
                      },
                      {
                        "hexValue": "566f7465436865636b706f696e74733a20746f74616c20737570706c79207269",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13625:34:53",
                        "type": "",
                        "value": "VoteCheckpoints: total supply ri"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13598:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13598:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13598:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13680:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13691:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13676:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13676:18:53"
                      },
                      {
                        "hexValue": "736b73206f766572666c6f77696e6720766f746573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13696:23:53",
                        "type": "",
                        "value": "sks overflowing votes"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13669:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13669:51:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13669:51:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13729:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13741:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13752:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13737:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13737:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13729:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5c4098279fa8cf6d7a62478c2a3a0a8a8991448735a1932a18b92fa49f54e075__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13496:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13510:4:53",
                "type": ""
              }
            ],
            "src": "13345:417:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13896:198:53",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13906:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13918:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13929:2:53",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13914:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13914:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13906:4:53"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13941:52:53",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13951:42:53",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13945:2:53",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14009:9:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14024:6:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14032:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14020:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14020:15:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14002:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14002:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14002:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14056:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14067:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14052:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14052:18:53"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14076:6:53"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14084:2:53"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14072:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14072:15:53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14045:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14045:43:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14045:43:53"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13857:9:53",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13868:6:53",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13876:6:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13887:4:53",
                "type": ""
              }
            ],
            "src": "13767:327:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14273:224:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14290:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14301:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14283:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14283:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14283:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14324:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14335:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14320:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14320:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14340:2:53",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14313:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14313:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14313:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14363:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14374:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14359:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14359:18:53"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14379:34:53",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14352:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14352:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14352:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14434:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14445:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14430:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14430:18:53"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14450:4:53",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14423:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14423:32:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14423:32:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14464:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14476:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14487:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14472:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14472:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14464:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14250:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14264:4:53",
                "type": ""
              }
            ],
            "src": "14099:398:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14676:223:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14693:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14704:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14686:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14686:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14686:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14727:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14738:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14723:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14723:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14743:2:53",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14716:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14716:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14716:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14766:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14777:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14762:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14762:18:53"
                      },
                      {
                        "hexValue": "6e65775765696768742063616e6e6f742062652063617374656420736166656c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14782:34:53",
                        "type": "",
                        "value": "newWeight cannot be casted safel"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14755:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14755:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14755:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14837:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14848:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14833:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14833:18:53"
                      },
                      {
                        "hexValue": "79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14853:3:53",
                        "type": "",
                        "value": "y"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14826:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14826:31:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14826:31:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14866:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14878:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14889:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14874:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14874:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14866:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b44c600fc9900903db00741af7928fe9894f0df86771d7ef415bb4e6f4b7f4cf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14653:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14667:4:53",
                "type": ""
              }
            ],
            "src": "14502:397:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15078:226:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15095:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15106:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15088:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15088:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15088:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15129:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15140:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15125:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15125:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15145:2:53",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15118:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15118:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15118:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15168:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15179:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15164:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15164:18:53"
                      },
                      {
                        "hexValue": "626c6f636b206e756d6265722063616e6e6f7420626520636173746564207361",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15184:34:53",
                        "type": "",
                        "value": "block number cannot be casted sa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15157:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15157:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15157:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15239:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15250:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15235:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15235:18:53"
                      },
                      {
                        "hexValue": "66656c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15255:6:53",
                        "type": "",
                        "value": "fely"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15228:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15228:34:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15228:34:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15271:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15283:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15294:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15279:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15279:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15271:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_484b73e5d2c70a65f701a63b5a9cefbfcf7082efda98a90990569e63a1fe5a04__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15055:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15069:4:53",
                "type": ""
              }
            ],
            "src": "14904:400:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15483:181:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15500:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15511:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15493:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15493:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15493:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15534:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15545:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15530:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15530:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15550:2:53",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15523:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15523:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15523:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15573:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15584:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15569:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15569:18:53"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15589:33:53",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15562:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15562:61:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15562:61:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15632:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15644:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15655:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15640:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15640:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15632:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15460:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15474:4:53",
                "type": ""
              }
            ],
            "src": "15309:355:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15843:234:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15860:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15871:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15853:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15853:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15853:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15894:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15905:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15890:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15890:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15910:2:53",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15883:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15883:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15883:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15933:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15944:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15929:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15929:18:53"
                      },
                      {
                        "hexValue": "696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15949:34:53",
                        "type": "",
                        "value": "initialization failure: nothing "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15922:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15922:62:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15922:62:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16004:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16015:2:53",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16000:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16000:18:53"
                      },
                      {
                        "hexValue": "746f20696d706c656d656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16020:14:53",
                        "type": "",
                        "value": "to implement"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15993:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15993:42:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15993:42:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16044:27:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16056:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16067:3:53",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16052:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16052:19:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16044:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_358f0a69429e5f4475e97793c43ead4f9c0987f98e7591dc6c37d0e56b6bd527__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15820:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15834:4:53",
                "type": ""
              }
            ],
            "src": "15669:408:53"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16256:181:53",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16273:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16284:2:53",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16266:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16266:21:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16266:21:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16307:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16318:2:53",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16303:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16303:18:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16323:2:53",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16296:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16296:30:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16296:30:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16346:9:53"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16357:2:53",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16342:3:53"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16342:18:53"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16362:33:53",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16335:6:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16335:61:53"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16335:61:53"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16405:26:53",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16417:9:53"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16428:2:53",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16413:3:53"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16413:18:53"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16405:4:53"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16233:9:53",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16247:4:53",
                "type": ""
              }
            ],
            "src": "16082:355:53"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_uint32_t_uint224__to_t_uint32_t_uint224__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$182__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Only the policy contract may cal\")\n        mstore(add(headStart, 96), \"l this method.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a35c1fe0fe1ed6afe3c9bc1734c4f5109aadfc21beb8ed8e518da672f582600b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"This method cannot be called on \")\n        mstore(add(headStart, 96), \"clones\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"sECOx is non-transferrable\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_08d278b1488142cbb27880a3aec0587d5b0d682f7907703765895f131b608af0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Only the policy or interface con\")\n        mstore(add(headStart, 96), \"tract can set the interface.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9e2e61238b2df1699214e2f69fd1babdd9d7bb04fe721942c9005a324ef6796b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Must not vote in the generation \")\n        mstore(add(headStart, 96), \"on or before withdrawing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer Failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_2bf5b7799bf9b5d0262161c573599fbe6b806c77ef8f1d99ccf58dfaf8fe101d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"VoteCheckpoints: block not yet m\")\n        mstore(add(headStart, 96), \"ined\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_77e5bab928f9ce004531c0b630f4af8a34fb5361fe739108463f1afae2d72097__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"number of checkpoints cannot be \")\n        mstore(add(headStart, 96), \"casted safely\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9e78bd6b12628a997ff5e861794cf975dab930291bdd32f685dff0db0c7a027e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Must be a voting contract to cal\")\n        mstore(add(headStart, 96), \"l\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Can only be called during initia\")\n        mstore(add(headStart, 96), \"lization\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5c4098279fa8cf6d7a62478c2a3a0a8a8991448735a1932a18b92fa49f54e075__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"VoteCheckpoints: total supply ri\")\n        mstore(add(headStart, 96), \"sks overflowing votes\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b44c600fc9900903db00741af7928fe9894f0df86771d7ef415bb4e6f4b7f4cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"newWeight cannot be casted safel\")\n        mstore(add(headStart, 96), \"y\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_484b73e5d2c70a65f701a63b5a9cefbfcf7082efda98a90990569e63a1fe5a04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"block number cannot be casted sa\")\n        mstore(add(headStart, 96), \"fely\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_358f0a69429e5f4475e97793c43ead4f9c0987f98e7591dc6c37d0e56b6bd527__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"initialization failure: nothing \")\n        mstore(add(headStart, 96), \"to implement\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 53,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "293:3375:23:-:0;;;1319:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1432:7;2384::40;1850:92:15;;;;;;;;;;;;;-1:-1:-1;;;1850:92:15;;;;;;;;;;;;;;;;-1:-1:-1;;;1850:92:15;;;1920:5;1927:7;2508:24:11;2526:5;2508:17;;;;;:24;;:::i;:::-;2500:32;;;;;;2552:26;2570:7;2552:17;;;;;:26;;:::i;:::-;2542:36;;-1:-1:-1;670:32:44;;-1:-1:-1;696:4:44;;-1:-1:-1;;670:17:44;:32::i;:::-;-1:-1:-1;;;;;1016:16:39;;;;;2403:50:40::1;::::0;-1:-1:-1;;;2403:50:40;;2438:4:::1;2403:50;::::0;::::1;706:34:53::0;776:15;;;756:18;;;749:43;303:42:38::1;::::0;2403:26:40::1;::::0;641:18:53;;2403:50:40::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;1455:29:23;;::::2;;::::0;-1:-1:-1;293:3375:23;;-1:-1:-1;;293:3375:23;85:234:51;170:14;233:2;214:8;208:22;:27;200:36;;;;;;-1:-1:-1;299:2:51;285:17;279:24;;85:234::o;1823:213:44:-;-1:-1:-1;;;;;1892:25:44;;:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;1892:16;-1:-1:-1;;;;;1892:25:44;;;1884:69;;;;-1:-1:-1;;;1884:69:44;;1005:2:53;1884:69:44;;;987:21:53;1044:2;1024:18;;;1017:30;1083:33;1063:18;;;1056:61;1134:18;;1884:69:44;;;;;;;;-1:-1:-1;;;;;;;;;;;1986:34:44;1823:213::o;14:177:53:-;93:13;;-1:-1:-1;;;;;135:31:53;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;803:355::-;293:3375:23;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "293:3375:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;697:31:39;;;;;;;;-1:-1:-1;;;;;178:55:53;;;160:74;;148:2;133:18;697:31:39;;;;;;;;2650:110:11;;;:::i;:::-;;;;;;;:::i;4788:183::-;;;;;;:::i;:::-;;:::i;:::-;;;1491:14:53;;1484:22;1466:41;;1454:2;1439:18;4788:183:11;1326:187:53;2694:1279:39;;;;;;:::i;:::-;;:::i;:::-;;4290:317:40;;;:::i;1380:51:15:-;;;;;;:::i;:::-;;:::i;:::-;;;;2913:10:53;2901:23;;;2883:42;;-1:-1:-1;;;;;2961:71:53;;;2956:2;2941:18;;2934:99;2856:18;1380:51:15;2711:328:53;3753:97:11;3831:12;;3753:97;;;3190:25:53;;;3178:2;3163:18;3753:97:11;3044:177:53;3498:168:23;;;;;;:::i;:::-;;:::i;2596:351:40:-;;;;;;:::i;:::-;;:::i;1794:511:23:-;;;;;;:::i;:::-;;:::i;3611:82:11:-;;;3684:2;4516:36:53;;4504:2;4489:18;3611:82:11;4374:184:53;1093:33:23;;;;;3178:183;;;:::i;6332:282:11:-;;;;;;:::i;:::-;;:::i;3543:111:40:-;;;;;;:::i;:::-;;:::i;2788:197:15:-;;;;;;:::i;:::-;;:::i;3527:221::-;;;;;;:::i;:::-;;:::i;2498:163:23:-;;;;;;:::i;:::-;;:::i;7001:108:15:-;;;;;;:::i;:::-;;:::i;1629:146:44:-;-1:-1:-1;;;;;;;;;;;1733:26:44;1629:146;;4231:320:15;;;;;;:::i;:::-;;:::i;3060:322::-;;;;;;:::i;:::-;;:::i;:::-;;;5234:10:53;5222:23;;;5204:42;;5192:2;5177:18;3060:322:15;5060:192:53;3908:116:11;;;;;;:::i;:::-;-1:-1:-1;;;;;3999:18:11;3973:7;3999:18;;;;;;;;;;;;3908:116;1280:32:23;;;;;;4826:307:15;;;;;;:::i;:::-;;:::i;2667:294:23:-;;;;;;:::i;:::-;;:::i;2873:114:11:-;;;:::i;7101:463::-;;;;;;:::i;:::-;;:::i;3367:125:23:-;;;;;;:::i;1497:291::-;;;;;;:::i;:::-;;:::i;1225:48::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2967:205;;;;;;:::i;:::-;;:::i;4474:176:11:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4616:18:11;;;4586:7;4616:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4474:176;3835:195:15;;;;;;:::i;:::-;;:::i;2650:110:11:-;2695:13;2727:26;2747:5;2727:19;:26::i;:::-;2720:33;;2650:110;:::o;4788:183::-;4886:4;4906:37;4915:10;4927:7;4936:6;4906:8;:37::i;:::-;-1:-1:-1;4960:4:11;4788:183;;;;;:::o;2694:1279:39:-;861:10;-1:-1:-1;;;;;875:6:39;861:20;;840:113;;;;-1:-1:-1;;;840:113:39;;5852:2:53;840:113:39;;;5834:21:53;5891:2;5871:18;;;5864:30;5930:34;5910:18;;;5903:62;-1:-1:-1;;;5981:18:53;;;5974:44;6035:19;;840:113:39;;;;;;;;;3394:1:::1;3375::::0;3351:5:::1;3345:12;3322:4;3315:5;3311:16;3284:9;3261:5;3231:178;3586:16;3638:4;3635:1;3630:3:::0;3615:28:::1;3812:6:::0;3831:56;;::::1;;3938:4;3933:3;3926:17;3831:56;3868:4;3863:3;3856:17;3805:152;;;;2694:1279:::0;;:::o;4290:317:40:-;4331:7;4399:4;4371:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;4371:16:40;-1:-1:-1;;;;;4371:33:40;;4350:118;;;;-1:-1:-1;;;4350:118:40;;6267:2:53;4350:118:40;;;6249:21:53;6306:2;6286:18;;;6279:30;6345:34;6325:18;;;6318:62;-1:-1:-1;;;6396:18:53;;;6389:36;6442:19;;4350:118:40;6065:402:53;4350:118:40;4478:14;4495:26;4515:4;4495:11;:26::i;:::-;4531:46;;-1:-1:-1;;;4531:46:40;;4571:4;4531:46;;;160:74:53;4478:43:40;;-1:-1:-1;;;;;;4531:31:40;;;;;133:18:53;;4531:46:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4594:6:40;;4290:317;-1:-1:-1;;;;4290:317:40:o;1380:51:15:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1380:51:15;;;-1:-1:-1;;;;;1380:51:15;;-1:-1:-1;1380:51:15;:::o;3498:168:23:-;3623:36;;-1:-1:-1;;;3623:36:23;;6674:2:53;3623:36:23;;;6656:21:53;6713:2;6693:18;;;6686:30;6752:28;6732:18;;;6725:56;3607:4:23;;6798:18:53;;3623:36:23;6472:350:53;2596:351:40;2725:7;2778:6;-1:-1:-1;;;;;2769:15:40;:5;-1:-1:-1;;;;;2769:15:40;;:48;;;-1:-1:-1;2797:20:40;;-1:-1:-1;;;;;2788:29:40;;;2797:20;;2788:29;2769:48;2748:155;;;;-1:-1:-1;;;2748:155:40;;7029:2:53;2748:155:40;;;7011:21:53;7068:2;7048:18;;;7041:30;7107:34;7087:18;;;7080:62;7178:30;7158:18;;;7151:58;7226:19;;2748:155:40;6827:424:53;2748:155:40;405:40:39;;7470:22:53;405:40:39;;;7458:35:53;7509:12;;405:40:39;;;;;;;;;;;;395:51;;;;;;2913:27:40;;2596:351;;;;:::o;1794:511:23:-;2027:17;;1871:10;;2027:21;;2047:1;;2027:21;:::i;:::-;-1:-1:-1;;;;;1997:27:23;;;;;;:13;:27;;;;;;:51;1976:154;;;;-1:-1:-1;;;1976:154:23;;7996:2:53;1976:154:23;;;7978:21:53;8035:2;8015:18;;;8008:30;8074:34;8054:18;;;8047:62;8145:26;8125:18;;;8118:54;8189:19;;1976:154:23;7794:420:53;1976:154:23;2141:28;2147:12;2161:7;2141:5;:28::i;:::-;-1:-1:-1;2188:41:23;;-1:-1:-1;;;2188:41:23;;-1:-1:-1;;;;;8411:55:53;;;2188:41:23;;;8393:74:53;8483:18;;;8476:34;;;2188:9:23;:18;;;;8366::53;;2188:41:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2180:69;;;;-1:-1:-1;;;2180:69:23;;9005:2:53;2180:69:23;;;8987:21:53;9044:2;9024:18;;;9017:30;9083:17;9063:18;;;9056:45;9118:18;;2180:69:23;8803:339:53;2180:69:23;2276:12;-1:-1:-1;;;;;2265:33:23;;2290:7;2265:33;;;;3190:25:53;;3178:2;3163:18;;3044:177;2265:33:23;;;;;;;;1838:467;1794:511;:::o;3178:183::-;3299:28;972:66:40;3299:9:23;:28::i;:::-;-1:-1:-1;;;;;3287:65:23;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3267:17;:87;3178:183::o;6332:282:11:-;6486:10;6444:4;6531:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;6531:32:11;;;;;;;;;;6444:4;;6464:122;;6510:7;;6531:45;;6566:10;;6531:45;:::i;:::-;6464:8;:122::i;3543:111:40:-;861:10:39;-1:-1:-1;;;;;875:6:39;861:20;;840:113;;;;-1:-1:-1;;;840:113:39;;5852:2:53;840:113:39;;;5834:21:53;5891:2;5871:18;;;5864:30;5930:34;5910:18;;;5903:62;-1:-1:-1;;;5981:18:53;;;5974:44;6035:19;;840:113:39;5650:410:53;840:113:39;3619:20:40::1;:28:::0;;-1:-1:-1;;3619:28:40::1;-1:-1:-1::0;;;;;3619:28:40;;;::::1;::::0;;;::::1;::::0;;3543:111::o;2788:197:15:-;2909:7;2939:39;2957:6;2965:12;2939:17;:39::i;:::-;2932:46;2788:197;-1:-1:-1;;;2788:197:15:o;3527:221::-;-1:-1:-1;;;;;3666:19:15;;;3626:7;3666:19;;;:10;:19;;;;;;3626:7;;3666:19;3702:20;;:39;;3735:6;3702:39;;;-1:-1:-1;3725:7:15;;3695:46;-1:-1:-1;3527:221:15:o;2498:163:23:-;2592:7;2622:32;2641:12;2622:18;:32::i;7001:108:15:-;7070:32;7080:10;7092:9;7070;:32::i;:::-;7001:108;:::o;4231:320::-;4341:7;4400:12;4385:11;:27;;4364:110;;;;-1:-1:-1;;;4364:110:15;;9671:2:53;4364:110:15;;;9653:21:53;9710:2;9690:18;;;9683:30;9749:34;9729:18;;;9722:62;-1:-1:-1;;;9800:18:53;;;9793:34;9844:19;;4364:110:15;9469:400:53;4364:110:15;-1:-1:-1;;;;;4510:20:15;;;;;;:11;:20;;;;;4491:53;;4532:11;4491:18;:53::i;3060:322::-;-1:-1:-1;;;;;3205:20:15;;3162:6;3205:20;;;:11;:20;;;;;:27;3236:16;-1:-1:-1;3205:47:15;3184:139;;;;-1:-1:-1;;;3184:139:15;;10076:2:53;3184:139:15;;;10058:21:53;10115:2;10095:18;;;10088:30;10154:34;10134:18;;;10127:62;-1:-1:-1;;;10205:18:53;;;10198:43;10258:19;;3184:139:15;9874:409:53;3184:139:15;-1:-1:-1;;;;;;3347:20:15;;;;;:11;:20;;;;;:27;;3060:322::o;4826:307::-;4920:7;4979:12;4964:11;:27;;4943:110;;;;-1:-1:-1;;;4943:110:15;;9671:2:53;4943:110:15;;;9653:21:53;9710:2;9690:18;;;9683:30;9749:34;9729:18;;;9722:62;-1:-1:-1;;;9800:18:53;;;9793:34;9844:19;;4943:110:15;9469:400:53;4943:110:15;5070:56;5089:23;5114:11;5070:18;:56::i;2667:294:23:-;2755:30;1296:66:40;2755:9:23;:30::i;:::-;-1:-1:-1;;;;;2741:44:23;:10;-1:-1:-1;;;;;2741:44:23;;:104;;;-1:-1:-1;2819:26:23;1453:66:40;2819:9:23;:26::i;:::-;-1:-1:-1;;;;;2805:40:23;:10;-1:-1:-1;;;;;2805:40:23;;2741:104;2720:184;;;;-1:-1:-1;;;2720:184:23;;10490:2:53;2720:184:23;;;10472:21:53;10529:2;10509:18;;;10502:30;10568:34;10548:18;;;10541:62;-1:-1:-1;;;10619:18:53;;;10612:31;10660:19;;2720:184:23;10288:397:53;2720:184:23;2937:17;;-1:-1:-1;;;;;2915:19:23;;;;;;;:13;:19;;;;;:39;2667:294::o;2873:114:11:-;2920:13;2952:28;2972:7;2952:19;:28::i;7101:463::-;7277:10;7218:4;7265:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;7265:32:11;;;;;;;;;;7328:35;;;;7307:119;;;;-1:-1:-1;;;7307:119:11;;10892:2:53;7307:119:11;;;10874:21:53;10931:2;10911:18;;;10904:30;10970:34;10950:18;;;10943:62;-1:-1:-1;;;11021:18:53;;;11014:35;11066:19;;7307:119:11;10690:401:53;7307:119:11;7460:65;7469:10;7481:7;7509:15;7490:16;:34;7460:8;:65::i;:::-;-1:-1:-1;7553:4:11;;7101:463;-1:-1:-1;;;7101:463:11:o;1497:291:23:-;1610:55;;-1:-1:-1;;;1610:55:23;;1568:10;1610:55;;;11359:34:53;;;1650:4:23;11409:18:53;;;11402:43;11461:18;;;11454:34;;;1568:10:23;1610:9;-1:-1:-1;;;;;1610:22:23;;;;11271:18:53;;1610:55:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1589:117;;;;-1:-1:-1;;;1589:117:23;;11701:2:53;1589:117:23;;;11683:21:53;11740:2;11720:18;;;11713:30;11779:17;11759:18;;;11752:45;11814:18;;1589:117:23;11499:339:53;1589:117:23;1717:23;1723:7;1732;1717:5;:23::i;:::-;;1764:7;-1:-1:-1;;;;;1756:25:23;;1773:7;1756:25;;;;3190::53;;3178:2;3163:18;;3044:177;2967:205:23;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;12045:2:53;505:117:44;;;12027:21:53;12084:2;12064:18;;;12057:30;12123:34;12103:18;;;12096:62;-1:-1:-1;;;12174:18:53;;;12167:38;12222:19;;505:117:44;11843:404:53;505:117:44;3045:23:23::1;3062:5;3045:16;:23::i;:::-;3110:28;972:66:40;3110:9:23;:28::i;:::-;-1:-1:-1::0;;;;;3098:65:23::1;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3078:17;:87:::0;-1:-1:-1;2967:205:23:o;3835:195:15:-;-1:-1:-1;;;;;3929:20:15;;3896:7;3929:20;;;:11;:20;;;;;:27;3973:8;;:50;;-1:-1:-1;;;;;3988:20:15;;;;;;:11;:20;;;;;4009:7;4015:1;4009:3;:7;:::i;:::-;3988:29;;;;;;;;:::i;:::-;;;;;;;;;;:35;;;;-1:-1:-1;;;;;3988:35:15;3973:50;;;3984:1;3973:50;-1:-1:-1;;;;;3966:57:15;;3835:195;-1:-1:-1;;;3835:195:15:o;85:234:51:-;170:14;233:2;214:8;208:22;:27;200:36;;;;;;-1:-1:-1;299:2:51;285:17;279:24;;85:234::o;325:360::-;404:22;472:3;462:13;;;498:2;494:6;;486:15;;;;;;539:1;529:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;529:12:51;;511:31;;601:6;596:2;586:8;582:17;575:33;561:118;325:360;;;:::o;11012:292:11:-;-1:-1:-1;;;;;11143:21:11;;11135:68;;;;-1:-1:-1;;;11135:68:11;;12586:2:53;11135:68:11;;;12568:21:53;12625:2;12605:18;;;12598:30;12664:34;12644:18;;;12637:62;-1:-1:-1;;;12715:18:53;;;12708:32;12757:19;;11135:68:11;12384:398:53;11135:68:11;-1:-1:-1;;;;;11214:18:11;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11265:32;;3190:25:53;;;11265:32:11;;3163:18:53;11265:32:11;;;;;;;11012:292;;;:::o;1352:577:8:-;1407:14;1433:19;1463:6;1455:15;;1433:37;;1522:4;1516:11;1587:66;1564:5;1540:127;1705:11;1698:4;1691:5;1687:16;1680:37;1788:66;1765:4;1758:5;1754:16;1730:138;1908:4;1901:5;1898:1;1891:22;1881:32;1352:577;-1:-1:-1;;;;1352:577:8:o;7902:276:15:-;8017:7;8049:28;8061:7;8070:6;8049:11;:28::i;:::-;8040:37;;8088:60;8105:23;8130:9;8141:6;8088:16;:60::i;:::-;-1:-1:-1;8165:6:15;;7902:276;-1:-1:-1;;7902:276:15:o;5184:140:40:-;5265:52;;-1:-1:-1;;;5265:52:40;;-1:-1:-1;;;;;5305:6:40;8411:55:53;5265:52:40;;;8393:74:53;8483:18;;;8476:34;;;5239:7:40;;303:42:38;;5265:39:40;;8366:18:53;;5265:52:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8669:364:15:-;8753:23;8779:22;8791:9;8779:11;:22::i;:::-;-1:-1:-1;;;;;8838:20:15;;;8811:24;8838:20;;;;;;;;;;;;8868:10;:21;;;;;;:33;;-1:-1:-1;;8868:33:15;;;;;;;;;8917:36;8753:48;;-1:-1:-1;8838:20:15;8917:36;;8811:24;8917:36;8964:62;8981:15;8998:9;9009:16;8964;:62::i;:::-;8743:290;;8669:364;;:::o;5217:1703::-;6372:12;;5341:7;;6398:16;6394:30;;6423:1;6416:8;;;;;6394:30;6434:26;6463:5;6469:15;6483:1;6469:11;:15;:::i;:::-;6463:22;;;;;;;;:::i;:::-;;;;;;;;;;6434:51;;;;;;;;;6463:22;;6434:51;;;;;;;;;;;-1:-1:-1;;;;;6434:51:15;;;;;;;;;-1:-1:-1;6499:33:15;;6495:60;;6541:14;;;-1:-1:-1;;;;;6534:21:15;;-1:-1:-1;6534:21:15;;-1:-1:-1;6534:21:15;6495:60;6581:11;6566:12;6628:231;6641:4;6635:3;:10;6628:231;;;6661:11;6698:1;6683:10;6690:3;6683:4;:10;:::i;:::-;6675:25;;6682:17;6675:3;:25;:::i;:::-;6661:39;;6741:11;6718:5;6724:3;6718:10;;;;;;;;:::i;:::-;;;;;;;;;;:20;;;:34;6714:135;;;6779:3;6772:10;;6714:135;;;6827:7;:3;6833:1;6827:7;:::i;:::-;6821:13;;6714:135;6647:212;6628:231;;;6876:9;;:37;;6892:5;6898:8;6905:1;6898:4;:8;:::i;:::-;6892:15;;;;;;;;:::i;:::-;;;;;;;;;;:21;;;;-1:-1:-1;;;;;6892:21:15;6876:37;;;6888:1;6876:37;-1:-1:-1;;;;;6869:44:15;;5217:1703;-1:-1:-1;;;;;;;5217:1703:15:o;7403:410::-;7518:7;7550:28;7562:7;7571:6;7550:11;:28::i;:::-;3831:12:11;;7541:37:15;;-1:-1:-1;;;;;;;7609:29:15;7588:129;;;;-1:-1:-1;;;7588:129:15;;13547:2:53;7588:129:15;;;13529:21:53;13586:2;13566:18;;;13559:30;13625:34;13605:18;;;13598:62;13696:23;13676:18;;;13669:51;13737:19;;7588:129:15;13345:417:53;7588:129:15;7728:55;7745:23;7770:4;7776:6;7728:16;:55::i;3279:211:40:-;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;12045:2:53;505:117:44;;;12027:21:53;12084:2;12064:18;;;12057:30;12123:34;12103:18;;;12096:62;-1:-1:-1;;;12174:18:53;;;12167:38;12222:19;;505:117:44;11843:404:53;505:117:44;3401:23:40::1;3418:5;3401:16;:23::i;:::-;3434:49;::::0;-1:-1:-1;;;3434:49:40;;3469:4:::1;3434:49;::::0;::::1;14002:34:53::0;-1:-1:-1;;;;;3476:6:40::1;14072:15:53::0;14052:18;;;14045:43;303:42:38::1;::::0;3434:26:40::1;::::0;13914:18:53;;3434:49:40::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;9934:655:11::0;-1:-1:-1;;;;;10219:18:11;;10040:7;10219:18;;;;;;;;;;;10159:14;;10255:24;;;;10247:71;;;;-1:-1:-1;;;10247:71:11;;14301:2:53;10247:71:11;;;14283:21:53;14340:2;14320:18;;;14313:30;14379:34;14359:18;;;14352:62;-1:-1:-1;;;14430:18:53;;;14423:32;14472:19;;10247:71:11;14099:398:53;10247:71:11;-1:-1:-1;;;;;10352:18:11;;:9;:18;;;;;;;;;;10373:23;;;10352:44;;10416:12;:22;;10390:6;;10352:9;10416:22;;10390:6;;10416:22;:::i;:::-;;;;-1:-1:-1;;10454:45:11;;3190:25:53;;;10480:1:11;;-1:-1:-1;;;;;10454:45:11;;;;;3178:2:53;3163:18;10454:45:11;;;;;;;10510:48;10530:7;10547:1;10551:6;10510:19;:48::i;:::-;-1:-1:-1;10576:6:11;9934:655;-1:-1:-1;;;9934:655:11:o;11612:102:15:-;11676:7;11702:5;11706:1;11702;:5;:::i;9760:1743::-;9931:7;-1:-1:-1;;;;;9971:26:15;;;9950:106;;;;-1:-1:-1;;;9950:106:15;;14704:2:53;9950:106:15;;;14686:21:53;14743:2;14723:18;;;14716:30;14782:34;14762:18;;;14755:62;-1:-1:-1;;;14833:18:53;;;14826:31;14874:19;;9950:106:15;14502:397:53;9950:106:15;10103:16;10087:12;:32;;10066:115;;;;-1:-1:-1;;;10066:115:15;;15106:2:53;10066:115:15;;;15088:21:53;15145:2;15125:18;;;15118:30;15184:34;15164:18;;;15157:62;-1:-1:-1;;;15235:18:53;;;15228:34;15279:19;;10066:115:15;14904:400:53;10066:115:15;10206:12;;10581:8;10577:233;;-1:-1:-1;;10633:126:15;;;;;;;;;;10684:12;10633:126;;;;-1:-1:-1;;;;;10633:126:15;;;;;;;;;;10605:168;;;;;;;-1:-1:-1;10605:168:15;;;;;;;;;;;;;;;;;;;;;;;;;10734:5;10787:12;;10577:233;10889:29;10921:5;10927:7;10933:1;10927:3;:7;:::i;:::-;10921:14;;;;;;;;:::i;:::-;;;;;;;;;10966:16;;10921:14;;-1:-1:-1;10966:16:15;;;-1:-1:-1;;;;;10966:16:15;;11012:20;10966:16;11026:5;11012:20;;;:::i;:::-;10992:40;-1:-1:-1;;;;;;11064:30:15;;;11043:110;;;;-1:-1:-1;;;11043:110:15;;14704:2:53;11043:110:15;;;14686:21:53;14743:2;14723:18;;;14716:30;14782:34;14762:18;;;14755:62;-1:-1:-1;;;14833:18:53;;;14826:31;14874:19;;11043:110:15;14502:397:53;11043:110:15;11168:20;;;;11192:12;11168:36;11164:307;;;11220:37;;;;;-1:-1:-1;;;;;11220:37:15;;;;;;11164:307;;;11316:130;;;;;;;;;;11367:12;11316:130;;;;-1:-1:-1;;;;;11316:130:15;;;;;;;;;;11288:172;;;;;;;-1:-1:-1;11288:172:15;;;;;;;;;;;;;;;;;;;;;;;;;11164:307;11487:9;9760:1743;-1:-1:-1;;;;;;;9760:1743:15:o;9039:715::-;9166:3;-1:-1:-1;;;;;9159:10:15;:3;-1:-1:-1;;;;;9159:10:15;;;:24;;;;;9182:1;9173:6;:10;9159:24;9155:593;;;-1:-1:-1;;;;;9203:17:15;;;9199:265;;-1:-1:-1;;;;;9298:16:15;;9240:17;9298:16;;;:11;:16;;;;;9260:131;;9336:9;9367:6;9260:16;:131::i;:::-;9240:151;;9434:3;-1:-1:-1;;;;;9414:35:15;;9439:9;9414:35;;;;3190:25:53;;3178:2;3163:18;;3044:177;9414:35:15;;;;;;;;9222:242;9199:265;-1:-1:-1;;;;;9482:17:15;;;9478:260;;-1:-1:-1;;;;;9577:16:15;;9519:17;9577:16;;;:11;:16;;;;;9539:126;;9615:4;9641:6;9539:16;:126::i;:::-;9519:146;;9708:3;-1:-1:-1;;;;;9688:35:15;;9713:9;9688:35;;;;3190:25:53;;3178:2;3163:18;;3044:177;9688:35:15;;;;;;;;9501:237;9478:260;9039:715;;;:::o;9068:546:11:-;9174:7;-1:-1:-1;;;;;9205:21:11;;9197:65;;;;-1:-1:-1;;;9197:65:11;;15511:2:53;9197:65:11;;;15493:21:53;15550:2;15530:18;;;15523:30;15589:33;15569:18;;;15562:61;15640:18;;9197:65:11;15309:355:53;9197:65:11;9273:14;9369;9273:120;;9420:6;9404:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9436:18:11;;:9;:18;;;;;;;;;;:28;;9458:6;;9436:9;:28;;9458:6;;9436:28;:::i;:::-;;;;-1:-1:-1;;9479:45:11;;3190:25:53;;;-1:-1:-1;;;;;9479:45:11;;;9496:1;;9479:45;;3178:2:53;3163:18;9479:45:11;;;;;;;9535:48;9563:1;9567:7;9576:6;9535:19;:48::i;11509:97:15:-;11568:7;11594:5;11598:1;11594;:5;:::i;1982:152:39:-;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;12045:2:53;505:117:44;;;12027:21:53;12084:2;12064:18;;;12057:30;12123:34;12103:18;;;12096:62;-1:-1:-1;;;12174:18:53;;;12167:38;12222:19;;505:117:44;11843:404:53;505:117:44;2104:23:39::1;2121:5;2104:16;:23::i;8310:204:15:-:0;8447:60;8464:17;8476:4;8464:11;:17::i;:::-;8483:15;8495:2;8483:11;:15::i;:::-;8500:6;8447:16;:60::i;1240:321:44:-;554:1;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;12045:2:53;505:117:44;;;12027:21:53;12084:2;12064:18;;;12057:30;12123:34;12103:18;;;12096:62;-1:-1:-1;;;12174:18:53;;;12167:38;12222:19;;505:117:44;11843:404:53;505:117:44;1317:20:::1;1362:5;-1:-1:-1::0;;;;;1348:35:44::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1317:69:::0;-1:-1:-1;;;;;;1417:26:44;::::1;1396:117;;;::::0;-1:-1:-1;;;1396:117:44;;15871:2:53;1396:117:44::1;::::0;::::1;15853:21:53::0;15910:2;15890:18;;;15883:30;15949:34;15929:18;;;15922:62;-1:-1:-1;;;16000:18:53;;;15993:42;16052:19;;1396:117:44::1;15669:408:53::0;1396:117:44::1;1523:31;1541:12;1523:17;:31::i;:::-;1307:254;1240:321:::0;:::o;1823:213::-;1912:5;-1:-1:-1;;;;;1892:25:44;:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;1892:16;-1:-1:-1;;;;;1892:25:44;;;1884:69;;;;-1:-1:-1;;;1884:69:44;;16284:2:53;1884:69:44;;;16266:21:53;16323:2;16303:18;;;16296:30;16362:33;16342:18;;;16335:61;16413:18;;1884:69:44;16082:355:53;1884:69:44;-1:-1:-1;;;;;;;;;;;1986:34:44;1823:213::o;245:597:53:-;357:4;386:2;415;404:9;397:21;447:6;441:13;490:6;485:2;474:9;470:18;463:34;515:1;525:140;539:6;536:1;533:13;525:140;;;634:14;;;630:23;;624:30;600:17;;;619:2;596:26;589:66;554:10;;525:140;;;683:6;680:1;677:13;674:91;;;753:1;748:2;739:6;728:9;724:22;720:31;713:42;674:91;-1:-1:-1;826:2:53;805:15;-1:-1:-1;;801:29:53;786:45;;;;833:2;782:54;;245:597;-1:-1:-1;;;245:597:53:o;847:154::-;-1:-1:-1;;;;;926:5:53;922:54;915:5;912:65;902:93;;991:1;988;981:12;1006:315;1074:6;1082;1135:2;1123:9;1114:7;1110:23;1106:32;1103:52;;;1151:1;1148;1141:12;1103:52;1190:9;1177:23;1209:31;1234:5;1209:31;:::i;:::-;1259:5;1311:2;1296:18;;;;1283:32;;-1:-1:-1;;;1006:315:53:o;1518:127::-;1579:10;1574:3;1570:20;1567:1;1560:31;1610:4;1607:1;1600:15;1634:4;1631:1;1624:15;1650:1056;1727:6;1735;1788:2;1776:9;1767:7;1763:23;1759:32;1756:52;;;1804:1;1801;1794:12;1756:52;1843:9;1830:23;1862:31;1887:5;1862:31;:::i;:::-;1912:5;-1:-1:-1;1968:2:53;1953:18;;1940:32;1991:18;2021:14;;;2018:34;;;2048:1;2045;2038:12;2018:34;2086:6;2075:9;2071:22;2061:32;;2131:7;2124:4;2120:2;2116:13;2112:27;2102:55;;2153:1;2150;2143:12;2102:55;2189:2;2176:16;2211:2;2207;2204:10;2201:36;;;2217:18;;:::i;:::-;2292:2;2286:9;2260:2;2346:13;;-1:-1:-1;;2342:22:53;;;2366:2;2338:31;2334:40;2322:53;;;2390:18;;;2410:22;;;2387:46;2384:72;;;2436:18;;:::i;:::-;2476:10;2472:2;2465:22;2511:2;2503:6;2496:18;2551:7;2546:2;2541;2537;2533:11;2529:20;2526:33;2523:53;;;2572:1;2569;2562:12;2523:53;2628:2;2623;2619;2615:11;2610:2;2602:6;2598:15;2585:46;2673:1;2668:2;2663;2655:6;2651:15;2647:24;2640:35;2694:6;2684:16;;;;;;;1650:1056;;;;;:::o;3226:456::-;3303:6;3311;3319;3372:2;3360:9;3351:7;3347:23;3343:32;3340:52;;;3388:1;3385;3378:12;3340:52;3427:9;3414:23;3446:31;3471:5;3446:31;:::i;:::-;3496:5;-1:-1:-1;3553:2:53;3538:18;;3525:32;3566:33;3525:32;3566:33;:::i;:::-;3226:456;;3618:7;;-1:-1:-1;;;3672:2:53;3657:18;;;;3644:32;;3226:456::o;3687:315::-;3755:6;3763;3816:2;3804:9;3795:7;3791:23;3787:32;3784:52;;;3832:1;3829;3822:12;3784:52;3868:9;3855:23;3845:33;;3928:2;3917:9;3913:18;3900:32;3941:31;3966:5;3941:31;:::i;:::-;3991:5;3981:15;;;3687:315;;;;;:::o;4189:180::-;4248:6;4301:2;4289:9;4280:7;4276:23;4272:32;4269:52;;;4317:1;4314;4307:12;4269:52;-1:-1:-1;4340:23:53;;4189:180;-1:-1:-1;4189:180:53:o;4808:247::-;4867:6;4920:2;4908:9;4899:7;4895:23;4891:32;4888:52;;;4936:1;4933;4926:12;4888:52;4975:9;4962:23;4994:31;5019:5;4994:31;:::i;5257:388::-;5325:6;5333;5386:2;5374:9;5365:7;5361:23;5357:32;5354:52;;;5402:1;5399;5392:12;5354:52;5441:9;5428:23;5460:31;5485:5;5460:31;:::i;:::-;5510:5;-1:-1:-1;5567:2:53;5552:18;;5539:32;5580:33;5539:32;5580:33;:::i;7532:127::-;7593:10;7588:3;7584:20;7581:1;7574:31;7624:4;7621:1;7614:15;7648:4;7645:1;7638:15;7664:125;7704:4;7732:1;7729;7726:8;7723:34;;;7737:18;;:::i;:::-;-1:-1:-1;7774:9:53;;7664:125::o;8521:277::-;8588:6;8641:2;8629:9;8620:7;8616:23;8612:32;8609:52;;;8657:1;8654;8647:12;8609:52;8689:9;8683:16;8742:5;8735:13;8728:21;8721:5;8718:32;8708:60;;8764:1;8761;8754:12;9147:184;9217:6;9270:2;9258:9;9249:7;9245:23;9241:32;9238:52;;;9286:1;9283;9276:12;9238:52;-1:-1:-1;9309:16:53;;9147:184;-1:-1:-1;9147:184:53:o;9336:128::-;9376:3;9407:1;9403:6;9400:1;9397:13;9394:39;;;9413:18;;:::i;:::-;-1:-1:-1;9449:9:53;;9336:128::o;12252:127::-;12313:10;12308:3;12304:20;12301:1;12294:31;12344:4;12341:1;12334:15;12368:4;12365:1;12358:15;13089:251;13159:6;13212:2;13200:9;13191:7;13187:23;13183:32;13180:52;;;13228:1;13225;13218:12;13180:52;13260:9;13254:16;13279:31;13304:5;13279:31;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"../currency/VoteCheckpoints.sol\";\nimport \"../currency/ECOx.sol\";\nimport \"../policy/PolicedUtils.sol\";\nimport \"../governance/IGeneration.sol\";\n\n/** @title ECOxLockup\n *\n */\ncontract ECOxLockup is VoteCheckpoints, PolicedUtils {\n    /** The Deposit event indicates that ECOx has been locked up, credited\n     * to a particular address in a particular amount.\n     *\n     * @param source The address that a deposit certificate has been issued to.\n     * @param amount The amount of ECOx tokens deposited.\n     */\n    event Deposit(address indexed source, uint256 amount);\n\n    /** The Withdrawal event indicates that a withdrawal has been made to a particular\n     * address in a particular amount.\n     *\n     * @param destination The address that has made a withdrawal.\n     * @param amount The amount in basic unit of 10^{-18} ECOx (weicoX) tokens withdrawn.\n     */\n    event Withdrawal(address indexed destination, uint256 amount);\n\n    // the ECOx contract address\n    IERC20 public immutable ecoXToken;\n\n    // marks each address's ability to withdraw, maps from address to last voted generation\n    mapping(address => uint256) public votingTracker;\n\n    uint256 public currentGeneration;\n\n    constructor(address _policy, address _ecoXAddr)\n        VoteCheckpoints(\"S-Eco-X\", \"sECOx\")\n        PolicedUtils(_policy)\n    {\n        ecoXToken = IERC20(_ecoXAddr);\n    }\n\n    function deposit(uint256 _amount) external {\n        address _source = msg.sender;\n\n        require(\n            ecoXToken.transferFrom(_source, address(this), _amount),\n            \"Transfer failed\"\n        );\n\n        _mint(_source, _amount);\n\n        emit Deposit(_source, _amount);\n    }\n\n    function withdraw(uint256 _amount) external {\n        address _destination = msg.sender;\n\n        // generation indexing starts at 1000 so this will succeed for new addreses\n        require(\n            votingTracker[_destination] < currentGeneration - 1,\n            \"Must not vote in the generation on or before withdrawing\"\n        );\n\n        _burn(_destination, _amount);\n\n        require(ecoXToken.transfer(_destination, _amount), \"Transfer Failed\");\n\n        emit Withdrawal(_destination, _amount);\n    }\n\n    function votingECOx(address _voter, uint256 _blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        return getPastVotingGons(_voter, _blockNumber);\n    }\n\n    function totalVotingECOx(uint256 _blockNumber)\n        external\n        view\n        returns (uint256)\n    {\n        return getPastTotalSupply(_blockNumber);\n    }\n\n    function recordVote(address _who) external {\n        require(\n            msg.sender == policyFor(ID_POLICY_PROPOSALS) ||\n                msg.sender == policyFor(ID_POLICY_VOTES),\n            \"Must be a voting contract to call\"\n        );\n\n        votingTracker[_who] = currentGeneration;\n    }\n\n    function initialize(address _self) public override onlyConstruction {\n        super.initialize(_self);\n        currentGeneration = IGeneration(policyFor(ID_TIMED_POLICIES))\n            .generation();\n    }\n\n    function notifyGenerationIncrease() public {\n        // update currentGeneration\n        currentGeneration = IGeneration(policyFor(ID_TIMED_POLICIES))\n            .generation();\n    }\n\n    function transfer(address, uint256) public pure override returns (bool) {\n        revert(\"sECOx is non-transferrable\");\n    }\n\n    function transferFrom(\n        address,\n        address,\n        uint256\n    ) public pure override returns (bool) {\n        revert(\"sECOx is non-transferrable\");\n    }\n}\n",
  "sourcePath": "/Users/dirksmac/dev/eco/currency/contracts/governance/ECOxLockup.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/ECOxLockup.sol",
    "exportedSymbols": {
      "CloneFactory": [
        2206
      ],
      "CurrencyTimer": [
        7970
      ],
      "ECOx": [
        3252
      ],
      "ECOxLockup": [
        8229
      ],
      "ERC1820Client": [
        11604
      ],
      "ERC20": [
        3799
      ],
      "ForwardTarget": [
        12268
      ],
      "IECO": [
        3840
      ],
      "IERC1820Implementer": [
        218
      ],
      "IERC1820Registry": [
        308
      ],
      "IERC20": [
        182
      ],
      "IGeneration": [
        8237
      ],
      "Lockup": [
        9199
      ],
      "Policed": [
        11697
      ],
      "PolicedUtils": [
        11886
      ],
      "StringPacker": [
        12764
      ],
      "TimeUtils": [
        12778
      ],
      "VoteCheckpoints": [
        6566
      ]
    },
    "id": 8230,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7972,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:23"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 183,
        "src": "56:56:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/VoteCheckpoints.sol",
        "file": "../currency/VoteCheckpoints.sol",
        "id": 7974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 6567,
        "src": "113:41:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/ECOx.sol",
        "file": "../currency/ECOx.sol",
        "id": 7975,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 3253,
        "src": "155:30:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 7976,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 11887,
        "src": "186:36:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/IGeneration.sol",
        "file": "../governance/IGeneration.sol",
        "id": 7977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 8238,
        "src": "223:39:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7979,
              "name": "VoteCheckpoints",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6566,
              "src": "316:15:23"
            },
            "id": 7980,
            "nodeType": "InheritanceSpecifier",
            "src": "316:15:23"
          },
          {
            "baseName": {
              "id": 7981,
              "name": "PolicedUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11886,
              "src": "333:12:23"
            },
            "id": 7982,
            "nodeType": "InheritanceSpecifier",
            "src": "333:12:23"
          }
        ],
        "canonicalName": "ECOxLockup",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7978,
          "nodeType": "StructuredDocumentation",
          "src": "264:28:23",
          "text": "@title ECOxLockup"
        },
        "fullyImplemented": true,
        "id": 8229,
        "linearizedBaseContracts": [
          8229,
          11886,
          11604,
          2206,
          11697,
          218,
          12268,
          6566,
          3799
        ],
        "name": "ECOxLockup",
        "nameLocation": "302:10:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 7983,
              "nodeType": "StructuredDocumentation",
              "src": "352:278:23",
              "text": "The Deposit event indicates that ECOx has been locked up, credited\n to a particular address in a particular amount.\n @param source The address that a deposit certificate has been issued to.\n @param amount The amount of ECOx tokens deposited."
            },
            "id": 7989,
            "name": "Deposit",
            "nameLocation": "641:7:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7985,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nameLocation": "665:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7989,
                  "src": "649:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "681:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7989,
                  "src": "673:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:40:23"
            },
            "src": "635:54:23"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7990,
              "nodeType": "StructuredDocumentation",
              "src": "695:292:23",
              "text": "The Withdrawal event indicates that a withdrawal has been made to a particular\n address in a particular amount.\n @param destination The address that has made a withdrawal.\n @param amount The amount in basic unit of 10^{-18} ECOx (weicoX) tokens withdrawn."
            },
            "id": 7996,
            "name": "Withdrawal",
            "nameLocation": "998:10:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7992,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "1025:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7996,
                  "src": "1009:27:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7994,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1046:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7996,
                  "src": "1038:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1008:45:23"
            },
            "src": "992:62:23"
          },
          {
            "constant": false,
            "functionSelector": "33800bac",
            "id": 7999,
            "mutability": "immutable",
            "name": "ecoXToken",
            "nameLocation": "1117:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 8229,
            "src": "1093:33:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$182",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 7998,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7997,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 182,
                "src": "1093:6:23"
              },
              "referencedDeclaration": 182,
              "src": "1093:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$182",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc52c82d",
            "id": 8003,
            "mutability": "mutable",
            "name": "votingTracker",
            "nameLocation": "1260:13:23",
            "nodeType": "VariableDeclaration",
            "scope": 8229,
            "src": "1225:48:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8002,
              "keyType": {
                "id": 8000,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1233:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1225:27:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8001,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1244:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ddb428a",
            "id": 8005,
            "mutability": "mutable",
            "name": "currentGeneration",
            "nameLocation": "1295:17:23",
            "nodeType": "VariableDeclaration",
            "scope": 8229,
            "src": "1280:32:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8004,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1280:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8025,
              "nodeType": "Block",
              "src": "1445:46:23",
              "statements": [
                {
                  "expression": {
                    "id": 8023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8019,
                      "name": "ecoXToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7999,
                      "src": "1455:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$182",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8021,
                          "name": "_ecoXAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8009,
                          "src": "1474:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8020,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1467:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 8022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1467:17:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$182",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1455:29:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$182",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8024,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:29:23"
                }
              ]
            },
            "id": 8026,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "532d45636f2d58",
                    "id": 8012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1391:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_76f42c99952490a569d128dc359e5a65bbb7382deaf93cbdb44da797ad37d04a",
                      "typeString": "literal_string \"S-Eco-X\""
                    },
                    "value": "S-Eco-X"
                  },
                  {
                    "hexValue": "7345434f78",
                    "id": 8013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1402:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_99668179e8dfa48ade1ca891f554fed12f222dc2a483ae9048f2842eb33aed3d",
                      "typeString": "literal_string \"sECOx\""
                    },
                    "value": "sECOx"
                  }
                ],
                "id": 8014,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8011,
                  "name": "VoteCheckpoints",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6566,
                  "src": "1375:15:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1375:35:23"
              },
              {
                "arguments": [
                  {
                    "id": 8016,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8007,
                    "src": "1432:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8017,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8015,
                  "name": "PolicedUtils",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11886,
                  "src": "1419:12:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1419:21:23"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8007,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "1339:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8026,
                  "src": "1331:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8009,
                  "mutability": "mutable",
                  "name": "_ecoXAddr",
                  "nameLocation": "1356:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8026,
                  "src": "1348:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1330:36:23"
            },
            "returnParameters": {
              "id": 8018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1445:0:23"
            },
            "scope": 8229,
            "src": "1319:172:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8059,
              "nodeType": "Block",
              "src": "1540:248:23",
              "statements": [
                {
                  "assignments": [
                    8032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8032,
                      "mutability": "mutable",
                      "name": "_source",
                      "nameLocation": "1558:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8059,
                      "src": "1550:15:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8031,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1550:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8035,
                  "initialValue": {
                    "expression": {
                      "id": 8033,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1568:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 8034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1568:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1550:28:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8039,
                            "name": "_source",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8032,
                            "src": "1633:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 8042,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1650:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ECOxLockup_$8229",
                                  "typeString": "contract ECOxLockup"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ECOxLockup_$8229",
                                  "typeString": "contract ECOxLockup"
                                }
                              ],
                              "id": 8041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1642:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8040,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1642:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1642:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8044,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8028,
                            "src": "1657:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8037,
                            "name": "ecoXToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7999,
                            "src": "1610:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$182",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 181,
                          "src": "1610:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1610:55:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 8046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1679:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 8036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1589:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:117:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8048,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:117:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8050,
                        "name": "_source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8032,
                        "src": "1723:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8051,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8028,
                        "src": "1732:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8049,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6232
                      ],
                      "referencedDeclaration": 6232,
                      "src": "1717:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 8052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1717:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8053,
                  "nodeType": "ExpressionStatement",
                  "src": "1717:23:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8055,
                        "name": "_source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8032,
                        "src": "1764:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8056,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8028,
                        "src": "1773:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8054,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7989,
                      "src": "1756:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8058,
                  "nodeType": "EmitStatement",
                  "src": "1751:30:23"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 8060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1506:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8028,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1522:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8060,
                  "src": "1514:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1513:17:23"
            },
            "returnParameters": {
              "id": 8030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:0:23"
            },
            "scope": 8229,
            "src": "1497:291:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8100,
              "nodeType": "Block",
              "src": "1838:467:23",
              "statements": [
                {
                  "assignments": [
                    8066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8066,
                      "mutability": "mutable",
                      "name": "_destination",
                      "nameLocation": "1856:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8100,
                      "src": "1848:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8065,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1848:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8069,
                  "initialValue": {
                    "expression": {
                      "id": 8067,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1871:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 8068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1871:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1848:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 8071,
                            "name": "votingTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8003,
                            "src": "1997:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8073,
                          "indexExpression": {
                            "id": 8072,
                            "name": "_destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8066,
                            "src": "2011:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1997:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8074,
                            "name": "currentGeneration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8005,
                            "src": "2027:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 8075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2047:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2027:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1997:51:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206e6f7420766f746520696e207468652067656e65726174696f6e206f6e206f72206265666f7265207769746864726177696e67",
                        "id": 8078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2062:58:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e2e61238b2df1699214e2f69fd1babdd9d7bb04fe721942c9005a324ef6796b",
                          "typeString": "literal_string \"Must not vote in the generation on or before withdrawing\""
                        },
                        "value": "Must not vote in the generation on or before withdrawing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e2e61238b2df1699214e2f69fd1babdd9d7bb04fe721942c9005a324ef6796b",
                          "typeString": "literal_string \"Must not vote in the generation on or before withdrawing\""
                        }
                      ],
                      "id": 8070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1976:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:154:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8080,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:154:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8082,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8066,
                        "src": "2147:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8083,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8062,
                        "src": "2161:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8081,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6260
                      ],
                      "referencedDeclaration": 6260,
                      "src": "2141:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 8084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:28:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8085,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:28:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8089,
                            "name": "_destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8066,
                            "src": "2207:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8090,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8062,
                            "src": "2221:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8087,
                            "name": "ecoXToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7999,
                            "src": "2188:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$182",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 149,
                          "src": "2188:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2188:41:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "id": 8092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2231:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        },
                        "value": "Transfer Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        }
                      ],
                      "id": 8086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2180:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:69:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8094,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:69:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8096,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8066,
                        "src": "2276:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8097,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8062,
                        "src": "2290:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8095,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7996,
                      "src": "2265:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2265:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8099,
                  "nodeType": "EmitStatement",
                  "src": "2260:38:23"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 8101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1803:8:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8062,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1820:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8101,
                  "src": "1812:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1811:17:23"
            },
            "returnParameters": {
              "id": 8064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1838:0:23"
            },
            "scope": 8229,
            "src": "1794:511:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8115,
              "nodeType": "Block",
              "src": "2429:63:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8111,
                        "name": "_voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8103,
                        "src": "2464:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8112,
                        "name": "_blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8105,
                        "src": "2472:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8110,
                      "name": "getPastVotingGons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6050,
                      "src": "2446:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 8113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8109,
                  "id": 8114,
                  "nodeType": "Return",
                  "src": "2439:46:23"
                }
              ]
            },
            "functionSelector": "cd3fd384",
            "id": 8116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingECOx",
            "nameLocation": "2320:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8103,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "2339:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8116,
                  "src": "2331:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8105,
                  "mutability": "mutable",
                  "name": "_blockNumber",
                  "nameLocation": "2355:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8116,
                  "src": "2347:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2330:38:23"
            },
            "returnParameters": {
              "id": 8109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8116,
                  "src": "2416:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2415:9:23"
            },
            "scope": 8229,
            "src": "2311:181:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8127,
              "nodeType": "Block",
              "src": "2605:56:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8124,
                        "name": "_blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8118,
                        "src": "2641:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8123,
                      "name": "getPastTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6072,
                      "src": "2622:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 8125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:32:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8122,
                  "id": 8126,
                  "nodeType": "Return",
                  "src": "2615:39:23"
                }
              ]
            },
            "functionSelector": "5bb748ad",
            "id": 8128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalVotingECOx",
            "nameLocation": "2507:15:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8118,
                  "mutability": "mutable",
                  "name": "_blockNumber",
                  "nameLocation": "2531:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8128,
                  "src": "2523:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2522:22:23"
            },
            "returnParameters": {
              "id": 8122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8128,
                  "src": "2592:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2591:9:23"
            },
            "scope": 8229,
            "src": "2498:163:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8156,
              "nodeType": "Block",
              "src": "2710:251:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8134,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2741:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2741:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 8137,
                                "name": "ID_POLICY_PROPOSALS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11728,
                                "src": "2765:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 8136,
                              "name": "policyFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11885,
                              "src": "2755:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                "typeString": "function (bytes32) view returns (address)"
                              }
                            },
                            "id": 8138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2755:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2741:44:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8140,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2805:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2805:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 8143,
                                "name": "ID_POLICY_VOTES",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11731,
                                "src": "2829:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 8142,
                              "name": "policyFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11885,
                              "src": "2819:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                "typeString": "function (bytes32) view returns (address)"
                              }
                            },
                            "id": 8144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2819:26:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2805:40:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2741:104:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206120766f74696e6720636f6e747261637420746f2063616c6c",
                        "id": 8147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2859:35:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e78bd6b12628a997ff5e861794cf975dab930291bdd32f685dff0db0c7a027e",
                          "typeString": "literal_string \"Must be a voting contract to call\""
                        },
                        "value": "Must be a voting contract to call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e78bd6b12628a997ff5e861794cf975dab930291bdd32f685dff0db0c7a027e",
                          "typeString": "literal_string \"Must be a voting contract to call\""
                        }
                      ],
                      "id": 8133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2720:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:184:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8149,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:184:23"
                },
                {
                  "expression": {
                    "id": 8154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8150,
                        "name": "votingTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8003,
                        "src": "2915:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8152,
                      "indexExpression": {
                        "id": 8151,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8130,
                        "src": "2929:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2915:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8153,
                      "name": "currentGeneration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "2937:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2915:39:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8155,
                  "nodeType": "ExpressionStatement",
                  "src": "2915:39:23"
                }
              ]
            },
            "functionSelector": "92c1ff44",
            "id": 8157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recordVote",
            "nameLocation": "2676:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8130,
                  "mutability": "mutable",
                  "name": "_who",
                  "nameLocation": "2695:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8157,
                  "src": "2687:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2686:14:23"
            },
            "returnParameters": {
              "id": 8132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2710:0:23"
            },
            "scope": 8229,
            "src": "2667:294:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11818
            ],
            "body": {
              "id": 8181,
              "nodeType": "Block",
              "src": "3035:137:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8168,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8159,
                        "src": "3062:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8165,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3045:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ECOxLockup_$8229_$",
                          "typeString": "type(contract super ECOxLockup)"
                        }
                      },
                      "id": 8167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11818,
                      "src": "3045:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3045:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8170,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:23:23"
                },
                {
                  "expression": {
                    "id": 8179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8171,
                      "name": "currentGeneration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "3078:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8174,
                                  "name": "ID_TIMED_POLICIES",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11722,
                                  "src": "3120:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 8173,
                                "name": "policyFor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11885,
                                "src": "3110:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32) view returns (address)"
                                }
                              },
                              "id": 8175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3110:28:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8172,
                            "name": "IGeneration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8237,
                            "src": "3098:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IGeneration_$8237_$",
                              "typeString": "type(contract IGeneration)"
                            }
                          },
                          "id": 8176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3098:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGeneration_$8237",
                            "typeString": "contract IGeneration"
                          }
                        },
                        "id": 8177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8236,
                        "src": "3098:65:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 8178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3098:67:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3078:87:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8180,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:87:23"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 8182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8162,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12198,
                  "src": "3018:16:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3018:16:23"
              }
            ],
            "name": "initialize",
            "nameLocation": "2976:10:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8161,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3009:8:23"
            },
            "parameters": {
              "id": 8160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8159,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "2995:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8182,
                  "src": "2987:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:15:23"
            },
            "returnParameters": {
              "id": 8164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3035:0:23"
            },
            "scope": 8229,
            "src": "2967:205:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8195,
              "nodeType": "Block",
              "src": "3221:140:23",
              "statements": [
                {
                  "expression": {
                    "id": 8193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8185,
                      "name": "currentGeneration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "3267:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8188,
                                  "name": "ID_TIMED_POLICIES",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11722,
                                  "src": "3309:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 8187,
                                "name": "policyFor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11885,
                                "src": "3299:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32) view returns (address)"
                                }
                              },
                              "id": 8189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3299:28:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8186,
                            "name": "IGeneration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8237,
                            "src": "3287:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IGeneration_$8237_$",
                              "typeString": "type(contract IGeneration)"
                            }
                          },
                          "id": 8190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3287:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGeneration_$8237",
                            "typeString": "contract IGeneration"
                          }
                        },
                        "id": 8191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8236,
                        "src": "3287:65:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 8192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3287:67:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3267:87:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8194,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:87:23"
                }
              ]
            },
            "functionSelector": "35bbc7fe",
            "id": 8196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notifyGenerationIncrease",
            "nameLocation": "3187:24:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3211:2:23"
            },
            "returnParameters": {
              "id": 8184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3221:0:23"
            },
            "scope": 8229,
            "src": "3178:183:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3388
            ],
            "body": {
              "id": 8210,
              "nodeType": "Block",
              "src": "3439:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7345434f78206973206e6f6e2d7472616e736665727261626c65",
                        "id": 8207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3456:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152",
                          "typeString": "literal_string \"sECOx is non-transferrable\""
                        },
                        "value": "sECOx is non-transferrable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152",
                          "typeString": "literal_string \"sECOx is non-transferrable\""
                        }
                      ],
                      "id": 8206,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "3449:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 8208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3449:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8209,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:36:23"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 8211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3376:8:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3415:8:23"
            },
            "parameters": {
              "id": 8201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "3385:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3385:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "3394:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3384:18:23"
            },
            "returnParameters": {
              "id": 8205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "3433:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3432:6:23"
            },
            "scope": 8229,
            "src": "3367:125:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3472
            ],
            "body": {
              "id": 8227,
              "nodeType": "Block",
              "src": "3613:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7345434f78206973206e6f6e2d7472616e736665727261626c65",
                        "id": 8224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3630:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152",
                          "typeString": "literal_string \"sECOx is non-transferrable\""
                        },
                        "value": "sECOx is non-transferrable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152",
                          "typeString": "literal_string \"sECOx is non-transferrable\""
                        }
                      ],
                      "id": 8223,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "3623:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 8225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8226,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:36:23"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 8228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3507:12:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8219,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3589:8:23"
            },
            "parameters": {
              "id": 8218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8228,
                  "src": "3529:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3529:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8228,
                  "src": "3546:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8228,
                  "src": "3563:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3519:57:23"
            },
            "returnParameters": {
              "id": 8222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8228,
                  "src": "3607:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8220,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3606:6:23"
            },
            "scope": 8229,
            "src": "3498:168:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8230,
        "src": "293:3375:23",
        "usedErrors": []
      }
    ],
    "src": "32:3637:23"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/governance/ECOxLockup.sol",
    "exportedSymbols": {
      "CloneFactory": [
        2206
      ],
      "CurrencyTimer": [
        7970
      ],
      "ECOx": [
        3252
      ],
      "ECOxLockup": [
        8229
      ],
      "ERC1820Client": [
        11604
      ],
      "ERC20": [
        3799
      ],
      "ForwardTarget": [
        12268
      ],
      "IECO": [
        3840
      ],
      "IERC1820Implementer": [
        218
      ],
      "IERC1820Registry": [
        308
      ],
      "IERC20": [
        182
      ],
      "IGeneration": [
        8237
      ],
      "Lockup": [
        9199
      ],
      "Policed": [
        11697
      ],
      "PolicedUtils": [
        11886
      ],
      "StringPacker": [
        12764
      ],
      "TimeUtils": [
        12778
      ],
      "VoteCheckpoints": [
        6566
      ]
    },
    "id": 8230,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7972,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:23"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7973,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 183,
        "src": "56:56:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/VoteCheckpoints.sol",
        "file": "../currency/VoteCheckpoints.sol",
        "id": 7974,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 6567,
        "src": "113:41:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/ECOx.sol",
        "file": "../currency/ECOx.sol",
        "id": 7975,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 3253,
        "src": "155:30:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 7976,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 11887,
        "src": "186:36:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/IGeneration.sol",
        "file": "../governance/IGeneration.sol",
        "id": 7977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8230,
        "sourceUnit": 8238,
        "src": "223:39:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7979,
              "name": "VoteCheckpoints",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6566,
              "src": "316:15:23"
            },
            "id": 7980,
            "nodeType": "InheritanceSpecifier",
            "src": "316:15:23"
          },
          {
            "baseName": {
              "id": 7981,
              "name": "PolicedUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11886,
              "src": "333:12:23"
            },
            "id": 7982,
            "nodeType": "InheritanceSpecifier",
            "src": "333:12:23"
          }
        ],
        "canonicalName": "ECOxLockup",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7978,
          "nodeType": "StructuredDocumentation",
          "src": "264:28:23",
          "text": "@title ECOxLockup"
        },
        "fullyImplemented": true,
        "id": 8229,
        "linearizedBaseContracts": [
          8229,
          11886,
          11604,
          2206,
          11697,
          218,
          12268,
          6566,
          3799
        ],
        "name": "ECOxLockup",
        "nameLocation": "302:10:23",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 7983,
              "nodeType": "StructuredDocumentation",
              "src": "352:278:23",
              "text": "The Deposit event indicates that ECOx has been locked up, credited\n to a particular address in a particular amount.\n @param source The address that a deposit certificate has been issued to.\n @param amount The amount of ECOx tokens deposited."
            },
            "id": 7989,
            "name": "Deposit",
            "nameLocation": "641:7:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7985,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "source",
                  "nameLocation": "665:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7989,
                  "src": "649:22:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7987,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "681:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7989,
                  "src": "673:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:40:23"
            },
            "src": "635:54:23"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 7990,
              "nodeType": "StructuredDocumentation",
              "src": "695:292:23",
              "text": "The Withdrawal event indicates that a withdrawal has been made to a particular\n address in a particular amount.\n @param destination The address that has made a withdrawal.\n @param amount The amount in basic unit of 10^{-18} ECOx (weicoX) tokens withdrawn."
            },
            "id": 7996,
            "name": "Withdrawal",
            "nameLocation": "998:10:23",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7992,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "destination",
                  "nameLocation": "1025:11:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7996,
                  "src": "1009:27:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7994,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1046:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 7996,
                  "src": "1038:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1008:45:23"
            },
            "src": "992:62:23"
          },
          {
            "constant": false,
            "functionSelector": "33800bac",
            "id": 7999,
            "mutability": "immutable",
            "name": "ecoXToken",
            "nameLocation": "1117:9:23",
            "nodeType": "VariableDeclaration",
            "scope": 8229,
            "src": "1093:33:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$182",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 7998,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7997,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 182,
                "src": "1093:6:23"
              },
              "referencedDeclaration": 182,
              "src": "1093:6:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$182",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bc52c82d",
            "id": 8003,
            "mutability": "mutable",
            "name": "votingTracker",
            "nameLocation": "1260:13:23",
            "nodeType": "VariableDeclaration",
            "scope": 8229,
            "src": "1225:48:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 8002,
              "keyType": {
                "id": 8000,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1233:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1225:27:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8001,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1244:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ddb428a",
            "id": 8005,
            "mutability": "mutable",
            "name": "currentGeneration",
            "nameLocation": "1295:17:23",
            "nodeType": "VariableDeclaration",
            "scope": 8229,
            "src": "1280:32:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8004,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1280:7:23",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 8025,
              "nodeType": "Block",
              "src": "1445:46:23",
              "statements": [
                {
                  "expression": {
                    "id": 8023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8019,
                      "name": "ecoXToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7999,
                      "src": "1455:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$182",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 8021,
                          "name": "_ecoXAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8009,
                          "src": "1474:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 8020,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 182,
                        "src": "1467:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$182_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 8022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1467:17:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$182",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1455:29:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$182",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8024,
                  "nodeType": "ExpressionStatement",
                  "src": "1455:29:23"
                }
              ]
            },
            "id": 8026,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "532d45636f2d58",
                    "id": 8012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1391:9:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_76f42c99952490a569d128dc359e5a65bbb7382deaf93cbdb44da797ad37d04a",
                      "typeString": "literal_string \"S-Eco-X\""
                    },
                    "value": "S-Eco-X"
                  },
                  {
                    "hexValue": "7345434f78",
                    "id": 8013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1402:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_99668179e8dfa48ade1ca891f554fed12f222dc2a483ae9048f2842eb33aed3d",
                      "typeString": "literal_string \"sECOx\""
                    },
                    "value": "sECOx"
                  }
                ],
                "id": 8014,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8011,
                  "name": "VoteCheckpoints",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6566,
                  "src": "1375:15:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1375:35:23"
              },
              {
                "arguments": [
                  {
                    "id": 8016,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8007,
                    "src": "1432:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8017,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 8015,
                  "name": "PolicedUtils",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11886,
                  "src": "1419:12:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "1419:21:23"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8007,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "1339:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8026,
                  "src": "1331:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1331:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8009,
                  "mutability": "mutable",
                  "name": "_ecoXAddr",
                  "nameLocation": "1356:9:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8026,
                  "src": "1348:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8008,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1330:36:23"
            },
            "returnParameters": {
              "id": 8018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1445:0:23"
            },
            "scope": 8229,
            "src": "1319:172:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8059,
              "nodeType": "Block",
              "src": "1540:248:23",
              "statements": [
                {
                  "assignments": [
                    8032
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8032,
                      "mutability": "mutable",
                      "name": "_source",
                      "nameLocation": "1558:7:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8059,
                      "src": "1550:15:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8031,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1550:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8035,
                  "initialValue": {
                    "expression": {
                      "id": 8033,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1568:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 8034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1568:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1550:28:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8039,
                            "name": "_source",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8032,
                            "src": "1633:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 8042,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1650:4:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ECOxLockup_$8229",
                                  "typeString": "contract ECOxLockup"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ECOxLockup_$8229",
                                  "typeString": "contract ECOxLockup"
                                }
                              ],
                              "id": 8041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1642:7:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 8040,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1642:7:23",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 8043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1642:13:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8044,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8028,
                            "src": "1657:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8037,
                            "name": "ecoXToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7999,
                            "src": "1610:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$182",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 181,
                          "src": "1610:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1610:55:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 8046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1679:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 8036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1589:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:117:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8048,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:117:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8050,
                        "name": "_source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8032,
                        "src": "1723:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8051,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8028,
                        "src": "1732:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8049,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6232
                      ],
                      "referencedDeclaration": 6232,
                      "src": "1717:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 8052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1717:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8053,
                  "nodeType": "ExpressionStatement",
                  "src": "1717:23:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8055,
                        "name": "_source",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8032,
                        "src": "1764:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8056,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8028,
                        "src": "1773:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8054,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7989,
                      "src": "1756:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:25:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8058,
                  "nodeType": "EmitStatement",
                  "src": "1751:30:23"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 8060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1506:7:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8028,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1522:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8060,
                  "src": "1514:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1513:17:23"
            },
            "returnParameters": {
              "id": 8030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1540:0:23"
            },
            "scope": 8229,
            "src": "1497:291:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8100,
              "nodeType": "Block",
              "src": "1838:467:23",
              "statements": [
                {
                  "assignments": [
                    8066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 8066,
                      "mutability": "mutable",
                      "name": "_destination",
                      "nameLocation": "1856:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 8100,
                      "src": "1848:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 8065,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1848:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 8069,
                  "initialValue": {
                    "expression": {
                      "id": 8067,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1871:3:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 8068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1871:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1848:33:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 8071,
                            "name": "votingTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8003,
                            "src": "1997:13:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 8073,
                          "indexExpression": {
                            "id": 8072,
                            "name": "_destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8066,
                            "src": "2011:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1997:27:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 8076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 8074,
                            "name": "currentGeneration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8005,
                            "src": "2027:17:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 8075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2047:1:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2027:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1997:51:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206e6f7420766f746520696e207468652067656e65726174696f6e206f6e206f72206265666f7265207769746864726177696e67",
                        "id": 8078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2062:58:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e2e61238b2df1699214e2f69fd1babdd9d7bb04fe721942c9005a324ef6796b",
                          "typeString": "literal_string \"Must not vote in the generation on or before withdrawing\""
                        },
                        "value": "Must not vote in the generation on or before withdrawing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e2e61238b2df1699214e2f69fd1babdd9d7bb04fe721942c9005a324ef6796b",
                          "typeString": "literal_string \"Must not vote in the generation on or before withdrawing\""
                        }
                      ],
                      "id": 8070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1976:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1976:154:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8080,
                  "nodeType": "ExpressionStatement",
                  "src": "1976:154:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8082,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8066,
                        "src": "2147:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8083,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8062,
                        "src": "2161:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8081,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6260
                      ],
                      "referencedDeclaration": 6260,
                      "src": "2141:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256)"
                      }
                    },
                    "id": 8084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:28:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8085,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:28:23"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 8089,
                            "name": "_destination",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8066,
                            "src": "2207:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 8090,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8062,
                            "src": "2221:7:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 8087,
                            "name": "ecoXToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7999,
                            "src": "2188:9:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$182",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 8088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 149,
                          "src": "2188:18:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 8091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2188:41:23",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "id": 8092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2231:17:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        },
                        "value": "Transfer Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        }
                      ],
                      "id": 8086,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2180:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:69:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8094,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:69:23"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 8096,
                        "name": "_destination",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8066,
                        "src": "2276:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8097,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8062,
                        "src": "2290:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8095,
                      "name": "Withdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7996,
                      "src": "2265:10:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 8098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2265:33:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8099,
                  "nodeType": "EmitStatement",
                  "src": "2260:38:23"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 8101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1803:8:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8062,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1820:7:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8101,
                  "src": "1812:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1812:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1811:17:23"
            },
            "returnParameters": {
              "id": 8064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1838:0:23"
            },
            "scope": 8229,
            "src": "1794:511:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8115,
              "nodeType": "Block",
              "src": "2429:63:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8111,
                        "name": "_voter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8103,
                        "src": "2464:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 8112,
                        "name": "_blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8105,
                        "src": "2472:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8110,
                      "name": "getPastVotingGons",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6050,
                      "src": "2446:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 8113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2446:39:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8109,
                  "id": 8114,
                  "nodeType": "Return",
                  "src": "2439:46:23"
                }
              ]
            },
            "functionSelector": "cd3fd384",
            "id": 8116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "votingECOx",
            "nameLocation": "2320:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8103,
                  "mutability": "mutable",
                  "name": "_voter",
                  "nameLocation": "2339:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8116,
                  "src": "2331:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2331:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8105,
                  "mutability": "mutable",
                  "name": "_blockNumber",
                  "nameLocation": "2355:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8116,
                  "src": "2347:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2330:38:23"
            },
            "returnParameters": {
              "id": 8109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8116,
                  "src": "2416:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2415:9:23"
            },
            "scope": 8229,
            "src": "2311:181:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8127,
              "nodeType": "Block",
              "src": "2605:56:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8124,
                        "name": "_blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8118,
                        "src": "2641:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8123,
                      "name": "getPastTotalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6072,
                      "src": "2622:18:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 8125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2622:32:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8122,
                  "id": 8126,
                  "nodeType": "Return",
                  "src": "2615:39:23"
                }
              ]
            },
            "functionSelector": "5bb748ad",
            "id": 8128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalVotingECOx",
            "nameLocation": "2507:15:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8118,
                  "mutability": "mutable",
                  "name": "_blockNumber",
                  "nameLocation": "2531:12:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8128,
                  "src": "2523:20:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2523:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2522:22:23"
            },
            "returnParameters": {
              "id": 8122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8121,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8128,
                  "src": "2592:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2591:9:23"
            },
            "scope": 8229,
            "src": "2498:163:23",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8156,
              "nodeType": "Block",
              "src": "2710:251:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 8146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8134,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2741:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2741:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 8137,
                                "name": "ID_POLICY_PROPOSALS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11728,
                                "src": "2765:19:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 8136,
                              "name": "policyFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11885,
                              "src": "2755:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                "typeString": "function (bytes32) view returns (address)"
                              }
                            },
                            "id": 8138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2755:30:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2741:44:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 8145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 8140,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2805:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 8141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2805:10:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 8143,
                                "name": "ID_POLICY_VOTES",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11731,
                                "src": "2829:15:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 8142,
                              "name": "policyFor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11885,
                              "src": "2819:9:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                "typeString": "function (bytes32) view returns (address)"
                              }
                            },
                            "id": 8144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2819:26:23",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2805:40:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2741:104:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d757374206265206120766f74696e6720636f6e747261637420746f2063616c6c",
                        "id": 8147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2859:35:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e78bd6b12628a997ff5e861794cf975dab930291bdd32f685dff0db0c7a027e",
                          "typeString": "literal_string \"Must be a voting contract to call\""
                        },
                        "value": "Must be a voting contract to call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e78bd6b12628a997ff5e861794cf975dab930291bdd32f685dff0db0c7a027e",
                          "typeString": "literal_string \"Must be a voting contract to call\""
                        }
                      ],
                      "id": 8133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2720:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:184:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8149,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:184:23"
                },
                {
                  "expression": {
                    "id": 8154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8150,
                        "name": "votingTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8003,
                        "src": "2915:13:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 8152,
                      "indexExpression": {
                        "id": 8151,
                        "name": "_who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8130,
                        "src": "2929:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2915:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8153,
                      "name": "currentGeneration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "2937:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2915:39:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8155,
                  "nodeType": "ExpressionStatement",
                  "src": "2915:39:23"
                }
              ]
            },
            "functionSelector": "92c1ff44",
            "id": 8157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recordVote",
            "nameLocation": "2676:10:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8130,
                  "mutability": "mutable",
                  "name": "_who",
                  "nameLocation": "2695:4:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8157,
                  "src": "2687:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2687:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2686:14:23"
            },
            "returnParameters": {
              "id": 8132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2710:0:23"
            },
            "scope": 8229,
            "src": "2667:294:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11818
            ],
            "body": {
              "id": 8181,
              "nodeType": "Block",
              "src": "3035:137:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8168,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8159,
                        "src": "3062:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 8165,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3045:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ECOxLockup_$8229_$",
                          "typeString": "type(contract super ECOxLockup)"
                        }
                      },
                      "id": 8167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11818,
                      "src": "3045:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3045:23:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8170,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:23:23"
                },
                {
                  "expression": {
                    "id": 8179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8171,
                      "name": "currentGeneration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "3078:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8174,
                                  "name": "ID_TIMED_POLICIES",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11722,
                                  "src": "3120:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 8173,
                                "name": "policyFor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11885,
                                "src": "3110:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32) view returns (address)"
                                }
                              },
                              "id": 8175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3110:28:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8172,
                            "name": "IGeneration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8237,
                            "src": "3098:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IGeneration_$8237_$",
                              "typeString": "type(contract IGeneration)"
                            }
                          },
                          "id": 8176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3098:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGeneration_$8237",
                            "typeString": "contract IGeneration"
                          }
                        },
                        "id": 8177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8236,
                        "src": "3098:65:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 8178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3098:67:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3078:87:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8180,
                  "nodeType": "ExpressionStatement",
                  "src": "3078:87:23"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 8182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 8163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 8162,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12198,
                  "src": "3018:16:23"
                },
                "nodeType": "ModifierInvocation",
                "src": "3018:16:23"
              }
            ],
            "name": "initialize",
            "nameLocation": "2976:10:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8161,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3009:8:23"
            },
            "parameters": {
              "id": 8160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8159,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "2995:5:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 8182,
                  "src": "2987:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:15:23"
            },
            "returnParameters": {
              "id": 8164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3035:0:23"
            },
            "scope": 8229,
            "src": "2967:205:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8195,
              "nodeType": "Block",
              "src": "3221:140:23",
              "statements": [
                {
                  "expression": {
                    "id": 8193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8185,
                      "name": "currentGeneration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8005,
                      "src": "3267:17:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 8188,
                                  "name": "ID_TIMED_POLICIES",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11722,
                                  "src": "3309:17:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 8187,
                                "name": "policyFor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11885,
                                "src": "3299:9:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                                  "typeString": "function (bytes32) view returns (address)"
                                }
                              },
                              "id": 8189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3299:28:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 8186,
                            "name": "IGeneration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8237,
                            "src": "3287:11:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IGeneration_$8237_$",
                              "typeString": "type(contract IGeneration)"
                            }
                          },
                          "id": 8190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3287:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IGeneration_$8237",
                            "typeString": "contract IGeneration"
                          }
                        },
                        "id": 8191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "generation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8236,
                        "src": "3287:65:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 8192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3287:67:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3267:87:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8194,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:87:23"
                }
              ]
            },
            "functionSelector": "35bbc7fe",
            "id": 8196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notifyGenerationIncrease",
            "nameLocation": "3187:24:23",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3211:2:23"
            },
            "returnParameters": {
              "id": 8184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3221:0:23"
            },
            "scope": 8229,
            "src": "3178:183:23",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3388
            ],
            "body": {
              "id": 8210,
              "nodeType": "Block",
              "src": "3439:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7345434f78206973206e6f6e2d7472616e736665727261626c65",
                        "id": 8207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3456:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152",
                          "typeString": "literal_string \"sECOx is non-transferrable\""
                        },
                        "value": "sECOx is non-transferrable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152",
                          "typeString": "literal_string \"sECOx is non-transferrable\""
                        }
                      ],
                      "id": 8206,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "3449:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 8208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3449:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8209,
                  "nodeType": "ExpressionStatement",
                  "src": "3449:36:23"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 8211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "3376:8:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3415:8:23"
            },
            "parameters": {
              "id": 8201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8198,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "3385:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3385:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "3394:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3384:18:23"
            },
            "returnParameters": {
              "id": 8205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8211,
                  "src": "3433:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8203,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3433:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3432:6:23"
            },
            "scope": 8229,
            "src": "3367:125:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3472
            ],
            "body": {
              "id": 8227,
              "nodeType": "Block",
              "src": "3613:53:23",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7345434f78206973206e6f6e2d7472616e736665727261626c65",
                        "id": 8224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3630:28:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152",
                          "typeString": "literal_string \"sECOx is non-transferrable\""
                        },
                        "value": "sECOx is non-transferrable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8fe6585b81aa63df57af0c36068334d18621f1451058daca13cc872b1db06152",
                          "typeString": "literal_string \"sECOx is non-transferrable\""
                        }
                      ],
                      "id": 8223,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "3623:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 8225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:36:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8226,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:36:23"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 8228,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3507:12:23",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8219,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3589:8:23"
            },
            "parameters": {
              "id": 8218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8213,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8228,
                  "src": "3529:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3529:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8228,
                  "src": "3546:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3546:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8228,
                  "src": "3563:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8216,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3519:57:23"
            },
            "returnParameters": {
              "id": 8222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8221,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8228,
                  "src": "3607:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8220,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3606:6:23"
            },
            "scope": 8229,
            "src": "3498:168:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8230,
        "src": "293:3375:23",
        "usedErrors": []
      }
    ],
    "src": "32:3637:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-06-27T16:11:49.777Z",
  "devdoc": {
    "events": {
      "Deposit(address,uint256)": {
        "params": {
          "amount": "The amount of ECOx tokens deposited.",
          "source": "The address that a deposit certificate has been issued to."
        }
      },
      "Withdrawal(address,uint256)": {
        "params": {
          "amount": "The amount in basic unit of 10^{-18} ECOx (weicoX) tokens withdrawn.",
          "destination": "The address that has made a withdrawal."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "canImplementInterfaceForAddress(bytes32,address)": {
        "params": {
          "_addr": "The address of the contract we might act on behalf of."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "delegate(address)": {
        "details": "Delegate votes from the sender to `delegatee`."
      },
      "getDelegate(address)": {
        "details": "Get the address `account` is currently delegating to. Defaults to the account address itself if none specified"
      },
      "getPastTotalSupply(uint256)": {
        "details": "Retrieve the `totalSupply` at the end of `blockNumber`. Note, this value is the sum of all balances. It is NOT the sum of all the delegated votes! Requirements: - `blockNumber` must have been already mined"
      },
      "getPastVotes(address,uint256)": {
        "params": {
          "_blockNumber": "The block number to check the balance at the start                        of. Must be less than or equal to the present                        block number.",
          "_owner": "The account to check the balance of."
        }
      },
      "getPastVotingGons(address,uint256)": {
        "details": "Retrieve the number of votes in gons for `account` at the end of `blockNumber`. Requirements: - `blockNumber` must have been already mined"
      },
      "getVotingGons(address)": {
        "details": "Gets the current votes balance in gons for `account`"
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "initialize(address)": {
        "params": {
          "_self": "The address of the original contract deployment (as opposed              to the address of the proxy contract, which takes the place              of `this`)."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "numCheckpoints(address)": {
        "details": "Get number of checkpoints for `account`."
      },
      "policyCommand(address,bytes)": {
        "params": {
          "_data": "The call message/data to execute on.",
          "_delegate": "The address of the contract to delegate execution to."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      }
    },
    "title": "ECOxLockup",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Deposit(address,uint256)": {
        "notice": "The Deposit event indicates that ECOx has been locked up, credited to a particular address in a particular amount."
      },
      "Withdrawal(address,uint256)": {
        "notice": "The Withdrawal event indicates that a withdrawal has been made to a particular address in a particular amount."
      }
    },
    "kind": "user",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "ERC1820 permissioning interface"
      },
      "clone()": {
        "notice": "Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract."
      },
      "getPastVotes(address,uint256)": {
        "notice": "Return historical voting balance (includes delegation) at given block number. If the latest block number for the account is before the requested block then the most recent known balance is returned. Otherwise the exact block number requested is returned."
      },
      "implementation()": {
        "notice": "Get the address of the proxy target contract."
      },
      "initialize(address)": {
        "notice": "Initialize the contract (replaces constructor) See documentation for Policed for an explanation."
      },
      "policy()": {
        "notice": "The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy."
      },
      "policyCommand(address,bytes)": {
        "notice": "Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space."
      },
      "setExpectedInterfaceSet(address)": {
        "notice": "Set the expected interface set"
      },
      "totalSupplyAt(uint256)": {
        "notice": "Returns the total (inflation corrected) token supply at a specified block number"
      }
    },
    "version": 1
  }
}