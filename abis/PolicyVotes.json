{
  "contractName": "PolicyVotes",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_policy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "vote",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PolicyVoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum PolicyVotes.Result",
          "name": "result",
          "type": "uint8"
        }
      ],
      "name": "VoteCompleted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENACTION_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_CLEANUP",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_CURRENCY_GOVERNANCE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_CURRENCY_TIMER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_ECO",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_ECOX",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_ECOXLOCKUP",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_ECO_LABS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_FAUCET",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_POLICY_PROPOSALS",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_POLICY_VOTES",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_TIMED_POLICIES",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ID_TRUSTED_NODES",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTE_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clone",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "policyCommand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposal",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setExpectedInterfaceSet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalVotingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteEnds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "votingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yesStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "yesVote",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_vote",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_self",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proposal",
          "type": "address"
        }
      ],
      "name": "configure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PolicyVoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum PolicyVotes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"name\":\"VoteCompleted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENACTION_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_CLEANUP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_CURRENCY_GOVERNANCE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_CURRENCY_TIMER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_ECO\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_ECOX\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_ECOXLOCKUP\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_ECO_LABS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_FAUCET\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_POLICY_PROPOSALS\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_POLICY_VOTES\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_TIMED_POLICIES\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ID_TRUSTED_NODES\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTE_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposal\",\"type\":\"address\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"policyCommand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setExpectedInterfaceSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_vote\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteEnds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yesStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"yesVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"params\":{\"_addr\":\"The address of the contract we might act on behalf of.\"}},\"configure(address)\":{\"params\":{\"_proposal\":\"The proposal to vote on.\"}},\"initialize(address)\":{\"params\":{\"_self\":\"The original contract, to provide access to storage data.\"}},\"policyCommand(address,bytes)\":{\"params\":{\"_data\":\"The call message/data to execute on.\",\"_delegate\":\"The address of the contract to delegate execution to.\"}},\"vote(bool)\":{\"params\":{\"_vote\":\"The vote for the proposal\"}}},\"title\":\"PolicyVotes This implements the voting and implementation phases of the policy decision process. Open stake based voting is used for the voting phase.\",\"version\":1},\"userdoc\":{\"events\":{\"PolicyVoteCast(address,bool,uint256)\":{\"notice\":\"Event emitted when vote is revealed.\"},\"VoteCompleted(uint8)\":{\"notice\":\"Event emitted when vote outcome is known.\"}},\"kind\":\"user\",\"methods\":{\"ENACTION_DELAY()\":{\"notice\":\"The delay on a plurality win\"},\"VOTE_TIME()\":{\"notice\":\"The length of the commit portion of the voting phase.\"},\"blockNumber()\":{\"notice\":\"The store block number to use when checking account balances for staking.\"},\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"ERC1820 permissioning interface\"},\"clone()\":{\"notice\":\"Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract.\"},\"configure(address)\":{\"notice\":\"Configure the proposals that are part of this voting cycle and start the lockup period. This also fixes the end times of each subsequent phase. This can only be called once, and should be called atomically with instantiation.\"},\"execute()\":{\"notice\":\"Execute the proposal if it has enough support. Can only be called after the voting and the delay phase, or after the point that more than 50% of the total voting power has voted in favor of the proposal. If the proposal has been accepted, it will be enacted by calling the `enacted` functions using `delegatecall` from the root policy.\"},\"implementation()\":{\"notice\":\"Get the address of the proxy target contract.\"},\"initialize(address)\":{\"notice\":\"Initialize a cloned/proxied copy of this contract.\"},\"policy()\":{\"notice\":\"The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy.\"},\"policyCommand(address,bytes)\":{\"notice\":\"Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space.\"},\"proposal()\":{\"notice\":\"The proposal being voted on \"},\"setExpectedInterfaceSet(address)\":{\"notice\":\"Set the expected interface set\"},\"stake(address)\":{\"notice\":\"Per voter power.\"},\"totalStake()\":{\"notice\":\"Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico).\"},\"vote(bool)\":{\"notice\":\"Submit your yes/no support Shows whether or not your voting power supports or does not support the vote Note Not voting is not equivalent to voting no. Percentage of voted support, not percentage of total voting power is used to determine the win.\"},\"voteEnds()\":{\"notice\":\"The timestamp at which the commit portion of the voting phase ends.\"},\"yesStake()\":{\"notice\":\"Total revealed positive stake in basic unit of 10^{-18} ECO (weico).\"},\"yesVote(address)\":{\"notice\":\"Per voter that votes yes\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/PolicyVotes.sol\":\"PolicyVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xc94f9b84096deaf9d2ba5681db62455e3f2d5f0a61341f68a6f576f32a6e60be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74465bbd80d2e8cfb900bf00c69940822d59bfee20d3a9725fbd74e26413319b\",\"dweb:/ipfs/QmYLEg43ZBYBsjx6qDiHK21P4YjVYLzQcUMhadrdqmA5ZL\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x1e34ab6382525e2c48a01d9edbcfeab024072e8fa80332d48fb7011ebdf59562\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d4c3a1cacb1b5ce5681edac3dc3034a9e6ea6b9e4ef338564ca70b9b6ea2fd7\",\"dweb:/ipfs/QmXwhPvgGK4envqERyjh5W7CtrH72geAE7fh1EFcVerviw\"]},\"project:/contracts/VDF/BigNumber.sol\":{\"keccak256\":\"0x5e88c0690fc697f8f1bd8ffa0b1d6ef4468edf1b265c9d84158d0c1f77596a91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://debd6a317c4174d1b6e99cad87868a2c6a0e09d87eaeb5d01f95271526b806a1\",\"dweb:/ipfs/QmV2sGNYUHLMpMbRJuGhytoxH33w136YNSayMUboZxEKDd\"]},\"project:/contracts/VDF/IsPrime.sol\":{\"keccak256\":\"0x46e04eec8e101ebb0f5a6ed2d3b53a24826e716ab0e2ce0e3fe34cd9f1af7491\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb4fd348697a8bfe54c3d379187d50641487df5b31cbe36e43bd1fb101df4f07\",\"dweb:/ipfs/QmWJ38Hh2Gun9LAFrrfNtuUECMcx5tEt3HrvmgeMgeiGmW\"]},\"project:/contracts/VDF/VDFVerifier.sol\":{\"keccak256\":\"0xf54b4f6ac87d85718771deff7941934bbdd297f107c69392c24d561a27aa9e07\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72b9f4b13ef77326722cf3ea0072a4bed45f3070463409ac9d9b5bdf40c304c3\",\"dweb:/ipfs/Qma8hCvwgh5gs4KPZW64KjUnoPgJpSpiJ9QxTQPBFv33Gw\"]},\"project:/contracts/clone/CloneFactory.sol\":{\"keccak256\":\"0xa9cca376d475f738168c095ab801487d9f7be4c266fccb180e3b86d75a711266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc82435cda5a9995d406c80defad1824fcaecf26a2fe697233bdabfe174e7566\",\"dweb:/ipfs/QmNdQmbuWYybudzYmcTy2uis17rHoB3SChYCdUqMTzdU17\"]},\"project:/contracts/currency/ECOx.sol\":{\"keccak256\":\"0x608b39a0465df4ab92c816ff52626b2d0e938c74d42472b9f88f483db041461f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d75d58e89d535ba6eeec90466237dff2615d00bf04aa8ecfd8f36b1e85d15749\",\"dweb:/ipfs/QmcQwgCibTPDwsKKLLtgUTPdz39m7YkGCR7XxnZHjnsYyL\"]},\"project:/contracts/currency/ERC20.sol\":{\"keccak256\":\"0xd35befe59e60d57e1edf5862eaf951373093d645ffaabcdbe250bbbb8027eb06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1a2ef0b12382baafccf9bbc182ef19b66a6025cdb95a2ea516a35f06b6ae250\",\"dweb:/ipfs/QmcLczbCyJR82PWWAkpuEKNja96DsTUEMChVdq1s6qRU9d\"]},\"project:/contracts/currency/EcoBalanceStore.sol\":{\"keccak256\":\"0xb669dfdbd8cb88b7a53e2852907027af5a69b90e7930d52b872eab99a3a1b758\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ce29c879e3d07abfd1be6359391d309c557f1e64cc6be771f27de0b82cc63c4\",\"dweb:/ipfs/QmRZJnjsnyKnGXqGG3gYqtuBpUuopTX17ryWGdDrPLPw83\"]},\"project:/contracts/currency/IEcoBalanceStoreGenerationBalance.sol\":{\"keccak256\":\"0xe301e84792c16f34a17bdfb7b9e075b9b3daf623e6424f58848649ef413b1eda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2c098a45fc95625b329cc149aa48def710ce26cad2f54f85ab781e26ed3c4e6\",\"dweb:/ipfs/Qmd9F3TSJtDbnoPXMNScJuUEpr5NAMpXEkF3S85CmLKL2Z\"]},\"project:/contracts/currency/InflationRootHashProposal.sol\":{\"keccak256\":\"0x10b15df8d9e20f1cc5426ecd9a8c4a038653136236cbd22f1cd8bf1fb9ebe11c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfbe37661f420bfad8a1031eec630a0f0eb1bd0ab6cb9cf0eedb081900753512\",\"dweb:/ipfs/QmVWqnLn7FeyQrpbaYuqNgEkp4QCtrfTywJ7E8QeppCskS\"]},\"project:/contracts/currency/VoteCheckpoints.sol\":{\"keccak256\":\"0x8f2badf8fd889ae17219e09a304ed84ee51ed046b9fc681185a12ec9cc680a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3a2e5ef542e4ff90348209ec88fa6998c939965372aa1928db2a2aa071306ec\",\"dweb:/ipfs/Qmez8HBsnBXuyTzvqLvWiHDkdtvW115WHQiiUZZh1erB4f\"]},\"project:/contracts/governance/CurrencyGovernance.sol\":{\"keccak256\":\"0x19e989ded999720bfd690efeaa6a8f41e2dc6631ce44755b0cae3f144e3f76a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://266fadecf03eea43bded1394ca8adbce4e9bf77c1700643d75a12d9ae26ccbb3\",\"dweb:/ipfs/QmZ4M5yVZcWfN3FkxLgbYg4y9QMDisXwDKa4MRHdkBuVF5\"]},\"project:/contracts/governance/CurrencyTimer.sol\":{\"keccak256\":\"0x2d533823758f8d2b5c1082777d011c4100006c90a2b81b0b6182b54c2df1ba9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70b9ecedac10da90392cc9407cc93603f5b536b840f7bc1d4605272fe26ab117\",\"dweb:/ipfs/QmdWB1d64HpvUDs26ozWuvo3CJrqpv6Hd4WAE79yauEPdW\"]},\"project:/contracts/governance/ECOxLockup.sol\":{\"keccak256\":\"0xefad53fc822620206f21e4cd1f69892032c912e8fe1230ce708f317ce3b89c09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28de98a9453d257d9f601d86176dead62f85150785b7a1bf53e76f208c4df386\",\"dweb:/ipfs/Qmb7Xy7qRhQujHvZRite9af5GCLvtx2MPFswmmPUqe1Vk3\"]},\"project:/contracts/governance/IGeneration.sol\":{\"keccak256\":\"0x3b431c3003108a46b0051f13334d540bb2beec851da88a735d27c84413360276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19c8f5f12e5a30e2abe12a4ec2fd3f6ea429d83cf154a4968af880436a9c9ff3\",\"dweb:/ipfs/QmWrNDLhEBfM4y4MWUeyp5y9QYUDG8R9YJo599n1hUkpxj\"]},\"project:/contracts/governance/ILockups.sol\":{\"keccak256\":\"0xcbb514bd42d5e9a47df66e59ddd960dfea4cf74a4c3cf177fbf9112cfdcfa636\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdfcec7e37862ce1c931908fc9e394103b9579fc1e1a376005cdf642aaf609c6\",\"dweb:/ipfs/QmXC2eqCyXRF2kRvSYyciH6e8Syty5zJ1HkVxKJREG1SzY\"]},\"project:/contracts/governance/ITimeNotifier.sol\":{\"keccak256\":\"0x2fb231168282d301332c2b9d2b7a785e9ead05dd1d684844a95e29eeb93d41bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29b14e0904264e2e5737187709ec8d51f0614afffa978463400749eb636490f2\",\"dweb:/ipfs/QmNaggfV5RPCNTLL7Nc9R8YxYg9uG8ZMypdvDAAgUtLdTa\"]},\"project:/contracts/governance/Inflation.sol\":{\"keccak256\":\"0xee0b184da02a638ffdbdc4761c879a192a2566b6e847579680bcd4308cebc64f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e84365f0f782c926a52633343b89615008727f75b84a479da7a135a5a933a58a\",\"dweb:/ipfs/QmRjSaF5FUBHo1GLJm8mFWoMniKFD1zoEPbJQvfkQBmbe9\"]},\"project:/contracts/governance/Lockup.sol\":{\"keccak256\":\"0x07c04e216719f6789ac0a14b927832107f76fd5f64695a123872b1d0153e7543\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23abcd4d43868a11ecbbae594896ab463844284d2d33c3f59e66ffe722089f02\",\"dweb:/ipfs/QmRACvobdftHht6X5t1ZNXm9EFYJbWp6DFLf1ntTUZSkhV\"]},\"project:/contracts/governance/PolicyProposals.sol\":{\"keccak256\":\"0x900708ad7fd17a77c6e731b5398d75f133ef24e83a6d3c1c5dc29163929ccfa9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3402f841a74935c1c75e05632b28b9f1ff16bd794d7ecbe4a0b9ac66bd4b1271\",\"dweb:/ipfs/QmPehbC7DyHhuRkMzbXhTxnrk6ReHrhboeygMHDzo3ufLM\"]},\"project:/contracts/governance/PolicyVotes.sol\":{\"keccak256\":\"0x2ba76224e2105ca56a9b7c024e2f5f647a592833637d94b9ce588eb8c8aeb78f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ae9c543a86eb47043a490f3237e3da632e4b6b7ffdfaa86bd2ed38970989cbf\",\"dweb:/ipfs/QmQAMMa18QfY1qQHbutFMUE8WMuiFyygzFzY7rw3h9uVy9\"]},\"project:/contracts/governance/Proposal.sol\":{\"keccak256\":\"0xa5ab407d607a169e60f4de23c6c8ad96b788a25f213fc49ba3710e606224014b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81242d5dd6ec57f65663db1d628c0b36b6dbe01cee7a28106083be06cb64829\",\"dweb:/ipfs/QmfYyRxn8UCQ4xhW5CiFsRqAsXgcXkCoZHYkM7KA8isptj\"]},\"project:/contracts/governance/SimplePolicySetter.sol\":{\"keccak256\":\"0xf2c92c209af434e2951de4b38ac1f873c84f66ee21624951795299df564aee85\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82da943b1ee0c3d53d81ced598e6a9dc25d95a2917b4594656fa795ec70f3739\",\"dweb:/ipfs/QmQojUwpGLUH5o1K9TXaGLAEWrToJbfYxCPq7PVQ5em127\"]},\"project:/contracts/governance/TrustedNodes.sol\":{\"keccak256\":\"0xea47974575ab6fc0318f9051a8c62ca8fa69cce05e6831c776b55d53e54d38d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9629154de32ec95668244c63a8d5c9a66662050580b92775354dd8867b8661c9\",\"dweb:/ipfs/Qma6Bn9i7mLH171wm3rrwiwjU8rrBRmH5bHRLA5ACNiaDb\"]},\"project:/contracts/governance/VotingPower.sol\":{\"keccak256\":\"0xd015db803629e17946c143334c04f675a8d1ec4cae1a663562c8463801baa46b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0ba9700c971a203c136de8f4101a84048bca476a8e0116cb46deed97b3ab8d3\",\"dweb:/ipfs/QmbQpKXVjp7tZdvbjBmGvikTfNz5TbqyLvn56XLmVc4ExA\"]},\"project:/contracts/policy/ERC1820Client.sol\":{\"keccak256\":\"0x69dd5065d6e5a2eb2065820de408601e7e4e1723c22dc87e6abe3490e6a85653\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca2da45d19c5f61d6abd0265d3a63e4dfd99dd824450d9ee7975c5545ced57ec\",\"dweb:/ipfs/QmXszDmnjMGPJqqU6zSezCosoPRq53xaPpoZooHJRTK5sR\"]},\"project:/contracts/policy/Policed.sol\":{\"keccak256\":\"0x9b7453d53425ce5d07ca741691bcc93ddeb160f7f9093b6caab5d6a6e0e3c7dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d34065dd15c4bbab6a346f3c8c2ccd488d141d20f1e28c100a03abc3401e5b3\",\"dweb:/ipfs/QmTJruf6YSHUMBQXfe9itX6NYFZBUfzmTyUnbHdLmghZXg\"]},\"project:/contracts/policy/PolicedUtils.sol\":{\"keccak256\":\"0x5db2a1c0a18eea386af44be4060fdd648411bc2bf709ccabeda7ef3db6c6489f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1561acbf9877d763fa3e3766f5dfaeff84513f23e50a0ee6cbd281e22acd9a15\",\"dweb:/ipfs/Qme38mB6divPHqv5AEEfUacVx74fkyu8F9zXhSLxtYz5X4\"]},\"project:/contracts/policy/Policy.sol\":{\"keccak256\":\"0x38364705384ac5a6929a9e1e961fa7260aa2e13bd0b10594e2668773d1a905b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f452391a5d7eaab8270478424b4c6cbf043d0f97e7428ae5b159a9d841532b75\",\"dweb:/ipfs/Qmf5wzJCRNA1TzoLUYVyq35CBH1WQLkkp3ZMicMGxwFQ45\"]},\"project:/contracts/proxy/ForwardTarget.sol\":{\"keccak256\":\"0x4d9205a1bf8021ea57860327d73bb98c8e1b997cd0c05a6320605fd4261ed60e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17d1dbddfc0c3d49c07dd5a31d87075806c94be6c5bec81ea67b0311497aa46b\",\"dweb:/ipfs/QmTSb5uD6dWeZzC9Tk4FMjuV9Do3rHJ8Hq77rjTFPdnttQ\"]},\"project:/contracts/utils/TimeUtils.sol\":{\"keccak256\":\"0xb0536971a5c79c8a95049bc14723bb1a385b7c7f6c92557daae34fb5e6f59401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79612e991eff017a6ddaffab4dbb70d8c6d0b30df865b29f16689fbba1c568c2\",\"dweb:/ipfs/QmSC6GBcXE3K8nawdRqXPRYD4QdQswXG9HKhSSLMaBhPMM\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001d8738038062001d8783398101604081905262000034916200021d565b8080806040516020016200006b907f636f6d2e65636f2e466f727761726450726f78792e74617267657400000000008152601b0190565b6040516020818303038152906040528051906020012060001c60008051602062001d6783398151915214620000f15760405162461bcd60e51b815260206004820152602160248201527f494d504c454d454e544154494f4e5f534c4f542068617368206d69736d6174636044820152600d60fb1b60648201526084015b60405180910390fd5b620000fc306200018f565b600080546001600160a01b0319166001600160a01b03928316179055604051635df8122f60e01b81523060048201529082166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401600060405180830381600087803b1580156200016d57600080fd5b505af115801562000182573d6000803e3d6000fd5b505050505050506200024f565b6001600160a01b038116620001b160008051602062001d678339815191525490565b6001600160a01b031614156200020a5760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e67006044820152606401620000e8565b60008051602062001d6783398151915255565b6000602082840312156200023057600080fd5b81516001600160a01b03811681146200024857600080fd5b9392505050565b611b08806200025f6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806357e871e71161011a5780638b0e9f3f116100ad578063c91406651161007c578063c9140665146104a8578063d5252e45146104cf578063f53d3d1f146104f6578063f67a3a481461051d578063fe31df0d1461054457600080fd5b80638b0e9f3f14610432578063aabe10231461043b578063ba38df6c1461046e578063c4d66de81461049557600080fd5b80637361d1e6116100e95780637361d1e6146103dc578063753ec1031461040357806375cb26721461041657806385defaf41461042957600080fd5b806357e871e71461038f5780635c60da1b1461039857806361461954146103ad57806368273a57146103b557600080fd5b806328ea6dda11610192578063486a27db11610161578063486a27db1461034e5780634b9f5c9814610356578063536f9f42146103695780635423b94d1461037c57600080fd5b806328ea6dda14610303578063328a1da91461030c57806339634e0c14610314578063480276ac1461032757600080fd5b8063154cfece116101ce578063154cfece146102825780631673bc41146102a9578063249cb3fa146102d057806326476204146102e357600080fd5b80630505c8c91461020057806309d7f23b1461023057806309ed460714610245578063138d80091461024d575b600080fd5b600054610213906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61024361023e366004611848565b61056b565b005b61021361060b565b6102747fe10ab6c94f1da69921a0ca1c1b96b4fc339699153931c9bfd565e91f44c19b0b81565b604051908152602001610227565b6102747fe4ee44a5d338a8b2452cc9552ec014656668eaacb55683101b7e1c2b167e522581565b6102747fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b1981565b6102746102de36600461190c565b610679565b6102746102f136600461193c565b60036020526000908152604090205481565b61027460065481565b610274607881565b61024361032236600461193c565b61075f565b6102747f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a81565b61027460b481565b61024361036436600461196e565b6107f2565b61027461037736600461198b565b610a74565b61027461038a3660046119a4565b610c2a565b61027460085481565b600080516020611ab383398151915254610213565b610243610deb565b6102747f1b74fc1bde1302df3d2e3f68112fbbf0ccbb287053160042e61d82481bb6e17881565b6102747f93824b3fb91a9a455e79c6bb5ad7a2acaedbf7fea80464761d7d892aa7853d5e81565b600254610213906001600160a01b031681565b61024361042436600461193c565b6111a8565b61027460075481565b61027460055481565b61045e61044936600461193c565b60046020526000908152604090205460ff1681565b6040519015158152602001610227565b6102747f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f81565b6102436104a336600461193c565b61123e565b6102747f0e3d3f2b74f96e5fd24f23acf8b4b352d4e1d0d0ed45271f4e44aa64f98b228481565b6102747fe01e721169f17f30d0c130781195719ceba11f26f44578668ffd8462c7c1ebe981565b6102747fe0391e627a5766ef56109c7c98e0542c6e96a116720d7c626119be5b67e1813d81565b6102747fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa1881565b6102747f5f9af78bb9888a64eda8686df832be8039fe2a08c41dd13a3e0a34cadf71426581565b6000546001600160a01b031633146105e15760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e8180156105ff57816000f35b816000fd5b5050505050565b600080610617306112c9565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b5092949350505050565b600080546001600160a01b03838116911614806106a357506001546001600160a01b038381169116145b6107155760405162461bcd60e51b815260206004820152603d60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f7472616374206d61792063616c6c20746869732066756e6374696f6e2e00000060648201526084016105d8565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b6000546001600160a01b031633146107d05760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084016105d8565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60075442106108695760405162461bcd60e51b815260206004820152603360248201527f566f7465732063616e206f6e6c79206265207265636f7264656420647572696e60448201527f672074686520766f74696e6720706572696f640000000000000000000000000060648201526084016105d8565b600061087733600854610c2a565b9050600081116108fd5760405162461bcd60e51b8152602060048201526044602482018190527f566f74657273206d75737420686176652068656c6420746f6b656e7320626566908201527f6f72652074686520626c6f636b206e756d626572206f66207468652070726f706064820152631bdcd85b60e21b608482015260a4016105d8565b336000908152600360205260408120549061091882846119e6565b905081156109d3573360009081526004602052604090205460ff16151584151514156109925760405162461bcd60e51b815260206004820152602360248201527f596f757220766f74652068617320616c7265616479206265656e207265636f7260448201526219195960ea1b60648201526084016105d8565b3360009081526004602052604090205460ff16156109d357816006546109b891906119e6565b600655336000908152600460205260409020805460ff191690555b6109dc33611332565b6040805185151581526020810185905233917f83d67e3bded439819290451fe54e3296e9bc906b45038ef8ba8ae12df5050f98910160405180910390a28315610a4b5782600654610a2d91906119fd565b600655336000908152600460205260409020805460ff191660011790555b336000908152600360205260409020839055600554610a6b9082906119fd565b60055550505050565b600080610a7f611394565b6001600160a01b031663981b24d0846040518263ffffffff1660e01b8152600401610aac91815260200190565b60206040518083038186803b158015610ac457600080fd5b505afa158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afc9190611a15565b90506000610b086113c4565b6001600160a01b0316635bb748ad856040518263ffffffff1660e01b8152600401610b3591815260200190565b60206040518083038186803b158015610b4d57600080fd5b505afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190611a15565b90508015610c2357610b956113ef565b60405163329c53f760e01b815260048101839052602481018690526001600160a01b03919091169063329c53f79060440160206040518083038186803b158015610bde57600080fd5b505afa158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190611a15565b610c2090836119fd565b91505b5092915050565b600080610c35611394565b604051631dc7379760e11b81526001600160a01b038681166004830152602482018690529190911690633b8e6f2e9060440160206040518083038186803b158015610c7f57600080fd5b505afa158015610c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb79190611a15565b90506000610cc36113c4565b60405163334ff4e160e21b81526001600160a01b03878116600483015260248201879052919091169063cd3fd3849060440160206040518083038186803b158015610d0d57600080fd5b505afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190611a15565b90508015610de357610d556113ef565b60405163329c53f760e01b815260048101839052602481018690526001600160a01b03919091169063329c53f79060440160206040518083038186803b158015610d9e57600080fd5b505afa158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd69190611a15565b610de090836119fd565b91505b509392505050565b60006002600554610dfc9190611a2e565b90506000610e0b600854610a74565b9050426000610e1b600284611a2e565b60065411610e95576078600754610e3291906119fd565b8211610e955760405162461bcd60e51b815260206004820152602c60248201527f4d616a6f7269747920737570706f727420726571756972656420666f7220656160448201526b39363c9032b730b1ba34b7b760a11b60648201526084016105d8565b30610ebf7f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f611416565b6001600160a01b031614610f3b5760405162461bcd60e51b815260206004820152603b60248201527f5468697320636f6e7472616374206e6f206c6f6e67657220686173206175746860448201527f6f72697a6174696f6e20746f20656e6163742074686520766f7465000000000060648201526084016105d8565b83610f4857506002610fbf565b8360065411610f5957506001610fbf565b6000546002546040516330f056e560e11b81526001600160a01b0391821660048201529116906361e0adca90602401600060405180830381600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b50505050600090505b7fa83c75fdbf6911ff21d2ef7b04f04c9a1698044e31b381d4ad4dd9fd93c336de81604051610fee9190611a50565b60405180910390a16000546040516319bb6e0160e11b81527f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f60048201526001600160a01b0390911690633376dc0290602401600060405180830381600087803b15801561105b57600080fd5b505af115801561106f573d6000803e3d6000fd5b5050505061107b611394565b6000546001600160a01b039182169163a9059cbb9116611099611394565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156110da57600080fd5b505afa1580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111129190611a15565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561117057600080fd5b505af1158015611184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190611a78565b6007541561120a5760405162461bcd60e51b815260206004820152602960248201527f5468697320696e7374616e63652068617320616c7265616479206265656e20636044820152681bdb999a59dd5c995960ba1b60648201526084016105d8565b61121560b4426119fd565b60075543600855600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000611256600080516020611ab38339815191525490565b6001600160a01b0316146112bd5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016105d8565b6112c6816114b3565b50565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b61133a6113c4565b6040516324b07fd160e21b81526001600160a01b03838116600483015291909116906392c1ff44906024015b600060405180830381600087803b15801561138057600080fd5b505af1158015610604573d6000803e3d6000fd5b60006113bf7fe0391e627a5766ef56109c7c98e0542c6e96a116720d7c626119be5b67e1813d611416565b905090565b60006113bf7fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa18611416565b60006113bf7fe10ab6c94f1da69921a0ca1c1b96b4fc339699153931c9bfd565e91f44c19b0b5b6000805460405163555ddc6560e11b81526001600160a01b03909116600482015260248101839052731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b15801561147557600080fd5b505afa158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ad9190611a95565b92915050565b60006114cb600080516020611ab38339815191525490565b6001600160a01b0316146115325760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016105d8565b61153b81611585565b600054604051635df8122f60e01b81523060048201526001600160a01b039091166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401611366565b600061159d600080516020611ab38339815191525490565b6001600160a01b0316146116045760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016105d8565b61160d816116a1565b806001600160a01b0316630505c8c96040518163ffffffff1660e01b815260040160206040518083038186803b15801561164657600080fd5b505afa15801561165a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167e9190611a95565b600080546001600160a01b0319166001600160a01b039290921691909117905550565b60006116b9600080516020611ab38339815191525490565b6001600160a01b0316146117205760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016105d8565b6112c6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561175c57600080fd5b505afa158015611770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117949190611a95565b806001600160a01b03166117b4600080516020611ab38339815191525490565b6001600160a01b0316141561180b5760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e670060448201526064016105d8565b600080516020611ab383398151915255565b6001600160a01b03811681146112c657600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561185b57600080fd5b82356118668161181d565b9150602083013567ffffffffffffffff8082111561188357600080fd5b818501915085601f83011261189757600080fd5b8135818111156118a9576118a9611832565b604051601f8201601f19908116603f011681019083821181831017156118d1576118d1611832565b816040528281528860208487010111156118ea57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561191f57600080fd5b8235915060208301356119318161181d565b809150509250929050565b60006020828403121561194e57600080fd5b81356119598161181d565b9392505050565b80151581146112c657600080fd5b60006020828403121561198057600080fd5b813561195981611960565b60006020828403121561199d57600080fd5b5035919050565b600080604083850312156119b757600080fd5b82356119c28161181d565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156119f8576119f86119d0565b500390565b60008219821115611a1057611a106119d0565b500190565b600060208284031215611a2757600080fd5b5051919050565b600082611a4b57634e487b7160e01b600052601260045260246000fd5b500490565b6020810160038310611a7257634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215611a8a57600080fd5b815161195981611960565b600060208284031215611aa757600080fd5b81516119598161181d56fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220833ba390f1997b6ef3df1b286c02489e4a4dd7eba2c3a84e1b2283fc456f5eea64736f6c63430008090033f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c806357e871e71161011a5780638b0e9f3f116100ad578063c91406651161007c578063c9140665146104a8578063d5252e45146104cf578063f53d3d1f146104f6578063f67a3a481461051d578063fe31df0d1461054457600080fd5b80638b0e9f3f14610432578063aabe10231461043b578063ba38df6c1461046e578063c4d66de81461049557600080fd5b80637361d1e6116100e95780637361d1e6146103dc578063753ec1031461040357806375cb26721461041657806385defaf41461042957600080fd5b806357e871e71461038f5780635c60da1b1461039857806361461954146103ad57806368273a57146103b557600080fd5b806328ea6dda11610192578063486a27db11610161578063486a27db1461034e5780634b9f5c9814610356578063536f9f42146103695780635423b94d1461037c57600080fd5b806328ea6dda14610303578063328a1da91461030c57806339634e0c14610314578063480276ac1461032757600080fd5b8063154cfece116101ce578063154cfece146102825780631673bc41146102a9578063249cb3fa146102d057806326476204146102e357600080fd5b80630505c8c91461020057806309d7f23b1461023057806309ed460714610245578063138d80091461024d575b600080fd5b600054610213906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61024361023e366004611848565b61056b565b005b61021361060b565b6102747fe10ab6c94f1da69921a0ca1c1b96b4fc339699153931c9bfd565e91f44c19b0b81565b604051908152602001610227565b6102747fe4ee44a5d338a8b2452cc9552ec014656668eaacb55683101b7e1c2b167e522581565b6102747fae30bfb87dec2bd0c16be9790f95842d84f58dc70b0a8f6ed22e9556176a7b1981565b6102746102de36600461190c565b610679565b6102746102f136600461193c565b60036020526000908152604090205481565b61027460065481565b610274607881565b61024361032236600461193c565b61075f565b6102747f331e3a11698d428947c09d6cfecc92b2ccbc4a527e4e795d850152babfaff37a81565b61027460b481565b61024361036436600461196e565b6107f2565b61027461037736600461198b565b610a74565b61027461038a3660046119a4565b610c2a565b61027460085481565b600080516020611ab383398151915254610213565b610243610deb565b6102747f1b74fc1bde1302df3d2e3f68112fbbf0ccbb287053160042e61d82481bb6e17881565b6102747f93824b3fb91a9a455e79c6bb5ad7a2acaedbf7fea80464761d7d892aa7853d5e81565b600254610213906001600160a01b031681565b61024361042436600461193c565b6111a8565b61027460075481565b61027460055481565b61045e61044936600461193c565b60046020526000908152604090205460ff1681565b6040519015158152602001610227565b6102747f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f81565b6102436104a336600461193c565b61123e565b6102747f0e3d3f2b74f96e5fd24f23acf8b4b352d4e1d0d0ed45271f4e44aa64f98b228481565b6102747fe01e721169f17f30d0c130781195719ceba11f26f44578668ffd8462c7c1ebe981565b6102747fe0391e627a5766ef56109c7c98e0542c6e96a116720d7c626119be5b67e1813d81565b6102747fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa1881565b6102747f5f9af78bb9888a64eda8686df832be8039fe2a08c41dd13a3e0a34cadf71426581565b6000546001600160a01b031633146105e15760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084015b60405180910390fd5b600080825160208401855af43d806000803e8180156105ff57816000f35b816000fd5b5050505050565b600080610617306112c9565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b15801561065b57600080fd5b505af115801561066f573d6000803e3d6000fd5b5092949350505050565b600080546001600160a01b03838116911614806106a357506001546001600160a01b038381169116145b6107155760405162461bcd60e51b815260206004820152603d60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f7472616374206d61792063616c6c20746869732066756e6374696f6e2e00000060648201526084016105d8565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b6000546001600160a01b031633146107d05760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084016105d8565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60075442106108695760405162461bcd60e51b815260206004820152603360248201527f566f7465732063616e206f6e6c79206265207265636f7264656420647572696e60448201527f672074686520766f74696e6720706572696f640000000000000000000000000060648201526084016105d8565b600061087733600854610c2a565b9050600081116108fd5760405162461bcd60e51b8152602060048201526044602482018190527f566f74657273206d75737420686176652068656c6420746f6b656e7320626566908201527f6f72652074686520626c6f636b206e756d626572206f66207468652070726f706064820152631bdcd85b60e21b608482015260a4016105d8565b336000908152600360205260408120549061091882846119e6565b905081156109d3573360009081526004602052604090205460ff16151584151514156109925760405162461bcd60e51b815260206004820152602360248201527f596f757220766f74652068617320616c7265616479206265656e207265636f7260448201526219195960ea1b60648201526084016105d8565b3360009081526004602052604090205460ff16156109d357816006546109b891906119e6565b600655336000908152600460205260409020805460ff191690555b6109dc33611332565b6040805185151581526020810185905233917f83d67e3bded439819290451fe54e3296e9bc906b45038ef8ba8ae12df5050f98910160405180910390a28315610a4b5782600654610a2d91906119fd565b600655336000908152600460205260409020805460ff191660011790555b336000908152600360205260409020839055600554610a6b9082906119fd565b60055550505050565b600080610a7f611394565b6001600160a01b031663981b24d0846040518263ffffffff1660e01b8152600401610aac91815260200190565b60206040518083038186803b158015610ac457600080fd5b505afa158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afc9190611a15565b90506000610b086113c4565b6001600160a01b0316635bb748ad856040518263ffffffff1660e01b8152600401610b3591815260200190565b60206040518083038186803b158015610b4d57600080fd5b505afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190611a15565b90508015610c2357610b956113ef565b60405163329c53f760e01b815260048101839052602481018690526001600160a01b03919091169063329c53f79060440160206040518083038186803b158015610bde57600080fd5b505afa158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190611a15565b610c2090836119fd565b91505b5092915050565b600080610c35611394565b604051631dc7379760e11b81526001600160a01b038681166004830152602482018690529190911690633b8e6f2e9060440160206040518083038186803b158015610c7f57600080fd5b505afa158015610c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb79190611a15565b90506000610cc36113c4565b60405163334ff4e160e21b81526001600160a01b03878116600483015260248201879052919091169063cd3fd3849060440160206040518083038186803b158015610d0d57600080fd5b505afa158015610d21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d459190611a15565b90508015610de357610d556113ef565b60405163329c53f760e01b815260048101839052602481018690526001600160a01b03919091169063329c53f79060440160206040518083038186803b158015610d9e57600080fd5b505afa158015610db2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd69190611a15565b610de090836119fd565b91505b509392505050565b60006002600554610dfc9190611a2e565b90506000610e0b600854610a74565b9050426000610e1b600284611a2e565b60065411610e95576078600754610e3291906119fd565b8211610e955760405162461bcd60e51b815260206004820152602c60248201527f4d616a6f7269747920737570706f727420726571756972656420666f7220656160448201526b39363c9032b730b1ba34b7b760a11b60648201526084016105d8565b30610ebf7f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f611416565b6001600160a01b031614610f3b5760405162461bcd60e51b815260206004820152603b60248201527f5468697320636f6e7472616374206e6f206c6f6e67657220686173206175746860448201527f6f72697a6174696f6e20746f20656e6163742074686520766f7465000000000060648201526084016105d8565b83610f4857506002610fbf565b8360065411610f5957506001610fbf565b6000546002546040516330f056e560e11b81526001600160a01b0391821660048201529116906361e0adca90602401600060405180830381600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b50505050600090505b7fa83c75fdbf6911ff21d2ef7b04f04c9a1698044e31b381d4ad4dd9fd93c336de81604051610fee9190611a50565b60405180910390a16000546040516319bb6e0160e11b81527f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f60048201526001600160a01b0390911690633376dc0290602401600060405180830381600087803b15801561105b57600080fd5b505af115801561106f573d6000803e3d6000fd5b5050505061107b611394565b6000546001600160a01b039182169163a9059cbb9116611099611394565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a082319060240160206040518083038186803b1580156110da57600080fd5b505afa1580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111129190611a15565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561117057600080fd5b505af1158015611184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190611a78565b6007541561120a5760405162461bcd60e51b815260206004820152602960248201527f5468697320696e7374616e63652068617320616c7265616479206265656e20636044820152681bdb999a59dd5c995960ba1b60648201526084016105d8565b61121560b4426119fd565b60075543600855600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000611256600080516020611ab38339815191525490565b6001600160a01b0316146112bd5760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016105d8565b6112c6816114b3565b50565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b61133a6113c4565b6040516324b07fd160e21b81526001600160a01b03838116600483015291909116906392c1ff44906024015b600060405180830381600087803b15801561138057600080fd5b505af1158015610604573d6000803e3d6000fd5b60006113bf7fe0391e627a5766ef56109c7c98e0542c6e96a116720d7c626119be5b67e1813d611416565b905090565b60006113bf7fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa18611416565b60006113bf7fe10ab6c94f1da69921a0ca1c1b96b4fc339699153931c9bfd565e91f44c19b0b5b6000805460405163555ddc6560e11b81526001600160a01b03909116600482015260248101839052731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b15801561147557600080fd5b505afa158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ad9190611a95565b92915050565b60006114cb600080516020611ab38339815191525490565b6001600160a01b0316146115325760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016105d8565b61153b81611585565b600054604051635df8122f60e01b81523060048201526001600160a01b039091166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f90604401611366565b600061159d600080516020611ab38339815191525490565b6001600160a01b0316146116045760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016105d8565b61160d816116a1565b806001600160a01b0316630505c8c96040518163ffffffff1660e01b815260040160206040518083038186803b15801561164657600080fd5b505afa15801561165a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167e9190611a95565b600080546001600160a01b0319166001600160a01b039290921691909117905550565b60006116b9600080516020611ab38339815191525490565b6001600160a01b0316146117205760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016105d8565b6112c6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561175c57600080fd5b505afa158015611770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117949190611a95565b806001600160a01b03166117b4600080516020611ab38339815191525490565b6001600160a01b0316141561180b5760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e670060448201526064016105d8565b600080516020611ab383398151915255565b6001600160a01b03811681146112c657600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561185b57600080fd5b82356118668161181d565b9150602083013567ffffffffffffffff8082111561188357600080fd5b818501915085601f83011261189757600080fd5b8135818111156118a9576118a9611832565b604051601f8201601f19908116603f011681019083821181831017156118d1576118d1611832565b816040528281528860208487010111156118ea57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561191f57600080fd5b8235915060208301356119318161181d565b809150509250929050565b60006020828403121561194e57600080fd5b81356119598161181d565b9392505050565b80151581146112c657600080fd5b60006020828403121561198057600080fd5b813561195981611960565b60006020828403121561199d57600080fd5b5035919050565b600080604083850312156119b757600080fd5b82356119c28161181d565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156119f8576119f86119d0565b500390565b60008219821115611a1057611a106119d0565b500190565b600060208284031215611a2757600080fd5b5051919050565b600082611a4b57634e487b7160e01b600052601260045260246000fd5b500490565b6020810160038310611a7257634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215611a8a57600080fd5b815161195981611960565b600060208284031215611aa757600080fd5b81516119598161181d56fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220833ba390f1997b6ef3df1b286c02489e4a4dd7eba2c3a84e1b2283fc456f5eea64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1660:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:85"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:85",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:85",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:85"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:85",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:85"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:85"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:85",
                "type": ""
              }
            ],
            "src": "14:290:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "501:86:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "518:3:85"
                      },
                      {
                        "hexValue": "636f6d2e65636f2e466f727761726450726f78792e746172676574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "523:29:85",
                        "type": "",
                        "value": "com.eco.ForwardProxy.target"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "511:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "511:42:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "511:42:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "562:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "573:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "578:2:85",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "569:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "569:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "562:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "485:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "493:3:85",
                "type": ""
              }
            ],
            "src": "309:278:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "766:223:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "783:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "794:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "776:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "776:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "776:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "817:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "828:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "813:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "813:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "833:2:85",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "806:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "806:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "806:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "856:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "867:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "852:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "852:18:85"
                      },
                      {
                        "hexValue": "494d504c454d454e544154494f4e5f534c4f542068617368206d69736d617463",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "872:34:85",
                        "type": "",
                        "value": "IMPLEMENTATION_SLOT hash mismatc"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "845:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "845:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "927:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "938:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "923:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:18:85"
                      },
                      {
                        "hexValue": "68",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "943:3:85",
                        "type": "",
                        "value": "h"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "916:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "916:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "916:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "956:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "968:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "979:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "964:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "956:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7fb1fca4349024c38b3a8169ec4d86f1425ddbd22ae97901943d2477faaff784__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "743:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "757:4:85",
                "type": ""
              }
            ],
            "src": "592:397:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1123:175:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1133:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1145:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1156:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1141:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1141:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1133:4:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1168:29:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1186:3:85",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1191:1:85",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1182:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1182:11:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1195:1:85",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1178:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1178:19:85"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1172:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1213:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1228:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1236:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1224:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1224:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1206:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1206:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1260:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1271:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1256:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1280:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1288:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1276:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1249:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1249:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1249:43:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1084:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1095:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1103:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1114:4:85",
                "type": ""
              }
            ],
            "src": "994:304:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1477:181:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1494:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1505:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1487:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1487:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1487:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1528:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1539:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1524:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1524:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1544:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1517:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1517:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1517:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1567:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1578:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1563:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1563:18:85"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1583:33:85",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1556:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:61:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1556:61:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1626:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1638:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1649:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1634:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1626:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1454:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1468:4:85",
                "type": ""
              }
            ],
            "src": "1303:355:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_f86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"com.eco.ForwardProxy.target\")\n        end := add(pos, 27)\n    }\n    function abi_encode_tuple_t_stringliteral_7fb1fca4349024c38b3a8169ec4d86f1425ddbd22ae97901943d2477faaff784__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"IMPLEMENTATION_SLOT hash mismatc\")\n        mstore(add(headStart, 96), \"h\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11147:85",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:85",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:85",
                "type": ""
              }
            ],
            "src": "14:226:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "290:109:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "377:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "386:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "389:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "379:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "379:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "379:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "313:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "324:5:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "331:42:85",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "320:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "320:54:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "310:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "310:65:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "303:73:85"
                  },
                  "nodeType": "YulIf",
                  "src": "300:93:85"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "279:5:85",
                "type": ""
              }
            ],
            "src": "245:154:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "436:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "453:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "460:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "465:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "456:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "446:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "493:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:4:85",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "486:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "486:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "486:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "517:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "520:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "510:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "510:15:85"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "404:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "632:960:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "678:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "687:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "690:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "680:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "680:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "680:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "653:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "662:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "649:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "649:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "674:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "645:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "642:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "703:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "729:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "716:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "707:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "773:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "748:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "748:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "788:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "798:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "788:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "812:46:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "843:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "854:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "839:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "839:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "826:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "826:32:85"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "816:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "867:28:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "877:18:85",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "871:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "922:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "931:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "934:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "924:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "924:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "924:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "910:6:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "918:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "907:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:14:85"
                  },
                  "nodeType": "YulIf",
                  "src": "904:34:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "947:32:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "961:9:85"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "972:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:22:85"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "951:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1027:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1039:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1029:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1029:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1029:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1006:2:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1010:4:85",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1002:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1002:13:85"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1017:7:85"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "998:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "998:27:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "991:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "991:35:85"
                  },
                  "nodeType": "YulIf",
                  "src": "988:55:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1052:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1075:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1062:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1062:16:85"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1056:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1101:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1103:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1103:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1103:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1093:2:85"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1097:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1090:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1090:10:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1087:36:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1132:17:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1146:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1142:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1142:7:85"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1136:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1158:23:85",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1178:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1172:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1172:9:85"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1162:6:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1190:71:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1212:6:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1236:2:85"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1240:4:85",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1232:3:85"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1232:13:85"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1247:2:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1228:3:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1228:22:85"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1252:2:85",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1224:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1224:31:85"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1257:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1220:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1220:40:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1208:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:53:85"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1194:10:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1320:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1322:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1322:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1322:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1279:10:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1291:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1276:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1299:10:85"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1311:6:85"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1296:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1296:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1273:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1273:46:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1270:72:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1358:2:85",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1362:10:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1351:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:22:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1351:22:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1389:6:85"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1397:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1382:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1382:18:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1382:18:85"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1446:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1455:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1458:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1448:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1448:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1448:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1423:2:85"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1427:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1419:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1419:11:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1432:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1415:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1415:20:85"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1437:7:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1412:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1412:33:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1409:53:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1488:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1496:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1484:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1484:15:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1505:2:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1509:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1501:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1501:11:85"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1514:2:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1471:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1471:46:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1471:46:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1541:6:85"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1549:2:85"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1537:3:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1537:15:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1554:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1533:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1533:24:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1559:1:85",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1526:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1526:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1570:16:85",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1580:6:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1570:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "590:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "601:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "613:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "621:6:85",
                "type": ""
              }
            ],
            "src": "536:1056:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1698:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1708:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1720:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1731:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1716:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1716:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1708:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1750:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1761:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1743:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1743:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1743:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1667:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1678:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1689:4:85",
                "type": ""
              }
            ],
            "src": "1597:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1866:228:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1912:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1921:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1924:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1914:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1914:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1914:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1887:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1896:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1883:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1883:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1908:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1879:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "1876:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1937:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1960:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1947:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1947:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1937:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1979:45:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2009:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2020:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2005:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2005:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1992:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1992:32:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1983:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2058:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2033:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2033:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2033:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2073:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2083:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2073:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1824:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1835:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1847:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1855:6:85",
                "type": ""
              }
            ],
            "src": "1779:315:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2169:177:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2215:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2224:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2227:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2217:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2217:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2217:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2190:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2199:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2186:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2186:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2211:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2182:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2182:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2179:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2240:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2266:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2253:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2253:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2244:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2310:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2285:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2285:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2285:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2325:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2335:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2325:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2135:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2146:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2158:6:85",
                "type": ""
              }
            ],
            "src": "2099:247:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2452:76:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2462:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2474:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2485:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2470:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2470:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2462:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2504:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2515:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2497:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2497:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2497:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2421:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2432:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2443:4:85",
                "type": ""
              }
            ],
            "src": "2351:177:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2575:76:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2629:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2638:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2641:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2631:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2631:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2631:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2598:5:85"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2619:5:85"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2612:6:85"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2612:13:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2605:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2605:21:85"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2595:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2595:32:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2588:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2588:40:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2585:60:85"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2564:5:85",
                "type": ""
              }
            ],
            "src": "2533:118:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2723:174:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2769:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2778:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2781:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2771:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2771:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2771:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2744:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2753:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2740:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2740:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2765:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2736:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2736:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2733:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2794:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2820:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2807:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2807:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2798:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2861:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "2839:21:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2839:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2839:28:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2876:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2886:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2876:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2689:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2700:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2712:6:85",
                "type": ""
              }
            ],
            "src": "2656:241:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2972:110:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3018:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3027:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3030:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3020:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3020:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3020:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2993:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3002:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2989:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2989:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3014:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2985:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2985:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "2982:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3043:33:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3066:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3053:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3053:23:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3043:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2938:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2949:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2961:6:85",
                "type": ""
              }
            ],
            "src": "2902:180:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3174:228:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3220:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3229:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3232:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3222:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3222:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3222:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3195:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3204:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3191:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3191:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3216:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3187:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3187:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "3184:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3245:36:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3271:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3258:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3258:23:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3249:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3315:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3290:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3290:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3290:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3330:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3340:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3330:6:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3354:42:85",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3381:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3392:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3377:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3377:18:85"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3364:12:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3364:32:85"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3354:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3132:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3143:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3155:6:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3163:6:85",
                "type": ""
              }
            ],
            "src": "3087:315:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3502:92:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3512:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3524:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3535:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3520:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3520:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3512:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3554:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3579:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3572:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3572:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3565:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3565:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3547:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3547:41:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3471:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3482:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3493:4:85",
                "type": ""
              }
            ],
            "src": "3407:187:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3773:236:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3790:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3801:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3783:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3783:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3783:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3824:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3835:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3820:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3820:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3840:2:85",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3813:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3813:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3813:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3863:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3874:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3859:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3859:18:85"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3879:34:85",
                        "type": "",
                        "value": "Only the policy contract may cal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3852:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3852:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3852:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3934:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3945:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3930:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3930:18:85"
                      },
                      {
                        "hexValue": "6c2074686973206d6574686f642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3950:16:85",
                        "type": "",
                        "value": "l this method."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3923:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3923:44:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3923:44:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3976:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3988:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3999:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3984:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3984:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3976:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3750:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3764:4:85",
                "type": ""
              }
            ],
            "src": "3599:410:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4188:251:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4205:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4216:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4198:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4198:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4198:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4239:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4250:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4235:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4235:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4255:2:85",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4228:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4228:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4228:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4278:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4289:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4274:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4274:18:85"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4294:34:85",
                        "type": "",
                        "value": "Only the policy or interface con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4267:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4267:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4267:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4349:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4360:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4345:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4345:18:85"
                      },
                      {
                        "hexValue": "7472616374206d61792063616c6c20746869732066756e6374696f6e2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4365:31:85",
                        "type": "",
                        "value": "tract may call this function."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4338:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4338:59:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4338:59:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4406:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4418:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4429:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4414:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4414:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4406:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c08a7732a8ea3cb127f93b70513851c8bc500317c87cd62569cce952d70845e4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4165:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4179:4:85",
                "type": ""
              }
            ],
            "src": "4014:425:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4636:79:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4653:3:85"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4658:22:85",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4646:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4646:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4646:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4690:19:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4701:3:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4706:2:85",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4697:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4697:12:85"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4690:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4620:3:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4628:3:85",
                "type": ""
              }
            ],
            "src": "4444:271:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4894:241:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4911:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4922:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4904:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4904:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4904:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4945:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4956:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4941:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4941:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4961:2:85",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4934:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4934:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4934:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4984:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4995:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4980:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4980:18:85"
                      },
                      {
                        "hexValue": "566f7465732063616e206f6e6c79206265207265636f7264656420647572696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5000:34:85",
                        "type": "",
                        "value": "Votes can only be recorded durin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4973:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4973:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4973:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5055:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5066:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5051:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5051:18:85"
                      },
                      {
                        "hexValue": "672074686520766f74696e6720706572696f64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5071:21:85",
                        "type": "",
                        "value": "g the voting period"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5044:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5044:49:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5044:49:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5102:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5114:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5125:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5110:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5110:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5102:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4871:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4885:4:85",
                "type": ""
              }
            ],
            "src": "4720:415:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5314:298:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5331:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5342:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5324:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5324:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5324:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5365:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5376:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5361:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5361:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5381:2:85",
                        "type": "",
                        "value": "68"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5354:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5354:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5354:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5404:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5415:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5400:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5400:18:85"
                      },
                      {
                        "hexValue": "566f74657273206d75737420686176652068656c6420746f6b656e7320626566",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5420:34:85",
                        "type": "",
                        "value": "Voters must have held tokens bef"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5393:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5393:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5393:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5475:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5486:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5471:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5471:18:85"
                      },
                      {
                        "hexValue": "6f72652074686520626c6f636b206e756d626572206f66207468652070726f70",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5491:34:85",
                        "type": "",
                        "value": "ore the block number of the prop"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5464:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5464:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5464:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5546:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5557:3:85",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5542:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5542:19:85"
                      },
                      {
                        "hexValue": "6f73616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5563:6:85",
                        "type": "",
                        "value": "osal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5535:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5535:35:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5535:35:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5579:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5591:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5602:3:85",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5587:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5587:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5579:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3eb068da322530d536b94b5204574493dba80fcd9b91301e05c74f3a3e6af85c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5291:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5305:4:85",
                "type": ""
              }
            ],
            "src": "5140:472:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5649:95:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5666:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5673:3:85",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5678:10:85",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5669:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5669:20:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5659:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5659:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5659:31:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5706:1:85",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5709:4:85",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5699:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5699:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5699:15:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5730:1:85",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5733:4:85",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5723:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5723:15:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5723:15:85"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5617:127:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5798:76:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5820:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5822:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5822:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5822:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5814:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5817:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5811:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5811:8:85"
                  },
                  "nodeType": "YulIf",
                  "src": "5808:34:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5851:17:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5863:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5866:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5859:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5859:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5851:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5780:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5783:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5789:4:85",
                "type": ""
              }
            ],
            "src": "5749:125:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6053:225:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6070:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6081:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6063:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6063:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6063:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6104:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6115:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6100:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6100:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6120:2:85",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6093:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6093:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6093:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6143:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6154:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6139:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6139:18:85"
                      },
                      {
                        "hexValue": "596f757220766f74652068617320616c7265616479206265656e207265636f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6159:34:85",
                        "type": "",
                        "value": "Your vote has already been recor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6132:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6132:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6132:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6214:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6225:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6210:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6210:18:85"
                      },
                      {
                        "hexValue": "646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6230:5:85",
                        "type": "",
                        "value": "ded"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6203:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6203:33:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6203:33:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6245:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6257:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6268:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6253:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6253:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6245:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6030:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6044:4:85",
                "type": ""
              }
            ],
            "src": "5879:399:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6406:135:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6416:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6428:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6439:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6424:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6424:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6416:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6458:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6483:6:85"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6476:6:85"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6476:14:85"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6469:6:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6469:22:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6451:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6451:41:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6451:41:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6512:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6523:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6508:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6508:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6528:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6501:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6501:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6501:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6367:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6378:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6386:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6397:4:85",
                "type": ""
              }
            ],
            "src": "6283:258:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6594:80:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6621:22:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6623:16:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6623:18:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6623:18:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6610:1:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6617:1:85"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6613:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6613:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6607:2:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6607:13:85"
                  },
                  "nodeType": "YulIf",
                  "src": "6604:39:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6652:16:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6663:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6666:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6659:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6659:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6652:3:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6577:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6580:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6586:3:85",
                "type": ""
              }
            ],
            "src": "6546:128:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6760:103:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6806:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6815:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6818:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6808:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6808:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6808:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6781:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6790:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6777:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6777:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6802:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6773:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6773:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "6770:52:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6831:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6847:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6841:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6841:16:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6831:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6726:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6737:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6749:6:85",
                "type": ""
              }
            ],
            "src": "6679:184:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6997:119:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7007:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7019:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7030:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7015:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7015:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7007:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7049:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7060:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7042:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7042:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7042:25:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7087:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7098:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7083:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7083:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7103:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7076:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7076:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7076:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6958:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6969:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6977:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6988:4:85",
                "type": ""
              }
            ],
            "src": "6868:248:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7250:168:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7260:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7272:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7283:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7268:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7268:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7260:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7302:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7317:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7325:42:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7313:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7313:55:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7295:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7295:74:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7295:74:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7389:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7400:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7385:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7385:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7405:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7378:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7378:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7378:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7211:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7222:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7230:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7241:4:85",
                "type": ""
              }
            ],
            "src": "7121:297:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7469:171:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7500:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7521:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7528:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7533:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7524:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7524:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7514:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7514:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7514:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7565:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7568:4:85",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7558:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7558:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7558:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7593:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7596:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7586:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7586:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7586:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7489:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7482:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:9:85"
                  },
                  "nodeType": "YulIf",
                  "src": "7479:132:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7620:14:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7629:1:85"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7632:1:85"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7625:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7625:9:85"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7620:1:85"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7454:1:85",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7457:1:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7463:1:85",
                "type": ""
              }
            ],
            "src": "7423:217:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7819:234:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7836:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7847:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7829:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7829:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7829:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7870:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7881:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7866:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7866:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7886:2:85",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7859:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7859:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7859:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7909:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7920:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7905:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7905:18:85"
                      },
                      {
                        "hexValue": "4d616a6f7269747920737570706f727420726571756972656420666f72206561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7925:34:85",
                        "type": "",
                        "value": "Majority support required for ea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7898:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7898:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7898:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7980:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7991:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7976:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7976:18:85"
                      },
                      {
                        "hexValue": "726c7920656e616374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7996:14:85",
                        "type": "",
                        "value": "rly enaction"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7969:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7969:42:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7969:42:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8020:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8032:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8043:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8028:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8028:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8020:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7796:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7810:4:85",
                "type": ""
              }
            ],
            "src": "7645:408:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8232:249:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8249:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8260:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8242:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8242:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8242:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8283:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8294:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8279:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8279:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8299:2:85",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8272:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8272:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8272:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8322:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8333:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8318:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8318:18:85"
                      },
                      {
                        "hexValue": "5468697320636f6e7472616374206e6f206c6f6e676572206861732061757468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8338:34:85",
                        "type": "",
                        "value": "This contract no longer has auth"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8311:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8311:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8311:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8393:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8404:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8389:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8389:18:85"
                      },
                      {
                        "hexValue": "6f72697a6174696f6e20746f20656e6163742074686520766f7465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8409:29:85",
                        "type": "",
                        "value": "orization to enact the vote"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8382:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8382:57:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8382:57:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8448:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8460:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8471:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8456:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8456:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8448:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8209:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8223:4:85",
                "type": ""
              }
            ],
            "src": "8058:423:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8597:229:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8607:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8619:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8630:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8615:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8615:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8607:4:85"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8675:111:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8696:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8703:3:85",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8708:10:85",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8699:3:85"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8699:20:85"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8689:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8689:31:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8689:31:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8740:1:85",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8743:4:85",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8733:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8733:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8733:15:85"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8768:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8771:4:85",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8761:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8761:15:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8761:15:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8655:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8663:1:85",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8652:2:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8652:13:85"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8645:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8645:21:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8642:144:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8802:9:85"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8813:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8795:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8795:25:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8795:25:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_Result_$11964__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8566:9:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8577:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8588:4:85",
                "type": ""
              }
            ],
            "src": "8486:340:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8909:167:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8955:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8964:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8967:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8957:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8957:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8957:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8930:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8939:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8926:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8926:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8951:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8922:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8922:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "8919:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8980:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8999:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8993:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8993:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8984:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9040:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "9018:21:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9018:28:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9018:28:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9055:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9065:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9055:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8875:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8886:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8898:6:85",
                "type": ""
              }
            ],
            "src": "8831:245:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9255:231:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9272:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9283:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9265:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9265:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9265:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9306:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9317:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9302:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9302:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9322:2:85",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9295:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9295:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9295:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9345:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9356:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9341:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9341:18:85"
                      },
                      {
                        "hexValue": "5468697320696e7374616e63652068617320616c7265616479206265656e2063",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9361:34:85",
                        "type": "",
                        "value": "This instance has already been c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9334:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9334:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9334:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9416:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9427:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9412:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9412:18:85"
                      },
                      {
                        "hexValue": "6f6e66696775726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9432:11:85",
                        "type": "",
                        "value": "onfigured"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9405:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9405:39:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9405:39:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9453:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9465:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9476:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9461:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9461:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9453:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9232:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9246:4:85",
                "type": ""
              }
            ],
            "src": "9081:405:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9665:230:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9682:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9693:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9675:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9675:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9675:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9716:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9727:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9712:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9712:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9732:2:85",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9705:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9705:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9705:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9755:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9766:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9751:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9751:18:85"
                      },
                      {
                        "hexValue": "43616e206f6e6c792062652063616c6c656420647572696e6720696e69746961",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9771:34:85",
                        "type": "",
                        "value": "Can only be called during initia"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9744:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9744:62:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9744:62:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9826:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9837:2:85",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9822:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9822:18:85"
                      },
                      {
                        "hexValue": "6c697a6174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9842:10:85",
                        "type": "",
                        "value": "lization"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9815:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9815:38:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9815:38:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9862:27:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9874:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9885:3:85",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9870:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9870:19:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9862:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9642:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9656:4:85",
                "type": ""
              }
            ],
            "src": "9491:404:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10029:168:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10039:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10051:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10062:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10047:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10047:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10039:4:85"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10081:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10096:6:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10104:42:85",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10092:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10092:55:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10074:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10074:74:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10074:74:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10168:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10179:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10164:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10164:18:85"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10184:6:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10157:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10157:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10157:34:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9990:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10001:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10009:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10020:4:85",
                "type": ""
              }
            ],
            "src": "9900:297:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10283:170:85",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10329:16:85",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10338:1:85",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10341:1:85",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10331:6:85"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10331:12:85"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10331:12:85"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10304:7:85"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10313:9:85"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10300:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10300:23:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10325:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10296:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10296:32:85"
                  },
                  "nodeType": "YulIf",
                  "src": "10293:52:85"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10354:29:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10373:9:85"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10367:5:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10367:16:85"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10358:5:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10417:5:85"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "10392:24:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10392:31:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10392:31:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10432:15:85",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10442:5:85"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10432:6:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10249:9:85",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10260:7:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10272:6:85",
                "type": ""
              }
            ],
            "src": "10202:251:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10587:198:85",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10597:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10609:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10620:2:85",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10605:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10605:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10597:4:85"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10632:52:85",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10642:42:85",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "10636:2:85",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10700:9:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10715:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10723:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10711:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10711:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10693:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10693:34:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10693:34:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10747:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10758:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10743:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10743:18:85"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "10767:6:85"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "10775:2:85"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10763:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10763:15:85"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10736:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10736:43:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10736:43:85"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10548:9:85",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10559:6:85",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10567:6:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10578:4:85",
                "type": ""
              }
            ],
            "src": "10458:327:85"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10964:181:85",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10981:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10992:2:85",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10974:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10974:21:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10974:21:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11015:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11026:2:85",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11011:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11011:18:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11031:2:85",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11004:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11004:30:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11004:30:85"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11054:9:85"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11065:2:85",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11050:3:85"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11050:18:85"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11070:33:85",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11043:6:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11043:61:85"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11043:61:85"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11113:26:85",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11125:9:85"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11136:2:85",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11121:3:85"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11121:18:85"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11113:4:85"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10941:9:85",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10955:4:85",
                "type": ""
              }
            ],
            "src": "10790:355:85"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Only the policy contract may cal\")\n        mstore(add(headStart, 96), \"l this method.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c08a7732a8ea3cb127f93b70513851c8bc500317c87cd62569cce952d70845e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"Only the policy or interface con\")\n        mstore(add(headStart, 96), \"tract may call this function.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"Votes can only be recorded durin\")\n        mstore(add(headStart, 96), \"g the voting period\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3eb068da322530d536b94b5204574493dba80fcd9b91301e05c74f3a3e6af85c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 68)\n        mstore(add(headStart, 64), \"Voters must have held tokens bef\")\n        mstore(add(headStart, 96), \"ore the block number of the prop\")\n        mstore(add(headStart, 128), \"osal\")\n        tail := add(headStart, 160)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Your vote has already been recor\")\n        mstore(add(headStart, 96), \"ded\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Majority support required for ea\")\n        mstore(add(headStart, 96), \"rly enaction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"This contract no longer has auth\")\n        mstore(add(headStart, 96), \"orization to enact the vote\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_enum$_Result_$11964__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"This instance has already been c\")\n        mstore(add(headStart, 96), \"onfigured\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Can only be called during initia\")\n        mstore(add(headStart, 96), \"lization\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 85,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "359:5430:46:-:0;;;1731:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1772:7;388::53;2351::56;694:47:60;;;;;;523:29:85;511:42;;578:2;569:12;;309:278;694:47:60;;;;;;;;;;;;;684:58;;;;;;655:105;;-1:-1:-1;;;;;;;;;;;616:144:60;595:224;;;;-1:-1:-1;;;595:224:60;;794:2:85;595:224:60;;;776:21:85;833:2;813:18;;;806:30;872:34;852:18;;;845:62;-1:-1:-1;;;923:18:85;;;916:31;964:19;;595:224:60;;;;;;;;;829:32;855:4;829:17;:32::i;:::-;997:6:55;:16;;-1:-1:-1;;;;;;997:16:55;-1:-1:-1;;;;;997:16:55;;;;;;2370:50:56::1;::::0;-1:-1:-1;;;2370:50:56;;2405:4:::1;2370:50;::::0;::::1;1206:34:85::0;1276:15;;;1256:18;;;1249:43;294:42:54::1;::::0;2370:26:56::1;::::0;1141:18:85;;2370:50:56::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2314:113:::0;346:53:53;1731:52:46;359:5430;;1843:246:60;-1:-1:-1;;;;;1912:25:60;;:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;1912:16;-1:-1:-1;;;;;1912:25:60;;;1904:69;;;;-1:-1:-1;;;1904:69:60;;1505:2:85;1904:69:60;;;1487:21:85;1544:2;1524:18;;;1517:30;1583:33;1563:18;;;1556:61;1634:18;;1904:69:60;1303:355:85;1904:69:60;-1:-1:-1;;;;;;;;;;;2052:21:60;1843:246::o;14:290:85:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:85;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:85:o;1303:355::-;359:5430:46;;;;;;",
  "deployedSourceMap": "359:5430:46:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;688:21:55;;;;;-1:-1:-1;;;;;688:21:55;;;;;;-1:-1:-1;;;;;178:55:85;;;160:74;;148:2;133:18;688:21:55;;;;;;;;2717:1279;;;;;;:::i;:::-;;:::i;:::-;;4258:189:56;;;:::i;2003:108::-;;2045:66;2003:108;;;;;1743:25:85;;;1731:2;1716:18;2003:108:56;1597:177:85;1689:123:56;;1746:66;1689:123;;903:118;;955:66;903:118;;2563:352;;;;;;:::i;:::-;;:::i;514:40:46:-;;;;;;:::i;:::-;;;;;;;;;;;;;;863:23;;;;;;1060:50;;1101:9;1060:50;;3511:111:56;;;;;;:::i;:::-;;:::i;1221:120::-;;1275:66;1221:120;;963:45:46;;999:9;963:45;;2141:1085;;;;;;:::i;:::-;;:::i;405:372:53:-;;;;;;:::i;:::-;;:::i;783:376::-;;;;;;:::i;:::-;;:::i;1649:26:46:-;;;;;;1616:179:60;-1:-1:-1;;;;;;;;;;;1766:13:60;1616:179;;4493:1133:46;;;:::i;751:111:56:-;;796:66;751:111;;460:110;;504:66;460:110;;451:23:46;;;;;-1:-1:-1;;;;;451:23:46;;;3838:241;;;;;;:::i;:::-;;:::i;1201:23::-;;;;;;746:25;;;;;;602:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3572:14:85;;3565:22;3547:41;;3535:2;3520:18;602:39:46;3407:187:85;1380:116:56;;1430:66;1380:116;;3384:108:46;;;;;;:::i;:::-;;:::i;1061:117:56:-;;1112:66;1061:117;;1853:118;;1905:66;1853:118;;601:107;;642:66;601:107;;2149:114;;2197:66;2149:114;;1531:112;;1577:66;1531:112;;2717:1279:55;856:6;;-1:-1:-1;;;;;856:6:55;842:10;:20;821:113;;;;-1:-1:-1;;;821:113:55;;3801:2:85;821:113:55;;;3783:21:85;3840:2;3820:18;;;3813:30;3879:34;3859:18;;;3852:62;-1:-1:-1;;;3930:18:85;;;3923:44;3984:19;;821:113:55;;;;;;;;;3417:1:::1;3398::::0;3374:5:::1;3368:12;3345:4;3338:5;3334:16;3307:9;3284:5;3254:178;3609:16;3661:4;3658:1;3653:3:::0;3638:28:::1;3835:6:::0;3854:56;;::::1;;3961:4;3956:3;3949:17;3854:56;3891:4;3886:3;3879:17;3828:152;;;;2717:1279:::0;;:::o;4258:189:56:-;4299:7;4318:14;4335:26;4355:4;4335:11;:26::i;:::-;4371:46;;-1:-1:-1;;;4371:46:56;;4411:4;4371:46;;;160:74:85;4318:43:56;;-1:-1:-1;;;;;;4371:31:56;;;;;133:18:85;;4371:46:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4434:6:56;;4258:189;-1:-1:-1;;;;4258:189:56:o;2563:352::-;2692:7;2745:6;;-1:-1:-1;;;;;2736:15:56;;;2745:6;;2736:15;;:48;;-1:-1:-1;2764:20:56;;-1:-1:-1;;;;;2755:29:56;;;2764:20;;2755:29;2736:48;2715:156;;;;-1:-1:-1;;;2715:156:56;;4216:2:85;2715:156:56;;;4198:21:85;4255:2;4235:18;;;4228:30;4294:34;4274:18;;;4267:62;4365:31;4345:18;;;4338:59;4414:19;;2715:156:56;4014:425:85;2715:156:56;396:40:55;;4658:22:85;396:40:55;;;4646:35:85;4697:12;;396:40:55;;;;;;;;;;;;386:51;;;;;;2881:27:56;;2563:352;;;;:::o;3511:111::-;856:6:55;;-1:-1:-1;;;;;856:6:55;842:10;:20;821:113;;;;-1:-1:-1;;;821:113:55;;3801:2:85;821:113:55;;;3783:21:85;3840:2;3820:18;;;3813:30;3879:34;3859:18;;;3852:62;-1:-1:-1;;;3930:18:85;;;3923:44;3984:19;;821:113:55;3599:410:85;821:113:55;3587:20:56::1;:28:::0;;-1:-1:-1;;;;;;3587:28:56::1;-1:-1:-1::0;;;;;3587:28:56;;;::::1;::::0;;;::::1;::::0;;3511:111::o;2141:1085:46:-;2219:8;;504:15:84;2207:20:46;2186:118;;;;-1:-1:-1;;;2186:118:46;;4922:2:85;2186:118:46;;;4904:21:85;4961:2;4941:18;;;4934:30;5000:34;4980:18;;;4973:62;5071:21;5051:18;;;5044:49;5110:19;;2186:118:46;4720:415:85;2186:118:46;2315:15;2333:36;2345:10;2357:11;;2333;:36::i;:::-;2315:54;;2411:1;2401:7;:11;2380:126;;;;-1:-1:-1;;;2380:126:46;;5342:2:85;2380:126:46;;;5324:21:85;5381:2;5361:18;;;5354:30;;;5420:34;5400:18;;;5393:62;5491:34;5471:18;;;5464:62;-1:-1:-1;;;5542:19:85;;;5535:35;5587:19;;2380:126:46;5140:472:85;2380:126:46;2543:10;2517:17;2537;;;:5;:17;;;;;;;2586:19;2537:17;2586:7;:19;:::i;:::-;2564:41;-1:-1:-1;2620:14:46;;2616:314;;2683:10;2675:19;;;;:7;:19;;;;;;;;:28;;;;;;;2650:122;;;;-1:-1:-1;;;2650:122:46;;6081:2:85;2650:122:46;;;6063:21:85;6120:2;6100:18;;;6093:30;6159:34;6139:18;;;6132:62;-1:-1:-1;;;6210:18:85;;;6203:33;6253:19;;2650:122:46;5879:399:85;2650:122:46;2798:10;2790:19;;;;:7;:19;;;;;;;;2786:134;;;2851:9;2840:8;;:20;;;;:::i;:::-;2829:8;:31;2886:10;2900:5;2878:19;;;:7;:19;;;;;:27;;-1:-1:-1;;2878:27:46;;;2786:134;2940:22;2951:10;2940;:22::i;:::-;2977:42;;;6476:14:85;;6469:22;6451:41;;6523:2;6508:18;;6501:34;;;2992:10:46;;2977:42;;6424:18:85;2977:42:46;;;;;;;3034:5;3030:105;;;3077:7;3066:8;;:18;;;;:::i;:::-;3055:8;:29;3106:10;3098:19;;;;:7;:19;;;;;:26;;-1:-1:-1;;3098:26:46;3120:4;3098:26;;;3030:105;3150:10;3144:17;;;;:5;:17;;;;;:27;;;3195:10;;:24;;3208:11;;3195:24;:::i;:::-;3182:10;:37;-1:-1:-1;;;;2141:1085:46:o;405:372:53:-;498:7;521:13;537:10;:8;:10::i;:::-;-1:-1:-1;;;;;537:24:53;;562:12;537:38;;;;;;;;;;;;;1743:25:85;;1731:2;1716:18;;1597:177;537:38:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;521:54;;586:14;603:12;:10;:12::i;:::-;-1:-1:-1;;;;;603:28:53;;632:12;603:42;;;;;;;;;;;;;1743:25:85;;1731:2;1716:18;;1597:177;603:42:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;586:59;-1:-1:-1;659:10:53;;655:93;;701:6;:4;:6::i;:::-;:36;;-1:-1:-1;;;701:36:53;;;;;7042:25:85;;;7083:18;;;7076:34;;;-1:-1:-1;;;;;701:14:53;;;;;;;7015:18:85;;701:36:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;693:44;;:5;:44;:::i;:::-;685:52;;655:93;-1:-1:-1;765:5:53;405:372;-1:-1:-1;;405:372:53:o;783:376::-;885:7;908:14;925:10;:8;:10::i;:::-;:40;;-1:-1:-1;;;925:40:53;;-1:-1:-1;;;;;7313:55:85;;;925:40:53;;;7295:74:85;7385:18;;;7378:34;;;925:20:53;;;;;;;7268:18:85;;925:40:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;908:57;;976:10;989:12;:10;:12::i;:::-;:43;;-1:-1:-1;;;989:43:53;;-1:-1:-1;;;;;7313:55:85;;;989:43:53;;;7295:74:85;7385:18;;;7378:34;;;989:23:53;;;;;;;7268:18:85;;989:43:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;976:56;-1:-1:-1;1046:6:53;;1042:87;;1086:6;:4;:6::i;:::-;:32;;-1:-1:-1;;;1086:32:53;;;;;7042:25:85;;;7083:18;;;7076:34;;;-1:-1:-1;;;;;1086:14:53;;;;;;;7015:18:85;;1086:32:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1077:41;;:6;:41;:::i;:::-;1068:50;;1042:87;-1:-1:-1;1146:6:53;783:376;-1:-1:-1;;;783:376:53:o;4493:1133:46:-;4531:22;4569:1;4556:10;;:14;;;;:::i;:::-;4531:39;;4580:14;4597:29;4614:11;;4597:16;:29::i;:::-;4580:46;-1:-1:-1;504:15:84;4636:13:46;4710:10;4719:1;4580:46;4710:10;:::i;:::-;4698:8;;:22;4694:189;;1101:9;4769:8;;:25;;;;:::i;:::-;4761:5;:33;4736:136;;;;-1:-1:-1;;;4736:136:46;;7847:2:85;4736:136:46;;;7829:21:85;7886:2;7866:18;;;7859:30;7925:34;7905:18;;;7898:62;-1:-1:-1;;;7976:18:85;;;7969:42;8028:19;;4736:136:46;7645:408:85;4736:136:46;4952:4;4914:26;1430:66:56;4914:9:46;:26::i;:::-;-1:-1:-1;;;;;4914:43:46;;4893:149;;;;-1:-1:-1;;;4893:149:46;;8260:2:85;4893:149:46;;;8242:21:85;8299:2;8279:18;;;8272:30;8338:34;8318:18;;;8311:62;8409:29;8389:18;;;8382:57;8456:19;;4893:149:46;8058:423:85;4893:149:46;5057:19;5053:353;;-1:-1:-1;5127:13:46;5053:353;;;5173:14;5161:8;;:26;5157:249;;-1:-1:-1;5246:15:46;5157:249;;;5326:6;;5350:8;;5319:40;;-1:-1:-1;;;5319:40:46;;-1:-1:-1;;;;;5350:8:46;;;5319:40;;;160:74:85;5326:6:46;;;5319:30;;133:18:85;;5319:40:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5380:15;5373:22;;5157:249;5421:19;5435:4;5421:19;;;;;;:::i;:::-;;;;;;;;5457:6;;5450:42;;-1:-1:-1;;;5450:42:46;;1430:66:56;5450:42:46;;;1743:25:85;-1:-1:-1;;;;;5457:6:46;;;;5450:25;;1716:18:85;;5450:42:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5503:10;:8;:10::i;:::-;5552:6;;-1:-1:-1;;;;;5503:19:46;;;;;;5552:6;5574:10;:8;:10::i;:::-;:35;;-1:-1:-1;;;5574:35:46;;5603:4;5574:35;;;160:74:85;-1:-1:-1;;;;;5574:20:46;;;;;;;133:18:85;;5574:35:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5503:116;;;;;;;;;;-1:-1:-1;;;;;7313:55:85;;;5503:116:46;;;7295:74:85;7385:18;;;7378:34;7268:18;;5503:116:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3838:241::-;3903:8;;:13;3895:67;;;;-1:-1:-1;;;3895:67:46;;9283:2:85;3895:67:46;;;9265:21:85;9322:2;9302:18;;;9295:30;9361:34;9341:18;;;9334:62;-1:-1:-1;;;9412:18:85;;;9405:39;9461:19;;3895:67:46;9081:405:85;3895:67:46;3984:21;999:9;504:15:84;3984:21:46;:::i;:::-;3973:8;:32;4029:12;4015:11;:26;4052:8;:20;;-1:-1:-1;;;;;;4052:20:46;-1:-1:-1;;;;;4052:20:46;;;;;;;;;;3838:241::o;3384:108::-;479:1:60;451:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;451:16;-1:-1:-1;;;;;451:30:60;;430:117;;;;-1:-1:-1;;;430:117:60;;9693:2:85;430:117:60;;;9675:21:85;9732:2;9712:18;;;9705:30;9771:34;9751:18;;;9744:62;-1:-1:-1;;;9822:18:85;;;9815:38;9870:19;;430:117:60;9491:404:85;430:117:60;3462:23:46::1;3479:5;3462:16;:23::i;:::-;3384:108:::0;:::o;1343:577:23:-;1398:14;1424:19;1454:6;1446:15;;1424:37;;1513:4;1507:11;1578:66;1555:5;1531:127;1696:11;1689:4;1682:5;1678:16;1671:37;1779:66;1756:4;1749:5;1745:16;1721:138;1899:4;1892:5;1889:1;1882:22;1872:32;1343:577;-1:-1:-1;;;;1343:577:23:o;1165:89:53:-;1218:12;:10;:12::i;:::-;:29;;-1:-1:-1;;;1218:29:53;;-1:-1:-1;;;;;178:55:85;;;1218:29:53;;;160:74:85;1218:23:53;;;;;;;133:18:85;;1218:29:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1318:118;1361:15;1411:17;642:66:56;1411:9:53;:17::i;:::-;1388:41;;1318:118;:::o;1541:117::-;1586:10;1626:24;2197:66:56;1626:9:53;:24::i;1442:93::-;1481:4;1509:18;2045:66:56;5024:140;5079:7;5145:6;;5105:52;;-1:-1:-1;;;5105:52:56;;-1:-1:-1;;;;;5145:6:56;;;5105:52;;;7295:74:85;7385:18;;;7378:34;;;294:42:54;;5105:39:56;;7268:18:85;;5105:52:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5098:59;5024:140;-1:-1:-1;;5024:140:56:o;3247:211::-;479:1:60;451:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;451:16;-1:-1:-1;;;;;451:30:60;;430:117;;;;-1:-1:-1;;;430:117:60;;9693:2:85;430:117:60;;;9675:21:85;9732:2;9712:18;;;9705:30;9771:34;9751:18;;;9744:62;-1:-1:-1;;;9822:18:85;;;9815:38;9870:19;;430:117:60;9491:404:85;430:117:60;3369:23:56::1;3386:5;3369:16;:23::i;:::-;3444:6;::::0;3402:49:::1;::::0;-1:-1:-1;;;3402:49:56;;3437:4:::1;3402:49;::::0;::::1;10693:34:85::0;-1:-1:-1;;;;;3444:6:56;;::::1;10743:18:85::0;;;10736:43;294:42:54::1;::::0;3402:26:56::1;::::0;10605:18:85;;3402:49:56::1;10458:327:85::0;1963:194:55;479:1:60;451:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;451:16;-1:-1:-1;;;;;451:30:60;;430:117;;;;-1:-1:-1;;;430:117:60;;9693:2:85;430:117:60;;;9675:21:85;9732:2;9712:18;;;9705:30;9771:34;9751:18;;;9744:62;-1:-1:-1;;;9822:18:85;;;9815:38;9870:19;;430:117:60;9491:404:85;430:117:60;2085:23:55::1;2102:5;2085:16;:23::i;:::-;2135:5;-1:-1:-1::0;;;;;2127:21:55::1;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2118:6;:32:::0;;-1:-1:-1;;;;;;2118:32:55::1;-1:-1:-1::0;;;;;2118:32:55;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1963:194:55:o;1399:149:60:-;479:1;451:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;451:16;-1:-1:-1;;;;;451:30:60;;430:117;;;;-1:-1:-1;;;430:117:60;;9693:2:85;430:117:60;;;9675:21:85;9732:2;9712:18;;;9705:30;9771:34;9751:18;;;9744:62;-1:-1:-1;;;9822:18:85;;;9815:38;9870:19;;430:117:60;9491:404:85;430:117:60;1476:65:::1;1516:5;-1:-1:-1::0;;;;;1502:35:60::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1932:5:::0;-1:-1:-1;;;;;1912:25:60;:16;-1:-1:-1;;;;;;;;;;;1766:13:60;;1616:179;1912:16;-1:-1:-1;;;;;1912:25:60;;;1904:69;;;;-1:-1:-1;;;1904:69:60;;10992:2:85;1904:69:60;;;10974:21:85;11031:2;11011:18;;;11004:30;11070:33;11050:18;;;11043:61;11121:18;;1904:69:60;10790:355:85;1904:69:60;-1:-1:-1;;;;;;;;;;;2052:21:60;1843:246::o;245:154:85:-;-1:-1:-1;;;;;324:5:85;320:54;313:5;310:65;300:93;;389:1;386;379:12;404:127;465:10;460:3;456:20;453:1;446:31;496:4;493:1;486:15;520:4;517:1;510:15;536:1056;613:6;621;674:2;662:9;653:7;649:23;645:32;642:52;;;690:1;687;680:12;642:52;729:9;716:23;748:31;773:5;748:31;:::i;:::-;798:5;-1:-1:-1;854:2:85;839:18;;826:32;877:18;907:14;;;904:34;;;934:1;931;924:12;904:34;972:6;961:9;957:22;947:32;;1017:7;1010:4;1006:2;1002:13;998:27;988:55;;1039:1;1036;1029:12;988:55;1075:2;1062:16;1097:2;1093;1090:10;1087:36;;;1103:18;;:::i;:::-;1178:2;1172:9;1146:2;1232:13;;-1:-1:-1;;1228:22:85;;;1252:2;1224:31;1220:40;1208:53;;;1276:18;;;1296:22;;;1273:46;1270:72;;;1322:18;;:::i;:::-;1362:10;1358:2;1351:22;1397:2;1389:6;1382:18;1437:7;1432:2;1427;1423;1419:11;1415:20;1412:33;1409:53;;;1458:1;1455;1448:12;1409:53;1514:2;1509;1505;1501:11;1496:2;1488:6;1484:15;1471:46;1559:1;1554:2;1549;1541:6;1537:15;1533:24;1526:35;1580:6;1570:16;;;;;;;536:1056;;;;;:::o;1779:315::-;1847:6;1855;1908:2;1896:9;1887:7;1883:23;1879:32;1876:52;;;1924:1;1921;1914:12;1876:52;1960:9;1947:23;1937:33;;2020:2;2009:9;2005:18;1992:32;2033:31;2058:5;2033:31;:::i;:::-;2083:5;2073:15;;;1779:315;;;;;:::o;2099:247::-;2158:6;2211:2;2199:9;2190:7;2186:23;2182:32;2179:52;;;2227:1;2224;2217:12;2179:52;2266:9;2253:23;2285:31;2310:5;2285:31;:::i;:::-;2335:5;2099:247;-1:-1:-1;;;2099:247:85:o;2533:118::-;2619:5;2612:13;2605:21;2598:5;2595:32;2585:60;;2641:1;2638;2631:12;2656:241;2712:6;2765:2;2753:9;2744:7;2740:23;2736:32;2733:52;;;2781:1;2778;2771:12;2733:52;2820:9;2807:23;2839:28;2861:5;2839:28;:::i;2902:180::-;2961:6;3014:2;3002:9;2993:7;2989:23;2985:32;2982:52;;;3030:1;3027;3020:12;2982:52;-1:-1:-1;3053:23:85;;2902:180;-1:-1:-1;2902:180:85:o;3087:315::-;3155:6;3163;3216:2;3204:9;3195:7;3191:23;3187:32;3184:52;;;3232:1;3229;3222:12;3184:52;3271:9;3258:23;3290:31;3315:5;3290:31;:::i;:::-;3340:5;3392:2;3377:18;;;;3364:32;;-1:-1:-1;;;3087:315:85:o;5617:127::-;5678:10;5673:3;5669:20;5666:1;5659:31;5709:4;5706:1;5699:15;5733:4;5730:1;5723:15;5749:125;5789:4;5817:1;5814;5811:8;5808:34;;;5822:18;;:::i;:::-;-1:-1:-1;5859:9:85;;5749:125::o;6546:128::-;6586:3;6617:1;6613:6;6610:1;6607:13;6604:39;;;6623:18;;:::i;:::-;-1:-1:-1;6659:9:85;;6546:128::o;6679:184::-;6749:6;6802:2;6790:9;6781:7;6777:23;6773:32;6770:52;;;6818:1;6815;6808:12;6770:52;-1:-1:-1;6841:16:85;;6679:184;-1:-1:-1;6679:184:85:o;7423:217::-;7463:1;7489;7479:132;;7533:10;7528:3;7524:20;7521:1;7514:31;7568:4;7565:1;7558:15;7596:4;7593:1;7586:15;7479:132;-1:-1:-1;7625:9:85;;7423:217::o;8486:340::-;8630:2;8615:18;;8663:1;8652:13;;8642:144;;8708:10;8703:3;8699:20;8696:1;8689:31;8743:4;8740:1;8733:15;8771:4;8768:1;8761:15;8642:144;8795:25;;;8486:340;:::o;8831:245::-;8898:6;8951:2;8939:9;8930:7;8926:23;8922:32;8919:52;;;8967:1;8964;8957:12;8919:52;8999:9;8993:16;9018:28;9040:5;9018:28;:::i;10202:251::-;10272:6;10325:2;10313:9;10304:7;10300:23;10296:32;10293:52;;;10341:1;10338;10331:12;10293:52;10373:9;10367:16;10392:31;10417:5;10392:31;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"../policy/Policy.sol\";\nimport \"../policy/PolicedUtils.sol\";\nimport \"../utils/TimeUtils.sol\";\nimport \"./VotingPower.sol\";\n\n/** @title PolicyVotes\n * This implements the voting and implementation phases of the policy decision process.\n * Open stake based voting is used for the voting phase.\n */\ncontract PolicyVotes is VotingPower, TimeUtils {\n    /** The proposal being voted on */\n    address public proposal;\n\n    /** Per voter power.\n     */\n    mapping(address => uint256) public stake;\n\n    /** Per voter that votes yes\n     */\n    mapping(address => bool) public yesVote;\n\n    /** Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico).\n     */\n    uint256 public totalStake;\n\n    /** Total revealed positive stake in basic unit of 10^{-18} ECO (weico).\n     */\n    uint256 public yesStake;\n\n    /** The length of the commit portion of the voting phase.\n     */\n    uint256 public constant VOTE_TIME = 3 minutes;\n\n    /** The delay on a plurality win\n     */\n    uint256 public constant ENACTION_DELAY = 2 minutes;\n\n    /** The timestamp at which the commit portion of the voting phase ends.\n     */\n    uint256 public voteEnds;\n\n    /** Vote result */\n    enum Result {\n        Accepted,\n        Rejected,\n        Failed\n    }\n\n    /** Event emitted when vote outcome is known.\n     */\n    event VoteCompleted(Result result);\n\n    /** Event emitted when vote is revealed.\n     */\n    event PolicyVoteCast(address indexed voter, bool vote, uint256 amount);\n\n    /** The store block number to use when checking account balances for staking.\n     */\n    uint256 public blockNumber;\n\n    // solhint-disable-next-line no-empty-blocks\n    constructor(address _policy) VotingPower(_policy) {}\n\n    /** Submit your yes/no support\n     *\n     * Shows whether or not your voting power supports or does not support the vote\n     *\n     * Note Not voting is not equivalent to voting no. Percentage of voted support,\n     * not percentage of total voting power is used to determine the win.\n     *\n     * @param _vote The vote for the proposal\n     */\n    function vote(bool _vote) external {\n        require(\n            getTime() < voteEnds,\n            \"Votes can only be recorded during the voting period\"\n        );\n\n        uint256 _amount = votingPower(msg.sender, blockNumber);\n\n        require(\n            _amount > 0,\n            \"Voters must have held tokens before the block number of the proposal\"\n        );\n\n        uint256 _oldStake = stake[msg.sender];\n        uint256 _stakeDelta = _amount - _oldStake;\n\n        if (_oldStake != 0) {\n            require(\n                yesVote[msg.sender] != _vote,\n                \"Your vote has already been recorded\"\n            );\n            if (yesVote[msg.sender]) {\n                yesStake = yesStake - _oldStake;\n                yesVote[msg.sender] = false;\n            }\n        }\n\n        recordVote(msg.sender);\n        emit PolicyVoteCast(msg.sender, _vote, _amount);\n\n        if (_vote) {\n            yesStake = yesStake + _amount;\n            yesVote[msg.sender] = true;\n        }\n        stake[msg.sender] = _amount;\n\n        totalStake = totalStake + _stakeDelta;\n    }\n\n    /** Initialize a cloned/proxied copy of this contract.\n     *\n     * @param _self The original contract, to provide access to storage data.\n     */\n    function initialize(address _self) public override onlyConstruction {\n        super.initialize(_self);\n    }\n\n    /** Configure the proposals that are part of this voting cycle and start\n     * the lockup period.\n     *\n     * This also fixes the end times of each subsequent phase.\n     *\n     * This can only be called once, and should be called atomically with\n     * instantiation.\n     *\n     * @param _proposal The proposal to vote on.\n     */\n    function configure(address _proposal) external {\n        require(voteEnds == 0, \"This instance has already been configured\");\n\n        voteEnds = getTime() + VOTE_TIME;\n        blockNumber = block.number;\n\n        proposal = _proposal;\n    }\n\n    /** Execute the proposal if it has enough support.\n     *\n     * Can only be called after the voting and the delay phase,\n     * or after the point that more than 50% of the total voting power\n     * has voted in favor of the proposal.\n     *\n     * If the proposal has been accepted, it will be enacted by\n     * calling the `enacted` functions using `delegatecall`\n     * from the root policy.\n     */\n    function execute() external {\n        uint256 _requiredStake = totalStake / 2;\n        uint256 _total = totalVotingPower(blockNumber);\n        uint256 _time = getTime();\n\n        Result _res;\n\n        if (yesStake <= _total / 2) {\n            require(\n                _time > voteEnds + ENACTION_DELAY,\n                \"Majority support required for early enaction\"\n            );\n        }\n\n        require(\n            policyFor(ID_POLICY_VOTES) == address(this),\n            \"This contract no longer has authorization to enact the vote\"\n        );\n\n        if (_requiredStake == 0) {\n            // Nobody voted\n            _res = Result.Failed;\n        } else if (yesStake <= _requiredStake) {\n            // Not enough yes votes\n            _res = Result.Rejected;\n        } else {\n            // Vote passed\n            Policy(policy).internalCommand(proposal);\n            _res = Result.Accepted;\n        }\n\n        emit VoteCompleted(_res);\n        Policy(policy).removeSelf(ID_POLICY_VOTES);\n\n        getToken().transfer(\n            address(uint160(policy)),\n            getToken().balanceOf(address(this))\n        );\n    }\n\n    /** Get the associated ERC20 token address.\n     */\n    function getToken() private view returns (IERC20) {\n        return IERC20(policyFor(ID_ECO));\n    }\n}\n",
  "sourcePath": "/Users/dirksmac/dev/eco/currency/contracts/governance/PolicyVotes.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/PolicyVotes.sol",
    "exportedSymbols": {
      "CloneFactory": [
        4532
      ],
      "CurrencyTimer": [
        9936
      ],
      "ECOx": [
        5512
      ],
      "ECOxLockup": [
        10216
      ],
      "ERC1820Client": [
        13514
      ],
      "ERC20": [
        6069
      ],
      "EcoBalanceStore": [
        6115
      ],
      "ForwardTarget": [
        14262
      ],
      "IERC1820Implementer": [
        1920
      ],
      "IERC1820Registry": [
        2010
      ],
      "IERC20": [
        1403
      ],
      "IERC20Metadata": [
        1509
      ],
      "IEcoBalanceStoreGenerationBalance": [
        6127
      ],
      "IGeneration": [
        10224
      ],
      "ILockups": [
        10234
      ],
      "InflationRootHashProposal": [
        7857
      ],
      "Lockup": [
        11146
      ],
      "Policed": [
        13615
      ],
      "PolicedUtils": [
        13793
      ],
      "Policy": [
        13941
      ],
      "PolicyVotes": [
        12288
      ],
      "TimeUtils": [
        16912
      ],
      "VoteCheckpoints": [
        8607
      ],
      "VotingPower": [
        13456
      ]
    },
    "id": 12289,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11921,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:46"
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 11922,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12289,
        "sourceUnit": 13942,
        "src": "57:30:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 11923,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12289,
        "sourceUnit": 13794,
        "src": "88:36:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 11924,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12289,
        "sourceUnit": 16913,
        "src": "125:32:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/VotingPower.sol",
        "file": "./VotingPower.sol",
        "id": 11925,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12289,
        "sourceUnit": 13457,
        "src": "158:27:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11927,
              "name": "VotingPower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13456,
              "src": "383:11:46"
            },
            "id": 11928,
            "nodeType": "InheritanceSpecifier",
            "src": "383:11:46"
          },
          {
            "baseName": {
              "id": 11929,
              "name": "TimeUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16912,
              "src": "396:9:46"
            },
            "id": 11930,
            "nodeType": "InheritanceSpecifier",
            "src": "396:9:46"
          }
        ],
        "canonicalName": "PolicyVotes",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11926,
          "nodeType": "StructuredDocumentation",
          "src": "187:171:46",
          "text": "@title PolicyVotes\n This implements the voting and implementation phases of the policy decision process.\n Open stake based voting is used for the voting phase."
        },
        "fullyImplemented": true,
        "id": 12288,
        "linearizedBaseContracts": [
          12288,
          16912,
          13456,
          13793,
          13514,
          4532,
          13615,
          1920,
          14262
        ],
        "name": "PolicyVotes",
        "nameLocation": "368:11:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 11931,
              "nodeType": "StructuredDocumentation",
              "src": "412:34:46",
              "text": "The proposal being voted on "
            },
            "functionSelector": "753ec103",
            "id": 11933,
            "mutability": "mutable",
            "name": "proposal",
            "nameLocation": "466:8:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "451:23:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11932,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "451:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11934,
              "nodeType": "StructuredDocumentation",
              "src": "481:28:46",
              "text": "Per voter power."
            },
            "functionSelector": "26476204",
            "id": 11938,
            "mutability": "mutable",
            "name": "stake",
            "nameLocation": "549:5:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "514:40:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11937,
              "keyType": {
                "id": 11935,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "522:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "514:27:46",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11936,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "533:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11939,
              "nodeType": "StructuredDocumentation",
              "src": "561:36:46",
              "text": "Per voter that votes yes"
            },
            "functionSelector": "aabe1023",
            "id": 11943,
            "mutability": "mutable",
            "name": "yesVote",
            "nameLocation": "634:7:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "602:39:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 11942,
              "keyType": {
                "id": 11940,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "610:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "602:24:46",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11941,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "621:4:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11944,
              "nodeType": "StructuredDocumentation",
              "src": "648:93:46",
              "text": "Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico)."
            },
            "functionSelector": "8b0e9f3f",
            "id": 11946,
            "mutability": "mutable",
            "name": "totalStake",
            "nameLocation": "761:10:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "746:25:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11945,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "746:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11947,
              "nodeType": "StructuredDocumentation",
              "src": "778:80:46",
              "text": "Total revealed positive stake in basic unit of 10^{-18} ECO (weico)."
            },
            "functionSelector": "28ea6dda",
            "id": 11949,
            "mutability": "mutable",
            "name": "yesStake",
            "nameLocation": "878:8:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "863:23:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11948,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "863:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11950,
              "nodeType": "StructuredDocumentation",
              "src": "893:65:46",
              "text": "The length of the commit portion of the voting phase."
            },
            "functionSelector": "486a27db",
            "id": 11953,
            "mutability": "constant",
            "name": "VOTE_TIME",
            "nameLocation": "987:9:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "963:45:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11951,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "963:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 11952,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "999:9:46",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_180_by_1",
                "typeString": "int_const 180"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11954,
              "nodeType": "StructuredDocumentation",
              "src": "1015:40:46",
              "text": "The delay on a plurality win"
            },
            "functionSelector": "328a1da9",
            "id": 11957,
            "mutability": "constant",
            "name": "ENACTION_DELAY",
            "nameLocation": "1084:14:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "1060:50:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11955,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1060:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 11956,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1101:9:46",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_120_by_1",
                "typeString": "int_const 120"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11958,
              "nodeType": "StructuredDocumentation",
              "src": "1117:79:46",
              "text": "The timestamp at which the commit portion of the voting phase ends."
            },
            "functionSelector": "85defaf4",
            "id": 11960,
            "mutability": "mutable",
            "name": "voteEnds",
            "nameLocation": "1216:8:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "1201:23:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11959,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1201:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyVotes.Result",
            "id": 11964,
            "members": [
              {
                "id": 11961,
                "name": "Accepted",
                "nameLocation": "1276:8:46",
                "nodeType": "EnumValue",
                "src": "1276:8:46"
              },
              {
                "id": 11962,
                "name": "Rejected",
                "nameLocation": "1294:8:46",
                "nodeType": "EnumValue",
                "src": "1294:8:46"
              },
              {
                "id": 11963,
                "name": "Failed",
                "nameLocation": "1312:6:46",
                "nodeType": "EnumValue",
                "src": "1312:6:46"
              }
            ],
            "name": "Result",
            "nameLocation": "1259:6:46",
            "nodeType": "EnumDefinition",
            "src": "1254:70:46"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11965,
              "nodeType": "StructuredDocumentation",
              "src": "1330:53:46",
              "text": "Event emitted when vote outcome is known."
            },
            "id": 11970,
            "name": "VoteCompleted",
            "nameLocation": "1394:13:46",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11968,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1415:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11970,
                  "src": "1408:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Result_$11964",
                    "typeString": "enum PolicyVotes.Result"
                  },
                  "typeName": {
                    "id": 11967,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11966,
                      "name": "Result",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11964,
                      "src": "1408:6:46"
                    },
                    "referencedDeclaration": 11964,
                    "src": "1408:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Result_$11964",
                      "typeString": "enum PolicyVotes.Result"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1407:15:46"
            },
            "src": "1388:35:46"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11971,
              "nodeType": "StructuredDocumentation",
              "src": "1429:48:46",
              "text": "Event emitted when vote is revealed."
            },
            "id": 11979,
            "name": "PolicyVoteCast",
            "nameLocation": "1488:14:46",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11973,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1519:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11979,
                  "src": "1503:21:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11975,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vote",
                  "nameLocation": "1531:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11979,
                  "src": "1526:9:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11974,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11977,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1545:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11979,
                  "src": "1537:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:50:46"
            },
            "src": "1482:71:46"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11980,
              "nodeType": "StructuredDocumentation",
              "src": "1559:85:46",
              "text": "The store block number to use when checking account balances for staking."
            },
            "functionSelector": "57e871e7",
            "id": 11982,
            "mutability": "mutable",
            "name": "blockNumber",
            "nameLocation": "1664:11:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "1649:26:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11981,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1649:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11990,
              "nodeType": "Block",
              "src": "1781:2:46",
              "statements": []
            },
            "id": 11991,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11987,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11984,
                    "src": "1772:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11988,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11986,
                  "name": "VotingPower",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13456,
                  "src": "1760:11:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1760:20:46"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11984,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "1751:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11991,
                  "src": "1743:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:17:46"
            },
            "returnParameters": {
              "id": 11989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:46"
            },
            "scope": 12288,
            "src": "1731:52:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12108,
              "nodeType": "Block",
              "src": "2176:1050:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11998,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16911,
                            "src": "2207:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2207:9:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 12000,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11960,
                          "src": "2219:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2207:20:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465732063616e206f6e6c79206265207265636f7264656420647572696e672074686520766f74696e6720706572696f64",
                        "id": 12002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2241:53:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        },
                        "value": "Votes can only be recorded during the voting period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        }
                      ],
                      "id": 11997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2186:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2186:118:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12004,
                  "nodeType": "ExpressionStatement",
                  "src": "2186:118:46"
                },
                {
                  "assignments": [
                    12006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12006,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "2323:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12108,
                      "src": "2315:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12005,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2315:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12012,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12008,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2345:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2345:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12010,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11982,
                        "src": "2357:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12007,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13403,
                      "src": "2333:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 12011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:36:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2315:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12014,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12006,
                          "src": "2401:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 12015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2411:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2401:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657273206d75737420686176652068656c6420746f6b656e73206265666f72652074686520626c6f636b206e756d626572206f66207468652070726f706f73616c",
                        "id": 12017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2426:70:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3eb068da322530d536b94b5204574493dba80fcd9b91301e05c74f3a3e6af85c",
                          "typeString": "literal_string \"Voters must have held tokens before the block number of the proposal\""
                        },
                        "value": "Voters must have held tokens before the block number of the proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3eb068da322530d536b94b5204574493dba80fcd9b91301e05c74f3a3e6af85c",
                          "typeString": "literal_string \"Voters must have held tokens before the block number of the proposal\""
                        }
                      ],
                      "id": 12013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2380:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:126:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12019,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:126:46"
                },
                {
                  "assignments": [
                    12021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12021,
                      "mutability": "mutable",
                      "name": "_oldStake",
                      "nameLocation": "2525:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12108,
                      "src": "2517:17:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2517:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12026,
                  "initialValue": {
                    "baseExpression": {
                      "id": 12022,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11938,
                      "src": "2537:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 12025,
                    "indexExpression": {
                      "expression": {
                        "id": 12023,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2543:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2543:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2537:17:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2517:37:46"
                },
                {
                  "assignments": [
                    12028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12028,
                      "mutability": "mutable",
                      "name": "_stakeDelta",
                      "nameLocation": "2572:11:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12108,
                      "src": "2564:19:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12027,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2564:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12032,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12029,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12006,
                      "src": "2586:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 12030,
                      "name": "_oldStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12021,
                      "src": "2596:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2586:19:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2564:41:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12033,
                      "name": "_oldStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12021,
                      "src": "2620:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2633:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2620:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12066,
                  "nodeType": "IfStatement",
                  "src": "2616:314:46",
                  "trueBody": {
                    "id": 12065,
                    "nodeType": "Block",
                    "src": "2636:294:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 12042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 12037,
                                  "name": "yesVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11943,
                                  "src": "2675:7:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 12040,
                                "indexExpression": {
                                  "expression": {
                                    "id": 12038,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2683:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 12039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2683:10:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2675:19:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 12041,
                                "name": "_vote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11994,
                                "src": "2698:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2675:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f757220766f74652068617320616c7265616479206265656e207265636f72646564",
                              "id": 12043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2721:37:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0",
                                "typeString": "literal_string \"Your vote has already been recorded\""
                              },
                              "value": "Your vote has already been recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0",
                                "typeString": "literal_string \"Your vote has already been recorded\""
                              }
                            ],
                            "id": 12036,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2650:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2650:122:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12045,
                        "nodeType": "ExpressionStatement",
                        "src": "2650:122:46"
                      },
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 12046,
                            "name": "yesVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11943,
                            "src": "2790:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 12049,
                          "indexExpression": {
                            "expression": {
                              "id": 12047,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2798:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2798:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2790:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12064,
                        "nodeType": "IfStatement",
                        "src": "2786:134:46",
                        "trueBody": {
                          "id": 12063,
                          "nodeType": "Block",
                          "src": "2811:109:46",
                          "statements": [
                            {
                              "expression": {
                                "id": 12054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 12050,
                                  "name": "yesStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11949,
                                  "src": "2829:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 12053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 12051,
                                    "name": "yesStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11949,
                                    "src": "2840:8:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 12052,
                                    "name": "_oldStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12021,
                                    "src": "2851:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2840:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2829:31:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 12055,
                              "nodeType": "ExpressionStatement",
                              "src": "2829:31:46"
                            },
                            {
                              "expression": {
                                "id": 12061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 12056,
                                    "name": "yesVote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11943,
                                    "src": "2878:7:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 12059,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 12057,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2886:3:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 12058,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2886:10:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2878:19:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 12060,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2900:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "2878:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12062,
                              "nodeType": "ExpressionStatement",
                              "src": "2878:27:46"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12068,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2951:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2951:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12067,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13415,
                      "src": "2940:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12071,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:22:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12073,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2992:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2992:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12075,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11994,
                        "src": "3004:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 12076,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12006,
                        "src": "3011:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12072,
                      "name": "PolicyVoteCast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11979,
                      "src": "2977:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bool,uint256)"
                      }
                    },
                    "id": 12077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:42:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12078,
                  "nodeType": "EmitStatement",
                  "src": "2972:47:46"
                },
                {
                  "condition": {
                    "id": 12079,
                    "name": "_vote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11994,
                    "src": "3034:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12094,
                  "nodeType": "IfStatement",
                  "src": "3030:105:46",
                  "trueBody": {
                    "id": 12093,
                    "nodeType": "Block",
                    "src": "3041:94:46",
                    "statements": [
                      {
                        "expression": {
                          "id": 12084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12080,
                            "name": "yesStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11949,
                            "src": "3055:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 12081,
                              "name": "yesStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11949,
                              "src": "3066:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 12082,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12006,
                              "src": "3077:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3066:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3055:29:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12085,
                        "nodeType": "ExpressionStatement",
                        "src": "3055:29:46"
                      },
                      {
                        "expression": {
                          "id": 12091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 12086,
                              "name": "yesVote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11943,
                              "src": "3098:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 12089,
                            "indexExpression": {
                              "expression": {
                                "id": 12087,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3106:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 12088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3106:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3098:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 12090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3120:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3098:26:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12092,
                        "nodeType": "ExpressionStatement",
                        "src": "3098:26:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 12100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12095,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11938,
                        "src": "3144:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12098,
                      "indexExpression": {
                        "expression": {
                          "id": 12096,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3150:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3150:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3144:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12099,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12006,
                      "src": "3164:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3144:27:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12101,
                  "nodeType": "ExpressionStatement",
                  "src": "3144:27:46"
                },
                {
                  "expression": {
                    "id": 12106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12102,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11946,
                      "src": "3182:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12103,
                        "name": "totalStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11946,
                        "src": "3195:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 12104,
                        "name": "_stakeDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12028,
                        "src": "3208:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3195:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3182:37:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12107,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:37:46"
                }
              ]
            },
            "documentation": {
              "id": 11992,
              "nodeType": "StructuredDocumentation",
              "src": "1789:347:46",
              "text": "Submit your yes/no support\n Shows whether or not your voting power supports or does not support the vote\n Note Not voting is not equivalent to voting no. Percentage of voted support,\n not percentage of total voting power is used to determine the win.\n @param _vote The vote for the proposal"
            },
            "functionSelector": "4b9f5c98",
            "id": 12109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2150:4:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11994,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "2160:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12109,
                  "src": "2155:10:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11993,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2154:12:46"
            },
            "returnParameters": {
              "id": 11996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2176:0:46"
            },
            "scope": 12288,
            "src": "2141:1085:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13736
            ],
            "body": {
              "id": 12124,
              "nodeType": "Block",
              "src": "3452:40:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12121,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12112,
                        "src": "3479:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12118,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3462:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyVotes_$12288_$",
                          "typeString": "type(contract super PolicyVotes)"
                        }
                      },
                      "id": 12120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13736,
                      "src": "3462:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:23:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12123,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:23:46"
                }
              ]
            },
            "documentation": {
              "id": 12110,
              "nodeType": "StructuredDocumentation",
              "src": "3232:147:46",
              "text": "Initialize a cloned/proxied copy of this contract.\n @param _self The original contract, to provide access to storage data."
            },
            "functionSelector": "c4d66de8",
            "id": 12125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12115,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14183,
                  "src": "3435:16:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "3435:16:46"
              }
            ],
            "name": "initialize",
            "nameLocation": "3393:10:46",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12114,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3426:8:46"
            },
            "parameters": {
              "id": 12113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12112,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "3412:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12125,
                  "src": "3404:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3403:15:46"
            },
            "returnParameters": {
              "id": 12117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3452:0:46"
            },
            "scope": 12288,
            "src": "3384:108:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12154,
              "nodeType": "Block",
              "src": "3885:194:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12132,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11960,
                          "src": "3903:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 12133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3915:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3903:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7374616e63652068617320616c7265616479206265656e20636f6e66696775726564",
                        "id": 12135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3918:43:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a",
                          "typeString": "literal_string \"This instance has already been configured\""
                        },
                        "value": "This instance has already been configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a",
                          "typeString": "literal_string \"This instance has already been configured\""
                        }
                      ],
                      "id": 12131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3895:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:67:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12137,
                  "nodeType": "ExpressionStatement",
                  "src": "3895:67:46"
                },
                {
                  "expression": {
                    "id": 12143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12138,
                      "name": "voteEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11960,
                      "src": "3973:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12139,
                          "name": "getTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16911,
                          "src": "3984:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 12140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3984:9:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 12141,
                        "name": "VOTE_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11953,
                        "src": "3996:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3984:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3973:32:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12144,
                  "nodeType": "ExpressionStatement",
                  "src": "3973:32:46"
                },
                {
                  "expression": {
                    "id": 12148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12145,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11982,
                      "src": "4015:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 12146,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4029:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 12147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4029:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4015:26:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12149,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:26:46"
                },
                {
                  "expression": {
                    "id": 12152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12150,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "4052:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12151,
                      "name": "_proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12128,
                      "src": "4063:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4052:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12153,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:20:46"
                }
              ]
            },
            "documentation": {
              "id": 12126,
              "nodeType": "StructuredDocumentation",
              "src": "3498:335:46",
              "text": "Configure the proposals that are part of this voting cycle and start\n the lockup period.\n This also fixes the end times of each subsequent phase.\n This can only be called once, and should be called atomically with\n instantiation.\n @param _proposal The proposal to vote on."
            },
            "functionSelector": "75cb2672",
            "id": 12155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configure",
            "nameLocation": "3847:9:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12128,
                  "mutability": "mutable",
                  "name": "_proposal",
                  "nameLocation": "3865:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12155,
                  "src": "3857:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3857:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3856:19:46"
            },
            "returnParameters": {
              "id": 12130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3885:0:46"
            },
            "scope": 12288,
            "src": "3838:241:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12272,
              "nodeType": "Block",
              "src": "4521:1105:46",
              "statements": [
                {
                  "assignments": [
                    12160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12160,
                      "mutability": "mutable",
                      "name": "_requiredStake",
                      "nameLocation": "4539:14:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12272,
                      "src": "4531:22:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4531:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12164,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12161,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11946,
                      "src": "4556:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 12162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4569:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "4556:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4531:39:46"
                },
                {
                  "assignments": [
                    12166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12166,
                      "mutability": "mutable",
                      "name": "_total",
                      "nameLocation": "4588:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12272,
                      "src": "4580:14:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4580:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12170,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12168,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11982,
                        "src": "4614:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12167,
                      "name": "totalVotingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13357,
                      "src": "4597:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 12169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4597:29:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4580:46:46"
                },
                {
                  "assignments": [
                    12172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12172,
                      "mutability": "mutable",
                      "name": "_time",
                      "nameLocation": "4644:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12272,
                      "src": "4636:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4636:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12175,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12173,
                      "name": "getTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16911,
                      "src": "4652:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 12174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4652:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4636:25:46"
                },
                {
                  "assignments": [
                    12178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12178,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "4679:4:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12272,
                      "src": "4672:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Result_$11964",
                        "typeString": "enum PolicyVotes.Result"
                      },
                      "typeName": {
                        "id": 12177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12176,
                          "name": "Result",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11964,
                          "src": "4672:6:46"
                        },
                        "referencedDeclaration": 11964,
                        "src": "4672:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$11964",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12179,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4672:11:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12180,
                      "name": "yesStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11949,
                      "src": "4698:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12181,
                        "name": "_total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12166,
                        "src": "4710:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 12182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4719:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "4710:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4698:22:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12195,
                  "nodeType": "IfStatement",
                  "src": "4694:189:46",
                  "trueBody": {
                    "id": 12194,
                    "nodeType": "Block",
                    "src": "4722:161:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 12186,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12172,
                                "src": "4761:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 12189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12187,
                                  "name": "voteEnds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11960,
                                  "src": "4769:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 12188,
                                  "name": "ENACTION_DELAY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11957,
                                  "src": "4780:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4769:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4761:33:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d616a6f7269747920737570706f727420726571756972656420666f72206561726c7920656e616374696f6e",
                              "id": 12191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4812:46:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4",
                                "typeString": "literal_string \"Majority support required for early enaction\""
                              },
                              "value": "Majority support required for early enaction"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4",
                                "typeString": "literal_string \"Majority support required for early enaction\""
                              }
                            ],
                            "id": 12185,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4736:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4736:136:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12193,
                        "nodeType": "ExpressionStatement",
                        "src": "4736:136:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 12198,
                              "name": "ID_POLICY_VOTES",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13649,
                              "src": "4924:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 12197,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13792,
                            "src": "4914:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 12199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4914:26:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 12202,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4952:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyVotes_$12288",
                                "typeString": "contract PolicyVotes"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyVotes_$12288",
                                "typeString": "contract PolicyVotes"
                              }
                            ],
                            "id": 12201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4944:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4944:7:46",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4944:13:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4914:43:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e7472616374206e6f206c6f6e6765722068617320617574686f72697a6174696f6e20746f20656e6163742074686520766f7465",
                        "id": 12205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4971:61:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b",
                          "typeString": "literal_string \"This contract no longer has authorization to enact the vote\""
                        },
                        "value": "This contract no longer has authorization to enact the vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b",
                          "typeString": "literal_string \"This contract no longer has authorization to enact the vote\""
                        }
                      ],
                      "id": 12196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4893:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4893:149:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12207,
                  "nodeType": "ExpressionStatement",
                  "src": "4893:149:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12208,
                      "name": "_requiredStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12160,
                      "src": "5057:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5075:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5057:19:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12217,
                        "name": "yesStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11949,
                        "src": "5161:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 12218,
                        "name": "_requiredStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12160,
                        "src": "5173:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5161:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 12238,
                      "nodeType": "Block",
                      "src": "5278:128:46",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 12230,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11933,
                                "src": "5350:8:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 12227,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13534,
                                    "src": "5326:6:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 12226,
                                  "name": "Policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13941,
                                  "src": "5319:6:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Policy_$13941_$",
                                    "typeString": "type(contract Policy)"
                                  }
                                },
                                "id": 12228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5319:14:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Policy_$13941",
                                  "typeString": "contract Policy"
                                }
                              },
                              "id": 12229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "internalCommand",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13921,
                              "src": "5319:30:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 12231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5319:40:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 12232,
                          "nodeType": "ExpressionStatement",
                          "src": "5319:40:46"
                        },
                        {
                          "expression": {
                            "id": 12236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 12233,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12178,
                              "src": "5373:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$11964",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 12234,
                                "name": "Result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11964,
                                "src": "5380:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Result_$11964_$",
                                  "typeString": "type(enum PolicyVotes.Result)"
                                }
                              },
                              "id": 12235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Accepted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11961,
                              "src": "5380:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$11964",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "src": "5373:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$11964",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "id": 12237,
                          "nodeType": "ExpressionStatement",
                          "src": "5373:22:46"
                        }
                      ]
                    },
                    "id": 12239,
                    "nodeType": "IfStatement",
                    "src": "5157:249:46",
                    "trueBody": {
                      "id": 12225,
                      "nodeType": "Block",
                      "src": "5189:83:46",
                      "statements": [
                        {
                          "expression": {
                            "id": 12223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 12220,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12178,
                              "src": "5239:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$11964",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 12221,
                                "name": "Result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11964,
                                "src": "5246:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Result_$11964_$",
                                  "typeString": "type(enum PolicyVotes.Result)"
                                }
                              },
                              "id": 12222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Rejected",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11962,
                              "src": "5246:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$11964",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "src": "5239:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$11964",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "id": 12224,
                          "nodeType": "ExpressionStatement",
                          "src": "5239:22:46"
                        }
                      ]
                    }
                  },
                  "id": 12240,
                  "nodeType": "IfStatement",
                  "src": "5053:353:46",
                  "trueBody": {
                    "id": 12216,
                    "nodeType": "Block",
                    "src": "5078:73:46",
                    "statements": [
                      {
                        "expression": {
                          "id": 12214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12211,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12178,
                            "src": "5120:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$11964",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 12212,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11964,
                              "src": "5127:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$11964_$",
                                "typeString": "type(enum PolicyVotes.Result)"
                              }
                            },
                            "id": 12213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Failed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11963,
                            "src": "5127:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$11964",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "src": "5120:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Result_$11964",
                            "typeString": "enum PolicyVotes.Result"
                          }
                        },
                        "id": 12215,
                        "nodeType": "ExpressionStatement",
                        "src": "5120:20:46"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12242,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12178,
                        "src": "5435:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$11964",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Result_$11964",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      ],
                      "id": 12241,
                      "name": "VoteCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11970,
                      "src": "5421:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Result_$11964_$returns$__$",
                        "typeString": "function (enum PolicyVotes.Result)"
                      }
                    },
                    "id": 12243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5421:19:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12244,
                  "nodeType": "EmitStatement",
                  "src": "5416:24:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12249,
                        "name": "ID_POLICY_VOTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13649,
                        "src": "5476:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12246,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13534,
                            "src": "5457:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12245,
                          "name": "Policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13941,
                          "src": "5450:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Policy_$13941_$",
                            "typeString": "type(contract Policy)"
                          }
                        },
                        "id": 12247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5450:14:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$13941",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 12248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeSelf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13846,
                      "src": "5450:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 12250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5450:42:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12251,
                  "nodeType": "ExpressionStatement",
                  "src": "5450:42:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12259,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13534,
                                "src": "5552:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5544:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 12257,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "5544:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5544:15:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 12256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5536:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12255,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5536:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5536:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12267,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5603:4:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyVotes_$12288",
                                  "typeString": "contract PolicyVotes"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyVotes_$12288",
                                  "typeString": "contract PolicyVotes"
                                }
                              ],
                              "id": 12266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5595:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12265,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5595:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5595:13:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 12262,
                              "name": "getToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12287,
                              "src": "5574:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 12263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5574:10:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1403",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 12264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1360,
                          "src": "5574:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 12269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5574:35:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12252,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12287,
                          "src": "5503:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 12253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5503:10:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1403",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "5503:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 12270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5503:116:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12271,
                  "nodeType": "ExpressionStatement",
                  "src": "5503:116:46"
                }
              ]
            },
            "documentation": {
              "id": 12156,
              "nodeType": "StructuredDocumentation",
              "src": "4085:403:46",
              "text": "Execute the proposal if it has enough support.\n Can only be called after the voting and the delay phase,\n or after the point that more than 50% of the total voting power\n has voted in favor of the proposal.\n If the proposal has been accepted, it will be enacted by\n calling the `enacted` functions using `delegatecall`\n from the root policy."
            },
            "functionSelector": "61461954",
            "id": 12273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "4502:7:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4509:2:46"
            },
            "returnParameters": {
              "id": 12158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4521:0:46"
            },
            "scope": 12288,
            "src": "4493:1133:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12286,
              "nodeType": "Block",
              "src": "5738:49:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12282,
                            "name": "ID_ECO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13634,
                            "src": "5772:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 12281,
                          "name": "policyFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13792,
                          "src": "5762:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view returns (address)"
                          }
                        },
                        "id": 12283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5762:17:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12280,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "5755:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1403_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 12284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:25:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1403",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 12279,
                  "id": 12285,
                  "nodeType": "Return",
                  "src": "5748:32:46"
                }
              ]
            },
            "documentation": {
              "id": 12274,
              "nodeType": "StructuredDocumentation",
              "src": "5632:51:46",
              "text": "Get the associated ERC20 token address."
            },
            "id": 12287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "5697:8:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5705:2:46"
            },
            "returnParameters": {
              "id": 12279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12287,
                  "src": "5730:6:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1403",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12277,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12276,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1403,
                      "src": "5730:6:46"
                    },
                    "referencedDeclaration": 1403,
                    "src": "5730:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1403",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5729:8:46"
            },
            "scope": 12288,
            "src": "5688:99:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 12289,
        "src": "359:5430:46",
        "usedErrors": []
      }
    ],
    "src": "32:5758:46"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/governance/PolicyVotes.sol",
    "exportedSymbols": {
      "CloneFactory": [
        4532
      ],
      "CurrencyTimer": [
        9936
      ],
      "ECOx": [
        5512
      ],
      "ECOxLockup": [
        10216
      ],
      "ERC1820Client": [
        13514
      ],
      "ERC20": [
        6069
      ],
      "EcoBalanceStore": [
        6115
      ],
      "ForwardTarget": [
        14262
      ],
      "IERC1820Implementer": [
        1920
      ],
      "IERC1820Registry": [
        2010
      ],
      "IERC20": [
        1403
      ],
      "IERC20Metadata": [
        1509
      ],
      "IEcoBalanceStoreGenerationBalance": [
        6127
      ],
      "IGeneration": [
        10224
      ],
      "ILockups": [
        10234
      ],
      "InflationRootHashProposal": [
        7857
      ],
      "Lockup": [
        11146
      ],
      "Policed": [
        13615
      ],
      "PolicedUtils": [
        13793
      ],
      "Policy": [
        13941
      ],
      "PolicyVotes": [
        12288
      ],
      "TimeUtils": [
        16912
      ],
      "VoteCheckpoints": [
        8607
      ],
      "VotingPower": [
        13456
      ]
    },
    "id": 12289,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11921,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:46"
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 11922,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12289,
        "sourceUnit": 13942,
        "src": "57:30:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 11923,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12289,
        "sourceUnit": 13794,
        "src": "88:36:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 11924,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12289,
        "sourceUnit": 16913,
        "src": "125:32:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/VotingPower.sol",
        "file": "./VotingPower.sol",
        "id": 11925,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12289,
        "sourceUnit": 13457,
        "src": "158:27:46",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11927,
              "name": "VotingPower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 13456,
              "src": "383:11:46"
            },
            "id": 11928,
            "nodeType": "InheritanceSpecifier",
            "src": "383:11:46"
          },
          {
            "baseName": {
              "id": 11929,
              "name": "TimeUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16912,
              "src": "396:9:46"
            },
            "id": 11930,
            "nodeType": "InheritanceSpecifier",
            "src": "396:9:46"
          }
        ],
        "canonicalName": "PolicyVotes",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11926,
          "nodeType": "StructuredDocumentation",
          "src": "187:171:46",
          "text": "@title PolicyVotes\n This implements the voting and implementation phases of the policy decision process.\n Open stake based voting is used for the voting phase."
        },
        "fullyImplemented": true,
        "id": 12288,
        "linearizedBaseContracts": [
          12288,
          16912,
          13456,
          13793,
          13514,
          4532,
          13615,
          1920,
          14262
        ],
        "name": "PolicyVotes",
        "nameLocation": "368:11:46",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 11931,
              "nodeType": "StructuredDocumentation",
              "src": "412:34:46",
              "text": "The proposal being voted on "
            },
            "functionSelector": "753ec103",
            "id": 11933,
            "mutability": "mutable",
            "name": "proposal",
            "nameLocation": "466:8:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "451:23:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11932,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "451:7:46",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11934,
              "nodeType": "StructuredDocumentation",
              "src": "481:28:46",
              "text": "Per voter power."
            },
            "functionSelector": "26476204",
            "id": 11938,
            "mutability": "mutable",
            "name": "stake",
            "nameLocation": "549:5:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "514:40:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 11937,
              "keyType": {
                "id": 11935,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "522:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "514:27:46",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 11936,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "533:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11939,
              "nodeType": "StructuredDocumentation",
              "src": "561:36:46",
              "text": "Per voter that votes yes"
            },
            "functionSelector": "aabe1023",
            "id": 11943,
            "mutability": "mutable",
            "name": "yesVote",
            "nameLocation": "634:7:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "602:39:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 11942,
              "keyType": {
                "id": 11940,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "610:7:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "602:24:46",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 11941,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "621:4:46",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11944,
              "nodeType": "StructuredDocumentation",
              "src": "648:93:46",
              "text": "Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico)."
            },
            "functionSelector": "8b0e9f3f",
            "id": 11946,
            "mutability": "mutable",
            "name": "totalStake",
            "nameLocation": "761:10:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "746:25:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11945,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "746:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11947,
              "nodeType": "StructuredDocumentation",
              "src": "778:80:46",
              "text": "Total revealed positive stake in basic unit of 10^{-18} ECO (weico)."
            },
            "functionSelector": "28ea6dda",
            "id": 11949,
            "mutability": "mutable",
            "name": "yesStake",
            "nameLocation": "878:8:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "863:23:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11948,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "863:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11950,
              "nodeType": "StructuredDocumentation",
              "src": "893:65:46",
              "text": "The length of the commit portion of the voting phase."
            },
            "functionSelector": "486a27db",
            "id": 11953,
            "mutability": "constant",
            "name": "VOTE_TIME",
            "nameLocation": "987:9:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "963:45:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11951,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "963:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 11952,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "999:9:46",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_180_by_1",
                "typeString": "int_const 180"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 11954,
              "nodeType": "StructuredDocumentation",
              "src": "1015:40:46",
              "text": "The delay on a plurality win"
            },
            "functionSelector": "328a1da9",
            "id": 11957,
            "mutability": "constant",
            "name": "ENACTION_DELAY",
            "nameLocation": "1084:14:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "1060:50:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11955,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1060:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 11956,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1101:9:46",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_120_by_1",
                "typeString": "int_const 120"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11958,
              "nodeType": "StructuredDocumentation",
              "src": "1117:79:46",
              "text": "The timestamp at which the commit portion of the voting phase ends."
            },
            "functionSelector": "85defaf4",
            "id": 11960,
            "mutability": "mutable",
            "name": "voteEnds",
            "nameLocation": "1216:8:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "1201:23:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11959,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1201:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyVotes.Result",
            "id": 11964,
            "members": [
              {
                "id": 11961,
                "name": "Accepted",
                "nameLocation": "1276:8:46",
                "nodeType": "EnumValue",
                "src": "1276:8:46"
              },
              {
                "id": 11962,
                "name": "Rejected",
                "nameLocation": "1294:8:46",
                "nodeType": "EnumValue",
                "src": "1294:8:46"
              },
              {
                "id": 11963,
                "name": "Failed",
                "nameLocation": "1312:6:46",
                "nodeType": "EnumValue",
                "src": "1312:6:46"
              }
            ],
            "name": "Result",
            "nameLocation": "1259:6:46",
            "nodeType": "EnumDefinition",
            "src": "1254:70:46"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11965,
              "nodeType": "StructuredDocumentation",
              "src": "1330:53:46",
              "text": "Event emitted when vote outcome is known."
            },
            "id": 11970,
            "name": "VoteCompleted",
            "nameLocation": "1394:13:46",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11968,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1415:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11970,
                  "src": "1408:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Result_$11964",
                    "typeString": "enum PolicyVotes.Result"
                  },
                  "typeName": {
                    "id": 11967,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11966,
                      "name": "Result",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 11964,
                      "src": "1408:6:46"
                    },
                    "referencedDeclaration": 11964,
                    "src": "1408:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Result_$11964",
                      "typeString": "enum PolicyVotes.Result"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1407:15:46"
            },
            "src": "1388:35:46"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 11971,
              "nodeType": "StructuredDocumentation",
              "src": "1429:48:46",
              "text": "Event emitted when vote is revealed."
            },
            "id": 11979,
            "name": "PolicyVoteCast",
            "nameLocation": "1488:14:46",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11973,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1519:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11979,
                  "src": "1503:21:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11975,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vote",
                  "nameLocation": "1531:4:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11979,
                  "src": "1526:9:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11974,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11977,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1545:6:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11979,
                  "src": "1537:14:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11976,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1502:50:46"
            },
            "src": "1482:71:46"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11980,
              "nodeType": "StructuredDocumentation",
              "src": "1559:85:46",
              "text": "The store block number to use when checking account balances for staking."
            },
            "functionSelector": "57e871e7",
            "id": 11982,
            "mutability": "mutable",
            "name": "blockNumber",
            "nameLocation": "1664:11:46",
            "nodeType": "VariableDeclaration",
            "scope": 12288,
            "src": "1649:26:46",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11981,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1649:7:46",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11990,
              "nodeType": "Block",
              "src": "1781:2:46",
              "statements": []
            },
            "id": 11991,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11987,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11984,
                    "src": "1772:7:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 11988,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11986,
                  "name": "VotingPower",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13456,
                  "src": "1760:11:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "1760:20:46"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11984,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "1751:7:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 11991,
                  "src": "1743:15:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1742:17:46"
            },
            "returnParameters": {
              "id": 11989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:46"
            },
            "scope": 12288,
            "src": "1731:52:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12108,
              "nodeType": "Block",
              "src": "2176:1050:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11998,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16911,
                            "src": "2207:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 11999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2207:9:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 12000,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11960,
                          "src": "2219:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2207:20:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465732063616e206f6e6c79206265207265636f7264656420647572696e672074686520766f74696e6720706572696f64",
                        "id": 12002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2241:53:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        },
                        "value": "Votes can only be recorded during the voting period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        }
                      ],
                      "id": 11997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2186:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2186:118:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12004,
                  "nodeType": "ExpressionStatement",
                  "src": "2186:118:46"
                },
                {
                  "assignments": [
                    12006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12006,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "2323:7:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12108,
                      "src": "2315:15:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12005,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2315:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12012,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12008,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2345:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2345:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12010,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11982,
                        "src": "2357:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12007,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13403,
                      "src": "2333:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 12011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2333:36:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2315:54:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12014,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12006,
                          "src": "2401:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 12015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2411:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2401:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657273206d75737420686176652068656c6420746f6b656e73206265666f72652074686520626c6f636b206e756d626572206f66207468652070726f706f73616c",
                        "id": 12017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2426:70:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3eb068da322530d536b94b5204574493dba80fcd9b91301e05c74f3a3e6af85c",
                          "typeString": "literal_string \"Voters must have held tokens before the block number of the proposal\""
                        },
                        "value": "Voters must have held tokens before the block number of the proposal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3eb068da322530d536b94b5204574493dba80fcd9b91301e05c74f3a3e6af85c",
                          "typeString": "literal_string \"Voters must have held tokens before the block number of the proposal\""
                        }
                      ],
                      "id": 12013,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2380:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:126:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12019,
                  "nodeType": "ExpressionStatement",
                  "src": "2380:126:46"
                },
                {
                  "assignments": [
                    12021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12021,
                      "mutability": "mutable",
                      "name": "_oldStake",
                      "nameLocation": "2525:9:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12108,
                      "src": "2517:17:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2517:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12026,
                  "initialValue": {
                    "baseExpression": {
                      "id": 12022,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11938,
                      "src": "2537:5:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 12025,
                    "indexExpression": {
                      "expression": {
                        "id": 12023,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2543:3:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2543:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2537:17:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2517:37:46"
                },
                {
                  "assignments": [
                    12028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12028,
                      "mutability": "mutable",
                      "name": "_stakeDelta",
                      "nameLocation": "2572:11:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12108,
                      "src": "2564:19:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12027,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2564:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12032,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12029,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12006,
                      "src": "2586:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 12030,
                      "name": "_oldStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12021,
                      "src": "2596:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2586:19:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2564:41:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12033,
                      "name": "_oldStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12021,
                      "src": "2620:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2633:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2620:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12066,
                  "nodeType": "IfStatement",
                  "src": "2616:314:46",
                  "trueBody": {
                    "id": 12065,
                    "nodeType": "Block",
                    "src": "2636:294:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 12042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 12037,
                                  "name": "yesVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11943,
                                  "src": "2675:7:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 12040,
                                "indexExpression": {
                                  "expression": {
                                    "id": 12038,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2683:3:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 12039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2683:10:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2675:19:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 12041,
                                "name": "_vote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11994,
                                "src": "2698:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2675:28:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f757220766f74652068617320616c7265616479206265656e207265636f72646564",
                              "id": 12043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2721:37:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0",
                                "typeString": "literal_string \"Your vote has already been recorded\""
                              },
                              "value": "Your vote has already been recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0",
                                "typeString": "literal_string \"Your vote has already been recorded\""
                              }
                            ],
                            "id": 12036,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2650:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2650:122:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12045,
                        "nodeType": "ExpressionStatement",
                        "src": "2650:122:46"
                      },
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 12046,
                            "name": "yesVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11943,
                            "src": "2790:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 12049,
                          "indexExpression": {
                            "expression": {
                              "id": 12047,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2798:3:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 12048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2798:10:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2790:19:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12064,
                        "nodeType": "IfStatement",
                        "src": "2786:134:46",
                        "trueBody": {
                          "id": 12063,
                          "nodeType": "Block",
                          "src": "2811:109:46",
                          "statements": [
                            {
                              "expression": {
                                "id": 12054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 12050,
                                  "name": "yesStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11949,
                                  "src": "2829:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 12053,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 12051,
                                    "name": "yesStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11949,
                                    "src": "2840:8:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 12052,
                                    "name": "_oldStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12021,
                                    "src": "2851:9:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2840:20:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2829:31:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 12055,
                              "nodeType": "ExpressionStatement",
                              "src": "2829:31:46"
                            },
                            {
                              "expression": {
                                "id": 12061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 12056,
                                    "name": "yesVote",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11943,
                                    "src": "2878:7:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 12059,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 12057,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "2886:3:46",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 12058,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2886:10:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2878:19:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 12060,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2900:5:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "2878:27:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 12062,
                              "nodeType": "ExpressionStatement",
                              "src": "2878:27:46"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12068,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2951:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2951:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12067,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13415,
                      "src": "2940:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:22:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12071,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:22:46"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 12073,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2992:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2992:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12075,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11994,
                        "src": "3004:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 12076,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12006,
                        "src": "3011:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12072,
                      "name": "PolicyVoteCast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11979,
                      "src": "2977:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bool,uint256)"
                      }
                    },
                    "id": 12077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2977:42:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12078,
                  "nodeType": "EmitStatement",
                  "src": "2972:47:46"
                },
                {
                  "condition": {
                    "id": 12079,
                    "name": "_vote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11994,
                    "src": "3034:5:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12094,
                  "nodeType": "IfStatement",
                  "src": "3030:105:46",
                  "trueBody": {
                    "id": 12093,
                    "nodeType": "Block",
                    "src": "3041:94:46",
                    "statements": [
                      {
                        "expression": {
                          "id": 12084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12080,
                            "name": "yesStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11949,
                            "src": "3055:8:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 12081,
                              "name": "yesStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11949,
                              "src": "3066:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 12082,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12006,
                              "src": "3077:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3066:18:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3055:29:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12085,
                        "nodeType": "ExpressionStatement",
                        "src": "3055:29:46"
                      },
                      {
                        "expression": {
                          "id": 12091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 12086,
                              "name": "yesVote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11943,
                              "src": "3098:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 12089,
                            "indexExpression": {
                              "expression": {
                                "id": 12087,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3106:3:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 12088,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3106:10:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3098:19:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 12090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3120:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3098:26:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 12092,
                        "nodeType": "ExpressionStatement",
                        "src": "3098:26:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 12100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 12095,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11938,
                        "src": "3144:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 12098,
                      "indexExpression": {
                        "expression": {
                          "id": 12096,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3150:3:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 12097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3150:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3144:17:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12099,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12006,
                      "src": "3164:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3144:27:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12101,
                  "nodeType": "ExpressionStatement",
                  "src": "3144:27:46"
                },
                {
                  "expression": {
                    "id": 12106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12102,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11946,
                      "src": "3182:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12103,
                        "name": "totalStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11946,
                        "src": "3195:10:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 12104,
                        "name": "_stakeDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12028,
                        "src": "3208:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3195:24:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3182:37:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12107,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:37:46"
                }
              ]
            },
            "documentation": {
              "id": 11992,
              "nodeType": "StructuredDocumentation",
              "src": "1789:347:46",
              "text": "Submit your yes/no support\n Shows whether or not your voting power supports or does not support the vote\n Note Not voting is not equivalent to voting no. Percentage of voted support,\n not percentage of total voting power is used to determine the win.\n @param _vote The vote for the proposal"
            },
            "functionSelector": "4b9f5c98",
            "id": 12109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2150:4:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11994,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "2160:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12109,
                  "src": "2155:10:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11993,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:4:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2154:12:46"
            },
            "returnParameters": {
              "id": 11996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2176:0:46"
            },
            "scope": 12288,
            "src": "2141:1085:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              13736
            ],
            "body": {
              "id": 12124,
              "nodeType": "Block",
              "src": "3452:40:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12121,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12112,
                        "src": "3479:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12118,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "3462:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyVotes_$12288_$",
                          "typeString": "type(contract super PolicyVotes)"
                        }
                      },
                      "id": 12120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13736,
                      "src": "3462:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:23:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12123,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:23:46"
                }
              ]
            },
            "documentation": {
              "id": 12110,
              "nodeType": "StructuredDocumentation",
              "src": "3232:147:46",
              "text": "Initialize a cloned/proxied copy of this contract.\n @param _self The original contract, to provide access to storage data."
            },
            "functionSelector": "c4d66de8",
            "id": 12125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12116,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12115,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14183,
                  "src": "3435:16:46"
                },
                "nodeType": "ModifierInvocation",
                "src": "3435:16:46"
              }
            ],
            "name": "initialize",
            "nameLocation": "3393:10:46",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12114,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3426:8:46"
            },
            "parameters": {
              "id": 12113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12112,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "3412:5:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12125,
                  "src": "3404:13:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3403:15:46"
            },
            "returnParameters": {
              "id": 12117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3452:0:46"
            },
            "scope": 12288,
            "src": "3384:108:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12154,
              "nodeType": "Block",
              "src": "3885:194:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12132,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11960,
                          "src": "3903:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 12133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3915:1:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3903:13:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7374616e63652068617320616c7265616479206265656e20636f6e66696775726564",
                        "id": 12135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3918:43:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a",
                          "typeString": "literal_string \"This instance has already been configured\""
                        },
                        "value": "This instance has already been configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a",
                          "typeString": "literal_string \"This instance has already been configured\""
                        }
                      ],
                      "id": 12131,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3895:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:67:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12137,
                  "nodeType": "ExpressionStatement",
                  "src": "3895:67:46"
                },
                {
                  "expression": {
                    "id": 12143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12138,
                      "name": "voteEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11960,
                      "src": "3973:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12139,
                          "name": "getTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16911,
                          "src": "3984:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 12140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3984:9:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 12141,
                        "name": "VOTE_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11953,
                        "src": "3996:9:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3984:21:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3973:32:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12144,
                  "nodeType": "ExpressionStatement",
                  "src": "3973:32:46"
                },
                {
                  "expression": {
                    "id": 12148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12145,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11982,
                      "src": "4015:11:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 12146,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4029:5:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 12147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "4029:12:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4015:26:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12149,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:26:46"
                },
                {
                  "expression": {
                    "id": 12152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12150,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "4052:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12151,
                      "name": "_proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12128,
                      "src": "4063:9:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4052:20:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12153,
                  "nodeType": "ExpressionStatement",
                  "src": "4052:20:46"
                }
              ]
            },
            "documentation": {
              "id": 12126,
              "nodeType": "StructuredDocumentation",
              "src": "3498:335:46",
              "text": "Configure the proposals that are part of this voting cycle and start\n the lockup period.\n This also fixes the end times of each subsequent phase.\n This can only be called once, and should be called atomically with\n instantiation.\n @param _proposal The proposal to vote on."
            },
            "functionSelector": "75cb2672",
            "id": 12155,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configure",
            "nameLocation": "3847:9:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12128,
                  "mutability": "mutable",
                  "name": "_proposal",
                  "nameLocation": "3865:9:46",
                  "nodeType": "VariableDeclaration",
                  "scope": 12155,
                  "src": "3857:17:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3857:7:46",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3856:19:46"
            },
            "returnParameters": {
              "id": 12130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3885:0:46"
            },
            "scope": 12288,
            "src": "3838:241:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12272,
              "nodeType": "Block",
              "src": "4521:1105:46",
              "statements": [
                {
                  "assignments": [
                    12160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12160,
                      "mutability": "mutable",
                      "name": "_requiredStake",
                      "nameLocation": "4539:14:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12272,
                      "src": "4531:22:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12159,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4531:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12164,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12161,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11946,
                      "src": "4556:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 12162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4569:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "4556:14:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4531:39:46"
                },
                {
                  "assignments": [
                    12166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12166,
                      "mutability": "mutable",
                      "name": "_total",
                      "nameLocation": "4588:6:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12272,
                      "src": "4580:14:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4580:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12170,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 12168,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11982,
                        "src": "4614:11:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12167,
                      "name": "totalVotingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13357,
                      "src": "4597:16:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 12169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4597:29:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4580:46:46"
                },
                {
                  "assignments": [
                    12172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12172,
                      "mutability": "mutable",
                      "name": "_time",
                      "nameLocation": "4644:5:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12272,
                      "src": "4636:13:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12171,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4636:7:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12175,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12173,
                      "name": "getTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16911,
                      "src": "4652:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 12174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4652:9:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4636:25:46"
                },
                {
                  "assignments": [
                    12178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12178,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "4679:4:46",
                      "nodeType": "VariableDeclaration",
                      "scope": 12272,
                      "src": "4672:11:46",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Result_$11964",
                        "typeString": "enum PolicyVotes.Result"
                      },
                      "typeName": {
                        "id": 12177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 12176,
                          "name": "Result",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 11964,
                          "src": "4672:6:46"
                        },
                        "referencedDeclaration": 11964,
                        "src": "4672:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$11964",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12179,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4672:11:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12180,
                      "name": "yesStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11949,
                      "src": "4698:8:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12181,
                        "name": "_total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12166,
                        "src": "4710:6:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 12182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4719:1:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "4710:10:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4698:22:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12195,
                  "nodeType": "IfStatement",
                  "src": "4694:189:46",
                  "trueBody": {
                    "id": 12194,
                    "nodeType": "Block",
                    "src": "4722:161:46",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 12190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 12186,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12172,
                                "src": "4761:5:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 12189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12187,
                                  "name": "voteEnds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11960,
                                  "src": "4769:8:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 12188,
                                  "name": "ENACTION_DELAY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11957,
                                  "src": "4780:14:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4769:25:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4761:33:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d616a6f7269747920737570706f727420726571756972656420666f72206561726c7920656e616374696f6e",
                              "id": 12191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4812:46:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4",
                                "typeString": "literal_string \"Majority support required for early enaction\""
                              },
                              "value": "Majority support required for early enaction"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4",
                                "typeString": "literal_string \"Majority support required for early enaction\""
                              }
                            ],
                            "id": 12185,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4736:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 12192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4736:136:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12193,
                        "nodeType": "ExpressionStatement",
                        "src": "4736:136:46"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 12198,
                              "name": "ID_POLICY_VOTES",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13649,
                              "src": "4924:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 12197,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13792,
                            "src": "4914:9:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 12199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4914:26:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 12202,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4952:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyVotes_$12288",
                                "typeString": "contract PolicyVotes"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyVotes_$12288",
                                "typeString": "contract PolicyVotes"
                              }
                            ],
                            "id": 12201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4944:7:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4944:7:46",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4944:13:46",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4914:43:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e7472616374206e6f206c6f6e6765722068617320617574686f72697a6174696f6e20746f20656e6163742074686520766f7465",
                        "id": 12205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4971:61:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b",
                          "typeString": "literal_string \"This contract no longer has authorization to enact the vote\""
                        },
                        "value": "This contract no longer has authorization to enact the vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b",
                          "typeString": "literal_string \"This contract no longer has authorization to enact the vote\""
                        }
                      ],
                      "id": 12196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4893:7:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4893:149:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12207,
                  "nodeType": "ExpressionStatement",
                  "src": "4893:149:46"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12208,
                      "name": "_requiredStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12160,
                      "src": "5057:14:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5075:1:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5057:19:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12217,
                        "name": "yesStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11949,
                        "src": "5161:8:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 12218,
                        "name": "_requiredStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12160,
                        "src": "5173:14:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5161:26:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 12238,
                      "nodeType": "Block",
                      "src": "5278:128:46",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 12230,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11933,
                                "src": "5350:8:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 12227,
                                    "name": "policy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13534,
                                    "src": "5326:6:46",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 12226,
                                  "name": "Policy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13941,
                                  "src": "5319:6:46",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Policy_$13941_$",
                                    "typeString": "type(contract Policy)"
                                  }
                                },
                                "id": 12228,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5319:14:46",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Policy_$13941",
                                  "typeString": "contract Policy"
                                }
                              },
                              "id": 12229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "internalCommand",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13921,
                              "src": "5319:30:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 12231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5319:40:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 12232,
                          "nodeType": "ExpressionStatement",
                          "src": "5319:40:46"
                        },
                        {
                          "expression": {
                            "id": 12236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 12233,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12178,
                              "src": "5373:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$11964",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 12234,
                                "name": "Result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11964,
                                "src": "5380:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Result_$11964_$",
                                  "typeString": "type(enum PolicyVotes.Result)"
                                }
                              },
                              "id": 12235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Accepted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11961,
                              "src": "5380:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$11964",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "src": "5373:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$11964",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "id": 12237,
                          "nodeType": "ExpressionStatement",
                          "src": "5373:22:46"
                        }
                      ]
                    },
                    "id": 12239,
                    "nodeType": "IfStatement",
                    "src": "5157:249:46",
                    "trueBody": {
                      "id": 12225,
                      "nodeType": "Block",
                      "src": "5189:83:46",
                      "statements": [
                        {
                          "expression": {
                            "id": 12223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 12220,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12178,
                              "src": "5239:4:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$11964",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 12221,
                                "name": "Result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11964,
                                "src": "5246:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Result_$11964_$",
                                  "typeString": "type(enum PolicyVotes.Result)"
                                }
                              },
                              "id": 12222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Rejected",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11962,
                              "src": "5246:15:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$11964",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "src": "5239:22:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$11964",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "id": 12224,
                          "nodeType": "ExpressionStatement",
                          "src": "5239:22:46"
                        }
                      ]
                    }
                  },
                  "id": 12240,
                  "nodeType": "IfStatement",
                  "src": "5053:353:46",
                  "trueBody": {
                    "id": 12216,
                    "nodeType": "Block",
                    "src": "5078:73:46",
                    "statements": [
                      {
                        "expression": {
                          "id": 12214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12211,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12178,
                            "src": "5120:4:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$11964",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 12212,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11964,
                              "src": "5127:6:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$11964_$",
                                "typeString": "type(enum PolicyVotes.Result)"
                              }
                            },
                            "id": 12213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Failed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11963,
                            "src": "5127:13:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$11964",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "src": "5120:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Result_$11964",
                            "typeString": "enum PolicyVotes.Result"
                          }
                        },
                        "id": 12215,
                        "nodeType": "ExpressionStatement",
                        "src": "5120:20:46"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12242,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12178,
                        "src": "5435:4:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$11964",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Result_$11964",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      ],
                      "id": 12241,
                      "name": "VoteCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11970,
                      "src": "5421:13:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Result_$11964_$returns$__$",
                        "typeString": "function (enum PolicyVotes.Result)"
                      }
                    },
                    "id": 12243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5421:19:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12244,
                  "nodeType": "EmitStatement",
                  "src": "5416:24:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12249,
                        "name": "ID_POLICY_VOTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13649,
                        "src": "5476:15:46",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12246,
                            "name": "policy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13534,
                            "src": "5457:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12245,
                          "name": "Policy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13941,
                          "src": "5450:6:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Policy_$13941_$",
                            "typeString": "type(contract Policy)"
                          }
                        },
                        "id": 12247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5450:14:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$13941",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 12248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeSelf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13846,
                      "src": "5450:25:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 12250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5450:42:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12251,
                  "nodeType": "ExpressionStatement",
                  "src": "5450:42:46"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12259,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13534,
                                "src": "5552:6:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 12258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5544:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint160_$",
                                "typeString": "type(uint160)"
                              },
                              "typeName": {
                                "id": 12257,
                                "name": "uint160",
                                "nodeType": "ElementaryTypeName",
                                "src": "5544:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5544:15:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          ],
                          "id": 12256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5536:7:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12255,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5536:7:46",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5536:24:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12267,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5603:4:46",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PolicyVotes_$12288",
                                  "typeString": "contract PolicyVotes"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PolicyVotes_$12288",
                                  "typeString": "contract PolicyVotes"
                                }
                              ],
                              "id": 12266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5595:7:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12265,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5595:7:46",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5595:13:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 12262,
                              "name": "getToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12287,
                              "src": "5574:8:46",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 12263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5574:10:46",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1403",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 12264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1360,
                          "src": "5574:20:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 12269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5574:35:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12252,
                          "name": "getToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12287,
                          "src": "5503:8:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$1403_$",
                            "typeString": "function () view returns (contract IERC20)"
                          }
                        },
                        "id": 12253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5503:10:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1403",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1370,
                      "src": "5503:19:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 12270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5503:116:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12271,
                  "nodeType": "ExpressionStatement",
                  "src": "5503:116:46"
                }
              ]
            },
            "documentation": {
              "id": 12156,
              "nodeType": "StructuredDocumentation",
              "src": "4085:403:46",
              "text": "Execute the proposal if it has enough support.\n Can only be called after the voting and the delay phase,\n or after the point that more than 50% of the total voting power\n has voted in favor of the proposal.\n If the proposal has been accepted, it will be enacted by\n calling the `enacted` functions using `delegatecall`\n from the root policy."
            },
            "functionSelector": "61461954",
            "id": 12273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "4502:7:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4509:2:46"
            },
            "returnParameters": {
              "id": 12158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4521:0:46"
            },
            "scope": 12288,
            "src": "4493:1133:46",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12286,
              "nodeType": "Block",
              "src": "5738:49:46",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12282,
                            "name": "ID_ECO",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13634,
                            "src": "5772:6:46",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 12281,
                          "name": "policyFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13792,
                          "src": "5762:9:46",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view returns (address)"
                          }
                        },
                        "id": 12283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5762:17:46",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12280,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1403,
                      "src": "5755:6:46",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$1403_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 12284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5755:25:46",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1403",
                      "typeString": "contract IERC20"
                    }
                  },
                  "functionReturnParameters": 12279,
                  "id": 12285,
                  "nodeType": "Return",
                  "src": "5748:32:46"
                }
              ]
            },
            "documentation": {
              "id": 12274,
              "nodeType": "StructuredDocumentation",
              "src": "5632:51:46",
              "text": "Get the associated ERC20 token address."
            },
            "id": 12287,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "5697:8:46",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5705:2:46"
            },
            "returnParameters": {
              "id": 12279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12287,
                  "src": "5730:6:46",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1403",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12277,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12276,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1403,
                      "src": "5730:6:46"
                    },
                    "referencedDeclaration": 1403,
                    "src": "5730:6:46",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1403",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5729:8:46"
            },
            "scope": 12288,
            "src": "5688:99:46",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 12289,
        "src": "359:5430:46",
        "usedErrors": []
      }
    ],
    "src": "32:5758:46"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-06-11T00:24:20.950Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "params": {
          "_addr": "The address of the contract we might act on behalf of."
        }
      },
      "configure(address)": {
        "params": {
          "_proposal": "The proposal to vote on."
        }
      },
      "initialize(address)": {
        "params": {
          "_self": "The original contract, to provide access to storage data."
        }
      },
      "policyCommand(address,bytes)": {
        "params": {
          "_data": "The call message/data to execute on.",
          "_delegate": "The address of the contract to delegate execution to."
        }
      },
      "vote(bool)": {
        "params": {
          "_vote": "The vote for the proposal"
        }
      }
    },
    "title": "PolicyVotes This implements the voting and implementation phases of the policy decision process. Open stake based voting is used for the voting phase.",
    "version": 1
  },
  "userdoc": {
    "events": {
      "PolicyVoteCast(address,bool,uint256)": {
        "notice": "Event emitted when vote is revealed."
      },
      "VoteCompleted(uint8)": {
        "notice": "Event emitted when vote outcome is known."
      }
    },
    "kind": "user",
    "methods": {
      "ENACTION_DELAY()": {
        "notice": "The delay on a plurality win"
      },
      "VOTE_TIME()": {
        "notice": "The length of the commit portion of the voting phase."
      },
      "blockNumber()": {
        "notice": "The store block number to use when checking account balances for staking."
      },
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "ERC1820 permissioning interface"
      },
      "clone()": {
        "notice": "Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract."
      },
      "configure(address)": {
        "notice": "Configure the proposals that are part of this voting cycle and start the lockup period. This also fixes the end times of each subsequent phase. This can only be called once, and should be called atomically with instantiation."
      },
      "execute()": {
        "notice": "Execute the proposal if it has enough support. Can only be called after the voting and the delay phase, or after the point that more than 50% of the total voting power has voted in favor of the proposal. If the proposal has been accepted, it will be enacted by calling the `enacted` functions using `delegatecall` from the root policy."
      },
      "implementation()": {
        "notice": "Get the address of the proxy target contract."
      },
      "initialize(address)": {
        "notice": "Initialize a cloned/proxied copy of this contract."
      },
      "policy()": {
        "notice": "The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy."
      },
      "policyCommand(address,bytes)": {
        "notice": "Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space."
      },
      "proposal()": {
        "notice": "The proposal being voted on "
      },
      "setExpectedInterfaceSet(address)": {
        "notice": "Set the expected interface set"
      },
      "stake(address)": {
        "notice": "Per voter power."
      },
      "totalStake()": {
        "notice": "Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico)."
      },
      "vote(bool)": {
        "notice": "Submit your yes/no support Shows whether or not your voting power supports or does not support the vote Note Not voting is not equivalent to voting no. Percentage of voted support, not percentage of total voting power is used to determine the win."
      },
      "voteEnds()": {
        "notice": "The timestamp at which the commit portion of the voting phase ends."
      },
      "yesStake()": {
        "notice": "Total revealed positive stake in basic unit of 10^{-18} ECO (weico)."
      },
      "yesVote(address)": {
        "notice": "Per voter that votes yes"
      }
    },
    "version": 1
  }
}