{
  "contractName": "PolicyVotes",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Policy",
          "name": "_policy",
          "type": "address"
        },
        {
          "internalType": "contract ECO",
          "name": "_ecoAddr",
          "type": "address"
        },
        {
          "internalType": "contract ECOx",
          "name": "_ecoXAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votesYes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votesNo",
          "type": "uint256"
        }
      ],
      "name": "PolicySplitVoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "vote",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PolicyVoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum PolicyVotes.Result",
          "name": "result",
          "type": "uint8"
        }
      ],
      "name": "VoteCompleted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENACTION_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VOTE_TIME",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clone",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ecoToken",
      "outputs": [
        {
          "internalType": "contract ECO",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ecoXToken",
      "outputs": [
        {
          "internalType": "contract ECOx",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "_impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "contract Policy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "policyCommand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposal",
      "outputs": [
        {
          "internalType": "contract Proposal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setExpectedInterfaceSet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalVotingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteEnds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "votingPower",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yesStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "yesVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_vote",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_votesYes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_votesNo",
          "type": "uint256"
        }
      ],
      "name": "voteSplit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_self",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Proposal",
          "name": "_proposal",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_cutoffBlockNumber",
          "type": "uint256"
        }
      ],
      "name": "configure",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Policy\",\"name\":\"_policy\",\"type\":\"address\"},{\"internalType\":\"contract ECO\",\"name\":\"_ecoAddr\",\"type\":\"address\"},{\"internalType\":\"contract ECOx\",\"name\":\"_ecoXAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votesYes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votesNo\",\"type\":\"uint256\"}],\"name\":\"PolicySplitVoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"vote\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PolicyVoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum PolicyVotes.Result\",\"name\":\"result\",\"type\":\"uint8\"}],\"name\":\"VoteCompleted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENACTION_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VOTE_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"_proposal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cutoffBlockNumber\",\"type\":\"uint256\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecoToken\",\"outputs\":[{\"internalType\":\"contract ECO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ecoXToken\",\"outputs\":[{\"internalType\":\"contract ECOx\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"contract Policy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"policyCommand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposal\",\"outputs\":[{\"internalType\":\"contract Proposal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setExpectedInterfaceSet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_vote\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteEnds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_votesYes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votesNo\",\"type\":\"uint256\"}],\"name\":\"voteSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"votingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yesStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"yesVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"params\":{\"_addr\":\"The address of the contract we might act on behalf of.\"}},\"configure(address,uint256)\":{\"params\":{\"_proposal\":\"The proposal to vote on.\"}},\"initialize(address)\":{\"params\":{\"_self\":\"The original contract, to provide access to storage data.\"}},\"policyCommand(address,bytes)\":{\"params\":{\"_data\":\"The call message/data to execute on.\",\"_delegate\":\"The address of the contract to delegate execution to.\"}},\"vote(bool)\":{\"params\":{\"_vote\":\"The vote for the proposal\"}},\"voteSplit(uint256,uint256)\":{\"params\":{\"_votesNo\":\"The amount of votes against the proposal\",\"_votesYes\":\"The amount of votes in favor of the proposal\"}}},\"title\":\"PolicyVotes This implements the voting and implementation phases of the policy decision process. Open stake based voting is used for the voting phase.\",\"version\":1},\"userdoc\":{\"events\":{\"PolicySplitVoteCast(address,uint256,uint256)\":{\"notice\":\"Event emitted when split vote is.\"},\"PolicyVoteCast(address,bool,uint256)\":{\"notice\":\"Event emitted when vote is submitted.\"},\"VoteCompleted(uint8)\":{\"notice\":\"Event emitted when vote outcome is known.\"}},\"kind\":\"user\",\"methods\":{\"ENACTION_DELAY()\":{\"notice\":\"The delay on a plurality win\"},\"VOTE_TIME()\":{\"notice\":\"The length of the commit portion of the voting phase.\"},\"blockNumber()\":{\"notice\":\"The store block number to use when checking account balances for staking.\"},\"canImplementInterfaceForAddress(bytes32,address)\":{\"notice\":\"ERC1820 permissioning interface\"},\"clone()\":{\"notice\":\"Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract.\"},\"configure(address,uint256)\":{\"notice\":\"Configure the proposals that are part of this voting cycle and start the lockup period. This also fixes the end times of each subsequent phase. This can only be called once, and should be called atomically with instantiation.\"},\"execute()\":{\"notice\":\"Execute the proposal if it has enough support. Can only be called after the voting and the delay phase, or after the point that more than 50% of the total voting power has voted in favor of the proposal. If the proposal has been accepted, it will be enacted by calling the `enacted` functions using `delegatecall` from the root policy.\"},\"implementation()\":{\"notice\":\"Get the address of the proxy target contract.\"},\"initialize(address)\":{\"notice\":\"Initialize a cloned/proxied copy of this contract.\"},\"policy()\":{\"notice\":\"The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy.\"},\"policyCommand(address,bytes)\":{\"notice\":\"Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space.\"},\"proposal()\":{\"notice\":\"The proposal being voted on \"},\"setExpectedInterfaceSet(address)\":{\"notice\":\"Set the expected interface set\"},\"stake(address)\":{\"notice\":\"Per voter power.\"},\"totalStake()\":{\"notice\":\"Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico).\"},\"vote(bool)\":{\"notice\":\"Submit your yes/no support Shows whether or not your voting power supports or does not support the vote Note Not voting is not equivalent to voting no. Percentage of voted support, not percentage of total voting power is used to determine the win.\"},\"voteEnds()\":{\"notice\":\"The timestamp at which the commit portion of the voting phase ends.\"},\"voteSplit(uint256,uint256)\":{\"notice\":\"Submit a mixed vote of yes/no support Useful for contracts that wish to vote for an agregate of users Note As not voting is not equivalent to voting no it matters recording the no votes The total amount of votes in favor is relevant for early enaction and the total percentage of voting power that voted is necessary for determining a winner. Note As this is designed for contracts, the onus is on the contract designer to correctly understand and take responsibility for its input parameters. The only check is to stop someone from voting with more power than they have.\"},\"yesStake()\":{\"notice\":\"Total revealed positive stake in basic unit of 10^{-18} ECO (weico).\"},\"yesVotes(address)\":{\"notice\":\"Per voter that votes yes, by amount voted yes\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/governance/PolicyVotes.sol\":\"PolicyVotes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xc94f9b84096deaf9d2ba5681db62455e3f2d5f0a61341f68a6f576f32a6e60be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74465bbd80d2e8cfb900bf00c69940822d59bfee20d3a9725fbd74e26413319b\",\"dweb:/ipfs/QmYLEg43ZBYBsjx6qDiHK21P4YjVYLzQcUMhadrdqmA5ZL\"]},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x1e34ab6382525e2c48a01d9edbcfeab024072e8fa80332d48fb7011ebdf59562\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d4c3a1cacb1b5ce5681edac3dc3034a9e6ea6b9e4ef338564ca70b9b6ea2fd7\",\"dweb:/ipfs/QmXwhPvgGK4envqERyjh5W7CtrH72geAE7fh1EFcVerviw\"]},\"project:/contracts/VDF/BigNumber.sol\":{\"keccak256\":\"0x34d951601236edb052216f0bc19d97ae87b0027c04cbcc03df5783b60efe925a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f32735389846ecd7f74b610365e5cfac957fee19b87638e4a8b1da2a11a9378c\",\"dweb:/ipfs/QmbUZzmMWsRP5pqRcGdqRKsnTWz9zHrygzaXFturbaFzog\"]},\"project:/contracts/VDF/IsPrime.sol\":{\"keccak256\":\"0x92b6298ae541b196d5262c703d8382b4faa006441435caa09a8a483256dd76d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b288dbaa70d20b1cb37b5c56e96d8e98a693285ea9ee38b53b20c04a246c59f8\",\"dweb:/ipfs/QmXZYBBrQNeL4tofwXvwumpSNQ5Fv6fwvjCavFxXuuKp81\"]},\"project:/contracts/VDF/VDFVerifier.sol\":{\"keccak256\":\"0xbf72a376305be00235eee04b66ac2d2f88f7a9fe2fa02f8b80318bef5fdd1de0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96dc0debb3e1760ca04ecb0457d6fef9de71ac58e005ed1dee88701a8f377581\",\"dweb:/ipfs/QmVtUphFUGreXdPxycbnWq8Qvd7jcuCbkmz8bz1GsDH2h4\"]},\"project:/contracts/clone/CloneFactory.sol\":{\"keccak256\":\"0xfe4d4a9e72693d4cc3cd16d1d84b4405ae7b61d8a2a932696ec44fdb29a7e2a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19534495f562093202e3d5a7284ff1f9ccccdcbebdbcd6009f4f5d5a87d0e274\",\"dweb:/ipfs/QmY2PTpJTxCZhGQtoMxY6w8kT5SqgXpZ2B7MNJkrEkMmaU\"]},\"project:/contracts/currency/ECO.sol\":{\"keccak256\":\"0x0b67dc11f4bfafd55a9f53f5d30ad34c2dcf440e9f2139183a4fa623fc8847a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915e8ce2d086c4b0c4ea5e5741d5d061ea0799fcce06b8247bff5cb9762bc4a9\",\"dweb:/ipfs/QmNxLrFAdVmNEmF6CHU4pZNn9JQ5ScjGehKbjdFdTTR9EU\"]},\"project:/contracts/currency/ECOx.sol\":{\"keccak256\":\"0x05239e594b73c24f40a57efdace61ff2ce5454a250493d99d53875ffabaaeeb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d1ed04c26c587ffc8dbe10feff1b3e4f8b4e7abc132d4eb63ed0f377609bb3b\",\"dweb:/ipfs/QmYqYWEKV1eypWQEM74ffS8TVn62b4rqZqYt65cvR9zXKD\"]},\"project:/contracts/currency/ERC20.sol\":{\"keccak256\":\"0x04f4fab4b58b24157c167f18845dd6f9662eb0b23046b2f16b72ae39751943da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8b998b10f4b7ff52f378b4b3472a62a3817f1d1137b8c1b77dee8f7fbfeb84f\",\"dweb:/ipfs/QmTBmFDAWPAztp9vSm4PxE65xdzNNb4unq3mbdGXjhqhzA\"]},\"project:/contracts/currency/IECO.sol\":{\"keccak256\":\"0x39421a11c92c9919b75e41fd5bef469121615a9c78f499a1b94d60e6ea52e723\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3956164c417c573f9b7aaef45c34c7a63bc4cc8ccaab96c9d4f0f671fe6375c1\",\"dweb:/ipfs/QmZoKZggRqTamBu9cpbT1oW2Cn3K9FQkQgLfoiQCS7fwgj\"]},\"project:/contracts/currency/InflationCheckpoints.sol\":{\"keccak256\":\"0xf8fe3d431088c349283763034cd3ade89c10e04025d233c9c9a63406e1a82a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2664cab77d37515c6eb3512c15131338e4b1667da98c6cbb8c522aceb2debf16\",\"dweb:/ipfs/QmPWrkmA2NCtQbr9oLiP7DtJpcw13JfZZ5qe5V6zamZzzw\"]},\"project:/contracts/currency/InflationRootHashProposal.sol\":{\"keccak256\":\"0x41bbb2a0328a937ce4bece7bbae128226e6e9d92f2e7148a00b2b80a62a0c6cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://252280b652372a14a0b0ca2c1f202fcb4e44364f82aa9ef0359ae0f7d9af4db7\",\"dweb:/ipfs/QmatZn4DcjHdTvdUJUaV8SfYst3g7YJZ9D9N5ysG2zLn8Z\"]},\"project:/contracts/currency/VoteCheckpoints.sol\":{\"keccak256\":\"0x00299bd0dafb41177ab16b8de0c25dceb501cf00766b66d891fa7fde334cf545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffce57c05b306dceb3c3da29bc8501334b5ae90cd0daa7f3f8bfa5a0e909e032\",\"dweb:/ipfs/QmTquBdUymBZG9GnNe4R6obRtFiZwko4RXbn18yU6ciHit\"]},\"project:/contracts/governance/CurrencyGovernance.sol\":{\"keccak256\":\"0xf3f9fa62813b328dac9fb6a3093cf0a049a971a3a2faaa3ffffcb84abdee3f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47149b9db0aa58d84f85411bef6282bd990120efa6755b40c335b4c322f9909d\",\"dweb:/ipfs/QmYqVPxWqDxxpX56i4Hi2YYhyLXwiKYt5zNnMByR5X9uyU\"]},\"project:/contracts/governance/CurrencyTimer.sol\":{\"keccak256\":\"0x2916f5a33e3f1a34dd7def2626a5f59b74ced7fe4cf4ac71612bf5662064378c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51aa30923e8dcb02d8fbd0aca32ad262861564cc70917c1cd6116ffa307b9fa1\",\"dweb:/ipfs/QmWziQkpGEzVRByVDfHBzjg3bhy9xd6xf5q7U9FHkaaRLK\"]},\"project:/contracts/governance/ECOxLockup.sol\":{\"keccak256\":\"0xcbbc8b3a923afeb6c414869123c1010783022e1fe27f480e882e1f835b60aad9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f40e18c91bc3f1b37980f11541eb981d2860af2c8adde5fda3303c624a7a8a59\",\"dweb:/ipfs/QmWChpUrYk97GUpcjCmkf6xpiZvKudRCXNy5gCSu1vbknt\"]},\"project:/contracts/governance/IGeneration.sol\":{\"keccak256\":\"0x43adc6aca3058f0f21c0f4ad390158b9104327030109faf012955c6433cb4a62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://926098535fc6c8e8aaa6c85f7d67bd329262a6aae7f67c37577d908e4844e7d1\",\"dweb:/ipfs/QmbnE43jCzbgJ52kT3tDR7BAS9W1CH35A2adEkRctDxm3S\"]},\"project:/contracts/governance/IGenerationIncrease.sol\":{\"keccak256\":\"0x45ec21c86ff3ca31c5aef0bced8f01960e3c7292019938f1613916ff142e0a2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://793dfdb9f8eb72e9a391a176667b775fb300cfae5331b896c4458bf14f27ef20\",\"dweb:/ipfs/QmXuUoWw6eoTJfBUhtdGvuZqBcCHaPayRPP6vs9qnn2ff3\"]},\"project:/contracts/governance/ILockups.sol\":{\"keccak256\":\"0x05500a2bd766460d10f294ed5b533cbb269d8183351e4fa0080fa633cc37c428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bdb96d4380906693d2b041150203169527a03094523876b16b741da1edaeb1a\",\"dweb:/ipfs/QmXvkJNhcYSD7j1isisXeUReJsqrobNKw9MK2XExBXQQTd\"]},\"project:/contracts/governance/Inflation.sol\":{\"keccak256\":\"0x392a8bb76be0873ade520c01dcb37605ee06e543c153cff230d65437b3a8ebdc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86e926890755439dec7f5a39c8cff198de362a027297da0e0beacb057e8daeb2\",\"dweb:/ipfs/QmVM1jGPD74aEdzcMmJacbQjexgoaZ747eBzhsXTCYAec4\"]},\"project:/contracts/governance/Lockup.sol\":{\"keccak256\":\"0xd26c83f0aee4b4db05264163df633bd31e698c3e30accc6c24ca47ef1717449e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://330b75fabc16445157763f9e0699add46ddca534b396931b1cd6a316edde64a6\",\"dweb:/ipfs/QmZaSxnvpmKEZQ6BoqNAr4WgdHzcMTCh8N8XBhVXu6s8Eo\"]},\"project:/contracts/governance/PolicyProposals.sol\":{\"keccak256\":\"0xb80a24d7b51539534b56780c33d5745786588e9ea7120d8f05076e9fd67701a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9062149cca82b70bfddf84e50be077aa3c444821d28c4e8dfdef2dc2dc2df2e6\",\"dweb:/ipfs/QmVxKjeDSkK1AxiMY2kxvZiVXULzmx2Dyj3vUGuARHojFV\"]},\"project:/contracts/governance/PolicyVotes.sol\":{\"keccak256\":\"0x28203ad203d2b19adfbd307d0880404b8b48435e3a40d13a8a8b2795a677beb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84172604ceb4b3f2afe6a0bbfcff662cdd114cd7ae22d8500020dab8bbfb8ad4\",\"dweb:/ipfs/QmRHqah9HHiiHsE23ydyZpCB76NEBMcFxFNKy35fjcVjvA\"]},\"project:/contracts/governance/Proposal.sol\":{\"keccak256\":\"0x54644b5204b10eb6f97290eef1fefb633f108c7facb3feb12b2d0a7847a95333\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04eb89925c361e4058a0d7ce181f7bd54f1b6fe06cf659307ace3c76de6ede23\",\"dweb:/ipfs/QmezPJo7PEZt4qrPeq8YC5aaFzfLa9aQNU4f3Kt77Ud6ZN\"]},\"project:/contracts/governance/TrustedNodes.sol\":{\"keccak256\":\"0x6d9e40412ed80217e3c0c798895ffa9ea3c8b05d49766003d68db3a54100b338\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ae4bfdf5eccd451ae0190b3a39df0b2d48c50659a914c9605b6676810f33ade\",\"dweb:/ipfs/QmcneByJ6s5XWECKTdTz1pRaPF52WjpicKZiUj9YR6YccP\"]},\"project:/contracts/governance/VotingPower.sol\":{\"keccak256\":\"0x7bce6064a03d7c576e58bc7b67a3d191723d8b5f3fa0f6e9fc7430fb278f5db8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79e196e5efbca8e5d2161e2b1552e432c3b7b7b74d66bd9e00b1fe8478e1fc77\",\"dweb:/ipfs/QmXDZVQtBipAS1hzjLrzawJJkcCqRyNvSKaaNcW4uQkFkU\"]},\"project:/contracts/policy/ERC1820Client.sol\":{\"keccak256\":\"0x3a82b9d79edd1e418d3f166af46654217f207dd519a3b26673e7e01d85797649\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0818990811db9adffdee91aa1a3c28f2adcb318f7b4d04bcb82a857f0ae6a14b\",\"dweb:/ipfs/QmdcRjsdk3HCo7BXvAViCmFwrfSuxCMotXXcFDX1enTq9o\"]},\"project:/contracts/policy/Policed.sol\":{\"keccak256\":\"0xac0ccec0cafcf4d0e6dd2fcff84b4ab9c2eb70e449cc335c4131c7cda4305bea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d338c84e3286ee1d8c507221a9db515b0644c7a0d76364c9231e391691e1fa15\",\"dweb:/ipfs/QmbFwDftaHeNB1eHjKGxcjcTYMb23iVHAxR1Gi9AhsY8cw\"]},\"project:/contracts/policy/PolicedUtils.sol\":{\"keccak256\":\"0xcb4a275e06c9b8ae68ccf1c5b07e472d7441e5d50de84a0fb3e707cd66c59300\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://437f054d74f49621530e7e02a440fd67681249f482f91126544d44ed135c2a83\",\"dweb:/ipfs/QmeKAoXxLhXtFx4UX9ohYF4YyfiUqRdsA6TYyj1dGPKMr8\"]},\"project:/contracts/policy/Policy.sol\":{\"keccak256\":\"0xe3e1d9e85b325b1b10cdddc805934f782c6afd48c31c842c4fdc31facf738e54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bd44653112a8399dafb826ac7dffe030019aba0a4125eaab36a8b0c49ca3b98\",\"dweb:/ipfs/Qmc78KixAw9VD9xd9RR1EFDxZoJ52pgNo8DDPNtJgF91Y6\"]},\"project:/contracts/proxy/ForwardTarget.sol\":{\"keccak256\":\"0xc2b17e83877e14d1f32faaca4010f65cf8515c009dbf0ee09e73912ef1e1a4c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f3713b39edb3d06fbda57f7bab8fbd36e286a327ad36f8651c5b1877386667\",\"dweb:/ipfs/QmdF4oaYgLjEcpRqbAjdHXEdQRzZWPk7LqgqHS5SBwN8t5\"]},\"project:/contracts/utils/StringPacker.sol\":{\"keccak256\":\"0x65a6869487c2ea25893715a3f26d5db0aa68a933894e2bfeaf8a6cfdee0df731\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ae1a06e1a4bddbb446d61f19ed25a6fe8a91f02ca05e0361b3b497af28c897a\",\"dweb:/ipfs/QmXqeBvyzr5QwLioWEiS2MXBZZe9hdszsDwn91gR3wpgHU\"]},\"project:/contracts/utils/TimeUtils.sol\":{\"keccak256\":\"0x774aeda81c9cb23eb02c5ec60bc1af8cb915627ae9fbc78862d3c4eadf560d1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d619e69a1e3063ccf6a38b44e8a8d1d4e86161668134dc414f3c7d75125d6cf7\",\"dweb:/ipfs/QmU2dS1MFr9Sgq9iD6mYkpTjuVV17Xq19aho5NGZcuZkAZ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101985760003560e01c8063536f9f42116100e3578063753ec1031161008c578063c4d66de811610066578063c4d66de814610350578063ce32de2b14610363578063d40d172d1461037657600080fd5b8063753ec1031461032b57806385defaf41461033e5780638b0e9f3f1461034757600080fd5b80635c60da1b116100bd5780635c60da1b146102e757806361461954146102fc578063705d53041461030457600080fd5b8063536f9f42146102b85780635423b94d146102cb57806357e871e7146102de57600080fd5b806328ea6dda1161014557806339634e0c1161011f57806339634e0c1461028a578063486a27db1461029d5780634b9f5c98146102a557600080fd5b806328ea6dda14610252578063328a1da91461025b57806333800bac1461026357600080fd5b806309ed46071161017657806309ed460714610209578063249cb3fa14610211578063264762041461023257600080fd5b80630505c8c91461019d578063072caf6e146101e157806309d7f23b146101f6575b600080fd5b6101c47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101f46101ef3660046118e2565b610396565b005b6101f4610204366004611924565b61043d565b6101c46104f6565b61022461021f3660046119e8565b6105e1565b6040519081526020016101d8565b610224610240366004611a18565b60026020526000908152604090205481565b61022460055481565b610224603c81565b6101c47f000000000000000000000000000000000000000000000000000000000000000081565b6101f4610298366004611a18565b6106ec565b61022460f081565b6101f46102b3366004611a4a565b6107aa565b6102246102c6366004611a67565b6109f3565b6102246102d93660046118e2565b610b2d565b61022460075481565b600080516020611b85833981519152546101c4565b6101f4610c75565b6101c47f000000000000000000000000000000000000000000000000000000000000000081565b6001546101c4906001600160a01b031681565b61022460065481565b61022460045481565b6101f461035e366004611a18565b6110e5565b6101f4610371366004611a80565b611170565b610224610384366004611a18565b60036020526000908152604090205481565b600654156103fd5760405162461bcd60e51b815260206004820152602960248201527f5468697320696e7374616e63652068617320616c7265616479206265656e20636044820152681bdb999a59dd5c995960ba1b60648201526084015b60405180910390fd5b61040860f042611ab8565b6006556007556001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104cc5760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084016103f4565b600080825160208401855af43d806000803e8180156104ea57816000f35b816000fd5b5050505050565b60003061050f600080516020611b858339815191525490565b6001600160a01b0316146105745760405162461bcd60e51b815260206004820152602660248201527f54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20604482015265636c6f6e657360d01b60648201526084016103f4565b600061057f306113b1565b60405163189acdbd60e31b81523060048201529091506001600160a01b0382169063c4d66de890602401600060405180830381600087803b1580156105c357600080fd5b505af11580156105d7573d6000803e3d6000fd5b5092949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316148061063057506000546001600160a01b038381169116145b6106a25760405162461bcd60e51b815260206004820152603c60248201527f4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e60448201527f74726163742063616e207365742074686520696e746572666163652e0000000060648201526084016103f4565b6040517f455243313832305f4143434550545f4d41474943000000000000000000000000602082015260340160405160208183030381529060405280519060200120905092915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461077b5760405162461bcd60e51b815260206004820152602e60248201527f4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c60448201526d36103a3434b99036b2ba3437b21760911b60648201526084016103f4565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60065442106108175760405162461bcd60e51b815260206004820152603360248201527f566f7465732063616e206f6e6c79206265207265636f7264656420647572696e60448201527219c81d1a19481d9bdd1a5b99c81c195c9a5bd9606a1b60648201526084016103f4565b600061082533600754610b2d565b9050600081116108955760405162461bcd60e51b815260206004820152603560248201527f566f74657273206d75737420686176652068656c6420746f6b656e73206265666044820152746f7265207468697320766f74696e67206379636c6560581b60648201526084016103f4565b33600090815260026020908152604080832054600390925290912054801515821561094d578415158115151415806108cd5750818314155b6109255760405162461bcd60e51b815260206004820152602360248201527f596f757220766f74652068617320616c7265616479206265656e207265636f7260448201526219195960ea1b60648201526084016103f4565b801561094d57816005546109399190611ad0565b600555336000908152600360205260408120555b841561097757836005546109619190611ab8565b6005553360009081526003602052604090208490555b3360009081526002602052604090208490556004548390610999908690611ab8565b6109a39190611ad0565b6004556109af3361141a565b6040805186151581526020810186905233917f83d67e3bded439819290451fe54e3296e9bc906b45038ef8ba8ae12df5050f98910160405180910390a25050505050565b604051630981b24d60e41b81526004810182905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063981b24d09060240160206040518083038186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a909190611ae7565b90506000610a9c61147c565b6001600160a01b0316635bb748ad856040518263ffffffff1660e01b8152600401610ac991815260200190565b60206040518083038186803b158015610ae157600080fd5b505afa158015610af5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b199190611ae7565b9050610b258183611ab8565b949350505050565b604051630748d63560e31b81526001600160a01b0383811660048301526024820183905260009182917f00000000000000000000000000000000000000000000000000000000000000001690633a46b1a89060440160206040518083038186803b158015610b9a57600080fd5b505afa158015610bae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd29190611ae7565b90506000610bde61147c565b60405163334ff4e160e21b81526001600160a01b03878116600483015260248201879052919091169063cd3fd3849060440160206040518083038186803b158015610c2857600080fd5b505afa158015610c3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c609190611ae7565b9050610c6c8183611ab8565b95945050505050565b60006002600454610c869190611b00565b90506000610c956007546109f3565b9050426000610ca5600284611b00565b6005541015610d2057603c600654610cbd9190611ab8565b8211610d205760405162461bcd60e51b815260206004820152602c60248201527f4d616a6f7269747920737570706f727420726571756972656420666f7220656160448201526b39363c9032b730b1ba34b7b760a11b60648201526084016103f4565b30610d4a7f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f6114ac565b6001600160a01b031614610dc65760405162461bcd60e51b815260206004820152603b60248201527f5468697320636f6e7472616374206e6f206c6f6e67657220686173206175746860448201527f6f72697a6174696f6e20746f20656e6163742074686520766f7465000000000060648201526084016103f4565b600454610dd557506002610e6c565b836005541015610de757506001610e6c565b6001546040516330f056e560e11b81526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116906361e0adca90602401600060405180830381600087803b158015610e4f57600080fd5b505af1158015610e63573d6000803e3d6000fd5b50505050600090505b7fa83c75fdbf6911ff21d2ef7b04f04c9a1698044e31b381d4ad4dd9fd93c336de81604051610e9b9190611b22565b60405180910390a16040516319bb6e0160e11b81527f65474dbc3934a157baaaa893dea8c73453f0cc9c47a4f857047e8f0c8b54888f60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690633376dc0290602401600060405180830381600087803b158015610f2457600080fd5b505af1158015610f38573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063a9059cbb91507f00000000000000000000000000000000000000000000000000000000000000009083906370a082319060240160206040518083038186803b158015610fc557600080fd5b505afa158015610fd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffd9190611ae7565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561105b57600080fd5b505af115801561106f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110939190611b4a565b6110df5760405162461bcd60e51b815260206004820152600f60248201527f5472616e73666572204661696c6564000000000000000000000000000000000060448201526064016103f4565b50505050565b60006110fd600080516020611b858339815191525490565b6001600160a01b0316146111645760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016103f4565b61116d81611567565b50565b60065442106111dd5760405162461bcd60e51b815260206004820152603360248201527f566f7465732063616e206f6e6c79206265207265636f7264656420647572696e60448201527219c81d1a19481d9bdd1a5b99c81c195c9a5bd9606a1b60648201526084016103f4565b60006111eb33600754610b2d565b90506000811161125b5760405162461bcd60e51b815260206004820152603560248201527f566f74657273206d75737420686176652068656c6420746f6b656e73206265666044820152746f7265207468697320766f74696e67206379636c6560581b60648201526084016103f4565b60006112678385611ab8565b9050808210156112df5760405162461bcd60e51b815260206004820152603760248201527f596f757220766f74696e6720706f776572206973206c657373207468616e207360448201527f75626d697474656420796573202b206e6f20766f74657300000000000000000060648201526084016103f4565b336000908152600260209081526040808320546003909252909120548015611313578060055461130f9190611ad0565b6005555b336000908152600360205260409020869055600554611333908790611ab8565b6005553360009081526002602052604090208390556004548290611358908590611ab8565b6113629190611ad0565b60045561136e3361141a565b604080518781526020810187905233917fc28851797488c206008adc97915df5e42f45424300d2823e52f6e4bef368c1b8910160405180910390a2505050505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0949350505050565b61142261147c565b6040516324b07fd160e21b81526001600160a01b03838116600483015291909116906392c1ff44906024015b600060405180830381600087803b15801561146857600080fd5b505af11580156104ef573d6000803e3d6000fd5b60006114a77fdf849ae066ce5ea7a01105f3db8539dd51779b4506741de6731ef32f7f4daa186114ac565b905090565b60405163555ddc6560e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260248101829052600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b15801561152957600080fd5b505afa15801561153d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115619190611b67565b92915050565b600061157f600080516020611b858339815191525490565b6001600160a01b0316146115e65760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016103f4565b6115ef81611655565b604051635df8122f60e01b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166024820152731820a4b7618bde71dce8cdc73aab6c95905fad2490635df8122f9060440161144e565b600061166d600080516020611b858339815191525490565b6001600160a01b0316146116d45760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016103f4565b61116d8160006116f0600080516020611b858339815191525490565b6001600160a01b0316146117575760405162461bcd60e51b815260206004820152602860248201527f43616e206f6e6c792062652063616c6c656420647572696e6720696e697469616044820152673634bd30ba34b7b760c11b60648201526084016103f4565b6000816001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561179257600080fd5b505afa1580156117a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ca9190611b67565b90506001600160a01b0381166118375760405162461bcd60e51b815260206004820152602c60248201527f696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e672060448201526b1d1bc81a5b5c1b195b595b9d60a21b60648201526084016103f4565b61184081611844565b5050565b806001600160a01b0316611864600080516020611b858339815191525490565b6001600160a01b031614156118bb5760405162461bcd60e51b815260206004820152601f60248201527f496d706c656d656e746174696f6e20616c7265616479206d61746368696e670060448201526064016103f4565b600080516020611b8583398151915255565b6001600160a01b038116811461116d57600080fd5b600080604083850312156118f557600080fd5b8235611900816118cd565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561193757600080fd5b8235611942816118cd565b9150602083013567ffffffffffffffff8082111561195f57600080fd5b818501915085601f83011261197357600080fd5b8135818111156119855761198561190e565b604051601f8201601f19908116603f011681019083821181831017156119ad576119ad61190e565b816040528281528860208487010111156119c657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080604083850312156119fb57600080fd5b823591506020830135611a0d816118cd565b809150509250929050565b600060208284031215611a2a57600080fd5b8135611a35816118cd565b9392505050565b801515811461116d57600080fd5b600060208284031215611a5c57600080fd5b8135611a3581611a3c565b600060208284031215611a7957600080fd5b5035919050565b60008060408385031215611a9357600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b60008219821115611acb57611acb611aa2565b500190565b600082821015611ae257611ae2611aa2565b500390565b600060208284031215611af957600080fd5b5051919050565b600082611b1d57634e487b7160e01b600052601260045260246000fd5b500490565b6020810160038310611b4457634e487b7160e01b600052602160045260246000fd5b91905290565b600060208284031215611b5c57600080fd5b8151611a3581611a3c565b600060208284031215611b7957600080fd5b8151611a35816118cd56fef86c915dad5894faca0dfa067c58fdf4307406d255ed0a65db394f82b77f53d4a2646970667358221220bf3c72218b516a97c5b6c541c4529a163b5371bc94ddaae8f82c62db24c63e8b64736f6c63430008090033",
  "immutableReferences": {
    "11848": [
      {
        "length": 32,
        "start": 777
      },
      {
        "length": 32,
        "start": 2582
      },
      {
        "length": 32,
        "start": 2904
      },
      {
        "length": 32,
        "start": 3919
      }
    ],
    "11851": [
      {
        "length": 32,
        "start": 616
      }
    ],
    "12039": [
      {
        "length": 32,
        "start": 418
      },
      {
        "length": 32,
        "start": 1096
      },
      {
        "length": 32,
        "start": 1509
      },
      {
        "length": 32,
        "start": 1783
      },
      {
        "length": 32,
        "start": 3593
      },
      {
        "length": 32,
        "start": 3800
      },
      {
        "length": 32,
        "start": 3970
      },
      {
        "length": 32,
        "start": 5315
      },
      {
        "length": 32,
        "start": 5644
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1413:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:86:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "131:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "140:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "143:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "133:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "133:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "133:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:66"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "116:3:66",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "121:1:66",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:66"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:11:66"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "125:1:66",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:19:66"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:31:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:42:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:50:66"
                  },
                  "nodeType": "YulIf",
                  "src": "77:70:66"
                }
              ]
            },
            "name": "validator_revert_contract_Policy",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "56:5:66",
                "type": ""
              }
            ],
            "src": "14:139:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "314:428:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "360:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "369:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "372:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "362:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "362:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "362:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "335:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "331:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "331:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "356:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "327:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "327:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "324:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "385:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "404:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "398:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "398:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "389:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "456:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "423:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "423:39:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "423:39:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "471:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "481:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "471:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "495:40:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "520:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "531:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "516:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "516:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "510:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:25:66"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "499:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "577:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "544:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "544:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "594:17:66",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "604:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "594:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "620:40:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "645:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "656:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "641:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "641:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "635:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "635:25:66"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "624:7:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "702:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Policy",
                      "nodeType": "YulIdentifier",
                      "src": "669:32:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "669:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "669:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "719:17:66",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "729:7:66"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "719:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Policy_$12499t_contract$_ECO_$2497t_contract$_ECOx_$3238_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "264:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "275:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "287:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "295:6:66",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "303:6:66",
                "type": ""
              }
            ],
            "src": "158:584:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "876:175:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "886:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "898:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "909:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "894:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "886:4:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "921:29:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "939:3:66",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "944:1:66",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "935:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "935:11:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "948:1:66",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "931:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "931:19:66"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "925:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "966:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "981:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "989:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "977:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "977:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "959:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "959:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "959:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1013:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1024:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1009:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1009:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1033:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1041:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1029:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1029:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1002:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1002:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1002:43:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "837:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "848:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "856:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "867:4:66",
                "type": ""
              }
            ],
            "src": "747:304:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1230:181:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1247:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1258:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1240:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1240:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1281:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1292:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1277:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1277:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1297:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1270:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1270:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1270:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1320:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1331:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1316:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1316:18:66"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1336:33:66",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1309:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1309:61:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1309:61:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1379:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1391:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1402:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1387:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1379:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1207:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1221:4:66",
                "type": ""
              }
            ],
            "src": "1056:355:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_Policy(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_Policy_$12499t_contract$_ECO_$2497t_contract$_ECOx_$3238_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_Policy(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_Policy(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_contract_Policy(value_2)\n        value2 := value_2\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14131:66",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:66",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "131:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "141:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "153:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "164:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "149:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "149:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "141:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "183:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "198:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "206:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "194:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "194:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "176:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "176:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "176:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Policy_$12499__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "100:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "111:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "122:4:66",
                "type": ""
              }
            ],
            "src": "14:242:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "316:109:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "403:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "412:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "415:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "405:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "405:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "405:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "339:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "350:5:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "357:42:66",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "346:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "346:54:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "336:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "336:65:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "329:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:73:66"
                  },
                  "nodeType": "YulIf",
                  "src": "326:93:66"
                }
              ]
            },
            "name": "validator_revert_contract_Proposal",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "305:5:66",
                "type": ""
              }
            ],
            "src": "261:164:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "535:238:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "581:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "590:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "593:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "583:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "583:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "583:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "556:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "565:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "552:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "552:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "577:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "548:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "548:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "545:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "606:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "632:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "619:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "610:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "686:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Proposal",
                      "nodeType": "YulIdentifier",
                      "src": "651:34:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "651:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "651:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "701:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "711:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "701:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "725:42:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "752:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "763:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "748:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "748:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "735:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:32:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "725:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Proposal_$10943t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "493:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "504:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "516:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "524:6:66",
                "type": ""
              }
            ],
            "src": "430:343:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "810:95:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "827:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "834:3:66",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "839:10:66",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "830:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "830:20:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "820:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "820:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "867:1:66",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "870:4:66",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "860:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "860:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "860:15:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "891:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "894:4:66",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "884:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "884:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "884:15:66"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "778:127:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1006:970:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1052:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1061:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1064:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1054:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1054:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1054:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1027:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1036:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1023:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1023:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1048:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1019:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1019:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1016:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1077:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1103:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1090:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1090:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1081:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1157:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Proposal",
                      "nodeType": "YulIdentifier",
                      "src": "1122:34:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1122:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1122:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1172:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1182:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1172:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1196:46:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1227:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1238:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1223:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1223:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1210:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1210:32:66"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1200:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1251:28:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1261:18:66",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1255:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1306:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1315:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1318:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1308:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1308:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1308:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1294:6:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1302:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1291:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:14:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1288:34:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1331:32:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1345:9:66"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1356:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1341:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1341:22:66"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1335:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1411:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1420:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1423:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1413:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1413:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1413:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1390:2:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1394:4:66",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1386:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1386:13:66"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1401:7:66"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1382:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1382:27:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1375:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1375:35:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1372:55:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1436:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1459:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1446:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1446:16:66"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1440:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1485:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1487:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1487:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1487:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1477:2:66"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1481:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1474:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1474:10:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1471:36:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1516:17:66",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1530:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1526:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1526:7:66"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1520:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1542:23:66",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1562:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1556:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1556:9:66"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1546:6:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1574:71:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1596:6:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1620:2:66"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1624:4:66",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1616:3:66"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1616:13:66"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1631:2:66"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1612:3:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1612:22:66"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1636:2:66",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1608:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1608:31:66"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1641:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1604:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1604:40:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1592:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1592:53:66"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1578:10:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1704:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1706:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1706:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1706:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1663:10:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1675:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1660:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1683:10:66"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1695:6:66"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1680:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1680:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1657:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1657:46:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1654:72:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1742:2:66",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1746:10:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1735:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1735:22:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1735:22:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1773:6:66"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1781:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1766:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1766:18:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1766:18:66"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1830:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1839:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1842:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1832:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1832:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1832:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1807:2:66"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1811:2:66"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1803:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1803:11:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1816:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1799:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1799:20:66"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1821:7:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1796:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1796:33:66"
                  },
                  "nodeType": "YulIf",
                  "src": "1793:53:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1872:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1880:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1868:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:15:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1889:2:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1893:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1885:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1885:11:66"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1898:2:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1855:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1855:46:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1855:46:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1925:6:66"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1933:2:66"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1921:3:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1921:15:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1938:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1917:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1917:24:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1943:1:66",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:35:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:35:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1954:16:66",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1964:6:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1954:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "964:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "975:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "987:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "995:6:66",
                "type": ""
              }
            ],
            "src": "910:1066:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2082:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2092:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2104:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2115:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2100:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2092:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2134:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2149:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2157:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2145:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2127:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2127:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2127:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2051:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2062:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2073:4:66",
                "type": ""
              }
            ],
            "src": "1981:226:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2299:238:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2345:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2354:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2357:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2347:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2347:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2347:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2320:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2329:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2316:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2316:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2341:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2312:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2312:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "2309:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2370:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2393:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2380:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2380:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2370:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2412:45:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2442:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2453:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2438:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2438:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2425:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2425:32:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2416:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2501:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Proposal",
                      "nodeType": "YulIdentifier",
                      "src": "2466:34:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2466:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2516:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2526:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2516:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2257:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2268:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2280:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2288:6:66",
                "type": ""
              }
            ],
            "src": "2212:325:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2643:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2653:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2665:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2676:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2661:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2661:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2653:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2695:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2706:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2688:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2688:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2612:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2623:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2634:4:66",
                "type": ""
              }
            ],
            "src": "2542:177:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2794:187:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2840:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2849:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2852:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2842:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2842:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2842:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2815:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2824:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2811:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2811:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2836:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2807:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2807:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "2804:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2865:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2891:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2878:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2878:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2869:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2945:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Proposal",
                      "nodeType": "YulIdentifier",
                      "src": "2910:34:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2910:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2910:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2960:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2970:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2960:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2760:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2771:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2783:6:66",
                "type": ""
              }
            ],
            "src": "2724:257:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3087:76:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3097:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3109:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3120:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3105:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3105:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3097:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3139:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3150:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3132:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3132:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3132:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3056:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3067:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3078:4:66",
                "type": ""
              }
            ],
            "src": "2986:177:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3282:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3292:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3304:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3315:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3300:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3300:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3292:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3334:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3349:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3357:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3345:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3345:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3327:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3327:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3327:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ECOx_$3238__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3251:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3262:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3273:4:66",
                "type": ""
              }
            ],
            "src": "3168:239:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3454:76:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3508:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3517:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3520:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3510:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3510:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3510:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3477:5:66"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3498:5:66"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3491:6:66"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3491:13:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3484:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3484:21:66"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3474:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3474:32:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3467:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3467:40:66"
                  },
                  "nodeType": "YulIf",
                  "src": "3464:60:66"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3443:5:66",
                "type": ""
              }
            ],
            "src": "3412:118:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3602:174:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3648:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3657:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3660:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3650:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3650:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3650:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3623:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3632:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3619:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3619:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3644:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3615:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3615:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "3612:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3673:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3699:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3686:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3686:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3677:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3740:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "3718:21:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3718:28:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3718:28:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3755:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3765:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3755:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3568:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3579:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3591:6:66",
                "type": ""
              }
            ],
            "src": "3535:241:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3851:110:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3897:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3906:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3909:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3899:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3899:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3899:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3872:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3881:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3868:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3868:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3893:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3864:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3864:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "3861:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3922:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3945:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3932:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3932:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3922:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3817:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3828:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3840:6:66",
                "type": ""
              }
            ],
            "src": "3781:180:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4053:238:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4099:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4108:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4111:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4101:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4101:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4101:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4074:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4083:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4070:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4070:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4095:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4066:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4066:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "4063:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4124:36:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4150:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4137:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4137:23:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4128:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4204:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Proposal",
                      "nodeType": "YulIdentifier",
                      "src": "4169:34:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4169:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4169:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4219:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4229:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4219:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4243:42:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4270:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4281:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4266:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4266:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4253:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4253:32:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4243:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4011:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4022:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4034:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4042:6:66",
                "type": ""
              }
            ],
            "src": "3966:325:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4409:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4419:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4431:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4442:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4427:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4427:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4419:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4461:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4476:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4484:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4472:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4472:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4454:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4454:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4454:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ECO_$2497__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4378:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4389:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4400:4:66",
                "type": ""
              }
            ],
            "src": "4296:238:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4658:125:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4668:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4680:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4691:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4676:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4676:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4668:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4710:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4725:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4733:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4721:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4721:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4703:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4703:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4703:74:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Proposal_$10943__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4627:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4638:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4649:4:66",
                "type": ""
              }
            ],
            "src": "4539:244:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4875:161:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4921:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4930:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4933:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4923:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4923:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4923:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4896:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4905:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4892:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4892:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4917:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4888:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4888:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "4885:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4946:33:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4969:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4956:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4956:23:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4946:6:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4988:42:66",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5015:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5026:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5011:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5011:18:66"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4998:12:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4998:32:66"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4988:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4833:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4844:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4856:6:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4864:6:66",
                "type": ""
              }
            ],
            "src": "4788:248:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5215:231:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5232:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5243:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5225:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5225:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5225:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5266:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5277:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5262:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5262:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5282:2:66",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5255:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5255:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5255:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5305:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5316:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5301:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5301:18:66"
                      },
                      {
                        "hexValue": "5468697320696e7374616e63652068617320616c7265616479206265656e2063",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5321:34:66",
                        "type": "",
                        "value": "This instance has already been c"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5294:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5294:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5294:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5376:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5387:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5372:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5372:18:66"
                      },
                      {
                        "hexValue": "6f6e66696775726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5392:11:66",
                        "type": "",
                        "value": "onfigured"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5365:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5365:39:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5365:39:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5413:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5425:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5436:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5421:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5421:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5413:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5192:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5206:4:66",
                "type": ""
              }
            ],
            "src": "5041:405:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5483:95:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5500:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5507:3:66",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5512:10:66",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5503:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5503:20:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5493:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5493:31:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5493:31:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5540:1:66",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5543:4:66",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5533:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5533:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5533:15:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5564:1:66",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5567:4:66",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5557:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5557:15:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5557:15:66"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5451:127:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5631:80:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5658:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5660:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5660:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5660:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5647:1:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5654:1:66"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5650:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5650:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5644:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5644:13:66"
                  },
                  "nodeType": "YulIf",
                  "src": "5641:39:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5689:16:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5700:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5703:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5696:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5696:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5689:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5614:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5617:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5623:3:66",
                "type": ""
              }
            ],
            "src": "5583:128:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5890:236:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5907:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5918:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5900:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5900:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5900:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5941:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5952:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5937:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5937:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5957:2:66",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5930:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5930:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5930:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5980:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5991:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5976:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5976:18:66"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c69637920636f6e7472616374206d61792063616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5996:34:66",
                        "type": "",
                        "value": "Only the policy contract may cal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5969:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5969:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5969:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6051:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6062:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6047:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6047:18:66"
                      },
                      {
                        "hexValue": "6c2074686973206d6574686f642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6067:16:66",
                        "type": "",
                        "value": "l this method."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6040:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6040:44:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6040:44:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6093:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6105:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6116:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6101:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6101:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6093:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5867:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5881:4:66",
                "type": ""
              }
            ],
            "src": "5716:410:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6305:228:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6322:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6333:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6315:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6315:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6315:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6356:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6367:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6352:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6352:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6372:2:66",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6345:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6345:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6345:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6395:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6406:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6391:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6391:18:66"
                      },
                      {
                        "hexValue": "54686973206d6574686f642063616e6e6f742062652063616c6c6564206f6e20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6411:34:66",
                        "type": "",
                        "value": "This method cannot be called on "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6384:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6384:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6384:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6466:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6477:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6462:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6462:18:66"
                      },
                      {
                        "hexValue": "636c6f6e6573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6482:8:66",
                        "type": "",
                        "value": "clones"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6455:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6455:36:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6455:36:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6500:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6512:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6523:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6508:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6508:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6500:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a35c1fe0fe1ed6afe3c9bc1734c4f5109aadfc21beb8ed8e518da672f582600b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6282:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6296:4:66",
                "type": ""
              }
            ],
            "src": "6131:402:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6712:250:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6729:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6740:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6722:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6722:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6722:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6763:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6774:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6759:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6759:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6779:2:66",
                        "type": "",
                        "value": "60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6752:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6752:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6752:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6802:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6813:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6798:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6798:18:66"
                      },
                      {
                        "hexValue": "4f6e6c792074686520706f6c696379206f7220696e7465726661636520636f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6818:34:66",
                        "type": "",
                        "value": "Only the policy or interface con"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6791:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6791:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6791:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6873:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6884:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6869:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6869:18:66"
                      },
                      {
                        "hexValue": "74726163742063616e207365742074686520696e746572666163652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6889:30:66",
                        "type": "",
                        "value": "tract can set the interface."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6862:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6862:58:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6862:58:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6929:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6941:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6952:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6937:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6937:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6929:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08d278b1488142cbb27880a3aec0587d5b0d682f7907703765895f131b608af0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6689:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6703:4:66",
                "type": ""
              }
            ],
            "src": "6538:424:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7159:79:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7176:3:66"
                      },
                      {
                        "hexValue": "455243313832305f4143434550545f4d41474943",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7181:22:66",
                        "type": "",
                        "value": "ERC1820_ACCEPT_MAGIC"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7169:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7169:35:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7169:35:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7213:19:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7224:3:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7229:2:66",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7220:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7220:12:66"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7213:3:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7143:3:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7151:3:66",
                "type": ""
              }
            ],
            "src": "6967:271:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7417:241:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7434:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7445:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7427:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7427:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7427:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7468:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7479:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7464:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7464:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7484:2:66",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7457:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7457:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7457:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7507:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7518:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7503:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7503:18:66"
                      },
                      {
                        "hexValue": "566f7465732063616e206f6e6c79206265207265636f7264656420647572696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7523:34:66",
                        "type": "",
                        "value": "Votes can only be recorded durin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7496:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7496:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7496:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7578:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7589:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7574:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7574:18:66"
                      },
                      {
                        "hexValue": "672074686520766f74696e6720706572696f64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7594:21:66",
                        "type": "",
                        "value": "g the voting period"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7567:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7567:49:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7567:49:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7625:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7637:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7648:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7633:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7633:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7625:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7394:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7408:4:66",
                "type": ""
              }
            ],
            "src": "7243:415:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7837:243:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7854:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7865:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7847:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7847:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7847:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7888:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7899:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7884:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7884:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7904:2:66",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7877:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7877:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7877:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7927:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7938:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7923:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7923:18:66"
                      },
                      {
                        "hexValue": "566f74657273206d75737420686176652068656c6420746f6b656e7320626566",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7943:34:66",
                        "type": "",
                        "value": "Voters must have held tokens bef"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7916:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7916:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7916:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7998:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8009:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7994:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7994:18:66"
                      },
                      {
                        "hexValue": "6f7265207468697320766f74696e67206379636c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8014:23:66",
                        "type": "",
                        "value": "ore this voting cycle"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7987:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7987:51:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7987:51:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8047:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8059:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8070:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8055:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8055:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8047:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7814:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7828:4:66",
                "type": ""
              }
            ],
            "src": "7663:417:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8259:225:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8276:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8287:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8269:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8269:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8269:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8310:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8321:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8306:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8306:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8326:2:66",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8299:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8299:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8299:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8349:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8360:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8345:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8345:18:66"
                      },
                      {
                        "hexValue": "596f757220766f74652068617320616c7265616479206265656e207265636f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8365:34:66",
                        "type": "",
                        "value": "Your vote has already been recor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8338:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8338:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8338:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8420:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8431:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8416:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8416:18:66"
                      },
                      {
                        "hexValue": "646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8436:5:66",
                        "type": "",
                        "value": "ded"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8409:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8409:33:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8409:33:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8451:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8463:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8474:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8459:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8459:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8451:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8236:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8250:4:66",
                "type": ""
              }
            ],
            "src": "8085:399:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8538:76:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8560:22:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8562:16:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8562:18:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8562:18:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8554:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8557:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "8551:2:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8551:8:66"
                  },
                  "nodeType": "YulIf",
                  "src": "8548:34:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8591:17:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8603:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8606:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8599:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8599:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "8591:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8520:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8523:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "8529:4:66",
                "type": ""
              }
            ],
            "src": "8489:125:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8742:135:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8752:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8764:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8775:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8760:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8760:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8752:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8794:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "8819:6:66"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8812:6:66"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8812:14:66"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8805:6:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8805:22:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8787:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8787:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8787:41:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8848:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8859:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8844:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8844:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8864:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8837:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8837:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8837:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8703:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8714:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8722:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8733:4:66",
                "type": ""
              }
            ],
            "src": "8619:258:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8963:103:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9009:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9018:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9021:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9011:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9011:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9011:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8984:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8993:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8980:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8980:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9005:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8976:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8976:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "8973:52:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9034:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9050:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9044:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9044:16:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9034:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8929:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8940:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8952:6:66",
                "type": ""
              }
            ],
            "src": "8882:184:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9200:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9210:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9222:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9233:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9218:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9218:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9210:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9252:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9267:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9275:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9263:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9263:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9245:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9245:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9245:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9339:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9350:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9335:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9335:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9355:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9328:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9328:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9328:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9161:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9172:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9180:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9191:4:66",
                "type": ""
              }
            ],
            "src": "9071:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9419:171:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9450:111:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9471:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9478:3:66",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9483:10:66",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "9474:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9474:20:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9464:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9464:31:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9464:31:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9515:1:66",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9518:4:66",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9508:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9508:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9508:15:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9543:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9546:4:66",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9536:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9536:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9536:15:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9439:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9432:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9432:9:66"
                  },
                  "nodeType": "YulIf",
                  "src": "9429:132:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9570:14:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9579:1:66"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9582:1:66"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9575:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9575:9:66"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9570:1:66"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9404:1:66",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9407:1:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "9413:1:66",
                "type": ""
              }
            ],
            "src": "9373:217:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9769:234:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9786:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9797:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9779:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9779:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9779:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9820:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9831:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9816:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9816:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9836:2:66",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9809:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9809:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9809:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9859:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9870:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9855:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9855:18:66"
                      },
                      {
                        "hexValue": "4d616a6f7269747920737570706f727420726571756972656420666f72206561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9875:34:66",
                        "type": "",
                        "value": "Majority support required for ea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9848:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9848:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9848:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9930:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9941:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9926:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9926:18:66"
                      },
                      {
                        "hexValue": "726c7920656e616374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9946:14:66",
                        "type": "",
                        "value": "rly enaction"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9919:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9919:42:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9919:42:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9970:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9982:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9993:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9978:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9978:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9970:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9746:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9760:4:66",
                "type": ""
              }
            ],
            "src": "9595:408:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10182:249:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10199:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10210:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10192:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10192:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10192:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10233:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10244:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10229:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10229:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10249:2:66",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10222:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10222:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10222:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10272:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10283:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10268:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10268:18:66"
                      },
                      {
                        "hexValue": "5468697320636f6e7472616374206e6f206c6f6e676572206861732061757468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10288:34:66",
                        "type": "",
                        "value": "This contract no longer has auth"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10261:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10261:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10261:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10343:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10354:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10339:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10339:18:66"
                      },
                      {
                        "hexValue": "6f72697a6174696f6e20746f20656e6163742074686520766f7465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10359:29:66",
                        "type": "",
                        "value": "orization to enact the vote"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10332:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10332:57:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10332:57:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10398:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10410:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10421:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10406:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10406:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10398:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10159:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10173:4:66",
                "type": ""
              }
            ],
            "src": "10008:423:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10547:229:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10557:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10569:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10580:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10565:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10565:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10557:4:66"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10625:111:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10646:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10653:3:66",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "10658:10:66",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "10649:3:66"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10649:20:66"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10639:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10639:31:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10639:31:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10690:1:66",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10693:4:66",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10683:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10683:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10683:15:66"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10718:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10721:4:66",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10711:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10711:15:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10711:15:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10605:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10613:1:66",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10602:2:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10602:13:66"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10595:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10595:21:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10592:144:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10752:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10763:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10745:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10745:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10745:25:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_Result_$10469__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10516:9:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10527:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10538:4:66",
                "type": ""
              }
            ],
            "src": "10436:340:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10859:167:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10905:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10914:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10917:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10907:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10907:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10907:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10880:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10889:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10876:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10876:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10901:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "10872:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10872:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "10869:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10930:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10949:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10943:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10943:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "10934:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10990:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "10968:21:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10968:28:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10968:28:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11005:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11015:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11005:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10825:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "10836:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10848:6:66",
                "type": ""
              }
            ],
            "src": "10781:245:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11205:165:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11222:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11233:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11215:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11215:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11215:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11256:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11267:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11252:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11252:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11272:2:66",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11245:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11245:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11245:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11295:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11306:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11291:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11291:18:66"
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11311:17:66",
                        "type": "",
                        "value": "Transfer Failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11284:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11284:45:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11284:45:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11338:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11350:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11361:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11346:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11346:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11338:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11182:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11196:4:66",
                "type": ""
              }
            ],
            "src": "11031:339:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11549:230:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11566:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11577:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11559:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11559:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11559:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11600:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11611:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11596:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11596:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11616:2:66",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11589:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11589:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11589:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11639:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11650:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11635:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11635:18:66"
                      },
                      {
                        "hexValue": "43616e206f6e6c792062652063616c6c656420647572696e6720696e69746961",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11655:34:66",
                        "type": "",
                        "value": "Can only be called during initia"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11628:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11628:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11628:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11710:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11721:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11706:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11706:18:66"
                      },
                      {
                        "hexValue": "6c697a6174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11726:10:66",
                        "type": "",
                        "value": "lization"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11699:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11699:38:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11699:38:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11746:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11758:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11769:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11754:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11754:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11746:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11526:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11540:4:66",
                "type": ""
              }
            ],
            "src": "11375:404:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11958:245:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11975:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11986:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11968:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11968:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11968:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12009:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12020:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12005:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12005:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12025:2:66",
                        "type": "",
                        "value": "55"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11998:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11998:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11998:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12048:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12059:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12044:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12044:18:66"
                      },
                      {
                        "hexValue": "596f757220766f74696e6720706f776572206973206c657373207468616e2073",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12064:34:66",
                        "type": "",
                        "value": "Your voting power is less than s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12037:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12037:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12037:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12119:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12130:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12115:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12115:18:66"
                      },
                      {
                        "hexValue": "75626d697474656420796573202b206e6f20766f746573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12135:25:66",
                        "type": "",
                        "value": "ubmitted yes + no votes"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12108:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12108:53:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12108:53:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12170:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12182:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12193:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12178:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12178:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12170:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1d79075393298e308c04c21511f7d86ed39c14c8596cd4e2b43ecac41a3f2c92__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11935:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11949:4:66",
                "type": ""
              }
            ],
            "src": "11784:419:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12337:119:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12347:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12359:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12370:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12355:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12355:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12347:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12389:9:66"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12400:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12382:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12382:25:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12382:25:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12427:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12438:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12423:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12423:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12443:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12416:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12416:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12416:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12298:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12309:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12317:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12328:4:66",
                "type": ""
              }
            ],
            "src": "12208:248:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12590:168:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12600:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12612:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12623:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12608:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12608:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12600:4:66"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12642:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12657:6:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12665:42:66",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12653:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12653:55:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12635:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12635:74:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12635:74:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12729:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12740:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12725:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12725:18:66"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12745:6:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12718:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12718:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12718:34:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12551:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12562:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12570:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12581:4:66",
                "type": ""
              }
            ],
            "src": "12461:297:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12844:180:66",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12890:16:66",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12899:1:66",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12902:1:66",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12892:6:66"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12892:12:66"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12892:12:66"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12865:7:66"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12874:9:66"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12861:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12861:23:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12886:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12857:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12857:32:66"
                  },
                  "nodeType": "YulIf",
                  "src": "12854:52:66"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12915:29:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12934:9:66"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12928:5:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12928:16:66"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "12919:5:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "12988:5:66"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_Proposal",
                      "nodeType": "YulIdentifier",
                      "src": "12953:34:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12953:41:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12953:41:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13003:15:66",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13013:5:66"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13003:6:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12810:9:66",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12821:7:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12833:6:66",
                "type": ""
              }
            ],
            "src": "12763:261:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13158:198:66",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13168:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13180:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13191:2:66",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13176:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13176:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13168:4:66"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13203:52:66",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13213:42:66",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13207:2:66",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13271:9:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13286:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13294:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13282:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13282:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13264:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13264:34:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13264:34:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13318:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13329:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13314:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13314:18:66"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "13338:6:66"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13346:2:66"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13334:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13334:15:66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13307:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13307:43:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13307:43:66"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13119:9:66",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13130:6:66",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13138:6:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13149:4:66",
                "type": ""
              }
            ],
            "src": "13029:327:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13535:234:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13552:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13563:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13545:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13545:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13545:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13586:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13597:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13582:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13582:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13602:2:66",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13575:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13575:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13575:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13625:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13636:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13621:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13621:18:66"
                      },
                      {
                        "hexValue": "696e697469616c697a6174696f6e206661696c7572653a206e6f7468696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13641:34:66",
                        "type": "",
                        "value": "initialization failure: nothing "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13614:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13614:62:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13614:62:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13696:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13707:2:66",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13692:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13692:18:66"
                      },
                      {
                        "hexValue": "746f20696d706c656d656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13712:14:66",
                        "type": "",
                        "value": "to implement"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13685:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13685:42:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13685:42:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13736:27:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13748:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13759:3:66",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13744:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13744:19:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13736:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_358f0a69429e5f4475e97793c43ead4f9c0987f98e7591dc6c37d0e56b6bd527__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13512:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13526:4:66",
                "type": ""
              }
            ],
            "src": "13361:408:66"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13948:181:66",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13965:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13976:2:66",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13958:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13958:21:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13958:21:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13999:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14010:2:66",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13995:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13995:18:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14015:2:66",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13988:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13988:30:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13988:30:66"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14038:9:66"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14049:2:66",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14034:3:66"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14034:18:66"
                      },
                      {
                        "hexValue": "496d706c656d656e746174696f6e20616c7265616479206d61746368696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14054:33:66",
                        "type": "",
                        "value": "Implementation already matching"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14027:6:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14027:61:66"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14027:61:66"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14097:26:66",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14109:9:66"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14120:2:66",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14105:3:66"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14105:18:66"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14097:4:66"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13925:9:66",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13939:4:66",
                "type": ""
              }
            ],
            "src": "13774:355:66"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_Policy_$12499__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_contract_Proposal(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_Proposal_$10943t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Proposal(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Proposal(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_contract_Proposal(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Proposal(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ECOx_$3238__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_Proposal(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_ECO_$2497__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_Proposal_$10943__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"This instance has already been c\")\n        mstore(add(headStart, 96), \"onfigured\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ddfe873f990498911a04bc4aabb4a93f1825e7027ae19680f0d3dfe6f96c5333__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Only the policy contract may cal\")\n        mstore(add(headStart, 96), \"l this method.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a35c1fe0fe1ed6afe3c9bc1734c4f5109aadfc21beb8ed8e518da672f582600b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"This method cannot be called on \")\n        mstore(add(headStart, 96), \"clones\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_08d278b1488142cbb27880a3aec0587d5b0d682f7907703765895f131b608af0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"Only the policy or interface con\")\n        mstore(add(headStart, 96), \"tract can set the interface.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_a2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b4__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"ERC1820_ACCEPT_MAGIC\")\n        end := add(pos, 20)\n    }\n    function abi_encode_tuple_t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"Votes can only be recorded durin\")\n        mstore(add(headStart, 96), \"g the voting period\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"Voters must have held tokens bef\")\n        mstore(add(headStart, 96), \"ore this voting cycle\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Your vote has already been recor\")\n        mstore(add(headStart, 96), \"ded\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Majority support required for ea\")\n        mstore(add(headStart, 96), \"rly enaction\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"This contract no longer has auth\")\n        mstore(add(headStart, 96), \"orization to enact the vote\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_enum$_Result_$10469__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer Failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_924426f8a9b4c1ba7932715d330babd83ef9bbe979a56ada3b3f308449cf7bc6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Can only be called during initia\")\n        mstore(add(headStart, 96), \"lization\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1d79075393298e308c04c21511f7d86ed39c14c8596cd4e2b43ecac41a3f2c92__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 55)\n        mstore(add(headStart, 64), \"Your voting power is less than s\")\n        mstore(add(headStart, 96), \"ubmitted yes + no votes\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_Proposal(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_358f0a69429e5f4475e97793c43ead4f9c0987f98e7591dc6c37d0e56b6bd527__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"initialization failure: nothing \")\n        mstore(add(headStart, 96), \"to implement\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e0812d513da600b0cd88df6a5ff840c6d72d8e06af5c71d08b8249ccdcc65225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Implementation already matching\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 66,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "445:7550:31:-:0;;;2014:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2114:7;2123:8;2133:9;2114:7;;670:32:44;696:4;670:17;:32::i;:::-;-1:-1:-1;;;;;1046:16:39;;;;;2402:59:40::1;::::0;-1:-1:-1;;;2402:59:40;;2437:4:::1;2402:59;::::0;::::1;959:34:66::0;1029:15;;;1009:18;;;1002:43;303:42:38::1;::::0;2402:26:40::1;::::0;894:18:66;;2402:59:40::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;593:19:37;;::::1;;::::0;-1:-1:-1;;622:21:37::1;;::::0;-1:-1:-1;445:7550:31;;-1:-1:-1;;;445:7550:31;1823:213:44;-1:-1:-1;;;;;1892:25:44;;:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;1892:16;-1:-1:-1;;;;;1892:25:44;;;1884:69;;;;-1:-1:-1;;;1884:69:44;;1258:2:66;1884:69:44;;;1240:21:66;1297:2;1277:18;;;1270:30;1336:33;1316:18;;;1309:61;1387:18;;1884:69:44;;;;;;;;-1:-1:-1;;;;;;;;;;;1986:34:44;1823:213::o;14:139:66:-;-1:-1:-1;;;;;97:31:66;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:584::-;287:6;295;303;356:2;344:9;335:7;331:23;327:32;324:52;;;372:1;369;362:12;324:52;404:9;398:16;423:39;456:5;423:39;:::i;:::-;531:2;516:18;;510:25;481:5;;-1:-1:-1;544:41:66;510:25;544:41;:::i;:::-;656:2;641:18;;635:25;604:7;;-1:-1:-1;669:41:66;635:25;669:41;:::i;:::-;729:7;719:17;;;158:584;;;;;:::o;1056:355::-;445:7550:31;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "445:7550:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;720:30:39;;;;;;;;-1:-1:-1;;;;;194:55:66;;;176:74;;164:2;149:18;720:30:39;;;;;;;;6110:288:31;;;;;;:::i;:::-;;:::i;:::-;;2733:1279:39;;;;;;:::i;:::-;;:::i;4316:317:40:-;;;:::i;2604:360::-;;;;;;:::i;:::-;;:::i;:::-;;;2688:25:66;;;2676:2;2661:18;2604:360:40;2542:177:66;601:40:31;;;;;;:::i;:::-;;;;;;;;;;;;;;975:23;;;;;;1172:50;;1213:9;1172:50;;435:31:37;;;;;3569:111:40;;;;;;:::i;:::-;;:::i;1075:45:31:-;;1111:9;1075:45;;2504:1138;;;;;;:::i;:::-;;:::i;656:276:37:-;;;;;;:::i;:::-;;:::i;938:295::-;;;;;;:::i;:::-;;:::i;1932:26:31:-;;;;;;1629:146:44;-1:-1:-1;;;;;;;;;;;1733:26:44;1629:146;;6812:1181:31;;;:::i;366:29:37:-;;;;;537:24:31;;;;;-1:-1:-1;;;;;537:24:31;;;1313:23;;;;;;858:25;;;;;;5656:108;;;;;;:::i;:::-;;:::i;4446:1052::-;;;;;;:::i;:::-;;:::i;710:43::-;;;;;;:::i;:::-;;;;;;;;;;;;;;6110:288;6216:8;;:13;6208:67;;;;-1:-1:-1;;;6208:67:31;;5243:2:66;6208:67:31;;;5225:21:66;5282:2;5262:18;;;5255:30;5321:34;5301:18;;;5294:62;-1:-1:-1;;;5372:18:66;;;5365:39;5421:19;;6208:67:31;;;;;;;;;6297:21;1111:9;513:15:65;6297:21:31;:::i;:::-;6286:8;:32;6328:11;:32;6371:8;:20;;-1:-1:-1;;6371:20:31;-1:-1:-1;;;;;6371:20:31;;;;;;;;;;6110:288::o;2733:1279:39:-;883:10;-1:-1:-1;;;;;905:6:39;883:29;;862:122;;;;-1:-1:-1;;;862:122:39;;5918:2:66;862:122:39;;;5900:21:66;5957:2;5937:18;;;5930:30;5996:34;5976:18;;;5969:62;-1:-1:-1;;;6047:18:66;;;6040:44;6101:19;;862:122:39;5716:410:66;862:122:39;3433:1:::1;3414::::0;3390:5:::1;3384:12;3361:4;3354:5;3350:16;3323:9;3300:5;3270:178;3625:16;3677:4;3674:1;3669:3:::0;3654:28:::1;3851:6:::0;3870:56;;::::1;;3977:4;3972:3;3965:17;3870:56;3907:4;3902:3;3895:17;3844:152;;;;2733:1279:::0;;:::o;4316:317:40:-;4357:7;4425:4;4397:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;4397:16:40;-1:-1:-1;;;;;4397:33:40;;4376:118;;;;-1:-1:-1;;;4376:118:40;;6333:2:66;4376:118:40;;;6315:21:66;6372:2;6352:18;;;6345:30;6411:34;6391:18;;;6384:62;-1:-1:-1;;;6462:18:66;;;6455:36;6508:19;;4376:118:40;6131:402:66;4376:118:40;4504:14;4521:26;4541:4;4521:11;:26::i;:::-;4557:46;;-1:-1:-1;;;4557:46:40;;4597:4;4557:46;;;176:74:66;4504:43:40;;-1:-1:-1;;;;;;4557:31:40;;;;;149:18:66;;4557:46:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4620:6:40;;4316:317;-1:-1:-1;;;;4316:317:40:o;2604:360::-;2733:7;2794:6;-1:-1:-1;;;;;2777:24:40;:5;-1:-1:-1;;;;;2777:24:40;;:57;;;-1:-1:-1;2814:20:40;;-1:-1:-1;;;;;2805:29:40;;;2814:20;;2805:29;2777:57;2756:164;;;;-1:-1:-1;;;2756:164:40;;6740:2:66;2756:164:40;;;6722:21:66;6779:2;6759:18;;;6752:30;6818:34;6798:18;;;6791:62;6889:30;6869:18;;;6862:58;6937:19;;2756:164:40;6538:424:66;2756:164:40;428:40:39;;7181:22:66;428:40:39;;;7169:35:66;7220:12;;428:40:39;;;;;;;;;;;;418:51;;;;;;2930:27:40;;2604:360;;;;:::o;3569:111::-;883:10:39;-1:-1:-1;;;;;905:6:39;883:29;;862:122;;;;-1:-1:-1;;;862:122:39;;5918:2:66;862:122:39;;;5900:21:66;5957:2;5937:18;;;5930:30;5996:34;5976:18;;;5969:62;-1:-1:-1;;;6047:18:66;;;6040:44;6101:19;;862:122:39;5716:410:66;862:122:39;3645:20:40::1;:28:::0;;-1:-1:-1;;3645:28:40::1;-1:-1:-1::0;;;;;3645:28:40;;;::::1;::::0;;;::::1;::::0;;3569:111::o;2504:1138:31:-;2582:8;;513:15:65;2570:20:31;2549:118;;;;-1:-1:-1;;;2549:118:31;;7445:2:66;2549:118:31;;;7427:21:66;7484:2;7464:18;;;7457:30;7523:34;7503:18;;;7496:62;-1:-1:-1;;;7574:18:66;;;7567:49;7633:19;;2549:118:31;7243:415:66;2549:118:31;2678:15;2696:36;2708:10;2720:11;;2696;:36::i;:::-;2678:54;;2774:1;2764:7;:11;2743:111;;;;-1:-1:-1;;;2743:111:31;;7865:2:66;2743:111:31;;;7847:21:66;7904:2;7884:18;;;7877:30;7943:34;7923:18;;;7916:62;-1:-1:-1;;;7994:18:66;;;7987:51;8055:19;;2743:111:31;7663:417:66;2743:111:31;2891:10;2865:17;2885;;;:5;:17;;;;;;;;;2935:8;:20;;;;;;;2982:17;;;3014:14;;3010:324;;3082:5;3069:18;;:9;:18;;;;:47;;;;3104:12;3091:9;:25;;3069:47;3044:141;;;;-1:-1:-1;;;3044:141:31;;8287:2:66;3044:141:31;;;8269:21:66;8326:2;8306:18;;;8299:30;8365:34;8345:18;;;8338:62;-1:-1:-1;;;8416:18:66;;;8409:33;8459:19;;3044:141:31;8085:399:66;3044:141:31;3204:9;3200:124;;;3255:12;3244:8;;:23;;;;:::i;:::-;3233:8;:34;3294:10;3308:1;3285:20;;;:8;:20;;;;;:24;3200:124;3348:5;3344:109;;;3391:7;3380:8;;:18;;;;:::i;:::-;3369:8;:29;3421:10;3412:20;;;;:8;:20;;;;;:30;;;3344:109;3469:10;3463:17;;;;:5;:17;;;;;:27;;;3513:10;;3536:9;;3513:20;;3483:7;;3513:20;:::i;:::-;:32;;;;:::i;:::-;3500:10;:45;3556:22;3567:10;3556;:22::i;:::-;3593:42;;;8812:14:66;;8805:22;8787:41;;8859:2;8844:18;;8837:34;;;3608:10:31;;3593:42;;8760:18:66;3593:42:31;;;;;;;2539:1103;;;;2504:1138;:::o;656:276:37:-;788:36;;-1:-1:-1;;;788:36:37;;;;;2688:25:66;;;749:7:37;;;;-1:-1:-1;;;;;788:8:37;:22;;;;2661:18:66;;788:36:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;772:52;;834:14;851:12;:10;:12::i;:::-;-1:-1:-1;;;;;851:28:37;;880:12;851:42;;;;;;;;;;;;;2688:25:66;;2676:2;2661:18;;2542:177;851:42:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;834:59;-1:-1:-1;911:14:37;834:59;911:5;:14;:::i;:::-;904:21;656:276;-1:-1:-1;;;;656:276:37:o;938:295::-;1080:41;;-1:-1:-1;;;1080:41:37;;-1:-1:-1;;;;;9263:55:66;;;1080:41:37;;;9245:74:66;9335:18;;;9328:34;;;1040:7:37;;;;1080:8;:21;;;;9218:18:66;;1080:41:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:58;;1131:15;1149:12;:10;:12::i;:::-;:43;;-1:-1:-1;;;1149:43:37;;-1:-1:-1;;;;;9263:55:66;;;1149:43:37;;;9245:74:66;9335:18;;;9328:34;;;1149:23:37;;;;;;;9218:18:66;;1149:43:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1131:61;-1:-1:-1;1210:16:37;1131:61;1210:6;:16;:::i;:::-;1203:23;938:295;-1:-1:-1;;;;;938:295:37:o;6812:1181:31:-;6850:22;6888:1;6875:10;;:14;;;;:::i;:::-;6850:39;;6899:14;6916:29;6933:11;;6916:16;:29::i;:::-;6899:46;-1:-1:-1;513:15:65;6955:13:31;7028:10;7037:1;6899:46;7028:10;:::i;:::-;7017:8;;:21;7013:188;;;1213:9;7087:8;;:25;;;;:::i;:::-;7079:5;:33;7054:136;;;;-1:-1:-1;;;7054:136:31;;9797:2:66;7054:136:31;;;9779:21:66;9836:2;9816:18;;;9809:30;9875:34;9855:18;;;9848:62;-1:-1:-1;;;9926:18:66;;;9919:42;9978:19;;7054:136:31;9595:408:66;7054:136:31;7270:4;7232:26;1453:66:40;7232:9:31;:26::i;:::-;-1:-1:-1;;;;;7232:43:31;;7211:149;;;;-1:-1:-1;;;7211:149:31;;10210:2:66;7211:149:31;;;10192:21:66;10249:2;10229:18;;;10222:30;10288:34;10268:18;;;10261:62;10359:29;10339:18;;;10332:57;10406:19;;7211:149:31;10008:423:66;7211:149:31;7375:10;;7371:349;;-1:-1:-1;7441:13:31;7371:349;;;7486:14;7475:8;;:25;7471:249;;;-1:-1:-1;7559:15:31;7471:249;;;7663:8;;7632:41;;-1:-1:-1;;;7632:41:31;;-1:-1:-1;;;;;7663:8:31;;;7632:41;;;176:74:66;7632:6:31;:22;;;;;;149:18:66;;7632:41:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7694:15;7687:22;;7471:249;7735:19;7749:4;7735:19;;;;;;:::i;:::-;;;;;;;;7764:34;;-1:-1:-1;;;7764:34:31;;1453:66:40;7764:34:31;;;2688:25:66;7764:6:31;-1:-1:-1;;;;;7764:17:31;;;;2661:18:66;;7764:34:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7898:33:31;;-1:-1:-1;;;7898:33:31;;7925:4;7898:33;;;176:74:66;7830:8:31;-1:-1:-1;;;;;7830:17:31;;-1:-1:-1;7830:17:31;;-1:-1:-1;7873:6:31;;7830:17;;7898:18;;149::66;;7898:33:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7830:115;;;;;;;;;;-1:-1:-1;;;;;9263:55:66;;;7830:115:31;;;9245:74:66;9335:18;;;9328:34;9218:18;;7830:115:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7809:177;;;;-1:-1:-1;;;7809:177:31;;11233:2:66;7809:177:31;;;11215:21:66;11272:2;11252:18;;;11245:30;11311:17;11291:18;;;11284:45;11346:18;;7809:177:31;11031:339:66;7809:177:31;6840:1153;;;;6812:1181::o;5656:108::-;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;11577:2:66;505:117:44;;;11559:21:66;11616:2;11596:18;;;11589:30;11655:34;11635:18;;;11628:62;-1:-1:-1;;;11706:18:66;;;11699:38;11754:19;;505:117:44;11375:404:66;505:117:44;5734:23:31::1;5751:5;5734:16;:23::i;:::-;5656:108:::0;:::o;4446:1052::-;4554:8;;513:15:65;4542:20:31;4521:118;;;;-1:-1:-1;;;4521:118:31;;7445:2:66;4521:118:31;;;7427:21:66;7484:2;7464:18;;;7457:30;7523:34;7503:18;;;7496:62;-1:-1:-1;;;7574:18:66;;;7567:49;7633:19;;4521:118:31;7243:415:66;4521:118:31;4650:15;4668:36;4680:10;4692:11;;4668;:36::i;:::-;4650:54;;4746:1;4736:7;:11;4715:111;;;;-1:-1:-1;;;4715:111:31;;7865:2:66;4715:111:31;;;7847:21:66;7904:2;7884:18;;;7877:30;7943:34;7923:18;;;7916:62;-1:-1:-1;;;7994:18:66;;;7987:51;8055:19;;4715:111:31;7663:417:66;4715:111:31;4837:19;4859:20;4871:8;4859:9;:20;:::i;:::-;4837:42;;4922:11;4911:7;:22;;4890:124;;;;-1:-1:-1;;;4890:124:31;;11986:2:66;4890:124:31;;;11968:21:66;12025:2;12005:18;;;11998:30;12064:34;12044:18;;;12037:62;12135:25;12115:18;;;12108:53;12178:19;;4890:124:31;11784:419:66;4890:124:31;5051:10;5025:17;5045;;;:5;:17;;;;;;;;;5095:8;:20;;;;;;;5130:16;;5126:81;;5184:12;5173:8;;:23;;;;:::i;:::-;5162:8;:34;5126:81;5226:10;5217:20;;;;:8;:20;;;;;:32;;;5270:8;;:20;;5240:9;;5270:20;:::i;:::-;5259:8;:31;5307:10;5301:17;;;;:5;:17;;;;;:31;;;5355:10;;5382:9;;5355:24;;5321:11;;5355:24;:::i;:::-;:36;;;;:::i;:::-;5342:10;:49;5402:22;5413:10;5402;:22::i;:::-;5439:52;;;12382:25:66;;;12438:2;12423:18;;12416:34;;;5459:10:31;;5439:52;;12355:18:66;5439:52:31;;;;;;;4511:987;;;;4446:1052;;:::o;1352:577:8:-;1407:14;1433:19;1463:6;1455:15;;1433:37;;1522:4;1516:11;1587:66;1564:5;1540:127;1705:11;1698:4;1691:5;1687:16;1680:37;1788:66;1765:4;1758:5;1754:16;1730:138;1908:4;1901:5;1898:1;1891:22;1881:32;1352:577;-1:-1:-1;;;;1352:577:8:o;1239:89:37:-;1292:12;:10;:12::i;:::-;:29;;-1:-1:-1;;;1292:29:37;;-1:-1:-1;;;;;194:55:66;;;1292:29:37;;;176:74:66;1292:23:37;;;;;;;149:18:66;;1292:29:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:117;1379:10;1419:24;2230:66:40;1419:9:37;:24::i;:::-;1401:43;;1334:117;:::o;5210:149:40:-;5291:61;;-1:-1:-1;;;5291:61:40;;-1:-1:-1;;;;;5339:6:40;9263:55:66;5291:61:40;;;9245:74:66;9335:18;;;9328:34;;;5265:7:40;;303:42:38;;5291:39:40;;9218:18:66;;5291:61:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5284:68;5210:149;-1:-1:-1;;5210:149:40:o;3296:220::-;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;11577:2:66;505:117:44;;;11559:21:66;11616:2;11596:18;;;11589:30;11655:34;11635:18;;;11628:62;-1:-1:-1;;;11706:18:66;;;11699:38;11754:19;;505:117:44;11375:404:66;505:117:44;3418:23:40::1;3435:5;3418:16;:23::i;:::-;3451:58;::::0;-1:-1:-1;;;3451:58:40;;3486:4:::1;3451:58;::::0;::::1;13264:34:66::0;-1:-1:-1;;;;;3501:6:40::1;13334:15:66::0;13314:18;;;13307:43;303:42:38::1;::::0;3451:26:40::1;::::0;13176:18:66;;3451:58:40::1;13029:327:66::0;2021:152:39;554:1:44;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;11577:2:66;505:117:44;;;11559:21:66;11616:2;11596:18;;;11589:30;11655:34;11635:18;;;11628:62;-1:-1:-1;;;11706:18:66;;;11699:38;11754:19;;505:117:44;11375:404:66;505:117:44;2143:23:39::1;2160:5;554:1:44::0;526:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;526:16;-1:-1:-1;;;;;526:30:44;;505:117;;;;-1:-1:-1;;;505:117:44;;11577:2:66;505:117:44;;;11559:21:66;11616:2;11596:18;;;11589:30;11655:34;11635:18;;;11628:62;-1:-1:-1;;;11706:18:66;;;11699:38;11754:19;;505:117:44;11375:404:66;505:117:44;1317:20:::1;1362:5;-1:-1:-1::0;;;;;1348:35:44::1;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1317:69:::0;-1:-1:-1;;;;;;1417:26:44;::::1;1396:117;;;::::0;-1:-1:-1;;;1396:117:44;;13563:2:66;1396:117:44::1;::::0;::::1;13545:21:66::0;13602:2;13582:18;;;13575:30;13641:34;13621:18;;;13614:62;-1:-1:-1;;;13692:18:66;;;13685:42;13744:19;;1396:117:44::1;13361:408:66::0;1396:117:44::1;1523:31;1541:12;1523:17;:31::i;:::-;1307:254;1240:321:::0;:::o;1823:213::-;1912:5;-1:-1:-1;;;;;1892:25:44;:16;-1:-1:-1;;;;;;;;;;;1733:26:44;;1629:146;1892:16;-1:-1:-1;;;;;1892:25:44;;;1884:69;;;;-1:-1:-1;;;1884:69:44;;13976:2:66;1884:69:44;;;13958:21:66;14015:2;13995:18;;;13988:30;14054:33;14034:18;;;14027:61;14105:18;;1884:69:44;13774:355:66;1884:69:44;-1:-1:-1;;;;;;;;;;;1986:34:44;1823:213::o;261:164:66:-;-1:-1:-1;;;;;350:5:66;346:54;339:5;336:65;326:93;;415:1;412;405:12;430:343;516:6;524;577:2;565:9;556:7;552:23;548:32;545:52;;;593:1;590;583:12;545:52;632:9;619:23;651:41;686:5;651:41;:::i;:::-;711:5;763:2;748:18;;;;735:32;;-1:-1:-1;;;430:343:66:o;778:127::-;839:10;834:3;830:20;827:1;820:31;870:4;867:1;860:15;894:4;891:1;884:15;910:1066;987:6;995;1048:2;1036:9;1027:7;1023:23;1019:32;1016:52;;;1064:1;1061;1054:12;1016:52;1103:9;1090:23;1122:41;1157:5;1122:41;:::i;:::-;1182:5;-1:-1:-1;1238:2:66;1223:18;;1210:32;1261:18;1291:14;;;1288:34;;;1318:1;1315;1308:12;1288:34;1356:6;1345:9;1341:22;1331:32;;1401:7;1394:4;1390:2;1386:13;1382:27;1372:55;;1423:1;1420;1413:12;1372:55;1459:2;1446:16;1481:2;1477;1474:10;1471:36;;;1487:18;;:::i;:::-;1562:2;1556:9;1530:2;1616:13;;-1:-1:-1;;1612:22:66;;;1636:2;1608:31;1604:40;1592:53;;;1660:18;;;1680:22;;;1657:46;1654:72;;;1706:18;;:::i;:::-;1746:10;1742:2;1735:22;1781:2;1773:6;1766:18;1821:7;1816:2;1811;1807;1803:11;1799:20;1796:33;1793:53;;;1842:1;1839;1832:12;1793:53;1898:2;1893;1889;1885:11;1880:2;1872:6;1868:15;1855:46;1943:1;1938:2;1933;1925:6;1921:15;1917:24;1910:35;1964:6;1954:16;;;;;;;910:1066;;;;;:::o;2212:325::-;2280:6;2288;2341:2;2329:9;2320:7;2316:23;2312:32;2309:52;;;2357:1;2354;2347:12;2309:52;2393:9;2380:23;2370:33;;2453:2;2442:9;2438:18;2425:32;2466:41;2501:5;2466:41;:::i;:::-;2526:5;2516:15;;;2212:325;;;;;:::o;2724:257::-;2783:6;2836:2;2824:9;2815:7;2811:23;2807:32;2804:52;;;2852:1;2849;2842:12;2804:52;2891:9;2878:23;2910:41;2945:5;2910:41;:::i;:::-;2970:5;2724:257;-1:-1:-1;;;2724:257:66:o;3412:118::-;3498:5;3491:13;3484:21;3477:5;3474:32;3464:60;;3520:1;3517;3510:12;3535:241;3591:6;3644:2;3632:9;3623:7;3619:23;3615:32;3612:52;;;3660:1;3657;3650:12;3612:52;3699:9;3686:23;3718:28;3740:5;3718:28;:::i;3781:180::-;3840:6;3893:2;3881:9;3872:7;3868:23;3864:32;3861:52;;;3909:1;3906;3899:12;3861:52;-1:-1:-1;3932:23:66;;3781:180;-1:-1:-1;3781:180:66:o;4788:248::-;4856:6;4864;4917:2;4905:9;4896:7;4892:23;4888:32;4885:52;;;4933:1;4930;4923:12;4885:52;-1:-1:-1;;4956:23:66;;;5026:2;5011:18;;;4998:32;;-1:-1:-1;4788:248:66:o;5451:127::-;5512:10;5507:3;5503:20;5500:1;5493:31;5543:4;5540:1;5533:15;5567:4;5564:1;5557:15;5583:128;5623:3;5654:1;5650:6;5647:1;5644:13;5641:39;;;5660:18;;:::i;:::-;-1:-1:-1;5696:9:66;;5583:128::o;8489:125::-;8529:4;8557:1;8554;8551:8;8548:34;;;8562:18;;:::i;:::-;-1:-1:-1;8599:9:66;;8489:125::o;8882:184::-;8952:6;9005:2;8993:9;8984:7;8980:23;8976:32;8973:52;;;9021:1;9018;9011:12;8973:52;-1:-1:-1;9044:16:66;;8882:184;-1:-1:-1;8882:184:66:o;9373:217::-;9413:1;9439;9429:132;;9483:10;9478:3;9474:20;9471:1;9464:31;9518:4;9515:1;9508:15;9546:4;9543:1;9536:15;9429:132;-1:-1:-1;9575:9:66;;9373:217::o;10436:340::-;10580:2;10565:18;;10613:1;10602:13;;10592:144;;10658:10;10653:3;10649:20;10646:1;10639:31;10693:4;10690:1;10683:15;10721:4;10718:1;10711:15;10592:144;10745:25;;;10436:340;:::o;10781:245::-;10848:6;10901:2;10889:9;10880:7;10876:23;10872:32;10869:52;;;10917:1;10914;10907:12;10869:52;10949:9;10943:16;10968:28;10990:5;10968:28;:::i;12763:261::-;12833:6;12886:2;12874:9;12865:7;12861:23;12857:32;12854:52;;;12902:1;12899;12892:12;12854:52;12934:9;12928:16;12953:41;12988:5;12953:41;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../policy/Policy.sol\";\nimport \"./Proposal.sol\";\nimport \"../policy/PolicedUtils.sol\";\nimport \"../utils/TimeUtils.sol\";\nimport \"./VotingPower.sol\";\nimport \"../currency/ECO.sol\";\nimport \"../currency/ECOx.sol\";\n\n/** @title PolicyVotes\n * This implements the voting and implementation phases of the policy decision process.\n * Open stake based voting is used for the voting phase.\n */\ncontract PolicyVotes is VotingPower, TimeUtils {\n    /** The proposal being voted on */\n    Proposal public proposal;\n\n    /** Per voter power.\n     */\n    mapping(address => uint256) public stake;\n\n    /** Per voter that votes yes, by amount voted yes\n     */\n    mapping(address => uint256) public yesVotes;\n\n    /** Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico).\n     */\n    uint256 public totalStake;\n\n    /** Total revealed positive stake in basic unit of 10^{-18} ECO (weico).\n     */\n    uint256 public yesStake;\n\n    /** The length of the commit portion of the voting phase.\n     */\n    uint256 public constant VOTE_TIME = 4 minutes;\n\n    /** The delay on a plurality win\n     */\n    uint256 public constant ENACTION_DELAY = 1 minutes;\n\n    /** The timestamp at which the commit portion of the voting phase ends.\n     */\n    uint256 public voteEnds;\n\n    /** Vote result */\n    enum Result {\n        Accepted,\n        Rejected,\n        Failed\n    }\n\n    /** Event emitted when vote outcome is known.\n     */\n    event VoteCompleted(Result result);\n\n    /** Event emitted when vote is submitted.\n     */\n    event PolicyVoteCast(address indexed voter, bool vote, uint256 amount);\n\n    /** Event emitted when split vote is.\n     */\n    event PolicySplitVoteCast(\n        address indexed voter,\n        uint256 votesYes,\n        uint256 votesNo\n    );\n\n    /** The store block number to use when checking account balances for staking.\n     */\n    uint256 public blockNumber;\n\n    // solhint-disable-next-line no-empty-blocks\n    constructor(\n        Policy _policy,\n        ECO _ecoAddr,\n        ECOx _ecoXAddr\n    ) VotingPower(_policy, _ecoAddr, _ecoXAddr) {}\n\n    /** Submit your yes/no support\n     *\n     * Shows whether or not your voting power supports or does not support the vote\n     *\n     * Note Not voting is not equivalent to voting no. Percentage of voted support,\n     * not percentage of total voting power is used to determine the win.\n     *\n     * @param _vote The vote for the proposal\n     */\n    function vote(bool _vote) external {\n        require(\n            getTime() < voteEnds,\n            \"Votes can only be recorded during the voting period\"\n        );\n\n        uint256 _amount = votingPower(msg.sender, blockNumber);\n\n        require(\n            _amount > 0,\n            \"Voters must have held tokens before this voting cycle\"\n        );\n\n        uint256 _oldStake = stake[msg.sender];\n        uint256 _oldYesVotes = yesVotes[msg.sender];\n        bool _prevVote = _oldYesVotes != 0;\n\n        if (_oldStake != 0) {\n            require(\n                _prevVote != _vote || _oldStake != _oldYesVotes,\n                \"Your vote has already been recorded\"\n            );\n\n            if (_prevVote) {\n                yesStake = yesStake - _oldYesVotes;\n                yesVotes[msg.sender] = 0;\n            }\n        }\n\n        if (_vote) {\n            yesStake = yesStake + _amount;\n            yesVotes[msg.sender] = _amount;\n        }\n\n        stake[msg.sender] = _amount;\n        totalStake = totalStake + _amount - _oldStake;\n\n        recordVote(msg.sender);\n        emit PolicyVoteCast(msg.sender, _vote, _amount);\n    }\n\n    /** Submit a mixed vote of yes/no support\n     *\n     * Useful for contracts that wish to vote for an agregate of users\n     *\n     * Note As not voting is not equivalent to voting no it matters recording the no votes\n     * The total amount of votes in favor is relevant for early enaction and the total percentage\n     * of voting power that voted is necessary for determining a winner.\n     *\n     * Note As this is designed for contracts, the onus is on the contract designer to correctly\n     * understand and take responsibility for its input parameters. The only check is to stop\n     * someone from voting with more power than they have.\n     *\n     * @param _votesYes The amount of votes in favor of the proposal\n     * @param _votesNo The amount of votes against the proposal\n     */\n    function voteSplit(uint256 _votesYes, uint256 _votesNo) external {\n        require(\n            getTime() < voteEnds,\n            \"Votes can only be recorded during the voting period\"\n        );\n\n        uint256 _amount = votingPower(msg.sender, blockNumber);\n\n        require(\n            _amount > 0,\n            \"Voters must have held tokens before this voting cycle\"\n        );\n\n        uint256 _totalVotes = _votesYes + _votesNo;\n\n        require(\n            _amount >= _totalVotes,\n            \"Your voting power is less than submitted yes + no votes\"\n        );\n\n        uint256 _oldStake = stake[msg.sender];\n        uint256 _oldYesVotes = yesVotes[msg.sender];\n\n        if (_oldYesVotes > 0) {\n            yesStake = yesStake - _oldYesVotes;\n        }\n\n        yesVotes[msg.sender] = _votesYes;\n        yesStake = yesStake + _votesYes;\n\n        stake[msg.sender] = _totalVotes;\n        totalStake = totalStake + _totalVotes - _oldStake;\n\n        recordVote(msg.sender);\n        emit PolicySplitVoteCast(msg.sender, _votesYes, _votesNo);\n    }\n\n    /** Initialize a cloned/proxied copy of this contract.\n     *\n     * @param _self The original contract, to provide access to storage data.\n     */\n    function initialize(address _self) public override onlyConstruction {\n        super.initialize(_self);\n    }\n\n    /** Configure the proposals that are part of this voting cycle and start\n     * the lockup period.\n     *\n     * This also fixes the end times of each subsequent phase.\n     *\n     * This can only be called once, and should be called atomically with\n     * instantiation.\n     *\n     * @param _proposal The proposal to vote on.\n     */\n    function configure(Proposal _proposal, uint256 _cutoffBlockNumber)\n        external\n    {\n        require(voteEnds == 0, \"This instance has already been configured\");\n\n        voteEnds = getTime() + VOTE_TIME;\n        blockNumber = _cutoffBlockNumber;\n\n        proposal = _proposal;\n    }\n\n    /** Execute the proposal if it has enough support.\n     *\n     * Can only be called after the voting and the delay phase,\n     * or after the point that more than 50% of the total voting power\n     * has voted in favor of the proposal.\n     *\n     * If the proposal has been accepted, it will be enacted by\n     * calling the `enacted` functions using `delegatecall`\n     * from the root policy.\n     */\n    function execute() external {\n        uint256 _requiredStake = totalStake / 2;\n        uint256 _total = totalVotingPower(blockNumber);\n        uint256 _time = getTime();\n\n        Result _res;\n\n        if (yesStake < _total / 2) {\n            require(\n                _time > voteEnds + ENACTION_DELAY,\n                \"Majority support required for early enaction\"\n            );\n        }\n\n        require(\n            policyFor(ID_POLICY_VOTES) == address(this),\n            \"This contract no longer has authorization to enact the vote\"\n        );\n\n        if (totalStake == 0) {\n            // Nobody voted\n            _res = Result.Failed;\n        } else if (yesStake < _requiredStake) {\n            // Not enough yes votes\n            _res = Result.Rejected;\n        } else {\n            // Vote passed\n            policy.internalCommand(address(proposal));\n            _res = Result.Accepted;\n        }\n\n        emit VoteCompleted(_res);\n        policy.removeSelf(ID_POLICY_VOTES);\n\n        require(\n            ecoToken.transfer(\n                address(policy),\n                ecoToken.balanceOf(address(this))\n            ),\n            \"Transfer Failed\"\n        );\n    }\n}\n",
  "sourcePath": "/Users/dirksmac/dev/eco/currency/contracts/governance/PolicyVotes.sol",
  "ast": {
    "absolutePath": "project:/contracts/governance/PolicyVotes.sol",
    "exportedSymbols": {
      "CloneFactory": [
        2207
      ],
      "CurrencyTimer": [
        8401
      ],
      "ECO": [
        2497
      ],
      "ECOx": [
        3238
      ],
      "ECOxLockup": [
        8688
      ],
      "ERC1820Client": [
        12017
      ],
      "ERC20": [
        3785
      ],
      "ForwardTarget": [
        12742
      ],
      "IECO": [
        3826
      ],
      "IERC1820Implementer": [
        218
      ],
      "IERC1820Registry": [
        308
      ],
      "IERC20": [
        182
      ],
      "IGeneration": [
        8696
      ],
      "ILockups": [
        8714
      ],
      "Lockup": [
        9655
      ],
      "Policed": [
        12119
      ],
      "PolicedUtils": [
        12321
      ],
      "Policy": [
        12499
      ],
      "PolicyVotes": [
        10915
      ],
      "Proposal": [
        10943
      ],
      "StringPacker": [
        14748
      ],
      "TimeUtils": [
        14762
      ],
      "VoteCheckpoints": [
        6922
      ],
      "VotingPower": [
        11959
      ]
    },
    "id": 10916,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10422,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:31"
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 10423,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 12500,
        "src": "57:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Proposal.sol",
        "file": "./Proposal.sol",
        "id": 10424,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 10944,
        "src": "88:24:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 10425,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 12322,
        "src": "113:36:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 10426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 14763,
        "src": "150:32:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/VotingPower.sol",
        "file": "./VotingPower.sol",
        "id": 10427,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 11960,
        "src": "183:27:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/ECO.sol",
        "file": "../currency/ECO.sol",
        "id": 10428,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 2498,
        "src": "211:29:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/ECOx.sol",
        "file": "../currency/ECOx.sol",
        "id": 10429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 3239,
        "src": "241:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10431,
              "name": "VotingPower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11959,
              "src": "469:11:31"
            },
            "id": 10432,
            "nodeType": "InheritanceSpecifier",
            "src": "469:11:31"
          },
          {
            "baseName": {
              "id": 10433,
              "name": "TimeUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14762,
              "src": "482:9:31"
            },
            "id": 10434,
            "nodeType": "InheritanceSpecifier",
            "src": "482:9:31"
          }
        ],
        "canonicalName": "PolicyVotes",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10430,
          "nodeType": "StructuredDocumentation",
          "src": "273:171:31",
          "text": "@title PolicyVotes\n This implements the voting and implementation phases of the policy decision process.\n Open stake based voting is used for the voting phase."
        },
        "fullyImplemented": true,
        "id": 10915,
        "linearizedBaseContracts": [
          10915,
          14762,
          11959,
          12321,
          12017,
          2207,
          12119,
          218,
          12742
        ],
        "name": "PolicyVotes",
        "nameLocation": "454:11:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 10435,
              "nodeType": "StructuredDocumentation",
              "src": "498:34:31",
              "text": "The proposal being voted on "
            },
            "functionSelector": "753ec103",
            "id": 10438,
            "mutability": "mutable",
            "name": "proposal",
            "nameLocation": "553:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "537:24:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Proposal_$10943",
              "typeString": "contract Proposal"
            },
            "typeName": {
              "id": 10437,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10436,
                "name": "Proposal",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10943,
                "src": "537:8:31"
              },
              "referencedDeclaration": 10943,
              "src": "537:8:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proposal_$10943",
                "typeString": "contract Proposal"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10439,
              "nodeType": "StructuredDocumentation",
              "src": "568:28:31",
              "text": "Per voter power."
            },
            "functionSelector": "26476204",
            "id": 10443,
            "mutability": "mutable",
            "name": "stake",
            "nameLocation": "636:5:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "601:40:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 10442,
              "keyType": {
                "id": 10440,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "609:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "601:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10441,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "620:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10444,
              "nodeType": "StructuredDocumentation",
              "src": "648:57:31",
              "text": "Per voter that votes yes, by amount voted yes"
            },
            "functionSelector": "d40d172d",
            "id": 10448,
            "mutability": "mutable",
            "name": "yesVotes",
            "nameLocation": "745:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "710:43:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 10447,
              "keyType": {
                "id": 10445,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "718:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "710:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10446,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "729:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10449,
              "nodeType": "StructuredDocumentation",
              "src": "760:93:31",
              "text": "Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico)."
            },
            "functionSelector": "8b0e9f3f",
            "id": 10451,
            "mutability": "mutable",
            "name": "totalStake",
            "nameLocation": "873:10:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "858:25:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "858:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10452,
              "nodeType": "StructuredDocumentation",
              "src": "890:80:31",
              "text": "Total revealed positive stake in basic unit of 10^{-18} ECO (weico)."
            },
            "functionSelector": "28ea6dda",
            "id": 10454,
            "mutability": "mutable",
            "name": "yesStake",
            "nameLocation": "990:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "975:23:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10453,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "975:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 10455,
              "nodeType": "StructuredDocumentation",
              "src": "1005:65:31",
              "text": "The length of the commit portion of the voting phase."
            },
            "functionSelector": "486a27db",
            "id": 10458,
            "mutability": "constant",
            "name": "VOTE_TIME",
            "nameLocation": "1099:9:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "1075:45:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10456,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1075:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 10457,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1111:9:31",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_240_by_1",
                "typeString": "int_const 240"
              },
              "value": "4"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 10459,
              "nodeType": "StructuredDocumentation",
              "src": "1127:40:31",
              "text": "The delay on a plurality win"
            },
            "functionSelector": "328a1da9",
            "id": 10462,
            "mutability": "constant",
            "name": "ENACTION_DELAY",
            "nameLocation": "1196:14:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "1172:50:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10460,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1172:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 10461,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1213:9:31",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10463,
              "nodeType": "StructuredDocumentation",
              "src": "1229:79:31",
              "text": "The timestamp at which the commit portion of the voting phase ends."
            },
            "functionSelector": "85defaf4",
            "id": 10465,
            "mutability": "mutable",
            "name": "voteEnds",
            "nameLocation": "1328:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "1313:23:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10464,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1313:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyVotes.Result",
            "id": 10469,
            "members": [
              {
                "id": 10466,
                "name": "Accepted",
                "nameLocation": "1388:8:31",
                "nodeType": "EnumValue",
                "src": "1388:8:31"
              },
              {
                "id": 10467,
                "name": "Rejected",
                "nameLocation": "1406:8:31",
                "nodeType": "EnumValue",
                "src": "1406:8:31"
              },
              {
                "id": 10468,
                "name": "Failed",
                "nameLocation": "1424:6:31",
                "nodeType": "EnumValue",
                "src": "1424:6:31"
              }
            ],
            "name": "Result",
            "nameLocation": "1371:6:31",
            "nodeType": "EnumDefinition",
            "src": "1366:70:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10470,
              "nodeType": "StructuredDocumentation",
              "src": "1442:53:31",
              "text": "Event emitted when vote outcome is known."
            },
            "id": 10475,
            "name": "VoteCompleted",
            "nameLocation": "1506:13:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10473,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1527:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10475,
                  "src": "1520:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Result_$10469",
                    "typeString": "enum PolicyVotes.Result"
                  },
                  "typeName": {
                    "id": 10472,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10471,
                      "name": "Result",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10469,
                      "src": "1520:6:31"
                    },
                    "referencedDeclaration": 10469,
                    "src": "1520:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Result_$10469",
                      "typeString": "enum PolicyVotes.Result"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:15:31"
            },
            "src": "1500:35:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10476,
              "nodeType": "StructuredDocumentation",
              "src": "1541:49:31",
              "text": "Event emitted when vote is submitted."
            },
            "id": 10484,
            "name": "PolicyVoteCast",
            "nameLocation": "1601:14:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10478,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1632:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10484,
                  "src": "1616:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10480,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vote",
                  "nameLocation": "1644:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10484,
                  "src": "1639:9:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10479,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10482,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1658:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10484,
                  "src": "1650:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1615:50:31"
            },
            "src": "1595:71:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10485,
              "nodeType": "StructuredDocumentation",
              "src": "1672:45:31",
              "text": "Event emitted when split vote is."
            },
            "id": 10493,
            "name": "PolicySplitVoteCast",
            "nameLocation": "1728:19:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10487,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1773:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10493,
                  "src": "1757:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10489,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "votesYes",
                  "nameLocation": "1796:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10493,
                  "src": "1788:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10491,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "votesNo",
                  "nameLocation": "1822:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10493,
                  "src": "1814:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1747:88:31"
            },
            "src": "1722:114:31"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10494,
              "nodeType": "StructuredDocumentation",
              "src": "1842:85:31",
              "text": "The store block number to use when checking account balances for staking."
            },
            "functionSelector": "57e871e7",
            "id": 10496,
            "mutability": "mutable",
            "name": "blockNumber",
            "nameLocation": "1947:11:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "1932:26:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10495,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1932:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10513,
              "nodeType": "Block",
              "src": "2144:2:31",
              "statements": []
            },
            "id": 10514,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10508,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10499,
                    "src": "2114:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  {
                    "id": 10509,
                    "name": "_ecoAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10502,
                    "src": "2123:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  {
                    "id": 10510,
                    "name": "_ecoXAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10505,
                    "src": "2133:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECOx_$3238",
                      "typeString": "contract ECOx"
                    }
                  }
                ],
                "id": 10511,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10507,
                  "name": "VotingPower",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11959,
                  "src": "2102:11:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "2102:41:31"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10499,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "2042:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10514,
                  "src": "2035:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Policy_$12499",
                    "typeString": "contract Policy"
                  },
                  "typeName": {
                    "id": 10498,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10497,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12499,
                      "src": "2035:6:31"
                    },
                    "referencedDeclaration": 12499,
                    "src": "2035:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10502,
                  "mutability": "mutable",
                  "name": "_ecoAddr",
                  "nameLocation": "2063:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10514,
                  "src": "2059:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECO_$2497",
                    "typeString": "contract ECO"
                  },
                  "typeName": {
                    "id": 10501,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10500,
                      "name": "ECO",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2497,
                      "src": "2059:3:31"
                    },
                    "referencedDeclaration": 2497,
                    "src": "2059:3:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10505,
                  "mutability": "mutable",
                  "name": "_ecoXAddr",
                  "nameLocation": "2086:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10514,
                  "src": "2081:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECOx_$3238",
                    "typeString": "contract ECOx"
                  },
                  "typeName": {
                    "id": 10504,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10503,
                      "name": "ECOx",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3238,
                      "src": "2081:4:31"
                    },
                    "referencedDeclaration": 3238,
                    "src": "2081:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECOx_$3238",
                      "typeString": "contract ECOx"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:76:31"
            },
            "returnParameters": {
              "id": 10512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2144:0:31"
            },
            "scope": 10915,
            "src": "2014:132:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10638,
              "nodeType": "Block",
              "src": "2539:1103:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10521,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14761,
                            "src": "2570:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2570:9:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10523,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10465,
                          "src": "2582:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2570:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465732063616e206f6e6c79206265207265636f7264656420647572696e672074686520766f74696e6720706572696f64",
                        "id": 10525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2604:53:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        },
                        "value": "Votes can only be recorded during the voting period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        }
                      ],
                      "id": 10520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2549:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:118:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10527,
                  "nodeType": "ExpressionStatement",
                  "src": "2549:118:31"
                },
                {
                  "assignments": [
                    10529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10529,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "2686:7:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10638,
                      "src": "2678:15:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2678:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10535,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2708:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2708:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10533,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10496,
                        "src": "2720:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10530,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "2696:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 10534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2696:36:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2678:54:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10537,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10529,
                          "src": "2764:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2774:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2764:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657273206d75737420686176652068656c6420746f6b656e73206265666f7265207468697320766f74696e67206379636c65",
                        "id": 10540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2789:55:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124",
                          "typeString": "literal_string \"Voters must have held tokens before this voting cycle\""
                        },
                        "value": "Voters must have held tokens before this voting cycle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124",
                          "typeString": "literal_string \"Voters must have held tokens before this voting cycle\""
                        }
                      ],
                      "id": 10536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2743:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2743:111:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10542,
                  "nodeType": "ExpressionStatement",
                  "src": "2743:111:31"
                },
                {
                  "assignments": [
                    10544
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10544,
                      "mutability": "mutable",
                      "name": "_oldStake",
                      "nameLocation": "2873:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10638,
                      "src": "2865:17:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10543,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2865:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10549,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10545,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10443,
                      "src": "2885:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10548,
                    "indexExpression": {
                      "expression": {
                        "id": 10546,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2891:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2891:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2885:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2865:37:31"
                },
                {
                  "assignments": [
                    10551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10551,
                      "mutability": "mutable",
                      "name": "_oldYesVotes",
                      "nameLocation": "2920:12:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10638,
                      "src": "2912:20:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10550,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2912:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10556,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10552,
                      "name": "yesVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10448,
                      "src": "2935:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10555,
                    "indexExpression": {
                      "expression": {
                        "id": 10553,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2944:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2944:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2935:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2912:43:31"
                },
                {
                  "assignments": [
                    10558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10558,
                      "mutability": "mutable",
                      "name": "_prevVote",
                      "nameLocation": "2970:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10638,
                      "src": "2965:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10557,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2965:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10562,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10559,
                      "name": "_oldYesVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10551,
                      "src": "2982:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2998:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2982:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2965:34:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10563,
                      "name": "_oldStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10544,
                      "src": "3014:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3027:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3014:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10594,
                  "nodeType": "IfStatement",
                  "src": "3010:324:31",
                  "trueBody": {
                    "id": 10593,
                    "nodeType": "Block",
                    "src": "3030:304:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 10569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10567,
                                  "name": "_prevVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10558,
                                  "src": "3069:9:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 10568,
                                  "name": "_vote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10517,
                                  "src": "3082:5:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3069:18:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10570,
                                  "name": "_oldStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10544,
                                  "src": "3091:9:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 10571,
                                  "name": "_oldYesVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10551,
                                  "src": "3104:12:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3091:25:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3069:47:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f757220766f74652068617320616c7265616479206265656e207265636f72646564",
                              "id": 10574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3134:37:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0",
                                "typeString": "literal_string \"Your vote has already been recorded\""
                              },
                              "value": "Your vote has already been recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0",
                                "typeString": "literal_string \"Your vote has already been recorded\""
                              }
                            ],
                            "id": 10566,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3044:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3044:141:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10576,
                        "nodeType": "ExpressionStatement",
                        "src": "3044:141:31"
                      },
                      {
                        "condition": {
                          "id": 10577,
                          "name": "_prevVote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10558,
                          "src": "3204:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10592,
                        "nodeType": "IfStatement",
                        "src": "3200:124:31",
                        "trueBody": {
                          "id": 10591,
                          "nodeType": "Block",
                          "src": "3215:109:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 10582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 10578,
                                  "name": "yesStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10454,
                                  "src": "3233:8:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10581,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10579,
                                    "name": "yesStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10454,
                                    "src": "3244:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 10580,
                                    "name": "_oldYesVotes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10551,
                                    "src": "3255:12:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3244:23:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3233:34:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10583,
                              "nodeType": "ExpressionStatement",
                              "src": "3233:34:31"
                            },
                            {
                              "expression": {
                                "id": 10589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 10584,
                                    "name": "yesVotes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10448,
                                    "src": "3285:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 10587,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 10585,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3294:3:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 10586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3294:10:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3285:20:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 10588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3308:1:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3285:24:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10590,
                              "nodeType": "ExpressionStatement",
                              "src": "3285:24:31"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 10595,
                    "name": "_vote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10517,
                    "src": "3348:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10610,
                  "nodeType": "IfStatement",
                  "src": "3344:109:31",
                  "trueBody": {
                    "id": 10609,
                    "nodeType": "Block",
                    "src": "3355:98:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 10600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10596,
                            "name": "yesStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10454,
                            "src": "3369:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10597,
                              "name": "yesStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10454,
                              "src": "3380:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 10598,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10529,
                              "src": "3391:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3380:18:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3369:29:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10601,
                        "nodeType": "ExpressionStatement",
                        "src": "3369:29:31"
                      },
                      {
                        "expression": {
                          "id": 10607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 10602,
                              "name": "yesVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10448,
                              "src": "3412:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 10605,
                            "indexExpression": {
                              "expression": {
                                "id": 10603,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3421:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3421:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3412:20:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10606,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10529,
                            "src": "3435:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3412:30:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10608,
                        "nodeType": "ExpressionStatement",
                        "src": "3412:30:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10611,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10443,
                        "src": "3463:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10614,
                      "indexExpression": {
                        "expression": {
                          "id": 10612,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3469:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3469:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3463:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10615,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10529,
                      "src": "3483:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3463:27:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10617,
                  "nodeType": "ExpressionStatement",
                  "src": "3463:27:31"
                },
                {
                  "expression": {
                    "id": 10624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10618,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10451,
                      "src": "3500:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10619,
                          "name": "totalStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10451,
                          "src": "3513:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 10620,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10529,
                          "src": "3526:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3513:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10622,
                        "name": "_oldStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10544,
                        "src": "3536:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3513:32:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3500:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10625,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:45:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10627,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3567:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3567:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10626,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11945,
                      "src": "3556:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3556:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10630,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:22:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10632,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3608:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3608:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10634,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10517,
                        "src": "3620:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 10635,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10529,
                        "src": "3627:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10631,
                      "name": "PolicyVoteCast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10484,
                      "src": "3593:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bool,uint256)"
                      }
                    },
                    "id": 10636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3593:42:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10637,
                  "nodeType": "EmitStatement",
                  "src": "3588:47:31"
                }
              ]
            },
            "documentation": {
              "id": 10515,
              "nodeType": "StructuredDocumentation",
              "src": "2152:347:31",
              "text": "Submit your yes/no support\n Shows whether or not your voting power supports or does not support the vote\n Note Not voting is not equivalent to voting no. Percentage of voted support,\n not percentage of total voting power is used to determine the win.\n @param _vote The vote for the proposal"
            },
            "functionSelector": "4b9f5c98",
            "id": 10639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2513:4:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10517,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "2523:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10639,
                  "src": "2518:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10516,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:12:31"
            },
            "returnParameters": {
              "id": 10519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2539:0:31"
            },
            "scope": 10915,
            "src": "2504:1138:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10748,
              "nodeType": "Block",
              "src": "4511:987:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10648,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14761,
                            "src": "4542:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4542:9:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10650,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10465,
                          "src": "4554:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4542:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465732063616e206f6e6c79206265207265636f7264656420647572696e672074686520766f74696e6720706572696f64",
                        "id": 10652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4576:53:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        },
                        "value": "Votes can only be recorded during the voting period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        }
                      ],
                      "id": 10647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4521:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4521:118:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10654,
                  "nodeType": "ExpressionStatement",
                  "src": "4521:118:31"
                },
                {
                  "assignments": [
                    10656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10656,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "4658:7:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10748,
                      "src": "4650:15:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10655,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4650:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10662,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10658,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4680:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4680:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10660,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10496,
                        "src": "4692:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10657,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "4668:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 10661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4668:36:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4650:54:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10664,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10656,
                          "src": "4736:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4746:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4736:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657273206d75737420686176652068656c6420746f6b656e73206265666f7265207468697320766f74696e67206379636c65",
                        "id": 10667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4761:55:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124",
                          "typeString": "literal_string \"Voters must have held tokens before this voting cycle\""
                        },
                        "value": "Voters must have held tokens before this voting cycle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124",
                          "typeString": "literal_string \"Voters must have held tokens before this voting cycle\""
                        }
                      ],
                      "id": 10663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4715:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4715:111:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10669,
                  "nodeType": "ExpressionStatement",
                  "src": "4715:111:31"
                },
                {
                  "assignments": [
                    10671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10671,
                      "mutability": "mutable",
                      "name": "_totalVotes",
                      "nameLocation": "4845:11:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10748,
                      "src": "4837:19:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4837:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10675,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10672,
                      "name": "_votesYes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10642,
                      "src": "4859:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 10673,
                      "name": "_votesNo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10644,
                      "src": "4871:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4859:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4837:42:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10677,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10656,
                          "src": "4911:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10678,
                          "name": "_totalVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10671,
                          "src": "4922:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4911:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f757220766f74696e6720706f776572206973206c657373207468616e207375626d697474656420796573202b206e6f20766f746573",
                        "id": 10680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4947:57:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d79075393298e308c04c21511f7d86ed39c14c8596cd4e2b43ecac41a3f2c92",
                          "typeString": "literal_string \"Your voting power is less than submitted yes + no votes\""
                        },
                        "value": "Your voting power is less than submitted yes + no votes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d79075393298e308c04c21511f7d86ed39c14c8596cd4e2b43ecac41a3f2c92",
                          "typeString": "literal_string \"Your voting power is less than submitted yes + no votes\""
                        }
                      ],
                      "id": 10676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4890:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4890:124:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10682,
                  "nodeType": "ExpressionStatement",
                  "src": "4890:124:31"
                },
                {
                  "assignments": [
                    10684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10684,
                      "mutability": "mutable",
                      "name": "_oldStake",
                      "nameLocation": "5033:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10748,
                      "src": "5025:17:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5025:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10689,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10685,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10443,
                      "src": "5045:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10688,
                    "indexExpression": {
                      "expression": {
                        "id": 10686,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5051:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5051:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5045:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5025:37:31"
                },
                {
                  "assignments": [
                    10691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10691,
                      "mutability": "mutable",
                      "name": "_oldYesVotes",
                      "nameLocation": "5080:12:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10748,
                      "src": "5072:20:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10690,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5072:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10696,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10692,
                      "name": "yesVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10448,
                      "src": "5095:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10695,
                    "indexExpression": {
                      "expression": {
                        "id": 10693,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5104:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5104:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5095:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5072:43:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10697,
                      "name": "_oldYesVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10691,
                      "src": "5130:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5145:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5130:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10707,
                  "nodeType": "IfStatement",
                  "src": "5126:81:31",
                  "trueBody": {
                    "id": 10706,
                    "nodeType": "Block",
                    "src": "5148:59:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 10704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10700,
                            "name": "yesStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10454,
                            "src": "5162:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10701,
                              "name": "yesStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10454,
                              "src": "5173:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 10702,
                              "name": "_oldYesVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10691,
                              "src": "5184:12:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5173:23:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5162:34:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10705,
                        "nodeType": "ExpressionStatement",
                        "src": "5162:34:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10708,
                        "name": "yesVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10448,
                        "src": "5217:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10711,
                      "indexExpression": {
                        "expression": {
                          "id": 10709,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5226:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5226:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5217:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10712,
                      "name": "_votesYes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10642,
                      "src": "5240:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5217:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10714,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:32:31"
                },
                {
                  "expression": {
                    "id": 10719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10715,
                      "name": "yesStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10454,
                      "src": "5259:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10716,
                        "name": "yesStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10454,
                        "src": "5270:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 10717,
                        "name": "_votesYes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10642,
                        "src": "5281:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5270:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5259:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10720,
                  "nodeType": "ExpressionStatement",
                  "src": "5259:31:31"
                },
                {
                  "expression": {
                    "id": 10726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10721,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10443,
                        "src": "5301:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10724,
                      "indexExpression": {
                        "expression": {
                          "id": 10722,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5307:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5307:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5301:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10725,
                      "name": "_totalVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10671,
                      "src": "5321:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5301:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10727,
                  "nodeType": "ExpressionStatement",
                  "src": "5301:31:31"
                },
                {
                  "expression": {
                    "id": 10734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10728,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10451,
                      "src": "5342:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10729,
                          "name": "totalStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10451,
                          "src": "5355:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 10730,
                          "name": "_totalVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10671,
                          "src": "5368:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5355:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10732,
                        "name": "_oldStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10684,
                        "src": "5382:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5355:36:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5342:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10735,
                  "nodeType": "ExpressionStatement",
                  "src": "5342:49:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10737,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5413:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5413:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10736,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11945,
                      "src": "5402:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5402:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10740,
                  "nodeType": "ExpressionStatement",
                  "src": "5402:22:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5459:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5459:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10744,
                        "name": "_votesYes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10642,
                        "src": "5471:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10745,
                        "name": "_votesNo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10644,
                        "src": "5482:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10741,
                      "name": "PolicySplitVoteCast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10493,
                      "src": "5439:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 10746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5439:52:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10747,
                  "nodeType": "EmitStatement",
                  "src": "5434:57:31"
                }
              ]
            },
            "documentation": {
              "id": 10640,
              "nodeType": "StructuredDocumentation",
              "src": "3648:793:31",
              "text": "Submit a mixed vote of yes/no support\n Useful for contracts that wish to vote for an agregate of users\n Note As not voting is not equivalent to voting no it matters recording the no votes\n The total amount of votes in favor is relevant for early enaction and the total percentage\n of voting power that voted is necessary for determining a winner.\n Note As this is designed for contracts, the onus is on the contract designer to correctly\n understand and take responsibility for its input parameters. The only check is to stop\n someone from voting with more power than they have.\n @param _votesYes The amount of votes in favor of the proposal\n @param _votesNo The amount of votes against the proposal"
            },
            "functionSelector": "ce32de2b",
            "id": 10749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voteSplit",
            "nameLocation": "4455:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10642,
                  "mutability": "mutable",
                  "name": "_votesYes",
                  "nameLocation": "4473:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10749,
                  "src": "4465:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10644,
                  "mutability": "mutable",
                  "name": "_votesNo",
                  "nameLocation": "4492:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10749,
                  "src": "4484:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4484:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4464:37:31"
            },
            "returnParameters": {
              "id": 10646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4511:0:31"
            },
            "scope": 10915,
            "src": "4446:1052:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12250
            ],
            "body": {
              "id": 10764,
              "nodeType": "Block",
              "src": "5724:40:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10761,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10752,
                        "src": "5751:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10758,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5734:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyVotes_$10915_$",
                          "typeString": "type(contract super PolicyVotes)"
                        }
                      },
                      "id": 10760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12250,
                      "src": "5734:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5734:23:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10763,
                  "nodeType": "ExpressionStatement",
                  "src": "5734:23:31"
                }
              ]
            },
            "documentation": {
              "id": 10750,
              "nodeType": "StructuredDocumentation",
              "src": "5504:147:31",
              "text": "Initialize a cloned/proxied copy of this contract.\n @param _self The original contract, to provide access to storage data."
            },
            "functionSelector": "c4d66de8",
            "id": 10765,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10756,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10755,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12672,
                  "src": "5707:16:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "5707:16:31"
              }
            ],
            "name": "initialize",
            "nameLocation": "5665:10:31",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10754,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5698:8:31"
            },
            "parameters": {
              "id": 10753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10752,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "5684:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10765,
                  "src": "5676:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5676:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5675:15:31"
            },
            "returnParameters": {
              "id": 10757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5724:0:31"
            },
            "scope": 10915,
            "src": "5656:108:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10796,
              "nodeType": "Block",
              "src": "6198:200:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10775,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10465,
                          "src": "6216:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6228:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6216:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7374616e63652068617320616c7265616479206265656e20636f6e66696775726564",
                        "id": 10778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6231:43:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a",
                          "typeString": "literal_string \"This instance has already been configured\""
                        },
                        "value": "This instance has already been configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a",
                          "typeString": "literal_string \"This instance has already been configured\""
                        }
                      ],
                      "id": 10774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6208:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6208:67:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10780,
                  "nodeType": "ExpressionStatement",
                  "src": "6208:67:31"
                },
                {
                  "expression": {
                    "id": 10786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10781,
                      "name": "voteEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10465,
                      "src": "6286:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10782,
                          "name": "getTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14761,
                          "src": "6297:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 10783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6297:9:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 10784,
                        "name": "VOTE_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10458,
                        "src": "6309:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6297:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6286:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10787,
                  "nodeType": "ExpressionStatement",
                  "src": "6286:32:31"
                },
                {
                  "expression": {
                    "id": 10790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10788,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10496,
                      "src": "6328:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10789,
                      "name": "_cutoffBlockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10771,
                      "src": "6342:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6328:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10791,
                  "nodeType": "ExpressionStatement",
                  "src": "6328:32:31"
                },
                {
                  "expression": {
                    "id": 10794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10792,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10438,
                      "src": "6371:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10793,
                      "name": "_proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10769,
                      "src": "6382:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "src": "6371:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "id": 10795,
                  "nodeType": "ExpressionStatement",
                  "src": "6371:20:31"
                }
              ]
            },
            "documentation": {
              "id": 10766,
              "nodeType": "StructuredDocumentation",
              "src": "5770:335:31",
              "text": "Configure the proposals that are part of this voting cycle and start\n the lockup period.\n This also fixes the end times of each subsequent phase.\n This can only be called once, and should be called atomically with\n instantiation.\n @param _proposal The proposal to vote on."
            },
            "functionSelector": "072caf6e",
            "id": 10797,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configure",
            "nameLocation": "6119:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10769,
                  "mutability": "mutable",
                  "name": "_proposal",
                  "nameLocation": "6138:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10797,
                  "src": "6129:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 10768,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10767,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "6129:8:31"
                    },
                    "referencedDeclaration": 10943,
                    "src": "6129:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10771,
                  "mutability": "mutable",
                  "name": "_cutoffBlockNumber",
                  "nameLocation": "6157:18:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10797,
                  "src": "6149:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6149:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6128:48:31"
            },
            "returnParameters": {
              "id": 10773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6198:0:31"
            },
            "scope": 10915,
            "src": "6110:288:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10913,
              "nodeType": "Block",
              "src": "6840:1153:31",
              "statements": [
                {
                  "assignments": [
                    10802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10802,
                      "mutability": "mutable",
                      "name": "_requiredStake",
                      "nameLocation": "6858:14:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10913,
                      "src": "6850:22:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6850:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10806,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10803,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10451,
                      "src": "6875:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 10804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6888:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "6875:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6850:39:31"
                },
                {
                  "assignments": [
                    10808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10808,
                      "mutability": "mutable",
                      "name": "_total",
                      "nameLocation": "6907:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10913,
                      "src": "6899:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6899:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10812,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10810,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10496,
                        "src": "6933:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10809,
                      "name": "totalVotingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11902,
                      "src": "6916:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 10811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6916:29:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6899:46:31"
                },
                {
                  "assignments": [
                    10814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10814,
                      "mutability": "mutable",
                      "name": "_time",
                      "nameLocation": "6963:5:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10913,
                      "src": "6955:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10813,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6955:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10817,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10815,
                      "name": "getTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14761,
                      "src": "6971:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 10816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6971:9:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6955:25:31"
                },
                {
                  "assignments": [
                    10820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10820,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "6998:4:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10913,
                      "src": "6991:11:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Result_$10469",
                        "typeString": "enum PolicyVotes.Result"
                      },
                      "typeName": {
                        "id": 10819,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10818,
                          "name": "Result",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10469,
                          "src": "6991:6:31"
                        },
                        "referencedDeclaration": 10469,
                        "src": "6991:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$10469",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10821,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6991:11:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10822,
                      "name": "yesStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10454,
                      "src": "7017:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10823,
                        "name": "_total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10808,
                        "src": "7028:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 10824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7037:1:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "7028:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7017:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10837,
                  "nodeType": "IfStatement",
                  "src": "7013:188:31",
                  "trueBody": {
                    "id": 10836,
                    "nodeType": "Block",
                    "src": "7040:161:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10828,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10814,
                                "src": "7079:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10829,
                                  "name": "voteEnds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10465,
                                  "src": "7087:8:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 10830,
                                  "name": "ENACTION_DELAY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10462,
                                  "src": "7098:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7087:25:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7079:33:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d616a6f7269747920737570706f727420726571756972656420666f72206561726c7920656e616374696f6e",
                              "id": 10833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7130:46:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4",
                                "typeString": "literal_string \"Majority support required for early enaction\""
                              },
                              "value": "Majority support required for early enaction"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4",
                                "typeString": "literal_string \"Majority support required for early enaction\""
                              }
                            ],
                            "id": 10827,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7054:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7054:136:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10835,
                        "nodeType": "ExpressionStatement",
                        "src": "7054:136:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10840,
                              "name": "ID_POLICY_VOTES",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12153,
                              "src": "7242:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 10839,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12320,
                            "src": "7232:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 10841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7232:26:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10844,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "7270:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                                "typeString": "contract PolicyVotes"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                                "typeString": "contract PolicyVotes"
                              }
                            ],
                            "id": 10843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7262:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10842,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7262:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7262:13:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7232:43:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e7472616374206e6f206c6f6e6765722068617320617574686f72697a6174696f6e20746f20656e6163742074686520766f7465",
                        "id": 10847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7289:61:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b",
                          "typeString": "literal_string \"This contract no longer has authorization to enact the vote\""
                        },
                        "value": "This contract no longer has authorization to enact the vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b",
                          "typeString": "literal_string \"This contract no longer has authorization to enact the vote\""
                        }
                      ],
                      "id": 10838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7211:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7211:149:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10849,
                  "nodeType": "ExpressionStatement",
                  "src": "7211:149:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10850,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10451,
                      "src": "7375:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7389:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7375:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10859,
                        "name": "yesStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10454,
                        "src": "7475:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 10860,
                        "name": "_requiredStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10802,
                        "src": "7486:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7475:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 10882,
                      "nodeType": "Block",
                      "src": "7591:129:31",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10873,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10438,
                                    "src": "7663:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Proposal_$10943",
                                      "typeString": "contract Proposal"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Proposal_$10943",
                                      "typeString": "contract Proposal"
                                    }
                                  ],
                                  "id": 10872,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7655:7:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10871,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7655:7:31",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7655:17:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10868,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12039,
                                "src": "7632:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              },
                              "id": 10870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "internalCommand",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12482,
                              "src": "7632:22:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 10875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7632:41:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10876,
                          "nodeType": "ExpressionStatement",
                          "src": "7632:41:31"
                        },
                        {
                          "expression": {
                            "id": 10880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 10877,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10820,
                              "src": "7687:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$10469",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 10878,
                                "name": "Result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10469,
                                "src": "7694:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Result_$10469_$",
                                  "typeString": "type(enum PolicyVotes.Result)"
                                }
                              },
                              "id": 10879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Accepted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10466,
                              "src": "7694:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$10469",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "src": "7687:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$10469",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "id": 10881,
                          "nodeType": "ExpressionStatement",
                          "src": "7687:22:31"
                        }
                      ]
                    },
                    "id": 10883,
                    "nodeType": "IfStatement",
                    "src": "7471:249:31",
                    "trueBody": {
                      "id": 10867,
                      "nodeType": "Block",
                      "src": "7502:83:31",
                      "statements": [
                        {
                          "expression": {
                            "id": 10865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 10862,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10820,
                              "src": "7552:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$10469",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 10863,
                                "name": "Result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10469,
                                "src": "7559:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Result_$10469_$",
                                  "typeString": "type(enum PolicyVotes.Result)"
                                }
                              },
                              "id": 10864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Rejected",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10467,
                              "src": "7559:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$10469",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "src": "7552:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$10469",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "id": 10866,
                          "nodeType": "ExpressionStatement",
                          "src": "7552:22:31"
                        }
                      ]
                    }
                  },
                  "id": 10884,
                  "nodeType": "IfStatement",
                  "src": "7371:349:31",
                  "trueBody": {
                    "id": 10858,
                    "nodeType": "Block",
                    "src": "7392:73:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 10856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10853,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10820,
                            "src": "7434:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$10469",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 10854,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10469,
                              "src": "7441:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$10469_$",
                                "typeString": "type(enum PolicyVotes.Result)"
                              }
                            },
                            "id": 10855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Failed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10468,
                            "src": "7441:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$10469",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "src": "7434:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Result_$10469",
                            "typeString": "enum PolicyVotes.Result"
                          }
                        },
                        "id": 10857,
                        "nodeType": "ExpressionStatement",
                        "src": "7434:20:31"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10886,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10820,
                        "src": "7749:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$10469",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Result_$10469",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      ],
                      "id": 10885,
                      "name": "VoteCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10475,
                      "src": "7735:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Result_$10469_$returns$__$",
                        "typeString": "function (enum PolicyVotes.Result)"
                      }
                    },
                    "id": 10887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7735:19:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10888,
                  "nodeType": "EmitStatement",
                  "src": "7730:24:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10892,
                        "name": "ID_POLICY_VOTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12153,
                        "src": "7782:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 10889,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12039,
                        "src": "7764:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$12499",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 10891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeSelf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12417,
                      "src": "7764:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 10893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7764:34:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10894,
                  "nodeType": "ExpressionStatement",
                  "src": "7764:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10900,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12039,
                                "src": "7873:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              ],
                              "id": 10899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7865:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10898,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7865:7:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7865:15:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10906,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "7925:4:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                                      "typeString": "contract PolicyVotes"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                                      "typeString": "contract PolicyVotes"
                                    }
                                  ],
                                  "id": 10905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7917:7:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10904,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7917:7:31",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7917:13:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10902,
                                "name": "ecoToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11848,
                                "src": "7898:8:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ECO_$2497",
                                  "typeString": "contract ECO"
                                }
                              },
                              "id": 10903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3975,
                              "src": "7898:18:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 10908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7898:33:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10896,
                            "name": "ecoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11848,
                            "src": "7830:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECO_$2497",
                              "typeString": "contract ECO"
                            }
                          },
                          "id": 10897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "7830:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7830:115:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "id": 10910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7959:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        },
                        "value": "Transfer Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        }
                      ],
                      "id": 10895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7809:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7809:177:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10912,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:177:31"
                }
              ]
            },
            "documentation": {
              "id": 10798,
              "nodeType": "StructuredDocumentation",
              "src": "6404:403:31",
              "text": "Execute the proposal if it has enough support.\n Can only be called after the voting and the delay phase,\n or after the point that more than 50% of the total voting power\n has voted in favor of the proposal.\n If the proposal has been accepted, it will be enacted by\n calling the `enacted` functions using `delegatecall`\n from the root policy."
            },
            "functionSelector": "61461954",
            "id": 10914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "6821:7:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6828:2:31"
            },
            "returnParameters": {
              "id": 10800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6840:0:31"
            },
            "scope": 10915,
            "src": "6812:1181:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10916,
        "src": "445:7550:31",
        "usedErrors": []
      }
    ],
    "src": "32:7964:31"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/governance/PolicyVotes.sol",
    "exportedSymbols": {
      "CloneFactory": [
        2207
      ],
      "CurrencyTimer": [
        8401
      ],
      "ECO": [
        2497
      ],
      "ECOx": [
        3238
      ],
      "ECOxLockup": [
        8688
      ],
      "ERC1820Client": [
        12017
      ],
      "ERC20": [
        3785
      ],
      "ForwardTarget": [
        12742
      ],
      "IECO": [
        3826
      ],
      "IERC1820Implementer": [
        218
      ],
      "IERC1820Registry": [
        308
      ],
      "IERC20": [
        182
      ],
      "IGeneration": [
        8696
      ],
      "ILockups": [
        8714
      ],
      "Lockup": [
        9655
      ],
      "Policed": [
        12119
      ],
      "PolicedUtils": [
        12321
      ],
      "Policy": [
        12499
      ],
      "PolicyVotes": [
        10915
      ],
      "Proposal": [
        10943
      ],
      "StringPacker": [
        14748
      ],
      "TimeUtils": [
        14762
      ],
      "VoteCheckpoints": [
        6922
      ],
      "VotingPower": [
        11959
      ]
    },
    "id": 10916,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10422,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:31"
      },
      {
        "absolutePath": "project:/contracts/policy/Policy.sol",
        "file": "../policy/Policy.sol",
        "id": 10423,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 12500,
        "src": "57:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/Proposal.sol",
        "file": "./Proposal.sol",
        "id": 10424,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 10944,
        "src": "88:24:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/policy/PolicedUtils.sol",
        "file": "../policy/PolicedUtils.sol",
        "id": 10425,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 12322,
        "src": "113:36:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/TimeUtils.sol",
        "file": "../utils/TimeUtils.sol",
        "id": 10426,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 14763,
        "src": "150:32:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/governance/VotingPower.sol",
        "file": "./VotingPower.sol",
        "id": 10427,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 11960,
        "src": "183:27:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/ECO.sol",
        "file": "../currency/ECO.sol",
        "id": 10428,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 2498,
        "src": "211:29:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/currency/ECOx.sol",
        "file": "../currency/ECOx.sol",
        "id": 10429,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10916,
        "sourceUnit": 3239,
        "src": "241:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10431,
              "name": "VotingPower",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11959,
              "src": "469:11:31"
            },
            "id": 10432,
            "nodeType": "InheritanceSpecifier",
            "src": "469:11:31"
          },
          {
            "baseName": {
              "id": 10433,
              "name": "TimeUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14762,
              "src": "482:9:31"
            },
            "id": 10434,
            "nodeType": "InheritanceSpecifier",
            "src": "482:9:31"
          }
        ],
        "canonicalName": "PolicyVotes",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10430,
          "nodeType": "StructuredDocumentation",
          "src": "273:171:31",
          "text": "@title PolicyVotes\n This implements the voting and implementation phases of the policy decision process.\n Open stake based voting is used for the voting phase."
        },
        "fullyImplemented": true,
        "id": 10915,
        "linearizedBaseContracts": [
          10915,
          14762,
          11959,
          12321,
          12017,
          2207,
          12119,
          218,
          12742
        ],
        "name": "PolicyVotes",
        "nameLocation": "454:11:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 10435,
              "nodeType": "StructuredDocumentation",
              "src": "498:34:31",
              "text": "The proposal being voted on "
            },
            "functionSelector": "753ec103",
            "id": 10438,
            "mutability": "mutable",
            "name": "proposal",
            "nameLocation": "553:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "537:24:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Proposal_$10943",
              "typeString": "contract Proposal"
            },
            "typeName": {
              "id": 10437,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10436,
                "name": "Proposal",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 10943,
                "src": "537:8:31"
              },
              "referencedDeclaration": 10943,
              "src": "537:8:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proposal_$10943",
                "typeString": "contract Proposal"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10439,
              "nodeType": "StructuredDocumentation",
              "src": "568:28:31",
              "text": "Per voter power."
            },
            "functionSelector": "26476204",
            "id": 10443,
            "mutability": "mutable",
            "name": "stake",
            "nameLocation": "636:5:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "601:40:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 10442,
              "keyType": {
                "id": 10440,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "609:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "601:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10441,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "620:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10444,
              "nodeType": "StructuredDocumentation",
              "src": "648:57:31",
              "text": "Per voter that votes yes, by amount voted yes"
            },
            "functionSelector": "d40d172d",
            "id": 10448,
            "mutability": "mutable",
            "name": "yesVotes",
            "nameLocation": "745:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "710:43:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 10447,
              "keyType": {
                "id": 10445,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "718:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "710:27:31",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 10446,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "729:7:31",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10449,
              "nodeType": "StructuredDocumentation",
              "src": "760:93:31",
              "text": "Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico)."
            },
            "functionSelector": "8b0e9f3f",
            "id": 10451,
            "mutability": "mutable",
            "name": "totalStake",
            "nameLocation": "873:10:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "858:25:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "858:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10452,
              "nodeType": "StructuredDocumentation",
              "src": "890:80:31",
              "text": "Total revealed positive stake in basic unit of 10^{-18} ECO (weico)."
            },
            "functionSelector": "28ea6dda",
            "id": 10454,
            "mutability": "mutable",
            "name": "yesStake",
            "nameLocation": "990:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "975:23:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10453,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "975:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 10455,
              "nodeType": "StructuredDocumentation",
              "src": "1005:65:31",
              "text": "The length of the commit portion of the voting phase."
            },
            "functionSelector": "486a27db",
            "id": 10458,
            "mutability": "constant",
            "name": "VOTE_TIME",
            "nameLocation": "1099:9:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "1075:45:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10456,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1075:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 10457,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1111:9:31",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_240_by_1",
                "typeString": "int_const 240"
              },
              "value": "4"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "documentation": {
              "id": 10459,
              "nodeType": "StructuredDocumentation",
              "src": "1127:40:31",
              "text": "The delay on a plurality win"
            },
            "functionSelector": "328a1da9",
            "id": 10462,
            "mutability": "constant",
            "name": "ENACTION_DELAY",
            "nameLocation": "1196:14:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "1172:50:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10460,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1172:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 10461,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1213:9:31",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60_by_1",
                "typeString": "int_const 60"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10463,
              "nodeType": "StructuredDocumentation",
              "src": "1229:79:31",
              "text": "The timestamp at which the commit portion of the voting phase ends."
            },
            "functionSelector": "85defaf4",
            "id": 10465,
            "mutability": "mutable",
            "name": "voteEnds",
            "nameLocation": "1328:8:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "1313:23:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10464,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1313:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "PolicyVotes.Result",
            "id": 10469,
            "members": [
              {
                "id": 10466,
                "name": "Accepted",
                "nameLocation": "1388:8:31",
                "nodeType": "EnumValue",
                "src": "1388:8:31"
              },
              {
                "id": 10467,
                "name": "Rejected",
                "nameLocation": "1406:8:31",
                "nodeType": "EnumValue",
                "src": "1406:8:31"
              },
              {
                "id": 10468,
                "name": "Failed",
                "nameLocation": "1424:6:31",
                "nodeType": "EnumValue",
                "src": "1424:6:31"
              }
            ],
            "name": "Result",
            "nameLocation": "1371:6:31",
            "nodeType": "EnumDefinition",
            "src": "1366:70:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10470,
              "nodeType": "StructuredDocumentation",
              "src": "1442:53:31",
              "text": "Event emitted when vote outcome is known."
            },
            "id": 10475,
            "name": "VoteCompleted",
            "nameLocation": "1506:13:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10473,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1527:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10475,
                  "src": "1520:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Result_$10469",
                    "typeString": "enum PolicyVotes.Result"
                  },
                  "typeName": {
                    "id": 10472,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10471,
                      "name": "Result",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10469,
                      "src": "1520:6:31"
                    },
                    "referencedDeclaration": 10469,
                    "src": "1520:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Result_$10469",
                      "typeString": "enum PolicyVotes.Result"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1519:15:31"
            },
            "src": "1500:35:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10476,
              "nodeType": "StructuredDocumentation",
              "src": "1541:49:31",
              "text": "Event emitted when vote is submitted."
            },
            "id": 10484,
            "name": "PolicyVoteCast",
            "nameLocation": "1601:14:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10478,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1632:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10484,
                  "src": "1616:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10480,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "vote",
                  "nameLocation": "1644:4:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10484,
                  "src": "1639:9:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10479,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10482,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1658:6:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10484,
                  "src": "1650:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1650:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1615:50:31"
            },
            "src": "1595:71:31"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 10485,
              "nodeType": "StructuredDocumentation",
              "src": "1672:45:31",
              "text": "Event emitted when split vote is."
            },
            "id": 10493,
            "name": "PolicySplitVoteCast",
            "nameLocation": "1728:19:31",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10487,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "1773:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10493,
                  "src": "1757:21:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1757:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10489,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "votesYes",
                  "nameLocation": "1796:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10493,
                  "src": "1788:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1788:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10491,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "votesNo",
                  "nameLocation": "1822:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10493,
                  "src": "1814:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1747:88:31"
            },
            "src": "1722:114:31"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10494,
              "nodeType": "StructuredDocumentation",
              "src": "1842:85:31",
              "text": "The store block number to use when checking account balances for staking."
            },
            "functionSelector": "57e871e7",
            "id": 10496,
            "mutability": "mutable",
            "name": "blockNumber",
            "nameLocation": "1947:11:31",
            "nodeType": "VariableDeclaration",
            "scope": 10915,
            "src": "1932:26:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10495,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1932:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10513,
              "nodeType": "Block",
              "src": "2144:2:31",
              "statements": []
            },
            "id": 10514,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10508,
                    "name": "_policy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10499,
                    "src": "2114:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  {
                    "id": 10509,
                    "name": "_ecoAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10502,
                    "src": "2123:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  {
                    "id": 10510,
                    "name": "_ecoXAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10505,
                    "src": "2133:9:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECOx_$3238",
                      "typeString": "contract ECOx"
                    }
                  }
                ],
                "id": 10511,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10507,
                  "name": "VotingPower",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11959,
                  "src": "2102:11:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "2102:41:31"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10499,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "2042:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10514,
                  "src": "2035:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Policy_$12499",
                    "typeString": "contract Policy"
                  },
                  "typeName": {
                    "id": 10498,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10497,
                      "name": "Policy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 12499,
                      "src": "2035:6:31"
                    },
                    "referencedDeclaration": 12499,
                    "src": "2035:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Policy_$12499",
                      "typeString": "contract Policy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10502,
                  "mutability": "mutable",
                  "name": "_ecoAddr",
                  "nameLocation": "2063:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10514,
                  "src": "2059:12:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECO_$2497",
                    "typeString": "contract ECO"
                  },
                  "typeName": {
                    "id": 10501,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10500,
                      "name": "ECO",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2497,
                      "src": "2059:3:31"
                    },
                    "referencedDeclaration": 2497,
                    "src": "2059:3:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECO_$2497",
                      "typeString": "contract ECO"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10505,
                  "mutability": "mutable",
                  "name": "_ecoXAddr",
                  "nameLocation": "2086:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10514,
                  "src": "2081:14:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ECOx_$3238",
                    "typeString": "contract ECOx"
                  },
                  "typeName": {
                    "id": 10504,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10503,
                      "name": "ECOx",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3238,
                      "src": "2081:4:31"
                    },
                    "referencedDeclaration": 3238,
                    "src": "2081:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ECOx_$3238",
                      "typeString": "contract ECOx"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2025:76:31"
            },
            "returnParameters": {
              "id": 10512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2144:0:31"
            },
            "scope": 10915,
            "src": "2014:132:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10638,
              "nodeType": "Block",
              "src": "2539:1103:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10521,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14761,
                            "src": "2570:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2570:9:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10523,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10465,
                          "src": "2582:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2570:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465732063616e206f6e6c79206265207265636f7264656420647572696e672074686520766f74696e6720706572696f64",
                        "id": 10525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2604:53:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        },
                        "value": "Votes can only be recorded during the voting period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        }
                      ],
                      "id": 10520,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2549:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:118:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10527,
                  "nodeType": "ExpressionStatement",
                  "src": "2549:118:31"
                },
                {
                  "assignments": [
                    10529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10529,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "2686:7:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10638,
                      "src": "2678:15:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10528,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2678:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10535,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10531,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2708:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2708:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10533,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10496,
                        "src": "2720:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10530,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "2696:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 10534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2696:36:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2678:54:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10537,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10529,
                          "src": "2764:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2774:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2764:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657273206d75737420686176652068656c6420746f6b656e73206265666f7265207468697320766f74696e67206379636c65",
                        "id": 10540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2789:55:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124",
                          "typeString": "literal_string \"Voters must have held tokens before this voting cycle\""
                        },
                        "value": "Voters must have held tokens before this voting cycle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124",
                          "typeString": "literal_string \"Voters must have held tokens before this voting cycle\""
                        }
                      ],
                      "id": 10536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2743:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2743:111:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10542,
                  "nodeType": "ExpressionStatement",
                  "src": "2743:111:31"
                },
                {
                  "assignments": [
                    10544
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10544,
                      "mutability": "mutable",
                      "name": "_oldStake",
                      "nameLocation": "2873:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10638,
                      "src": "2865:17:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10543,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2865:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10549,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10545,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10443,
                      "src": "2885:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10548,
                    "indexExpression": {
                      "expression": {
                        "id": 10546,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2891:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2891:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2885:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2865:37:31"
                },
                {
                  "assignments": [
                    10551
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10551,
                      "mutability": "mutable",
                      "name": "_oldYesVotes",
                      "nameLocation": "2920:12:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10638,
                      "src": "2912:20:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10550,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2912:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10556,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10552,
                      "name": "yesVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10448,
                      "src": "2935:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10555,
                    "indexExpression": {
                      "expression": {
                        "id": 10553,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2944:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2944:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2935:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2912:43:31"
                },
                {
                  "assignments": [
                    10558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10558,
                      "mutability": "mutable",
                      "name": "_prevVote",
                      "nameLocation": "2970:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10638,
                      "src": "2965:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10557,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2965:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10562,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10559,
                      "name": "_oldYesVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10551,
                      "src": "2982:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2998:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2982:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2965:34:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10563,
                      "name": "_oldStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10544,
                      "src": "3014:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3027:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3014:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10594,
                  "nodeType": "IfStatement",
                  "src": "3010:324:31",
                  "trueBody": {
                    "id": 10593,
                    "nodeType": "Block",
                    "src": "3030:304:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 10569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10567,
                                  "name": "_prevVote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10558,
                                  "src": "3069:9:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 10568,
                                  "name": "_vote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10517,
                                  "src": "3082:5:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3069:18:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10570,
                                  "name": "_oldStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10544,
                                  "src": "3091:9:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 10571,
                                  "name": "_oldYesVotes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10551,
                                  "src": "3104:12:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3091:25:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3069:47:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f757220766f74652068617320616c7265616479206265656e207265636f72646564",
                              "id": 10574,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3134:37:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0",
                                "typeString": "literal_string \"Your vote has already been recorded\""
                              },
                              "value": "Your vote has already been recorded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3e2efe301b849910f8983b8d9907103e413c1ffa0102b42506cf76d532c2f1d0",
                                "typeString": "literal_string \"Your vote has already been recorded\""
                              }
                            ],
                            "id": 10566,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3044:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3044:141:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10576,
                        "nodeType": "ExpressionStatement",
                        "src": "3044:141:31"
                      },
                      {
                        "condition": {
                          "id": 10577,
                          "name": "_prevVote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10558,
                          "src": "3204:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10592,
                        "nodeType": "IfStatement",
                        "src": "3200:124:31",
                        "trueBody": {
                          "id": 10591,
                          "nodeType": "Block",
                          "src": "3215:109:31",
                          "statements": [
                            {
                              "expression": {
                                "id": 10582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 10578,
                                  "name": "yesStake",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10454,
                                  "src": "3233:8:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 10581,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 10579,
                                    "name": "yesStake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10454,
                                    "src": "3244:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 10580,
                                    "name": "_oldYesVotes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10551,
                                    "src": "3255:12:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3244:23:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3233:34:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10583,
                              "nodeType": "ExpressionStatement",
                              "src": "3233:34:31"
                            },
                            {
                              "expression": {
                                "id": 10589,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 10584,
                                    "name": "yesVotes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10448,
                                    "src": "3285:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 10587,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 10585,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3294:3:31",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 10586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3294:10:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3285:20:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 10588,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3308:1:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3285:24:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 10590,
                              "nodeType": "ExpressionStatement",
                              "src": "3285:24:31"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 10595,
                    "name": "_vote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10517,
                    "src": "3348:5:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10610,
                  "nodeType": "IfStatement",
                  "src": "3344:109:31",
                  "trueBody": {
                    "id": 10609,
                    "nodeType": "Block",
                    "src": "3355:98:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 10600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10596,
                            "name": "yesStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10454,
                            "src": "3369:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10597,
                              "name": "yesStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10454,
                              "src": "3380:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 10598,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10529,
                              "src": "3391:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3380:18:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3369:29:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10601,
                        "nodeType": "ExpressionStatement",
                        "src": "3369:29:31"
                      },
                      {
                        "expression": {
                          "id": 10607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 10602,
                              "name": "yesVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10448,
                              "src": "3412:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 10605,
                            "indexExpression": {
                              "expression": {
                                "id": 10603,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3421:3:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3421:10:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3412:20:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10606,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10529,
                            "src": "3435:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3412:30:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10608,
                        "nodeType": "ExpressionStatement",
                        "src": "3412:30:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10611,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10443,
                        "src": "3463:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10614,
                      "indexExpression": {
                        "expression": {
                          "id": 10612,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3469:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3469:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3463:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10615,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10529,
                      "src": "3483:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3463:27:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10617,
                  "nodeType": "ExpressionStatement",
                  "src": "3463:27:31"
                },
                {
                  "expression": {
                    "id": 10624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10618,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10451,
                      "src": "3500:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10619,
                          "name": "totalStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10451,
                          "src": "3513:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 10620,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10529,
                          "src": "3526:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3513:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10622,
                        "name": "_oldStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10544,
                        "src": "3536:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3513:32:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3500:45:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10625,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:45:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10627,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3567:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3567:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10626,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11945,
                      "src": "3556:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3556:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10630,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:22:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10632,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3608:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3608:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10634,
                        "name": "_vote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10517,
                        "src": "3620:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 10635,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10529,
                        "src": "3627:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10631,
                      "name": "PolicyVoteCast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10484,
                      "src": "3593:14:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bool,uint256)"
                      }
                    },
                    "id": 10636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3593:42:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10637,
                  "nodeType": "EmitStatement",
                  "src": "3588:47:31"
                }
              ]
            },
            "documentation": {
              "id": 10515,
              "nodeType": "StructuredDocumentation",
              "src": "2152:347:31",
              "text": "Submit your yes/no support\n Shows whether or not your voting power supports or does not support the vote\n Note Not voting is not equivalent to voting no. Percentage of voted support,\n not percentage of total voting power is used to determine the win.\n @param _vote The vote for the proposal"
            },
            "functionSelector": "4b9f5c98",
            "id": 10639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vote",
            "nameLocation": "2513:4:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10517,
                  "mutability": "mutable",
                  "name": "_vote",
                  "nameLocation": "2523:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10639,
                  "src": "2518:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10516,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2518:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2517:12:31"
            },
            "returnParameters": {
              "id": 10519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2539:0:31"
            },
            "scope": 10915,
            "src": "2504:1138:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10748,
              "nodeType": "Block",
              "src": "4511:987:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10648,
                            "name": "getTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14761,
                            "src": "4542:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 10649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4542:9:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 10650,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10465,
                          "src": "4554:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4542:20:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465732063616e206f6e6c79206265207265636f7264656420647572696e672074686520766f74696e6720706572696f64",
                        "id": 10652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4576:53:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        },
                        "value": "Votes can only be recorded during the voting period"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3327add606cd58a81d66eb04d73a8a023130eb7e799a3da45a3a1b81239c8b8e",
                          "typeString": "literal_string \"Votes can only be recorded during the voting period\""
                        }
                      ],
                      "id": 10647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4521:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4521:118:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10654,
                  "nodeType": "ExpressionStatement",
                  "src": "4521:118:31"
                },
                {
                  "assignments": [
                    10656
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10656,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "4658:7:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10748,
                      "src": "4650:15:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10655,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4650:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10662,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10658,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4680:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4680:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10660,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10496,
                        "src": "4692:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10657,
                      "name": "votingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11933,
                      "src": "4668:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view returns (uint256)"
                      }
                    },
                    "id": 10661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4668:36:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4650:54:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10664,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10656,
                          "src": "4736:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4746:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4736:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74657273206d75737420686176652068656c6420746f6b656e73206265666f7265207468697320766f74696e67206379636c65",
                        "id": 10667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4761:55:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124",
                          "typeString": "literal_string \"Voters must have held tokens before this voting cycle\""
                        },
                        "value": "Voters must have held tokens before this voting cycle"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_986c2b29df9acdbfa3891cd3498d558fc6ca9c48bfb90fdde8e0c087f8a29124",
                          "typeString": "literal_string \"Voters must have held tokens before this voting cycle\""
                        }
                      ],
                      "id": 10663,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4715:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4715:111:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10669,
                  "nodeType": "ExpressionStatement",
                  "src": "4715:111:31"
                },
                {
                  "assignments": [
                    10671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10671,
                      "mutability": "mutable",
                      "name": "_totalVotes",
                      "nameLocation": "4845:11:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10748,
                      "src": "4837:19:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4837:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10675,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10672,
                      "name": "_votesYes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10642,
                      "src": "4859:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 10673,
                      "name": "_votesNo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10644,
                      "src": "4871:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4859:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4837:42:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10677,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10656,
                          "src": "4911:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10678,
                          "name": "_totalVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10671,
                          "src": "4922:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4911:22:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f757220766f74696e6720706f776572206973206c657373207468616e207375626d697474656420796573202b206e6f20766f746573",
                        "id": 10680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4947:57:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d79075393298e308c04c21511f7d86ed39c14c8596cd4e2b43ecac41a3f2c92",
                          "typeString": "literal_string \"Your voting power is less than submitted yes + no votes\""
                        },
                        "value": "Your voting power is less than submitted yes + no votes"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d79075393298e308c04c21511f7d86ed39c14c8596cd4e2b43ecac41a3f2c92",
                          "typeString": "literal_string \"Your voting power is less than submitted yes + no votes\""
                        }
                      ],
                      "id": 10676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4890:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4890:124:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10682,
                  "nodeType": "ExpressionStatement",
                  "src": "4890:124:31"
                },
                {
                  "assignments": [
                    10684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10684,
                      "mutability": "mutable",
                      "name": "_oldStake",
                      "nameLocation": "5033:9:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10748,
                      "src": "5025:17:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10683,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5025:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10689,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10685,
                      "name": "stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10443,
                      "src": "5045:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10688,
                    "indexExpression": {
                      "expression": {
                        "id": 10686,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5051:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5051:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5045:17:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5025:37:31"
                },
                {
                  "assignments": [
                    10691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10691,
                      "mutability": "mutable",
                      "name": "_oldYesVotes",
                      "nameLocation": "5080:12:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10748,
                      "src": "5072:20:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10690,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5072:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10696,
                  "initialValue": {
                    "baseExpression": {
                      "id": 10692,
                      "name": "yesVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10448,
                      "src": "5095:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 10695,
                    "indexExpression": {
                      "expression": {
                        "id": 10693,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5104:3:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5104:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5095:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5072:43:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10697,
                      "name": "_oldYesVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10691,
                      "src": "5130:12:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5145:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5130:16:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10707,
                  "nodeType": "IfStatement",
                  "src": "5126:81:31",
                  "trueBody": {
                    "id": 10706,
                    "nodeType": "Block",
                    "src": "5148:59:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 10704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10700,
                            "name": "yesStake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10454,
                            "src": "5162:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10701,
                              "name": "yesStake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10454,
                              "src": "5173:8:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 10702,
                              "name": "_oldYesVotes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10691,
                              "src": "5184:12:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5173:23:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5162:34:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10705,
                        "nodeType": "ExpressionStatement",
                        "src": "5162:34:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10708,
                        "name": "yesVotes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10448,
                        "src": "5217:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10711,
                      "indexExpression": {
                        "expression": {
                          "id": 10709,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5226:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5226:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5217:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10712,
                      "name": "_votesYes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10642,
                      "src": "5240:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5217:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10714,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:32:31"
                },
                {
                  "expression": {
                    "id": 10719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10715,
                      "name": "yesStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10454,
                      "src": "5259:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10716,
                        "name": "yesStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10454,
                        "src": "5270:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 10717,
                        "name": "_votesYes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10642,
                        "src": "5281:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5270:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5259:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10720,
                  "nodeType": "ExpressionStatement",
                  "src": "5259:31:31"
                },
                {
                  "expression": {
                    "id": 10726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10721,
                        "name": "stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10443,
                        "src": "5301:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 10724,
                      "indexExpression": {
                        "expression": {
                          "id": 10722,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5307:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5307:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5301:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10725,
                      "name": "_totalVotes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10671,
                      "src": "5321:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5301:31:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10727,
                  "nodeType": "ExpressionStatement",
                  "src": "5301:31:31"
                },
                {
                  "expression": {
                    "id": 10734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10728,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10451,
                      "src": "5342:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10729,
                          "name": "totalStake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10451,
                          "src": "5355:10:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 10730,
                          "name": "_totalVotes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10671,
                          "src": "5368:11:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5355:24:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 10732,
                        "name": "_oldStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10684,
                        "src": "5382:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5355:36:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5342:49:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10735,
                  "nodeType": "ExpressionStatement",
                  "src": "5342:49:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10737,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5413:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5413:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10736,
                      "name": "recordVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11945,
                      "src": "5402:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5402:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10740,
                  "nodeType": "ExpressionStatement",
                  "src": "5402:22:31"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5459:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5459:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10744,
                        "name": "_votesYes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10642,
                        "src": "5471:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10745,
                        "name": "_votesNo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10644,
                        "src": "5482:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10741,
                      "name": "PolicySplitVoteCast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10493,
                      "src": "5439:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 10746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5439:52:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10747,
                  "nodeType": "EmitStatement",
                  "src": "5434:57:31"
                }
              ]
            },
            "documentation": {
              "id": 10640,
              "nodeType": "StructuredDocumentation",
              "src": "3648:793:31",
              "text": "Submit a mixed vote of yes/no support\n Useful for contracts that wish to vote for an agregate of users\n Note As not voting is not equivalent to voting no it matters recording the no votes\n The total amount of votes in favor is relevant for early enaction and the total percentage\n of voting power that voted is necessary for determining a winner.\n Note As this is designed for contracts, the onus is on the contract designer to correctly\n understand and take responsibility for its input parameters. The only check is to stop\n someone from voting with more power than they have.\n @param _votesYes The amount of votes in favor of the proposal\n @param _votesNo The amount of votes against the proposal"
            },
            "functionSelector": "ce32de2b",
            "id": 10749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "voteSplit",
            "nameLocation": "4455:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10642,
                  "mutability": "mutable",
                  "name": "_votesYes",
                  "nameLocation": "4473:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10749,
                  "src": "4465:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10644,
                  "mutability": "mutable",
                  "name": "_votesNo",
                  "nameLocation": "4492:8:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10749,
                  "src": "4484:16:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4484:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4464:37:31"
            },
            "returnParameters": {
              "id": 10646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4511:0:31"
            },
            "scope": 10915,
            "src": "4446:1052:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12250
            ],
            "body": {
              "id": 10764,
              "nodeType": "Block",
              "src": "5724:40:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10761,
                        "name": "_self",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10752,
                        "src": "5751:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10758,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "5734:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PolicyVotes_$10915_$",
                          "typeString": "type(contract super PolicyVotes)"
                        }
                      },
                      "id": 10760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12250,
                      "src": "5734:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5734:23:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10763,
                  "nodeType": "ExpressionStatement",
                  "src": "5734:23:31"
                }
              ]
            },
            "documentation": {
              "id": 10750,
              "nodeType": "StructuredDocumentation",
              "src": "5504:147:31",
              "text": "Initialize a cloned/proxied copy of this contract.\n @param _self The original contract, to provide access to storage data."
            },
            "functionSelector": "c4d66de8",
            "id": 10765,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10756,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10755,
                  "name": "onlyConstruction",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12672,
                  "src": "5707:16:31"
                },
                "nodeType": "ModifierInvocation",
                "src": "5707:16:31"
              }
            ],
            "name": "initialize",
            "nameLocation": "5665:10:31",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10754,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5698:8:31"
            },
            "parameters": {
              "id": 10753,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10752,
                  "mutability": "mutable",
                  "name": "_self",
                  "nameLocation": "5684:5:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10765,
                  "src": "5676:13:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5676:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5675:15:31"
            },
            "returnParameters": {
              "id": 10757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5724:0:31"
            },
            "scope": 10915,
            "src": "5656:108:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10796,
              "nodeType": "Block",
              "src": "6198:200:31",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10775,
                          "name": "voteEnds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10465,
                          "src": "6216:8:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6228:1:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6216:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320696e7374616e63652068617320616c7265616479206265656e20636f6e66696775726564",
                        "id": 10778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6231:43:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a",
                          "typeString": "literal_string \"This instance has already been configured\""
                        },
                        "value": "This instance has already been configured"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc54d0dc1498a365d14b59883d900156b1f4bfb484ef9468ff52ff0e42caef0a",
                          "typeString": "literal_string \"This instance has already been configured\""
                        }
                      ],
                      "id": 10774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6208:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6208:67:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10780,
                  "nodeType": "ExpressionStatement",
                  "src": "6208:67:31"
                },
                {
                  "expression": {
                    "id": 10786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10781,
                      "name": "voteEnds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10465,
                      "src": "6286:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10782,
                          "name": "getTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14761,
                          "src": "6297:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 10783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6297:9:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 10784,
                        "name": "VOTE_TIME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10458,
                        "src": "6309:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6297:21:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6286:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10787,
                  "nodeType": "ExpressionStatement",
                  "src": "6286:32:31"
                },
                {
                  "expression": {
                    "id": 10790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10788,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10496,
                      "src": "6328:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10789,
                      "name": "_cutoffBlockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10771,
                      "src": "6342:18:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6328:32:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10791,
                  "nodeType": "ExpressionStatement",
                  "src": "6328:32:31"
                },
                {
                  "expression": {
                    "id": 10794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10792,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10438,
                      "src": "6371:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10793,
                      "name": "_proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10769,
                      "src": "6382:9:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Proposal_$10943",
                        "typeString": "contract Proposal"
                      }
                    },
                    "src": "6371:20:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "id": 10795,
                  "nodeType": "ExpressionStatement",
                  "src": "6371:20:31"
                }
              ]
            },
            "documentation": {
              "id": 10766,
              "nodeType": "StructuredDocumentation",
              "src": "5770:335:31",
              "text": "Configure the proposals that are part of this voting cycle and start\n the lockup period.\n This also fixes the end times of each subsequent phase.\n This can only be called once, and should be called atomically with\n instantiation.\n @param _proposal The proposal to vote on."
            },
            "functionSelector": "072caf6e",
            "id": 10797,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "configure",
            "nameLocation": "6119:9:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10769,
                  "mutability": "mutable",
                  "name": "_proposal",
                  "nameLocation": "6138:9:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10797,
                  "src": "6129:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Proposal_$10943",
                    "typeString": "contract Proposal"
                  },
                  "typeName": {
                    "id": 10768,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10767,
                      "name": "Proposal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10943,
                      "src": "6129:8:31"
                    },
                    "referencedDeclaration": 10943,
                    "src": "6129:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Proposal_$10943",
                      "typeString": "contract Proposal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10771,
                  "mutability": "mutable",
                  "name": "_cutoffBlockNumber",
                  "nameLocation": "6157:18:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 10797,
                  "src": "6149:26:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6149:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6128:48:31"
            },
            "returnParameters": {
              "id": 10773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6198:0:31"
            },
            "scope": 10915,
            "src": "6110:288:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10913,
              "nodeType": "Block",
              "src": "6840:1153:31",
              "statements": [
                {
                  "assignments": [
                    10802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10802,
                      "mutability": "mutable",
                      "name": "_requiredStake",
                      "nameLocation": "6858:14:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10913,
                      "src": "6850:22:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10801,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6850:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10806,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10803,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10451,
                      "src": "6875:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 10804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6888:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "6875:14:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6850:39:31"
                },
                {
                  "assignments": [
                    10808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10808,
                      "mutability": "mutable",
                      "name": "_total",
                      "nameLocation": "6907:6:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10913,
                      "src": "6899:14:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6899:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10812,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10810,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10496,
                        "src": "6933:11:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10809,
                      "name": "totalVotingPower",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11902,
                      "src": "6916:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 10811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6916:29:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6899:46:31"
                },
                {
                  "assignments": [
                    10814
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10814,
                      "mutability": "mutable",
                      "name": "_time",
                      "nameLocation": "6963:5:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10913,
                      "src": "6955:13:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10813,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6955:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10817,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10815,
                      "name": "getTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14761,
                      "src": "6971:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 10816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6971:9:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6955:25:31"
                },
                {
                  "assignments": [
                    10820
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10820,
                      "mutability": "mutable",
                      "name": "_res",
                      "nameLocation": "6998:4:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 10913,
                      "src": "6991:11:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Result_$10469",
                        "typeString": "enum PolicyVotes.Result"
                      },
                      "typeName": {
                        "id": 10819,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10818,
                          "name": "Result",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10469,
                          "src": "6991:6:31"
                        },
                        "referencedDeclaration": 10469,
                        "src": "6991:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$10469",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10821,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6991:11:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10822,
                      "name": "yesStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10454,
                      "src": "7017:8:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10823,
                        "name": "_total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10808,
                        "src": "7028:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 10824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7037:1:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "7028:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7017:21:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10837,
                  "nodeType": "IfStatement",
                  "src": "7013:188:31",
                  "trueBody": {
                    "id": 10836,
                    "nodeType": "Block",
                    "src": "7040:161:31",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10828,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10814,
                                "src": "7079:5:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10831,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10829,
                                  "name": "voteEnds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10465,
                                  "src": "7087:8:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 10830,
                                  "name": "ENACTION_DELAY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10462,
                                  "src": "7098:14:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7087:25:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7079:33:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d616a6f7269747920737570706f727420726571756972656420666f72206561726c7920656e616374696f6e",
                              "id": 10833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7130:46:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4",
                                "typeString": "literal_string \"Majority support required for early enaction\""
                              },
                              "value": "Majority support required for early enaction"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5ab571b23315ee803c0fd3aa362e689e2e59eb1db06564d97bbebefa23ff9b4",
                                "typeString": "literal_string \"Majority support required for early enaction\""
                              }
                            ],
                            "id": 10827,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "7054:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7054:136:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10835,
                        "nodeType": "ExpressionStatement",
                        "src": "7054:136:31"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 10840,
                              "name": "ID_POLICY_VOTES",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12153,
                              "src": "7242:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 10839,
                            "name": "policyFor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12320,
                            "src": "7232:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view returns (address)"
                            }
                          },
                          "id": 10841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7232:26:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10844,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "7270:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                                "typeString": "contract PolicyVotes"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                                "typeString": "contract PolicyVotes"
                              }
                            ],
                            "id": 10843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7262:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 10842,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7262:7:31",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7262:13:31",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7232:43:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320636f6e7472616374206e6f206c6f6e6765722068617320617574686f72697a6174696f6e20746f20656e6163742074686520766f7465",
                        "id": 10847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7289:61:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b",
                          "typeString": "literal_string \"This contract no longer has authorization to enact the vote\""
                        },
                        "value": "This contract no longer has authorization to enact the vote"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_61f2edf57c3cd9aa6fc8b1e71a8cb1cf1caeb7f18caaf2053557e1c934260b6b",
                          "typeString": "literal_string \"This contract no longer has authorization to enact the vote\""
                        }
                      ],
                      "id": 10838,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7211:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7211:149:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10849,
                  "nodeType": "ExpressionStatement",
                  "src": "7211:149:31"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10850,
                      "name": "totalStake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10451,
                      "src": "7375:10:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7389:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7375:15:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 10861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 10859,
                        "name": "yesStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10454,
                        "src": "7475:8:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 10860,
                        "name": "_requiredStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10802,
                        "src": "7486:14:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7475:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 10882,
                      "nodeType": "Block",
                      "src": "7591:129:31",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10873,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10438,
                                    "src": "7663:8:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Proposal_$10943",
                                      "typeString": "contract Proposal"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Proposal_$10943",
                                      "typeString": "contract Proposal"
                                    }
                                  ],
                                  "id": 10872,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7655:7:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10871,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7655:7:31",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7655:17:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10868,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12039,
                                "src": "7632:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              },
                              "id": 10870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "internalCommand",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 12482,
                              "src": "7632:22:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address) external"
                              }
                            },
                            "id": 10875,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7632:41:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 10876,
                          "nodeType": "ExpressionStatement",
                          "src": "7632:41:31"
                        },
                        {
                          "expression": {
                            "id": 10880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 10877,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10820,
                              "src": "7687:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$10469",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 10878,
                                "name": "Result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10469,
                                "src": "7694:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Result_$10469_$",
                                  "typeString": "type(enum PolicyVotes.Result)"
                                }
                              },
                              "id": 10879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Accepted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10466,
                              "src": "7694:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$10469",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "src": "7687:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$10469",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "id": 10881,
                          "nodeType": "ExpressionStatement",
                          "src": "7687:22:31"
                        }
                      ]
                    },
                    "id": 10883,
                    "nodeType": "IfStatement",
                    "src": "7471:249:31",
                    "trueBody": {
                      "id": 10867,
                      "nodeType": "Block",
                      "src": "7502:83:31",
                      "statements": [
                        {
                          "expression": {
                            "id": 10865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 10862,
                              "name": "_res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10820,
                              "src": "7552:4:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$10469",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 10863,
                                "name": "Result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10469,
                                "src": "7559:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Result_$10469_$",
                                  "typeString": "type(enum PolicyVotes.Result)"
                                }
                              },
                              "id": 10864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Rejected",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10467,
                              "src": "7559:15:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Result_$10469",
                                "typeString": "enum PolicyVotes.Result"
                              }
                            },
                            "src": "7552:22:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$10469",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "id": 10866,
                          "nodeType": "ExpressionStatement",
                          "src": "7552:22:31"
                        }
                      ]
                    }
                  },
                  "id": 10884,
                  "nodeType": "IfStatement",
                  "src": "7371:349:31",
                  "trueBody": {
                    "id": 10858,
                    "nodeType": "Block",
                    "src": "7392:73:31",
                    "statements": [
                      {
                        "expression": {
                          "id": 10856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10853,
                            "name": "_res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10820,
                            "src": "7434:4:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$10469",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 10854,
                              "name": "Result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10469,
                              "src": "7441:6:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Result_$10469_$",
                                "typeString": "type(enum PolicyVotes.Result)"
                              }
                            },
                            "id": 10855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Failed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10468,
                            "src": "7441:13:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Result_$10469",
                              "typeString": "enum PolicyVotes.Result"
                            }
                          },
                          "src": "7434:20:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Result_$10469",
                            "typeString": "enum PolicyVotes.Result"
                          }
                        },
                        "id": 10857,
                        "nodeType": "ExpressionStatement",
                        "src": "7434:20:31"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 10886,
                        "name": "_res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10820,
                        "src": "7749:4:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Result_$10469",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Result_$10469",
                          "typeString": "enum PolicyVotes.Result"
                        }
                      ],
                      "id": 10885,
                      "name": "VoteCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10475,
                      "src": "7735:13:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_Result_$10469_$returns$__$",
                        "typeString": "function (enum PolicyVotes.Result)"
                      }
                    },
                    "id": 10887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7735:19:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10888,
                  "nodeType": "EmitStatement",
                  "src": "7730:24:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10892,
                        "name": "ID_POLICY_VOTES",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12153,
                        "src": "7782:15:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 10889,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12039,
                        "src": "7764:6:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Policy_$12499",
                          "typeString": "contract Policy"
                        }
                      },
                      "id": 10891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeSelf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12417,
                      "src": "7764:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 10893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7764:34:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10894,
                  "nodeType": "ExpressionStatement",
                  "src": "7764:34:31"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 10900,
                                "name": "policy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12039,
                                "src": "7873:6:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Policy_$12499",
                                  "typeString": "contract Policy"
                                }
                              ],
                              "id": 10899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7865:7:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 10898,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7865:7:31",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 10901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7865:15:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 10906,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "7925:4:31",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                                      "typeString": "contract PolicyVotes"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_PolicyVotes_$10915",
                                      "typeString": "contract PolicyVotes"
                                    }
                                  ],
                                  "id": 10905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7917:7:31",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 10904,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7917:7:31",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10907,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7917:13:31",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 10902,
                                "name": "ecoToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11848,
                                "src": "7898:8:31",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ECO_$2497",
                                  "typeString": "contract ECO"
                                }
                              },
                              "id": 10903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3975,
                              "src": "7898:18:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 10908,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7898:33:31",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 10896,
                            "name": "ecoToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11848,
                            "src": "7830:8:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ECO_$2497",
                              "typeString": "contract ECO"
                            }
                          },
                          "id": 10897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3374,
                          "src": "7830:17:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 10909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7830:115:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572204661696c6564",
                        "id": 10910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7959:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        },
                        "value": "Transfer Failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
                          "typeString": "literal_string \"Transfer Failed\""
                        }
                      ],
                      "id": 10895,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7809:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7809:177:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10912,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:177:31"
                }
              ]
            },
            "documentation": {
              "id": 10798,
              "nodeType": "StructuredDocumentation",
              "src": "6404:403:31",
              "text": "Execute the proposal if it has enough support.\n Can only be called after the voting and the delay phase,\n or after the point that more than 50% of the total voting power\n has voted in favor of the proposal.\n If the proposal has been accepted, it will be enacted by\n calling the `enacted` functions using `delegatecall`\n from the root policy."
            },
            "functionSelector": "61461954",
            "id": 10914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "6821:7:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6828:2:31"
            },
            "returnParameters": {
              "id": 10800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6840:0:31"
            },
            "scope": 10915,
            "src": "6812:1181:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10916,
        "src": "445:7550:31",
        "usedErrors": []
      }
    ],
    "src": "32:7964:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-07-01T19:00:50.599Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "params": {
          "_addr": "The address of the contract we might act on behalf of."
        }
      },
      "configure(address,uint256)": {
        "params": {
          "_proposal": "The proposal to vote on."
        }
      },
      "initialize(address)": {
        "params": {
          "_self": "The original contract, to provide access to storage data."
        }
      },
      "policyCommand(address,bytes)": {
        "params": {
          "_data": "The call message/data to execute on.",
          "_delegate": "The address of the contract to delegate execution to."
        }
      },
      "vote(bool)": {
        "params": {
          "_vote": "The vote for the proposal"
        }
      },
      "voteSplit(uint256,uint256)": {
        "params": {
          "_votesNo": "The amount of votes against the proposal",
          "_votesYes": "The amount of votes in favor of the proposal"
        }
      }
    },
    "title": "PolicyVotes This implements the voting and implementation phases of the policy decision process. Open stake based voting is used for the voting phase.",
    "version": 1
  },
  "userdoc": {
    "events": {
      "PolicySplitVoteCast(address,uint256,uint256)": {
        "notice": "Event emitted when split vote is."
      },
      "PolicyVoteCast(address,bool,uint256)": {
        "notice": "Event emitted when vote is submitted."
      },
      "VoteCompleted(uint8)": {
        "notice": "Event emitted when vote outcome is known."
      }
    },
    "kind": "user",
    "methods": {
      "ENACTION_DELAY()": {
        "notice": "The delay on a plurality win"
      },
      "VOTE_TIME()": {
        "notice": "The length of the commit portion of the voting phase."
      },
      "blockNumber()": {
        "notice": "The store block number to use when checking account balances for staking."
      },
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "ERC1820 permissioning interface"
      },
      "clone()": {
        "notice": "Create a clone of this contract Creates a clone of this contract by instantiating a proxy at a new address and initializing it based on the current contract. Uses optionality.io's CloneFactory functionality. This is used to save gas cost during deployments. Rather than including the full contract code in every contract that might instantiate it we can deploy it once and reference the location it was deployed to. Then calls to clone() can be used to create instances as needed without increasing the code size of the instantiating contract."
      },
      "configure(address,uint256)": {
        "notice": "Configure the proposals that are part of this voting cycle and start the lockup period. This also fixes the end times of each subsequent phase. This can only be called once, and should be called atomically with instantiation."
      },
      "execute()": {
        "notice": "Execute the proposal if it has enough support. Can only be called after the voting and the delay phase, or after the point that more than 50% of the total voting power has voted in favor of the proposal. If the proposal has been accepted, it will be enacted by calling the `enacted` functions using `delegatecall` from the root policy."
      },
      "implementation()": {
        "notice": "Get the address of the proxy target contract."
      },
      "initialize(address)": {
        "notice": "Initialize a cloned/proxied copy of this contract."
      },
      "policy()": {
        "notice": "The address of the root policy instance overseeing this instance. This address can be used for ERC1820 lookup of other components, ERC1820 lookup of role policies, and interaction with the policy hierarchy."
      },
      "policyCommand(address,bytes)": {
        "notice": "Execute code as indicated by the managing policy contract We allow the managing policy contract to execute arbitrary code in our context by allowing it to specify an implementation address and some message data, and then using delegatecall to execute the code at the implementation address, passing in the message data, all within our own address space."
      },
      "proposal()": {
        "notice": "The proposal being voted on "
      },
      "setExpectedInterfaceSet(address)": {
        "notice": "Set the expected interface set"
      },
      "stake(address)": {
        "notice": "Per voter power."
      },
      "totalStake()": {
        "notice": "Total currency staked in all ongoing votes in basic unit of 10^{-18} ECO (weico)."
      },
      "vote(bool)": {
        "notice": "Submit your yes/no support Shows whether or not your voting power supports or does not support the vote Note Not voting is not equivalent to voting no. Percentage of voted support, not percentage of total voting power is used to determine the win."
      },
      "voteEnds()": {
        "notice": "The timestamp at which the commit portion of the voting phase ends."
      },
      "voteSplit(uint256,uint256)": {
        "notice": "Submit a mixed vote of yes/no support Useful for contracts that wish to vote for an agregate of users Note As not voting is not equivalent to voting no it matters recording the no votes The total amount of votes in favor is relevant for early enaction and the total percentage of voting power that voted is necessary for determining a winner. Note As this is designed for contracts, the onus is on the contract designer to correctly understand and take responsibility for its input parameters. The only check is to stop someone from voting with more power than they have."
      },
      "yesStake()": {
        "notice": "Total revealed positive stake in basic unit of 10^{-18} ECO (weico)."
      },
      "yesVotes(address)": {
        "notice": "Per voter that votes yes, by amount voted yes"
      }
    },
    "version": 1
  }
}